{
 "hash": "ad030cbfb87d9b4b513f",
 "assetsByChunkName": {
  "bundle": "VAADIN/build/vaadin-bundle-42008e29139c45f1a3d0.cache.js"
 },
 "chunks": [
  {
   "id": 0,
   "names": [
    "bundle"
   ],
   "files": [
    "VAADIN/build/vaadin-bundle-42008e29139c45f1a3d0.cache.js"
   ],
   "hash": "97da10b620c67dfdeb5e",
   "modules": [
    {
     "id": 0,
     "name": "../node_modules/.pnpm/lit-html@1.3.0/node_modules/lit-html/lib/template.js",
     "source": "/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map"
    },
    {
     "id": 1,
     "name": "../node_modules/.pnpm/lit-html@1.3.0/node_modules/lit-html/lib/parts.js",
     "source": "/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        const parts = this.parts;\n        // If we're assigning an attribute via syntax like:\n        //    attr=\"${foo}\"  or  attr=${foo}\n        // but not\n        //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n        // then we don't want to coerce the attribute value into one long\n        // string. Instead we want to just return the value itself directly,\n        // so that sanitizeDOMValue can get the actual value rather than\n        // String(value)\n        // The exception is if v is an array, in which case we do want to smash\n        // it together into a string without calling String() on the array.\n        //\n        // This also allows trusted values (when using TrustedTypes) being\n        // assigned to DOM sinks without being stringified in the process.\n        if (l === 1 && strings[0] === '' && strings[1] === '') {\n            const v = parts[0].value;\n            if (typeof v === 'symbol') {\n                return String(v);\n            }\n            if (typeof v === 'string' || !isIterable(v)) {\n                return v;\n            }\n        }\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map"
    },
    {
     "id": 2,
     "name": "../node_modules/.pnpm/lit-element@2.3.1/node_modules/lit-element/lit-element.js + 5 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/lit-element@2.3.1/node_modules/lit-element/lit-element.js",
       "source": "/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.3.1');\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\nexport class LitElement extends UpdatingElement {\n    /**\n     * Return the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * @nocollapse\n     */\n    static getStyles() {\n        return this.styles;\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Only gather styles once per class\n        if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n            return;\n        }\n        // Take care not to call `this.getStyles()` multiple times since this\n        // generates new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.getStyles();\n        if (userStyles === undefined) {\n            this._styles = [];\n        }\n        else if (Array.isArray(userStyles)) {\n            // De-duplicate styles preserving the _last_ instance in the set.\n            // This is a performance optimization to avoid duplicated styles that can\n            // occur especially when composing via subclassing.\n            // The last item is kept to try to preserve the cascade order with the\n            // assumption that it's most important that last added styles override\n            // previous styles.\n            const addStyles = (styles, set) => styles.reduceRight((set, s) => \n            // Note: On IE set.add() does not return the set\n            Array.isArray(s) ? addStyles(s, set) : (set.add(s), set), set);\n            // Array.from does not work on Set in IE, otherwise return\n            // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n            const set = addStyles(userStyles, new Set());\n            const styles = [];\n            set.forEach((v) => styles.unshift(v));\n            this._styles = styles;\n        }\n        else {\n            this._styles = [userStyles];\n        }\n    }\n    /**\n     * Performs element initialization. By default this calls `createRenderRoot`\n     * to create the element `renderRoot` node and captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.constructor._getUniqueStyles();\n        this.renderRoot =\n            this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the `static get styles`\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const templateResult = this.render();\n        super.update(changedProperties);\n        // If render is not implemented by the component, don't call lit-html render\n        if (templateResult !== renderNotImplemented) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's NodePart - typically a TemplateResult.\n     * Setting properties inside this method will *not* trigger the element to\n     * update.\n     */\n    render() {\n        return renderNotImplemented;\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Render method used to render the value to the element's DOM.\n * @param result The value to render.\n * @param container Node into which to render.\n * @param options Element name.\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map"
      },
      {
       "name": "../node_modules/.pnpm/lit-html@1.3.0/node_modules/lit-html/lib/shady-render.js",
       "source": "/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nexport const shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map"
      },
      {
       "name": "../node_modules/.pnpm/lit-element@2.3.1/node_modules/lit-element/lib/updating-element.js",
       "source": "/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this._updateState = 0;\n        this._instanceProperties = undefined;\n        // Initialize to an unresolved Promise so we can make sure the element has\n        // connected before first update.\n        this._updatePromise = new Promise((res) => this._enableUpdatingResolver = res);\n        /**\n         * Map with keys for any properties that have changed since the last\n         * update cycle with previous values.\n         */\n        this._changedProperties = new Map();\n        /**\n         * Map with keys of properties that should be reflected when updated.\n         */\n        this._reflectingProperties = undefined;\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a PropertyDeclaration for the property with the given options.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     *\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        const descriptor = this.getPropertyDescriptor(name, key, options);\n        if (descriptor !== undefined) {\n            Object.defineProperty(this.prototype, name, descriptor);\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     *   class MyElement extends LitElement {\n     *     static getPropertyDescriptor(name, key, options) {\n     *       const defaultDescriptor =\n     *           super.getPropertyDescriptor(name, key, options);\n     *       const setter = defaultDescriptor.set;\n     *       return {\n     *         get: defaultDescriptor.get,\n     *         set(value) {\n     *           setter.call(this, value);\n     *           // custom action.\n     *         },\n     *         configurable: true,\n     *         enumerable: true\n     *       }\n     *     }\n     *   }\n     *\n     * @nocollapse\n     */\n    static getPropertyDescriptor(name, key, _options) {\n        return {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this._requestUpdate(name, oldValue);\n            },\n            configurable: true,\n            enumerable: true\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a PropertyDeclaration via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override `createProperty`.\n     *\n     * @nocollapse\n     * @final\n     */\n    static getPropertyOptions(name) {\n        return this._classProperties && this._classProperties.get(name) ||\n            defaultPropertyDeclaration;\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this._requestUpdate();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection.\n        this.enableUpdating();\n    }\n    enableUpdating() {\n        if (this._enableUpdatingResolver !== undefined) {\n            this._enableUpdatingResolver();\n            this._enableUpdatingResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        // tslint:disable-next-line:no-unnecessary-type-assertion\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor.getPropertyOptions(propName);\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This private version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    _requestUpdate(name, oldValue) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            const options = ctor.getPropertyOptions(name);\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._updatePromise = this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this._requestUpdate(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this._updatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        const result = this.performUpdate();\n        // If `performUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this._hasRequestedUpdate;\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n            else {\n                this._markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n            throw e;\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n        this._markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map"
      },
      {
       "name": "../node_modules/.pnpm/lit-element@2.3.1/node_modules/lit-element/lib/decorators.js",
       "source": "/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n *\n * @param tagName The name of the custom element to define.\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign(Object.assign({}, element), { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the internalProperty decorator.\n *\n * @example\n *\n *     class MyElement {\n *       @property({ type: Boolean })\n *       clicked = false;\n *     }\n *\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n */\nexport function internalProperty(options) {\n    return property({ attribute: false, hasChanged: options === null || options === void 0 ? void 0 : options.hasChanged });\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n *     class MyElement {\n *       @query('#first')\n *       first;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n *\n */\nexport function query(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n *     class MyElement {\n *       @queryAsync('#first')\n *       first;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n *\n *     // external usage\n *     async doSomethingWithFirst() {\n *      (await aMyElement.first).doSomething();\n *     }\n */\nexport function queryAsync(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            async get() {\n                await this.updateComplete;\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n *\n *     class MyElement {\n *       @queryAll('div')\n *       divs;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign(Object.assign({}, element), { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *       clicked = false;\n *\n *       render() {\n *         return html`\n *           <div @click=${this._onClick}`>\n *             <button></button>\n *           </div>\n *         `;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport function eventOptions(options) {\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    return ((protoOrDescriptor, name) => (name !== undefined) ?\n        legacyEventOptions(options, protoOrDescriptor, name) :\n        standardEventOptions(options, protoOrDescriptor));\n}\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n */\nexport function queryAssignedNodes(slotName = '', flatten = false) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                const selector = `slot${slotName ? `[name=${slotName}]` : ''}`;\n                const slot = this.renderRoot.querySelector(selector);\n                return slot && slot.assignedNodes({ flatten });\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n//# sourceMappingURL=decorators.js.map"
      },
      {
       "name": "../node_modules/.pnpm/lit-element@2.3.1/node_modules/lit-element/lib/css-tag.js",
       "source": "/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nexport const supportsAdoptingStyleSheets = ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n            // is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map"
      },
      {
       "name": "../node_modules/.pnpm/lit-html@1.3.0/node_modules/lit-html/lib/modify-template.js",
       "source": "/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map"
      }
     ]
    },
    {
     "id": 3,
     "name": "../node_modules/.pnpm/lit-html@1.3.0/node_modules/lit-html/lib/part.js",
     "source": "/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map"
    },
    {
     "id": 4,
     "name": "../node_modules/.pnpm/lit-html@1.3.0/node_modules/lit-html/lib/dom.js",
     "source": "/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map"
    },
    {
     "id": 5,
     "name": "../node_modules/.pnpm/lit-html@1.3.0/node_modules/lit-html/lit-html.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/lit-html@1.3.0/node_modules/lit-html/lit-html.js",
       "source": "/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map"
      },
      {
       "name": "../node_modules/.pnpm/lit-html@1.3.0/node_modules/lit-html/lib/default-template-processor.js",
       "source": "/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map"
      }
     ]
    },
    {
     "id": 6,
     "name": "../target/flow-frontend/ConnectionState.ts",
     "source": "var _a;\nexport var ConnectionState;\n(function (ConnectionState) {\n    /**\n     * Application is connected to server: last transaction over the wire (XHR /\n     * heartbeat / endpoint call) was successful.\n     */\n    ConnectionState[\"CONNECTED\"] = \"connected\";\n    /**\n     * Application is connected and Flow is loading application state from the\n     * server, or Fusion is waiting for an endpoint call to return.\n     */\n    ConnectionState[\"LOADING\"] = \"loading\";\n    /**\n     * Application has been temporarily disconnected from the server because the\n     * last transaction over the wire (XHR / heartbeat / endpoint call) resulted\n     * in a network error, or the browser has received the 'online' event and needs\n     * to verify reconnection with the server. Flow is attempting to reconnect\n     * a configurable number of times before giving up.\n     */\n    ConnectionState[\"RECONNECTING\"] = \"reconnecting\";\n    /**\n     * Application has been permanently disconnected due to browser receiving the\n     * 'offline' event, or the server not being reached after a number of reconnect\n     * attempts.\n     */\n    ConnectionState[\"CONNECTION_LOST\"] = \"connection-lost\";\n})(ConnectionState || (ConnectionState = {}));\nexport class ConnectionStateStore {\n    constructor(initialState) {\n        this.stateChangeListeners = new Set();\n        this.loadingCount = 0;\n        this.connectionState = initialState;\n        this.serviceWorkerMessageListener = this.serviceWorkerMessageListener.bind(this);\n        if (navigator.serviceWorker) {\n            // Query service worker if the most recent fetch was served from cache\n            // Add message listener for handling response\n            navigator.serviceWorker.addEventListener('message', this.serviceWorkerMessageListener);\n            // Send JSON-RPC request to Vaadin service worker\n            navigator.serviceWorker.ready.then((registration) => {\n                var _a;\n                (_a = registration === null || registration === void 0 ? void 0 : registration.active) === null || _a === void 0 ? void 0 : _a.postMessage({\n                    method: 'Vaadin.ServiceWorker.isConnectionLost',\n                    id: 'Vaadin.ServiceWorker.isConnectionLost'\n                });\n            });\n        }\n    }\n    addStateChangeListener(listener) {\n        this.stateChangeListeners.add(listener);\n    }\n    removeStateChangeListener(listener) {\n        this.stateChangeListeners.delete(listener);\n    }\n    loadingStarted() {\n        this.state = ConnectionState.LOADING;\n        this.loadingCount += 1;\n    }\n    loadingFinished() {\n        if (this.loadingCount > 0) {\n            this.loadingCount -= 1;\n            if (this.loadingCount === 0) {\n                this.state = ConnectionState.CONNECTED;\n            }\n        }\n    }\n    get state() {\n        return this.connectionState;\n    }\n    set state(newState) {\n        if (newState !== this.connectionState) {\n            const prevState = this.connectionState;\n            this.connectionState = newState;\n            this.loadingCount = 0;\n            for (const listener of this.stateChangeListeners) {\n                listener(prevState, this.connectionState);\n            }\n        }\n    }\n    get online() {\n        return this.connectionState === ConnectionState.CONNECTED || this.connectionState === ConnectionState.LOADING;\n    }\n    get offline() {\n        return !this.online;\n    }\n    serviceWorkerMessageListener(event) {\n        // Handle JSON-RPC response from service worker\n        if (typeof event.data === 'object' && event.data.id === 'Vaadin.ServiceWorker.isConnectionLost') {\n            if (event.data.result === true) {\n                this.state = ConnectionState.CONNECTION_LOST;\n            }\n            // Cleanup: remove event listener upon receiving response\n            navigator.serviceWorker.removeEventListener('message', this.serviceWorkerMessageListener);\n        }\n    }\n}\nconst $wnd = window;\nif (!((_a = $wnd.Vaadin) === null || _a === void 0 ? void 0 : _a.connectionState)) {\n    $wnd.Vaadin = $wnd.Vaadin || {};\n    $wnd.Vaadin.connectionState = new ConnectionStateStore(navigator.onLine ? ConnectionState.CONNECTED : ConnectionState.CONNECTION_LOST);\n}\n"
    },
    {
     "id": 7,
     "name": "../node_modules/.pnpm/lit-html@1.3.0/node_modules/lit-html/lib/template-factory.js",
     "source": "/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map"
    },
    {
     "id": 8,
     "name": "../node_modules/.pnpm/lit-html@1.3.0/node_modules/lit-html/lib/render.js",
     "source": "/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map"
    },
    {
     "id": 9,
     "name": "../node_modules/.pnpm/lit-html@1.3.0/node_modules/lit-html/lib/directive.js",
     "source": "/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map"
    },
    {
     "id": 10,
     "name": "../node_modules/.pnpm/lit-html@1.3.0/node_modules/lit-html/lib/template-result.js",
     "source": "/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes.createPolicy('lit-html', { createHTML: (s) => s });\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        let value = this.getHTML();\n        if (policy !== undefined) {\n            // this is secure because `this.strings` is a TemplateStringsArray.\n            // TODO: validate this when\n            // https://github.com/tc39/proposal-array-is-template-object is\n            // implemented.\n            value = policy.createHTML(value);\n        }\n        template.innerHTML = value;\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map"
    },
    {
     "id": 11,
     "name": "../node_modules/.pnpm/lit-html@1.3.0/node_modules/lit-html/lib/template-instance.js",
     "source": "/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map"
    },
    {
     "id": 12,
     "name": "../node_modules/.pnpm/lit-html@1.3.0/node_modules/lit-html/directives/class-map.js",
     "source": "/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, directive, PropertyPart } from '../lit-html.js';\n// IE11 doesn't support classList on SVG elements, so we emulate it with a Set\nclass ClassList {\n    constructor(element) {\n        this.classes = new Set();\n        this.changed = false;\n        this.element = element;\n        const classList = (element.getAttribute('class') || '').split(/\\s+/);\n        for (const cls of classList) {\n            this.classes.add(cls);\n        }\n    }\n    add(cls) {\n        this.classes.add(cls);\n        this.changed = true;\n    }\n    remove(cls) {\n        this.classes.delete(cls);\n        this.changed = true;\n    }\n    commit() {\n        if (this.changed) {\n            let classString = '';\n            this.classes.forEach((cls) => classString += cls + ' ');\n            this.element.setAttribute('class', classString);\n        }\n    }\n}\n/**\n * Stores the ClassInfo object applied to a given AttributePart.\n * Used to unset existing values when a new ClassInfo object is applied.\n */\nconst previousClassesCache = new WeakMap();\n/**\n * A directive that applies CSS classes. This must be used in the `class`\n * attribute and must be the only part used in the attribute. It takes each\n * property in the `classInfo` argument and adds the property name to the\n * element's `class` if the property value is truthy; if the property value is\n * falsey, the property name is removed from the element's `class`. For example\n * `{foo: bar}` applies the class `foo` if the value of `bar` is truthy.\n * @param classInfo {ClassInfo}\n */\nexport const classMap = directive((classInfo) => (part) => {\n    if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n        part.committer.name !== 'class' || part.committer.parts.length > 1) {\n        throw new Error('The `classMap` directive must be used in the `class` attribute ' +\n            'and must be the only part in the attribute.');\n    }\n    const { committer } = part;\n    const { element } = committer;\n    let previousClasses = previousClassesCache.get(part);\n    if (previousClasses === undefined) {\n        // Write static classes once\n        // Use setAttribute() because className isn't a string on SVG elements\n        element.setAttribute('class', committer.strings.join(' '));\n        previousClassesCache.set(part, previousClasses = new Set());\n    }\n    const classList = (element.classList || new ClassList(element));\n    // Remove old classes that no longer apply\n    // We use forEach() instead of for-of so that re don't require down-level\n    // iteration.\n    previousClasses.forEach((name) => {\n        if (!(name in classInfo)) {\n            classList.remove(name);\n            previousClasses.delete(name);\n        }\n    });\n    // Add or remove classes based on their classMap value\n    for (const name in classInfo) {\n        const value = classInfo[name];\n        if (value != previousClasses.has(name)) {\n            // We explicitly want a loose truthy check of `value` because it seems\n            // more convenient that '' and 0 are skipped.\n            if (value) {\n                classList.add(name);\n                previousClasses.add(name);\n            }\n            else {\n                classList.remove(name);\n                previousClasses.delete(name);\n            }\n        }\n    }\n    if (typeof classList.commit === 'function') {\n        classList.commit();\n    }\n});\n//# sourceMappingURL=class-map.js.map"
    },
    {
     "id": 13,
     "name": "./generated/vaadin.ts + 4 modules",
     "modules": [
      {
       "name": "./generated/vaadin.ts",
       "source": "import '../../target/index';\n"
      },
      {
       "name": "../target/index.ts",
       "source": "/******************************************************************************\n * This file is auto-generated by Vaadin.\n * If you want to customize the entry point, you can copy this file or create\n * your own `index.ts` in your frontend directory.\n * By default, the `index.ts` file should be in `./frontend/` folder.\n *\n * NOTE:\n *     - You need to restart the dev-server after adding the new `index.ts` file.\n *       After that, all modifications to `index.ts` are recompiled automatically.\n *     - `index.js` is also supported if you don't want to use TypeScript.\n ******************************************************************************/\n// import Vaadin client-router to handle client-side and server-side navigation\nimport { Router } from '@vaadin/router';\n// import Flow module to enable navigation to Vaadin server-side views\nimport { Flow } from '@vaadin/flow-frontend/Flow';\nconst { serverSideRoutes } = new Flow({\n    imports: () => import('../target/frontend/generated-flow-imports')\n});\nconst routes = [\n    // for client-side, place routes below (more info https://vaadin.com/docs/v15/flow/typescript/creating-routes.html)\n    // for server-side, the next magic line sends all unmatched routes:\n    ...serverSideRoutes // IMPORTANT: this must be the last entry in the array\n];\n// Vaadin router needs an outlet in the index.html page to display views\nconst router = new Router(document.querySelector('#outlet'));\nrouter.setRoutes(routes);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+router@1.7.2/node_modules/@vaadin/router/dist/vaadin-router.js",
       "source": "function toArray(objectOrArray) {\n  objectOrArray = objectOrArray || [];\n  return Array.isArray(objectOrArray) ? objectOrArray : [objectOrArray];\n}\n\nfunction log(msg) {\n  return `[Vaadin.Router] ${msg}`;\n}\n\nfunction logValue(value) {\n  if (typeof value !== 'object') {\n    return String(value);\n  }\n\n  const stringType = Object.prototype.toString.call(value).match(/ (.*)\\]$/)[1];\n  if (stringType === 'Object' || stringType === 'Array') {\n    return `${stringType} ${JSON.stringify(value)}`;\n  } else {\n    return stringType;\n  }\n}\n\nconst MODULE = 'module';\nconst NOMODULE = 'nomodule';\nconst bundleKeys = [MODULE, NOMODULE];\n\nfunction ensureBundle(src) {\n  if (!src.match(/.+\\.[m]?js$/)) {\n    throw new Error(\n      log(`Unsupported type for bundle \"${src}\": .js or .mjs expected.`)\n    );\n  }\n}\n\nfunction ensureRoute(route) {\n  if (!route || !isString(route.path)) {\n    throw new Error(\n      log(`Expected route config to be an object with a \"path\" string property, or an array of such objects`)\n    );\n  }\n\n  const bundle = route.bundle;\n\n  const stringKeys = ['component', 'redirect', 'bundle'];\n  if (\n    !isFunction(route.action) &&\n    !Array.isArray(route.children) &&\n    !isFunction(route.children) &&\n    !isObject(bundle) &&\n    !stringKeys.some(key => isString(route[key]))\n  ) {\n    throw new Error(\n      log(\n        `Expected route config \"${route.path}\" to include either \"${stringKeys.join('\", \"')}\" ` +\n        `or \"action\" function but none found.`\n      )\n    );\n  }\n\n  if (bundle) {\n    if (isString(bundle)) {\n      ensureBundle(bundle);\n    } else if (!bundleKeys.some(key => key in bundle)) {\n      throw new Error(\n        log('Expected route bundle to include either \"' + NOMODULE + '\" or \"' + MODULE + '\" keys, or both')\n      );\n    } else {\n      bundleKeys.forEach(key => key in bundle && ensureBundle(bundle[key]));\n    }\n  }\n\n  if (route.redirect) {\n    ['bundle', 'component'].forEach(overriddenProp => {\n      if (overriddenProp in route) {\n        console.warn(\n          log(\n            `Route config \"${route.path}\" has both \"redirect\" and \"${overriddenProp}\" properties, ` +\n            `and \"redirect\" will always override the latter. Did you mean to only use \"${overriddenProp}\"?`\n          )\n        );\n      }\n    });\n  }\n}\n\nfunction ensureRoutes(routes) {\n  toArray(routes).forEach(route => ensureRoute(route));\n}\n\nfunction loadScript(src, key) {\n  let script = document.head.querySelector('script[src=\"' + src + '\"][async]');\n  if (!script) {\n    script = document.createElement('script');\n    script.setAttribute('src', src);\n    if (key === MODULE) {\n      script.setAttribute('type', MODULE);\n    } else if (key === NOMODULE) {\n      script.setAttribute(NOMODULE, '');\n    }\n    script.async = true;\n  }\n  return new Promise((resolve, reject) => {\n    script.onreadystatechange = script.onload = e => {\n      script.__dynamicImportLoaded = true;\n      resolve(e);\n    };\n    script.onerror = e => {\n      if (script.parentNode) {\n        script.parentNode.removeChild(script);\n      }\n      reject(e);\n    };\n    if (script.parentNode === null) {\n      document.head.appendChild(script);\n    } else if (script.__dynamicImportLoaded) {\n      resolve();\n    }\n  });\n}\n\nfunction loadBundle(bundle) {\n  if (isString(bundle)) {\n    return loadScript(bundle);\n  } else {\n    return Promise.race(\n      bundleKeys\n        .filter(key => key in bundle)\n        .map(key => loadScript(bundle[key], key))\n    );\n  }\n}\n\nfunction fireRouterEvent(type, detail) {\n  return !window.dispatchEvent(new CustomEvent(\n    `vaadin-router-${type}`,\n    {cancelable: type === 'go', detail}\n  ));\n}\n\nfunction isObject(o) {\n  // guard against null passing the typeof check\n  return typeof o === 'object' && !!o;\n}\n\nfunction isFunction(f) {\n  return typeof f === 'function';\n}\n\nfunction isString(s) {\n  return typeof s === 'string';\n}\n\nfunction getNotFoundError(context) {\n  const error = new Error(log(`Page not found (${context.pathname})`));\n  error.context = context;\n  error.code = 404;\n  return error;\n}\n\nconst notFoundResult = new (class NotFoundResult {})();\n\n/* istanbul ignore next: coverage is calculated in Chrome, this code is for IE */\nfunction getAnchorOrigin(anchor) {\n  // IE11: on HTTP and HTTPS the default port is not included into\n  // window.location.origin, so won't include it here either.\n  const port = anchor.port;\n  const protocol = anchor.protocol;\n  const defaultHttp = protocol === 'http:' && port === '80';\n  const defaultHttps = protocol === 'https:' && port === '443';\n  const host = (defaultHttp || defaultHttps)\n    ? anchor.hostname // does not include the port number (e.g. www.example.org)\n    : anchor.host; // does include the port number (e.g. www.example.org:80)\n  return `${protocol}//${host}`;\n}\n\n// The list of checks is not complete:\n//  - SVG support is missing\n//  - the 'rel' attribute is not considered\nfunction vaadinRouterGlobalClickHandler(event) {\n  // ignore the click if the default action is prevented\n  if (event.defaultPrevented) {\n    return;\n  }\n\n  // ignore the click if not with the primary mouse button\n  if (event.button !== 0) {\n    return;\n  }\n\n  // ignore the click if a modifier key is pressed\n  if (event.shiftKey || event.ctrlKey || event.altKey || event.metaKey) {\n    return;\n  }\n\n  // find the <a> element that the click is at (or within)\n  let anchor = event.target;\n  const path = event.composedPath\n    ? event.composedPath()\n    : (event.path || []);\n\n  // FIXME(web-padawan): `Symbol.iterator` used by webcomponentsjs is broken for arrays\n  // example to check: `for...of` loop here throws the \"Not yet implemented\" error\n  for (let i = 0; i < path.length; i++) {\n    const target = path[i];\n    if (target.nodeName && target.nodeName.toLowerCase() === 'a') {\n      anchor = target;\n      break;\n    }\n  }\n\n  while (anchor && anchor.nodeName.toLowerCase() !== 'a') {\n    anchor = anchor.parentNode;\n  }\n\n  // ignore the click if not at an <a> element\n  if (!anchor || anchor.nodeName.toLowerCase() !== 'a') {\n    return;\n  }\n\n  // ignore the click if the <a> element has a non-default target\n  if (anchor.target && anchor.target.toLowerCase() !== '_self') {\n    return;\n  }\n\n  // ignore the click if the <a> element has the 'download' attribute\n  if (anchor.hasAttribute('download')) {\n    return;\n  }\n\n  // ignore the click if the <a> element has the 'router-ignore' attribute\n  if (anchor.hasAttribute('router-ignore')) {\n    return;\n  }\n\n  // ignore the click if the target URL is a fragment on the current page\n  if (anchor.pathname === window.location.pathname && anchor.hash !== '') {\n    return;\n  }\n\n  // ignore the click if the target is external to the app\n  // In IE11 HTMLAnchorElement does not have the `origin` property\n  const origin = anchor.origin || getAnchorOrigin(anchor);\n  if (origin !== window.location.origin) {\n    return;\n  }\n\n  // if none of the above, convert the click into a navigation event\n  const {pathname, search, hash} = anchor;\n  if (fireRouterEvent('go', {pathname, search, hash})) {\n    event.preventDefault();\n  }\n}\n\n/**\n * A navigation trigger for Vaadin Router that translated clicks on `<a>` links\n * into Vaadin Router navigation events.\n *\n * Only regular clicks on in-app links are translated (primary mouse button, no\n * modifier keys, the target href is within the app's URL space).\n *\n * @memberOf Router.NavigationTrigger\n * @type {NavigationTrigger}\n */\nconst CLICK = {\n  activate() {\n    window.document.addEventListener('click', vaadinRouterGlobalClickHandler);\n  },\n\n  inactivate() {\n    window.document.removeEventListener('click', vaadinRouterGlobalClickHandler);\n  }\n};\n\n// PopStateEvent constructor shim\nconst isIE = /Trident/.test(navigator.userAgent);\n\n/* istanbul ignore next: coverage is calculated in Chrome, this code is for IE */\nif (isIE && !isFunction(window.PopStateEvent)) {\n  window.PopStateEvent = function(inType, params) {\n    params = params || {};\n    var e = document.createEvent('Event');\n    e.initEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable));\n    e.state = params.state || null;\n    return e;\n  };\n  window.PopStateEvent.prototype = window.Event.prototype;\n}\n\nfunction vaadinRouterGlobalPopstateHandler(event) {\n  if (event.state === 'vaadin-router-ignore') {\n    return;\n  }\n  const {pathname, search, hash} = window.location;\n  fireRouterEvent('go', {pathname, search, hash});\n}\n\n/**\n * A navigation trigger for Vaadin Router that translates popstate events into\n * Vaadin Router navigation events.\n *\n * @memberOf Router.NavigationTrigger\n * @type {NavigationTrigger}\n */\nconst POPSTATE = {\n  activate() {\n    window.addEventListener('popstate', vaadinRouterGlobalPopstateHandler);\n  },\n\n  inactivate() {\n    window.removeEventListener('popstate', vaadinRouterGlobalPopstateHandler);\n  }\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * Default configs.\n */\nvar DEFAULT_DELIMITER = '/';\nvar DEFAULT_DELIMITERS = './';\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \":test(\\\\d+)?\" => [\"test\", \"\\d+\", undefined, \"?\"]\n  // \"(\\\\d+)\"  => [undefined, undefined, \"\\d+\", undefined]\n  '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER;\n  var delimiters = (options && options.delimiters) || DEFAULT_DELIMITERS;\n  var pathEscaped = false;\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      pathEscaped = true;\n      continue\n    }\n\n    var prev = '';\n    var next = str[index];\n    var name = res[2];\n    var capture = res[3];\n    var group = res[4];\n    var modifier = res[5];\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1;\n\n      if (delimiters.indexOf(path[k]) > -1) {\n        prev = path[k];\n        path = path.slice(0, k);\n      }\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n      pathEscaped = false;\n    }\n\n    var partial = prev !== '' && next !== undefined && next !== prev;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = prev || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      pattern: pattern ? escapeGroup(pattern) : '[^' + escapeString(delimiter) + ']+?'\n    });\n  }\n\n  // Push any remaining characters.\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index));\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (data, options) {\n    var path = '';\n    var encode = (options && options.encode) || encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n        continue\n      }\n\n      var value = data ? data[token.name] : undefined;\n      var segment;\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue\n\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j], token);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value), token);\n\n        if (!matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"')\n        }\n\n        path += token.prefix + segment;\n        continue\n      }\n\n      if (token.optional) {\n        // Prepend partial segment prefixes.\n        if (token.partial) path += token.prefix;\n\n        continue\n      }\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'))\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  if (!keys) return path\n\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        pattern: null\n      });\n    }\n  }\n\n  return path\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options))\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  options = options || {};\n\n  var strict = options.strict;\n  var start = options.start !== false;\n  var end = options.end !== false;\n  var delimiter = escapeString(options.delimiter || DEFAULT_DELIMITER);\n  var delimiters = options.delimiters || DEFAULT_DELIMITERS;\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|');\n  var route = start ? '^' : '';\n  var isEndDelimited = tokens.length === 0;\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n      isEndDelimited = i === tokens.length - 1 && delimiters.indexOf(token[token.length - 1]) > -1;\n    } else {\n      var capture = token.repeat\n        ? '(?:' + token.pattern + ')(?:' + escapeString(token.delimiter) + '(?:' + token.pattern + '))*'\n        : token.pattern;\n\n      if (keys) keys.push(token);\n\n      if (token.optional) {\n        if (token.partial) {\n          route += escapeString(token.prefix) + '(' + capture + ')?';\n        } else {\n          route += '(?:' + escapeString(token.prefix) + '(' + capture + '))?';\n        }\n      } else {\n        route += escapeString(token.prefix) + '(' + capture + ')';\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += '(?:' + delimiter + ')?';\n\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')';\n  } else {\n    if (!strict) route += '(?:' + delimiter + '(?=' + endsWith + '))?';\n    if (!isEndDelimited) route += '(?=' + delimiter + '|' + endsWith + ')';\n  }\n\n  return new RegExp(route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys)\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), keys, options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), keys, options)\n}\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nconst {hasOwnProperty} = Object.prototype;\nconst cache = new Map();\n// see https://github.com/pillarjs/path-to-regexp/issues/148\ncache.set('|false', {\n  keys: [],\n  pattern: /(?:)/\n});\n\nfunction decodeParam(val) {\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    return val;\n  }\n}\n\nfunction matchPath(routepath, path, exact, parentKeys, parentParams) {\n  exact = !!exact;\n  const cacheKey = `${routepath}|${exact}`;\n  let regexp = cache.get(cacheKey);\n\n  if (!regexp) {\n    const keys = [];\n    regexp = {\n      keys,\n      pattern: pathToRegexp_1(routepath, keys, {\n        end: exact,\n        strict: routepath === ''\n      }),\n    };\n    cache.set(cacheKey, regexp);\n  }\n\n  const m = regexp.pattern.exec(path);\n  if (!m) {\n    return null;\n  }\n\n  const params = Object.assign({}, parentParams);\n\n  for (let i = 1; i < m.length; i++) {\n    const key = regexp.keys[i - 1];\n    const prop = key.name;\n    const value = m[i];\n    if (value !== undefined || !hasOwnProperty.call(params, prop)) {\n      if (key.repeat) {\n        params[prop] = value ? value.split(key.delimiter).map(decodeParam) : [];\n      } else {\n        params[prop] = value ? decodeParam(value) : value;\n      }\n    }\n  }\n\n  return {\n    path: m[0],\n    keys: (parentKeys || []).concat(regexp.keys),\n    params,\n  };\n}\n\n/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\n/**\n * Traverses the routes tree and matches its nodes to the given pathname from\n * the root down to the leaves. Each match consumes a part of the pathname and\n * the matching process continues for as long as there is a matching child\n * route for the remaining part of the pathname.\n *\n * The returned value is a lazily evaluated iterator.\n *\n * The leading \"/\" in a route path matters only for the root of the routes\n * tree (or if all parent routes are \"\"). In all other cases a leading \"/\" in\n * a child route path has no significance.\n *\n * The trailing \"/\" in a _route path_ matters only for the leaves of the\n * routes tree. A leaf route with a trailing \"/\" matches only a pathname that\n * also has a trailing \"/\".\n *\n * The trailing \"/\" in a route path does not affect matching of child routes\n * in any way.\n *\n * The trailing \"/\" in a _pathname_ generally does not matter (except for\n * the case of leaf nodes described above).\n *\n * The \"\" and \"/\" routes have special treatment:\n *  1. as a single route\n *     the \"\" and \"/\" routes match only the \"\" and \"/\" pathnames respectively\n *  2. as a parent in the routes tree\n *     the \"\" route matches any pathname without consuming any part of it\n *     the \"/\" route matches any absolute pathname consuming its leading \"/\"\n *  3. as a leaf in the routes tree\n *     the \"\" and \"/\" routes match only if the entire pathname is consumed by\n *         the parent routes chain. In this case \"\" and \"/\" are equivalent.\n *  4. several directly nested \"\" or \"/\" routes\n *     - directly nested \"\" or \"/\" routes are 'squashed' (i.e. nesting two\n *       \"/\" routes does not require a double \"/\" in the pathname to match)\n *     - if there are only \"\" in the parent routes chain, no part of the\n *       pathname is consumed, and the leading \"/\" in the child routes' paths\n *       remains significant\n *\n * Side effect:\n *   - the routes tree { path: '' } matches only the '' pathname\n *   - the routes tree { path: '', children: [ { path: '' } ] } matches any\n *     pathname (for the tree root)\n *\n * Prefix matching can be enabled also by `children: true`.\n */\nfunction matchRoute(route, pathname, ignoreLeadingSlash, parentKeys, parentParams) {\n  let match;\n  let childMatches;\n  let childIndex = 0;\n  let routepath = route.path || '';\n  if (routepath.charAt(0) === '/') {\n    if (ignoreLeadingSlash) {\n      routepath = routepath.substr(1);\n    }\n    ignoreLeadingSlash = true;\n  }\n\n  return {\n    next(routeToSkip) {\n      if (route === routeToSkip) {\n        return {done: true};\n      }\n\n      const children = route.__children = route.__children || route.children;\n\n      if (!match) {\n        match = matchPath(routepath, pathname, !children, parentKeys, parentParams);\n\n        if (match) {\n          return {\n            done: false,\n            value: {\n              route,\n              keys: match.keys,\n              params: match.params,\n              path: match.path\n            },\n          };\n        }\n      }\n\n      if (match && children) {\n        while (childIndex < children.length) {\n          if (!childMatches) {\n            const childRoute = children[childIndex];\n            childRoute.parent = route;\n\n            let matchedLength = match.path.length;\n            if (matchedLength > 0 && pathname.charAt(matchedLength) === '/') {\n              matchedLength += 1;\n            }\n\n            childMatches = matchRoute(\n              childRoute,\n              pathname.substr(matchedLength),\n              ignoreLeadingSlash,\n              match.keys,\n              match.params\n            );\n          }\n\n          const childMatch = childMatches.next(routeToSkip);\n          if (!childMatch.done) {\n            return {\n              done: false,\n              value: childMatch.value,\n            };\n          }\n\n          childMatches = null;\n          childIndex++;\n        }\n      }\n\n      return {done: true};\n    },\n  };\n}\n\n/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nfunction resolveRoute(context) {\n  if (isFunction(context.route.action)) {\n    return context.route.action(context);\n  }\n  return undefined;\n}\n\n/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nfunction isChildRoute(parentRoute, childRoute) {\n  let route = childRoute;\n  while (route) {\n    route = route.parent;\n    if (route === parentRoute) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction generateErrorMessage(currentContext) {\n  let errorMessage = `Path '${currentContext.pathname}' is not properly resolved due to an error.`;\n  const routePath = (currentContext.route || {}).path;\n  if (routePath) {\n    errorMessage += ` Resolution had failed on route: '${routePath}'`;\n  }\n  return errorMessage;\n}\n\nfunction updateChainForRoute(context, match) {\n  const {route, path} = match;\n\n  if (route && !route.__synthetic) {\n    const item = {path, route};\n    if (!context.chain) {\n      context.chain = [];\n    } else {\n      // Discard old items\n      if (route.parent) {\n        let i = context.chain.length;\n        while (i-- && context.chain[i].route && context.chain[i].route !== route.parent) {\n          context.chain.pop();\n        }\n      }\n    }\n    context.chain.push(item);\n  }\n}\n\n/**\n */\nclass Resolver {\n  constructor(routes, options = {}) {\n    if (Object(routes) !== routes) {\n      throw new TypeError('Invalid routes');\n    }\n\n    this.baseUrl = options.baseUrl || '';\n    this.errorHandler = options.errorHandler;\n    this.resolveRoute = options.resolveRoute || resolveRoute;\n    this.context = Object.assign({resolver: this}, options.context);\n    this.root = Array.isArray(routes) ? {path: '', __children: routes, parent: null, __synthetic: true} : routes;\n    this.root.parent = null;\n  }\n\n  /**\n   * Returns the current list of routes (as a shallow copy). Adding / removing\n   * routes to / from the returned array does not affect the routing config,\n   * but modifying the route objects does.\n   *\n   * @return {!Array<!Router.Route>}\n   */\n  getRoutes() {\n    return [...this.root.__children];\n  }\n\n  /**\n   * Sets the routing config (replacing the existing one).\n   *\n   * @param {!Array<!Router.Route>|!Router.Route} routes a single route or an array of those\n   *    (the array is shallow copied)\n   */\n  setRoutes(routes) {\n    ensureRoutes(routes);\n    const newRoutes = [...toArray(routes)];\n    this.root.__children = newRoutes;\n  }\n\n  /**\n   * Appends one or several routes to the routing config and returns the\n   * effective routing config after the operation.\n   *\n   * @param {!Array<!Router.Route>|!Router.Route} routes a single route or an array of those\n   *    (the array is shallow copied)\n   * @return {!Array<!Router.Route>}\n   * @protected\n   */\n  addRoutes(routes) {\n    ensureRoutes(routes);\n    this.root.__children.push(...toArray(routes));\n    return this.getRoutes();\n  }\n\n  /**\n   * Removes all existing routes from the routing config.\n   */\n  removeRoutes() {\n    this.setRoutes([]);\n  }\n\n  /**\n   * Asynchronously resolves the given pathname, i.e. finds all routes matching\n   * the pathname and tries resolving them one after another in the order they\n   * are listed in the routes config until the first non-null result.\n   *\n   * Returns a promise that is fulfilled with the return value of an object that consists of the first\n   * route handler result that returns something other than `null` or `undefined` and context used to get this result.\n   *\n   * If no route handlers return a non-null result, or if no route matches the\n   * given pathname the returned promise is rejected with a 'page not found'\n   * `Error`.\n   *\n   * @param {!string|!{pathname: !string}} pathnameOrContext the pathname to\n   *    resolve or a context object with a `pathname` property and other\n   *    properties to pass to the route resolver functions.\n   * @return {!Promise<any>}\n   */\n  resolve(pathnameOrContext) {\n    const context = Object.assign(\n      {},\n      this.context,\n      isString(pathnameOrContext) ? {pathname: pathnameOrContext} : pathnameOrContext\n    );\n    const match = matchRoute(\n      this.root,\n      this.__normalizePathname(context.pathname),\n      this.baseUrl\n    );\n    const resolve = this.resolveRoute;\n    let matches = null;\n    let nextMatches = null;\n    let currentContext = context;\n\n    function next(resume, parent = matches.value.route, prevResult) {\n      const routeToSkip = prevResult === null && matches.value.route;\n      matches = nextMatches || match.next(routeToSkip);\n      nextMatches = null;\n\n      if (!resume) {\n        if (matches.done || !isChildRoute(parent, matches.value.route)) {\n          nextMatches = matches;\n          return Promise.resolve(notFoundResult);\n        }\n      }\n\n      if (matches.done) {\n        return Promise.reject(getNotFoundError(context));\n      }\n\n      currentContext = Object.assign(\n        currentContext\n          ? {chain: (currentContext.chain ? currentContext.chain.slice(0) : [])}\n          : {},\n        context,\n        matches.value\n      );\n      updateChainForRoute(currentContext, matches.value);\n\n      return Promise.resolve(resolve(currentContext)).then(resolution => {\n        if (resolution !== null && resolution !== undefined && resolution !== notFoundResult) {\n          currentContext.result = resolution.result || resolution;\n          return currentContext;\n        }\n        return next(resume, parent, resolution);\n      });\n    }\n\n    context.next = next;\n\n    return Promise.resolve()\n      .then(() => next(true, this.root))\n      .catch((error) => {\n        const errorMessage = generateErrorMessage(currentContext);\n        if (!error) {\n          error = new Error(errorMessage);\n        } else {\n          console.warn(errorMessage);\n        }\n        error.context = error.context || currentContext;\n        // DOMException has its own code which is read-only\n        if (!(error instanceof DOMException)) {\n          error.code = error.code || 500;\n        }\n        if (this.errorHandler) {\n          currentContext.result = this.errorHandler(error);\n          return currentContext;\n        }\n        throw error;\n      });\n  }\n\n  /**\n   * URL constructor polyfill hook. Creates and returns an URL instance.\n   */\n  static __createUrl(url, base) {\n    return new URL(url, base);\n  }\n\n  /**\n   * If the baseUrl property is set, transforms the baseUrl and returns the full\n   * actual `base` string for using in the `new URL(path, base);` and for\n   * prepernding the paths with. The returned base ends with a trailing slash.\n   *\n   * Otherwise, returns empty string.\n   */\n  get __effectiveBaseUrl() {\n    return this.baseUrl\n      ? this.constructor.__createUrl(\n        this.baseUrl,\n        document.baseURI || document.URL\n      ).href.replace(/[^\\/]*$/, '')\n      : '';\n  }\n\n  /**\n   * If the baseUrl is set, matches the pathname with the router’s baseUrl,\n   * and returns the local pathname with the baseUrl stripped out.\n   *\n   * If the pathname does not match the baseUrl, returns undefined.\n   *\n   * If the `baseUrl` is not set, returns the unmodified pathname argument.\n   */\n  __normalizePathname(pathname) {\n    if (!this.baseUrl) {\n      // No base URL, no need to transform the pathname.\n      return pathname;\n    }\n\n    const base = this.__effectiveBaseUrl;\n    const normalizedUrl = this.constructor.__createUrl(pathname, base).href;\n    if (normalizedUrl.slice(0, base.length) === base) {\n      return normalizedUrl.slice(base.length);\n    }\n  }\n}\n\nResolver.pathToRegexp = pathToRegexp_1;\n\n/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nconst {pathToRegexp: pathToRegexp$1} = Resolver;\nconst cache$1 = new Map();\n\nfunction cacheRoutes(routesByName, route, routes) {\n  const name = route.name || route.component;\n  if (name) {\n    if (routesByName.has(name)) {\n      routesByName.get(name).push(route);\n    } else {\n      routesByName.set(name, [route]);\n    }\n  }\n\n  if (Array.isArray(routes)) {\n    for (let i = 0; i < routes.length; i++) {\n      const childRoute = routes[i];\n      childRoute.parent = route;\n      cacheRoutes(routesByName, childRoute, childRoute.__children || childRoute.children);\n    }\n  }\n}\n\nfunction getRouteByName(routesByName, routeName) {\n  const routes = routesByName.get(routeName);\n  if (routes && routes.length > 1) {\n    throw new Error(\n      `Duplicate route with name \"${routeName}\".`\n      + ` Try seting unique 'name' route properties.`\n    );\n  }\n  return routes && routes[0];\n}\n\nfunction getRoutePath(route) {\n  let path = route.path;\n  path = Array.isArray(path) ? path[0] : path;\n  return path !== undefined ? path : '';\n}\n\nfunction generateUrls(router, options = {}) {\n  if (!(router instanceof Resolver)) {\n    throw new TypeError('An instance of Resolver is expected');\n  }\n\n  const routesByName = new Map();\n\n  return (routeName, params) => {\n    let route = getRouteByName(routesByName, routeName);\n    if (!route) {\n      routesByName.clear(); // clear cache\n      cacheRoutes(routesByName, router.root, router.root.__children);\n\n      route = getRouteByName(routesByName, routeName);\n      if (!route) {\n        throw new Error(`Route \"${routeName}\" not found`);\n      }\n    }\n\n    let regexp = cache$1.get(route.fullPath);\n    if (!regexp) {\n      let fullPath = getRoutePath(route);\n      let rt = route.parent;\n      while (rt) {\n        const path = getRoutePath(rt);\n        if (path) {\n          fullPath = path.replace(/\\/$/, '') + '/' + fullPath.replace(/^\\//, '');\n        }\n        rt = rt.parent;\n      }\n      const tokens = pathToRegexp$1.parse(fullPath);\n      const toPath = pathToRegexp$1.tokensToFunction(tokens);\n      const keys = Object.create(null);\n      for (let i = 0; i < tokens.length; i++) {\n        if (!isString(tokens[i])) {\n          keys[tokens[i].name] = true;\n        }\n      }\n      regexp = {toPath, keys};\n      cache$1.set(fullPath, regexp);\n      route.fullPath = fullPath;\n    }\n\n    let url = regexp.toPath(params, options) || '/';\n\n    if (options.stringifyQueryParams && params) {\n      const queryParams = {};\n      const keys = Object.keys(params);\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (!regexp.keys[key]) {\n          queryParams[key] = params[key];\n        }\n      }\n      const query = options.stringifyQueryParams(queryParams);\n      if (query) {\n        url += query.charAt(0) === '?' ? query : `?${query}`;\n      }\n    }\n\n    return url;\n  };\n}\n\n/**\n * @typedef NavigationTrigger\n * @type {object}\n * @property {function()} activate\n * @property {function()} inactivate\n */\n\n/** @type {Array<NavigationTrigger>} */\nlet triggers = [];\n\nfunction setNavigationTriggers(newTriggers) {\n  triggers.forEach(trigger => trigger.inactivate());\n\n  newTriggers.forEach(trigger => trigger.activate());\n\n  triggers = newTriggers;\n}\n\nconst willAnimate = elem => {\n  const name = getComputedStyle(elem).getPropertyValue('animation-name');\n  return name && name !== 'none';\n};\n\nconst waitForAnimation = (elem, cb) => {\n  const listener = () => {\n    elem.removeEventListener('animationend', listener);\n    cb();\n  };\n  elem.addEventListener('animationend', listener);\n};\n\nfunction animate(elem, className) {\n  elem.classList.add(className);\n\n  return new Promise(resolve => {\n    if (willAnimate(elem)) {\n      const rect = elem.getBoundingClientRect();\n      const size = `height: ${rect.bottom - rect.top}px; width: ${rect.right - rect.left}px`;\n      elem.setAttribute('style', `position: absolute; ${size}`);\n      waitForAnimation(elem, () => {\n        elem.classList.remove(className);\n        elem.removeAttribute('style');\n        resolve();\n      });\n    } else {\n      elem.classList.remove(className);\n      resolve();\n    }\n  });\n}\n\nconst MAX_REDIRECT_COUNT = 256;\n\nfunction isResultNotEmpty(result) {\n  return result !== null && result !== undefined;\n}\n\nfunction copyContextWithoutNext(context) {\n  const copy = Object.assign({}, context);\n  delete copy.next;\n  return copy;\n}\n\nfunction createLocation({pathname = '', search = '', hash = '', chain = [], params = {}, redirectFrom, resolver}, route) {\n  const routes = chain.map(item => item.route);\n  return {\n    baseUrl: resolver && resolver.baseUrl || '',\n    pathname,\n    search,\n    hash,\n    routes,\n    route: route || routes.length && routes[routes.length - 1] || null,\n    params,\n    redirectFrom,\n    getUrl: (userParams = {}) => getPathnameForRouter(\n      Router.pathToRegexp.compile(\n        getMatchedPath(routes)\n      )(Object.assign({}, params, userParams)),\n      resolver\n    )\n  };\n}\n\nfunction createRedirect(context, pathname) {\n  const params = Object.assign({}, context.params);\n  return {\n    redirect: {\n      pathname,\n      from: context.pathname,\n      params\n    }\n  };\n}\n\nfunction renderElement(context, element) {\n  element.location = createLocation(context);\n  const index = context.chain.map(item => item.route).indexOf(context.route);\n  context.chain[index].element = element;\n  return element;\n}\n\nfunction runCallbackIfPossible(callback, args, thisArg) {\n  if (isFunction(callback)) {\n    return callback.apply(thisArg, args);\n  }\n}\n\nfunction amend(amendmentFunction, args, element) {\n  return amendmentResult => {\n    if (amendmentResult && (amendmentResult.cancel || amendmentResult.redirect)) {\n      return amendmentResult;\n    }\n\n    if (element) {\n      return runCallbackIfPossible(element[amendmentFunction], args, element);\n    }\n  };\n}\n\nfunction processNewChildren(newChildren, route) {\n  if (!Array.isArray(newChildren) && !isObject(newChildren)) {\n    throw new Error(\n      log(\n        `Incorrect \"children\" value for the route ${route.path}: expected array or object, but got ${newChildren}`\n      )\n    );\n  }\n\n  route.__children = [];\n  const childRoutes = toArray(newChildren);\n  for (let i = 0; i < childRoutes.length; i++) {\n    ensureRoute(childRoutes[i]);\n    route.__children.push(childRoutes[i]);\n  }\n}\n\nfunction removeDomNodes(nodes) {\n  if (nodes && nodes.length) {\n    const parent = nodes[0].parentNode;\n    for (let i = 0; i < nodes.length; i++) {\n      parent.removeChild(nodes[i]);\n    }\n  }\n}\n\nfunction getPathnameForRouter(pathname, router) {\n  const base = router.__effectiveBaseUrl;\n  return base\n    ? router.constructor.__createUrl(pathname.replace(/^\\//, ''), base).pathname\n    : pathname;\n}\n\nfunction getMatchedPath(chain) {\n  return chain.map(item => item.path).reduce((a, b) => {\n    if (b.length) {\n      return a.replace(/\\/$/, '') + '/' + b.replace(/^\\//, '');\n    }\n    return a;\n  }, '');\n}\n\n/**\n * A simple client-side router for single-page applications. It uses\n * express-style middleware and has a first-class support for Web Components and\n * lazy-loading. Works great in Polymer and non-Polymer apps.\n *\n * Use `new Router(outlet, options)` to create a new Router instance.\n *\n * * The `outlet` parameter is a reference to the DOM node to render\n *   the content into.\n *\n * * The `options` parameter is an optional object with options. The following\n *   keys are supported:\n *   * `baseUrl` — the initial value for [\n *     the `baseUrl` property\n *   ](#/classes/Router#property-baseUrl)\n *\n * The Router instance is automatically subscribed to navigation events\n * on `window`.\n *\n * See [Live Examples](#/classes/Router/demos/demo/index.html) for the detailed usage demo and code snippets.\n *\n * See also detailed API docs for the following methods, for the advanced usage:\n *\n * * [setOutlet](#/classes/Router#method-setOutlet) – should be used to configure the outlet.\n * * [setTriggers](#/classes/Router#method-setTriggers) – should be used to configure the navigation events.\n * * [setRoutes](#/classes/Router#method-setRoutes) – should be used to configure the routes.\n *\n * Only `setRoutes` has to be called manually, others are automatically invoked when creating a new instance.\n *\n * @extends Resolver\n * @demo demo/index.html\n * @summary JavaScript class that renders different DOM content depending on\n *    a given path. It can re-render when triggered or automatically on\n *    'popstate' and / or 'click' events.\n */\nclass Router extends Resolver {\n\n  /**\n   * Creates a new Router instance with a given outlet, and\n   * automatically subscribes it to navigation events on the `window`.\n   * Using a constructor argument or a setter for outlet is equivalent:\n   *\n   * ```\n   * const router = new Router();\n   * router.setOutlet(outlet);\n   * ```\n   * @param {?Node=} outlet\n   * @param {?RouterOptions=} options\n   */\n  constructor(outlet, options) {\n    const baseElement = document.head.querySelector('base');\n    const baseHref = baseElement && baseElement.getAttribute('href');\n    super([], Object.assign({\n      // Default options\n      baseUrl: baseHref && Resolver.__createUrl(baseHref, document.URL).pathname.replace(/[^\\/]*$/, '')\n    }, options));\n\n    this.resolveRoute = context => this.__resolveRoute(context);\n\n    const triggers = Router.NavigationTrigger;\n    Router.setTriggers.apply(Router, Object.keys(triggers).map(key => triggers[key]));\n\n    /**\n     * The base URL for all routes in the router instance. By default,\n     * if the base element exists in the `<head>`, vaadin-router\n     * takes the `<base href>` attribute value, resolves against current `document.URL`\n     * and gets the `pathname` from the result.\n     *\n     * @public\n     * @type {string}\n     */\n    this.baseUrl;\n\n    /**\n     * A promise that is settled after the current render cycle completes. If\n     * there is no render cycle in progress the promise is immediately settled\n     * with the last render cycle result.\n     *\n     * @public\n     * @type {!Promise<!RouterLocation>}\n     */\n    this.ready;\n    this.ready = Promise.resolve(outlet);\n\n    /**\n     * Contains read-only information about the current router location:\n     * pathname, active routes, parameters. See the\n     * [Location type declaration](#/classes/RouterLocation)\n     * for more details.\n     *\n     * @public\n     * @type {!RouterLocation}\n     */\n    this.location;\n    this.location = createLocation({resolver: this});\n\n    this.__lastStartedRenderId = 0;\n    this.__navigationEventHandler = this.__onNavigationEvent.bind(this);\n    this.setOutlet(outlet);\n    this.subscribe();\n    // Using WeakMap instead of WeakSet because WeakSet is not supported by IE11\n    this.__createdByRouter = new WeakMap();\n    this.__addedByRouter = new WeakMap();\n  }\n\n  __resolveRoute(context) {\n    const route = context.route;\n\n    let callbacks = Promise.resolve();\n\n    if (isFunction(route.children)) {\n      callbacks = callbacks\n        .then(() => route.children(copyContextWithoutNext(context)))\n        .then(children => {\n          // The route.children() callback might have re-written the\n          // route.children property instead of returning a value\n          if (!isResultNotEmpty(children) && !isFunction(route.children)) {\n            children = route.children;\n          }\n          processNewChildren(children, route);\n        });\n    }\n\n    const commands = {\n      redirect: path => createRedirect(context, path),\n      component: (component) => {\n        const element = document.createElement(component);\n        this.__createdByRouter.set(element, true);\n        return element;\n      }\n    };\n\n    return callbacks\n      .then(() => {\n        if (this.__isLatestRender(context)) {\n          return runCallbackIfPossible(route.action, [context, commands], route);\n        }\n      })\n      .then(result => {\n        if (isResultNotEmpty(result)) {\n          // Actions like `() => import('my-view.js')` are not expected to\n          // end the resolution, despite the result is not empty. Checking\n          // the result with a whitelist of values that end the resolution.\n          if (result instanceof HTMLElement ||\n              result.redirect ||\n              result === notFoundResult) {\n            return result;\n          }\n        }\n\n        if (isString(route.redirect)) {\n          return commands.redirect(route.redirect);\n        }\n\n        if (route.bundle) {\n          return loadBundle(route.bundle)\n            .then(() => {}, () => {\n              throw new Error(log(`Bundle not found: ${route.bundle}. Check if the file name is correct`));\n            });\n        }\n      })\n      .then(result => {\n        if (isResultNotEmpty(result)) {\n          return result;\n        }\n        if (isString(route.component)) {\n          return commands.component(route.component);\n        }\n      });\n  }\n\n  /**\n   * Sets the router outlet (the DOM node where the content for the current\n   * route is inserted). Any content pre-existing in the router outlet is\n   * removed at the end of each render pass.\n   *\n   * NOTE: this method is automatically invoked first time when creating a new Router instance.\n   *\n   * @param {?Node} outlet the DOM node where the content for the current route\n   *     is inserted.\n   */\n  setOutlet(outlet) {\n    if (outlet) {\n      this.__ensureOutlet(outlet);\n    }\n    this.__outlet = outlet;\n  }\n\n  /**\n   * Returns the current router outlet. The initial value is `undefined`.\n   *\n   * @return {?Node} the current router outlet (or `undefined`)\n   */\n  getOutlet() {\n    return this.__outlet;\n  }\n\n  /**\n   * Sets the routing config (replacing the existing one) and triggers a\n   * navigation event so that the router outlet is refreshed according to the\n   * current `window.location` and the new routing config.\n   *\n   * Each route object may have the following properties, listed here in the processing order:\n   * * `path` – the route path (relative to the parent route if any) in the\n   * [express.js syntax](https://expressjs.com/en/guide/routing.html#route-paths\").\n   *\n   * * `children` – an array of nested routes or a function that provides this\n   * array at the render time. The function can be synchronous or asynchronous:\n   * in the latter case the render is delayed until the returned promise is\n   * resolved. The `children` function is executed every time when this route is\n   * being rendered. This allows for dynamic route structures (e.g. backend-defined),\n   * but it might have a performance impact as well. In order to avoid calling\n   * the function on subsequent renders, you can override the `children` property\n   * of the route object and save the calculated array there\n   * (via `context.route.children = [ route1, route2, ...];`).\n   * Parent routes are fully resolved before resolving the children. Children\n   * 'path' values are relative to the parent ones.\n   *\n   * * `action` – the action that is executed before the route is resolved.\n   * The value for this property should be a function, accepting `context`\n   * and `commands` parameters described below. If present, this function is\n   * always invoked first, disregarding of the other properties' presence.\n   * The action can return a result directly or within a `Promise`, which\n   * resolves to the result. If the action result is an `HTMLElement` instance,\n   * a `commands.component(name)` result, a `commands.redirect(path)` result,\n   * or a `context.next()` result, the current route resolution is finished,\n   * and other route config properties are ignored.\n   * See also **Route Actions** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * * `redirect` – other route's path to redirect to. Passes all route parameters to the redirect target.\n   * The target route should also be defined.\n   * See also **Redirects** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * * `bundle` – string containing the path to `.js` or `.mjs` bundle to load before resolving the route,\n   * or the object with \"module\" and \"nomodule\" keys referring to different bundles.\n   * Each bundle is only loaded once. If \"module\" and \"nomodule\" are set, only one bundle is loaded,\n   * depending on whether the browser supports ES modules or not.\n   * The property is ignored when either an `action` returns the result or `redirect` property is present.\n   * Any error, e.g. 404 while loading bundle will cause route resolution to throw.\n   * See also **Code Splitting** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * * `component` – the tag name of the Web Component to resolve the route to.\n   * The property is ignored when either an `action` returns the result or `redirect` property is present.\n   * If route contains the `component` property (or an action that return a component)\n   * and its child route also contains the `component` property, child route's component\n   * will be rendered as a light dom child of a parent component.\n   *\n   * * `name` – the string name of the route to use in the\n   * [`router.urlForName(name, params)`](#/classes/Router#method-urlForName)\n   * navigation helper method.\n   *\n   * For any route function (`action`, `children`) defined, the corresponding `route` object is available inside the callback\n   * through the `this` reference. If you need to access it, make sure you define the callback as a non-arrow function\n   * because arrow functions do not have their own `this` reference.\n   *\n   * `context` object that is passed to `action` function holds the following properties:\n   * * `context.pathname` – string with the pathname being resolved\n   *\n   * * `context.search` – search query string\n   *\n   * * `context.hash` – hash string\n   *\n   * * `context.params` – object with route parameters\n   *\n   * * `context.route` – object that holds the route that is currently being rendered.\n   *\n   * * `context.next()` – function for asynchronously getting the next route\n   * contents from the resolution chain (if any)\n   *\n   * `commands` object that is passed to `action` function has\n   * the following methods:\n   *\n   * * `commands.redirect(path)` – function that creates a redirect data\n   * for the path specified.\n   *\n   * * `commands.component(component)` – function that creates a new HTMLElement\n   * with current context. Note: the component created by this function is reused if visiting the same path twice in row.\n   *\n   *\n   * @param {!Array<!Route>|!Route} routes a single route or an array of those\n   * @param {?boolean} skipRender configure the router but skip rendering the\n   *     route corresponding to the current `window.location` values\n   *\n   * @return {!Promise<!Node>}\n   */\n  setRoutes(routes, skipRender = false) {\n    this.__previousContext = undefined;\n    this.__urlForName = undefined;\n    super.setRoutes(routes);\n    if (!skipRender) {\n      this.__onNavigationEvent();\n    }\n    return this.ready;\n  }\n\n  /**\n   * Asynchronously resolves the given pathname and renders the resolved route\n   * component into the router outlet. If no router outlet is set at the time of\n   * calling this method, or at the time when the route resolution is completed,\n   * a `TypeError` is thrown.\n   *\n   * Returns a promise that is fulfilled with the router outlet DOM Node after\n   * the route component is created and inserted into the router outlet, or\n   * rejected if no route matches the given path.\n   *\n   * If another render pass is started before the previous one is completed, the\n   * result of the previous render pass is ignored.\n   *\n   * @param {!string|!{pathname: !string, search: ?string, hash: ?string}} pathnameOrContext\n   *    the pathname to render or a context object with a `pathname` property,\n   *    optional `search` and `hash` properties, and other properties\n   *    to pass to the resolver.\n   * @param {boolean=} shouldUpdateHistory\n   *    update browser history with the rendered location\n   * @return {!Promise<!Node>}\n   */\n  render(pathnameOrContext, shouldUpdateHistory) {\n    const renderId = ++this.__lastStartedRenderId;\n    const context = Object.assign(\n      {\n        search: '',\n        hash: ''\n      },\n      isString(pathnameOrContext)\n        ? {pathname: pathnameOrContext}\n        : pathnameOrContext,\n      {\n        __renderId: renderId\n      }\n    );\n\n    // Find the first route that resolves to a non-empty result\n    this.ready = this.resolve(context)\n\n      // Process the result of this.resolve() and handle all special commands:\n      // (redirect / prevent / component). If the result is a 'component',\n      // then go deeper and build the entire chain of nested components matching\n      // the pathname. Also call all 'on before' callbacks along the way.\n      .then(context => this.__fullyResolveChain(context))\n\n      .then(context => {\n        if (this.__isLatestRender(context)) {\n          const previousContext = this.__previousContext;\n\n          // Check if the render was prevented and make an early return in that case\n          if (context === previousContext) {\n            // Replace the history with the previous context\n            // to make sure the URL stays the same.\n            this.__updateBrowserHistory(previousContext, true);\n            return this.location;\n          }\n\n          this.location = createLocation(context);\n\n          if (shouldUpdateHistory) {\n            // Replace only if first render redirects, so that we don’t leave\n            // the redirecting record in the history\n            this.__updateBrowserHistory(context, renderId === 1);\n          }\n\n          fireRouterEvent('location-changed', {router: this, location: this.location});\n\n          // Skip detaching/re-attaching there are no render changes\n          if (context.__skipAttach) {\n            this.__copyUnchangedElements(context, previousContext);\n            this.__previousContext = context;\n            return this.location;\n          }\n\n          this.__addAppearingContent(context, previousContext);\n          const animationDone = this.__animateIfNeeded(context);\n\n          this.__runOnAfterEnterCallbacks(context);\n          this.__runOnAfterLeaveCallbacks(context, previousContext);\n\n          return animationDone.then(() => {\n            if (this.__isLatestRender(context)) {\n              // If there is another render pass started after this one,\n              // the 'disappearing content' would be removed when the other\n              // render pass calls `this.__addAppearingContent()`\n              this.__removeDisappearingContent();\n\n              this.__previousContext = context;\n              return this.location;\n            }\n          });\n        }\n      })\n      .catch(error => {\n        if (renderId === this.__lastStartedRenderId) {\n          if (shouldUpdateHistory) {\n            this.__updateBrowserHistory(context);\n          }\n          removeDomNodes(this.__outlet && this.__outlet.children);\n          this.location = createLocation(Object.assign(context, {resolver: this}));\n          fireRouterEvent('error', Object.assign({router: this, error}, context));\n          throw error;\n        }\n      });\n    return this.ready;\n  }\n\n  // `topOfTheChainContextBeforeRedirects` is a context coming from Resolver.resolve().\n  // It would contain a 'redirect' route or the first 'component' route that\n  // matched the pathname. There might be more child 'component' routes to be\n  // resolved and added into the chain. This method would find and add them.\n  // `contextBeforeRedirects` is the context containing such a child component\n  // route. It's only necessary when this method is called recursively (otherwise\n  // it's the same as the 'top of the chain' context).\n  //\n  // Apart from building the chain of child components, this method would also\n  // handle 'redirect' routes, call 'onBefore' callbacks and handle 'prevent'\n  // and 'redirect' callback results.\n  __fullyResolveChain(topOfTheChainContextBeforeRedirects,\n    contextBeforeRedirects = topOfTheChainContextBeforeRedirects) {\n    return this.__findComponentContextAfterAllRedirects(contextBeforeRedirects)\n      // `contextAfterRedirects` is always a context with an `HTMLElement` result\n      // In other cases the promise gets rejected and .then() is not called\n      .then(contextAfterRedirects => {\n        const redirectsHappened = contextAfterRedirects !== contextBeforeRedirects;\n        const topOfTheChainContextAfterRedirects =\n          redirectsHappened ? contextAfterRedirects : topOfTheChainContextBeforeRedirects;\n\n        const matchedPath = getPathnameForRouter(\n          getMatchedPath(contextAfterRedirects.chain),\n          contextAfterRedirects.resolver\n        );\n        const isFound = (matchedPath === contextAfterRedirects.pathname);\n\n        // Recursive method to try matching more child and sibling routes\n        const findNextContextIfAny = (context, parent = context.route, prevResult) => {\n          return context.next(undefined, parent, prevResult).then(nextContext => {\n            if (nextContext === null || nextContext === notFoundResult) {\n              // Next context is not found in children, ...\n              if (isFound) {\n                // ...but original context is already fully matching - use it\n                return context;\n              } else if (parent.parent !== null) {\n                // ...and there is no full match yet - step up to check siblings\n                return findNextContextIfAny(context, parent.parent, nextContext);\n              } else {\n                return nextContext;\n              }\n            }\n\n            return nextContext;\n          });\n        };\n\n        return findNextContextIfAny(contextAfterRedirects).then(nextContext => {\n          if (nextContext === null || nextContext === notFoundResult) {\n            throw getNotFoundError(topOfTheChainContextAfterRedirects);\n          }\n\n          return nextContext\n          && nextContext !== notFoundResult\n          && nextContext !== contextAfterRedirects\n            ? this.__fullyResolveChain(topOfTheChainContextAfterRedirects, nextContext)\n            : this.__amendWithOnBeforeCallbacks(contextAfterRedirects);\n        });\n      });\n  }\n\n  __findComponentContextAfterAllRedirects(context) {\n    const result = context.result;\n    if (result instanceof HTMLElement) {\n      renderElement(context, result);\n      return Promise.resolve(context);\n    } else if (result.redirect) {\n      return this.__redirect(result.redirect, context.__redirectCount, context.__renderId)\n        .then(context => this.__findComponentContextAfterAllRedirects(context));\n    } else if (result instanceof Error) {\n      return Promise.reject(result);\n    } else {\n      return Promise.reject(\n        new Error(\n          log(\n            `Invalid route resolution result for path \"${context.pathname}\". ` +\n            `Expected redirect object or HTML element, but got: \"${logValue(result)}\". ` +\n            `Double check the action return value for the route.`\n          )\n        ));\n    }\n  }\n\n  __amendWithOnBeforeCallbacks(contextWithFullChain) {\n    return this.__runOnBeforeCallbacks(contextWithFullChain).then(amendedContext => {\n      if (amendedContext === this.__previousContext || amendedContext === contextWithFullChain) {\n        return amendedContext;\n      }\n      return this.__fullyResolveChain(amendedContext);\n    });\n  }\n\n  __runOnBeforeCallbacks(newContext) {\n    const previousContext = this.__previousContext || {};\n    const previousChain = previousContext.chain || [];\n    const newChain = newContext.chain;\n\n    let callbacks = Promise.resolve();\n    const prevent = () => ({cancel: true});\n    const redirect = (pathname) => createRedirect(newContext, pathname);\n\n    newContext.__divergedChainIndex = 0;\n    newContext.__skipAttach = false;\n    if (previousChain.length) {\n      for (let i = 0; i < Math.min(previousChain.length, newChain.length); i = ++newContext.__divergedChainIndex) {\n        if (previousChain[i].route !== newChain[i].route\n          || previousChain[i].path !== newChain[i].path && previousChain[i].element !== newChain[i].element\n          || !this.__isReusableElement(previousChain[i].element, newChain[i].element)) {\n          break;\n        }\n      }\n\n      // Skip re-attaching and notifications if element and chain do not change\n      newContext.__skipAttach =\n        // Same route chain\n        newChain.length === previousChain.length && newContext.__divergedChainIndex == newChain.length &&\n        // Same element\n        this.__isReusableElement(newContext.result, previousContext.result);\n\n      if (newContext.__skipAttach) {\n        // execute onBeforeLeave for changed segment element when skipping attach\n        for (let i = newChain.length - 1; i >= 0; i--) {\n          callbacks = this.__runOnBeforeLeaveCallbacks(callbacks, newContext, {prevent}, previousChain[i]);\n        }\n        // execute onBeforeEnter for changed segment element when skipping attach\n        for (let i = 0; i < newChain.length; i++) {\n          callbacks = this.__runOnBeforeEnterCallbacks(callbacks, newContext, {prevent, redirect}, newChain[i]);\n          previousChain[i].element.location = createLocation(newContext, previousChain[i].route);\n        }\n\n      } else {\n        // execute onBeforeLeave when NOT skipping attach\n        for (let i = previousChain.length - 1; i >= newContext.__divergedChainIndex; i--) {\n          callbacks = this.__runOnBeforeLeaveCallbacks(callbacks, newContext, {prevent}, previousChain[i]);\n        }\n      }\n    }\n    // execute onBeforeEnter when NOT skipping attach\n    if (!newContext.__skipAttach) {\n      for (let i = 0; i < newChain.length; i++) {\n        if (i < newContext.__divergedChainIndex) {\n          if (i < previousChain.length && previousChain[i].element) {\n            previousChain[i].element.location = createLocation(newContext, previousChain[i].route);\n          }\n        } else {\n          callbacks = this.__runOnBeforeEnterCallbacks(callbacks, newContext, {prevent, redirect}, newChain[i]);\n          if (newChain[i].element) {\n            newChain[i].element.location = createLocation(newContext, newChain[i].route);\n          }\n        }\n      }\n    }\n    return callbacks.then(amendmentResult => {\n      if (amendmentResult) {\n        if (amendmentResult.cancel) {\n          this.__previousContext.__renderId = newContext.__renderId;\n          return this.__previousContext;\n        }\n        if (amendmentResult.redirect) {\n          return this.__redirect(amendmentResult.redirect, newContext.__redirectCount, newContext.__renderId);\n        }\n      }\n      return newContext;\n    });\n  }\n\n  __runOnBeforeLeaveCallbacks(callbacks, newContext, commands, chainElement) {\n    const location = createLocation(newContext);\n    return callbacks.then(result => {\n      if (this.__isLatestRender(newContext)) {\n        const afterLeaveFunction = amend('onBeforeLeave', [location, commands, this], chainElement.element);\n        return afterLeaveFunction(result);\n      }\n    }).then(result => {\n      if (!(result || {}).redirect) {\n        return result;\n      }\n    });\n  }\n\n  __runOnBeforeEnterCallbacks(callbacks, newContext, commands, chainElement) {\n    const location = createLocation(newContext, chainElement.route);\n    return callbacks.then(result => {\n      if (this.__isLatestRender(newContext)) {\n        const beforeEnterFunction = amend('onBeforeEnter', [location, commands, this], chainElement.element);\n        return beforeEnterFunction(result);\n      }\n    });\n  }\n\n  __isReusableElement(element, otherElement) {\n    if (element && otherElement) {\n      return this.__createdByRouter.get(element) && this.__createdByRouter.get(otherElement)\n        ? element.localName === otherElement.localName\n        : element === otherElement;\n    }\n    return false;\n  }\n\n  __isLatestRender(context) {\n    return context.__renderId === this.__lastStartedRenderId;\n  }\n\n  __redirect(redirectData, counter, renderId) {\n    if (counter > MAX_REDIRECT_COUNT) {\n      throw new Error(log(`Too many redirects when rendering ${redirectData.from}`));\n    }\n\n    return this.resolve({\n      pathname: this.urlForPath(\n        redirectData.pathname,\n        redirectData.params\n      ),\n      redirectFrom: redirectData.from,\n      __redirectCount: (counter || 0) + 1,\n      __renderId: renderId\n    });\n  }\n\n  __ensureOutlet(outlet = this.__outlet) {\n    if (!(outlet instanceof Node)) {\n      throw new TypeError(log(`Expected router outlet to be a valid DOM Node (but got ${outlet})`));\n    }\n  }\n\n  __updateBrowserHistory({pathname, search = '', hash = ''}, replace) {\n    if (window.location.pathname !== pathname\n        || window.location.search !== search\n        || window.location.hash !== hash\n    ) {\n      const changeState = replace ? 'replaceState' : 'pushState';\n      window.history[changeState](null, document.title, pathname + search + hash);\n      window.dispatchEvent(new PopStateEvent('popstate', {state: 'vaadin-router-ignore'}));\n    }\n  }\n\n  __copyUnchangedElements(context, previousContext) {\n    // Find the deepest common parent between the last and the new component\n    // chains. Update references for the unchanged elements in the new chain\n    let deepestCommonParent = this.__outlet;\n    for (let i = 0; i < context.__divergedChainIndex; i++) {\n      const unchangedElement = previousContext && previousContext.chain[i].element;\n      if (unchangedElement) {\n        if (unchangedElement.parentNode === deepestCommonParent) {\n          context.chain[i].element = unchangedElement;\n          deepestCommonParent = unchangedElement;\n        } else {\n          break;\n        }\n      }\n    }\n    return deepestCommonParent;\n  }\n\n  __addAppearingContent(context, previousContext) {\n    this.__ensureOutlet();\n\n    // If the previous 'entering' animation has not completed yet,\n    // stop it and remove that content from the DOM before adding new one.\n    this.__removeAppearingContent();\n\n    // Copy reusable elements from the previousContext to current\n    const deepestCommonParent = this.__copyUnchangedElements(context, previousContext);\n\n    // Keep two lists of DOM elements:\n    //  - those that should be removed once the transition animation is over\n    //  - and those that should remain\n    this.__appearingContent = [];\n    this.__disappearingContent = Array\n      .from(deepestCommonParent.children)\n      .filter(\n        // Only remove layout content that was added by router\n        e => this.__addedByRouter.get(e) &&\n        // Do not remove the result element to avoid flickering\n        e !== context.result);\n\n    // Add new elements (starting after the deepest common parent) to the DOM.\n    // That way only the components that are actually different between the two\n    // locations are added to the DOM (and those that are common remain in the\n    // DOM without first removing and then adding them again).\n    let parentElement = deepestCommonParent;\n    for (let i = context.__divergedChainIndex; i < context.chain.length; i++) {\n      const elementToAdd = context.chain[i].element;\n      if (elementToAdd) {\n        parentElement.appendChild(elementToAdd);\n        this.__addedByRouter.set(elementToAdd, true);\n        if (parentElement === deepestCommonParent) {\n          this.__appearingContent.push(elementToAdd);\n        }\n        parentElement = elementToAdd;\n      }\n    }\n  }\n\n  __removeDisappearingContent() {\n    if (this.__disappearingContent) {\n      removeDomNodes(this.__disappearingContent);\n    }\n    this.__disappearingContent = null;\n    this.__appearingContent = null;\n  }\n\n  __removeAppearingContent() {\n    if (this.__disappearingContent && this.__appearingContent) {\n      removeDomNodes(this.__appearingContent);\n      this.__disappearingContent = null;\n      this.__appearingContent = null;\n    }\n  }\n\n  __runOnAfterLeaveCallbacks(currentContext, targetContext) {\n    if (!targetContext) {\n      return;\n    }\n\n    // REVERSE iteration: from Z to A\n    for (let i = targetContext.chain.length - 1; i >= currentContext.__divergedChainIndex; i--) {\n      if (!this.__isLatestRender(currentContext)) {\n        break;\n      }\n      const currentComponent = targetContext.chain[i].element;\n      if (!currentComponent) {\n        continue;\n      }\n      try {\n        const location = createLocation(currentContext);\n        runCallbackIfPossible(\n          currentComponent.onAfterLeave,\n          [location, {}, targetContext.resolver],\n          currentComponent);\n      } finally {\n        if (this.__disappearingContent.indexOf(currentComponent) > -1) {\n          removeDomNodes(currentComponent.children);\n        }\n      }\n    }\n  }\n\n  __runOnAfterEnterCallbacks(currentContext) {\n    // forward iteration: from A to Z\n    for (let i = currentContext.__divergedChainIndex; i < currentContext.chain.length; i++) {\n      if (!this.__isLatestRender(currentContext)) {\n        break;\n      }\n      const currentComponent = currentContext.chain[i].element || {};\n      const location = createLocation(currentContext, currentContext.chain[i].route);\n      runCallbackIfPossible(\n        currentComponent.onAfterEnter,\n        [location, {}, currentContext.resolver],\n        currentComponent);\n    }\n  }\n\n  __animateIfNeeded(context) {\n    const from = (this.__disappearingContent || [])[0];\n    const to = (this.__appearingContent || [])[0];\n    const promises = [];\n\n    const chain = context.chain;\n    let config;\n    for (let i = chain.length; i > 0; i--) {\n      if (chain[i - 1].route.animate) {\n        config = chain[i - 1].route.animate;\n        break;\n      }\n    }\n\n    if (from && to && config) {\n      const leave = isObject(config) && config.leave || 'leaving';\n      const enter = isObject(config) && config.enter || 'entering';\n      promises.push(animate(from, leave));\n      promises.push(animate(to, enter));\n    }\n\n    return Promise.all(promises).then(() => context);\n  }\n\n  /**\n   * Subscribes this instance to navigation events on the `window`.\n   *\n   * NOTE: beware of resource leaks. For as long as a router instance is\n   * subscribed to navigation events, it won't be garbage collected.\n   */\n  subscribe() {\n    window.addEventListener('vaadin-router-go', this.__navigationEventHandler);\n  }\n\n  /**\n   * Removes the subscription to navigation events created in the `subscribe()`\n   * method.\n   */\n  unsubscribe() {\n    window.removeEventListener('vaadin-router-go', this.__navigationEventHandler);\n  }\n\n  __onNavigationEvent(event) {\n    const {pathname, search, hash} = event ? event.detail : window.location;\n    if (isString(this.__normalizePathname(pathname))) {\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n      this.render({pathname, search, hash}, true);\n    }\n  }\n\n  /**\n   * Configures what triggers Router navigation events:\n   *  - `POPSTATE`: popstate events on the current `window`\n   *  - `CLICK`: click events on `<a>` links leading to the current page\n   *\n   * This method is invoked with the pre-configured values when creating a new Router instance.\n   * By default, both `POPSTATE` and `CLICK` are enabled. This setup is expected to cover most of the use cases.\n   *\n   * See the `router-config.js` for the default navigation triggers config. Based on it, you can\n   * create the own one and only import the triggers you need, instead of pulling in all the code,\n   * e.g. if you want to handle `click` differently.\n   *\n   * See also **Navigation Triggers** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * @param {...NavigationTrigger} triggers\n   */\n  static setTriggers(...triggers) {\n    setNavigationTriggers(triggers);\n  }\n\n  /**\n   * Generates a URL for the route with the given name, optionally performing\n   * substitution of parameters.\n   *\n   * The route is searched in all the Router instances subscribed to\n   * navigation events.\n   *\n   * **Note:** For child route names, only array children are considered.\n   * It is not possible to generate URLs using a name for routes set with\n   * a children function.\n   *\n   * @function urlForName\n   * @param {!string} name the route name or the route’s `component` name.\n   * @param {Params=} params Optional object with route path parameters.\n   * Named parameters are passed by name (`params[name] = value`), unnamed\n   * parameters are passed by index (`params[index] = value`).\n   *\n   * @return {string}\n   */\n  urlForName(name, params) {\n    if (!this.__urlForName) {\n      this.__urlForName = generateUrls(this);\n    }\n    return getPathnameForRouter(\n      this.__urlForName(name, params),\n      this\n    );\n  }\n\n  /**\n   * Generates a URL for the given route path, optionally performing\n   * substitution of parameters.\n   *\n   * @param {!string} path string route path declared in [express.js syntax](https://expressjs.com/en/guide/routing.html#route-paths\").\n   * @param {Params=} params Optional object with route path parameters.\n   * Named parameters are passed by name (`params[name] = value`), unnamed\n   * parameters are passed by index (`params[index] = value`).\n   *\n   * @return {string}\n   */\n  urlForPath(path, params) {\n    return getPathnameForRouter(\n      Router.pathToRegexp.compile(path)(params),\n      this\n    );\n  }\n\n  /**\n   * Triggers navigation to a new path. Returns a boolean without waiting until\n   * the navigation is complete. Returns `true` if at least one `Router`\n   * has handled the navigation (was subscribed and had `baseUrl` matching\n   * the `path` argument), otherwise returns `false`.\n   *\n   * @param {!string|!{pathname: !string, search: (string|undefined), hash: (string|undefined)}} path\n   *   a new in-app path string, or an URL-like object with `pathname`\n   *   string property, and optional `search` and `hash` string properties.\n   * @return {boolean}\n   */\n  static go(path) {\n    const {pathname, search, hash} = isString(path)\n      ? this.__createUrl(path, 'http://a') // some base to omit origin\n      : path;\n    return fireRouterEvent('go', {pathname, search, hash});\n  }\n}\n\nconst DEV_MODE_CODE_REGEXP =\n  /\\/\\*\\*\\s+vaadin-dev-mode:start([\\s\\S]*)vaadin-dev-mode:end\\s+\\*\\*\\//i;\n\nconst FlowClients = window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients;\n\nfunction isMinified() {\n  function test() {\n    /** vaadin-dev-mode:start\n    return false;\n    vaadin-dev-mode:end **/\n    return true;\n  }\n  return uncommentAndRun(test);\n}\n\nfunction isDevelopmentMode() {\n  try {\n    if (isForcedDevelopmentMode()) {\n      return true;\n    }\n\n    if (!isLocalhost()) {\n      return false;\n    }\n\n    if (FlowClients) {\n      return !isFlowProductionMode();\n    }\n\n    return !isMinified();\n  } catch (e) {\n    // Some error in this code, assume production so no further actions will be taken\n    return false;\n  }\n}\n\nfunction isForcedDevelopmentMode() {\n  return localStorage.getItem(\"vaadin.developmentmode.force\");\n}\n\nfunction isLocalhost() {\n  return ([\"localhost\",\"127.0.0.1\"].indexOf(window.location.hostname) >= 0);\n}\n\nfunction isFlowProductionMode() {\n  if (FlowClients) {\n    const productionModeApps = Object.keys(FlowClients)\n      .map(key => FlowClients[key])\n      .filter(client => client.productionMode);\n    if (productionModeApps.length > 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction uncommentAndRun(callback, args) {\n  if (typeof callback !== 'function') {\n    return;\n  }\n\n  const match = DEV_MODE_CODE_REGEXP.exec(callback.toString());\n  if (match) {\n    try {\n      // requires CSP: script-src 'unsafe-eval'\n      callback = new Function(match[1]);\n    } catch (e) {\n      // eat the exception\n      console.log('vaadin-development-mode-detector: uncommentAndRun() failed', e);\n    }\n  }\n\n  return callback(args);\n}\n\n// A guard against polymer-modulizer removing the window.Vaadin\n// initialization above.\nwindow['Vaadin'] = window['Vaadin'] || {};\n\n/**\n * Inspects the source code of the given `callback` function for\n * specially-marked _commented_ code. If such commented code is found in the\n * callback source, uncomments and runs that code instead of the callback\n * itself. Otherwise runs the callback as is.\n *\n * The optional arguments are passed into the callback / uncommented code,\n * the result is returned.\n *\n * See the `isMinified()` function source code in this file for an example.\n *\n */\nconst runIfDevelopmentMode = function(callback, args) {\n  if (window.Vaadin.developmentMode) {\n    return uncommentAndRun(callback, args);\n  }\n};\n\nif (window.Vaadin.developmentMode === undefined) {\n  window.Vaadin.developmentMode = isDevelopmentMode();\n}\n\n/* This file is autogenerated from src/vaadin-usage-statistics.tpl.html */\n\nfunction maybeGatherAndSendStats() {\n  /** vaadin-dev-mode:start\n  (function () {\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar getPolymerVersion = function getPolymerVersion() {\n  return window.Polymer && window.Polymer.version;\n};\n\nvar StatisticsGatherer = function () {\n  function StatisticsGatherer(logger) {\n    classCallCheck(this, StatisticsGatherer);\n\n    this.now = new Date().getTime();\n    this.logger = logger;\n  }\n\n  createClass(StatisticsGatherer, [{\n    key: 'frameworkVersionDetectors',\n    value: function frameworkVersionDetectors() {\n      return {\n        'Flow': function Flow() {\n          if (window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients) {\n            var flowVersions = Object.keys(window.Vaadin.Flow.clients).map(function (key) {\n              return window.Vaadin.Flow.clients[key];\n            }).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().flow;\n            });\n            if (flowVersions.length > 0) {\n              return flowVersions[0];\n            }\n          }\n        },\n        'Vaadin Framework': function VaadinFramework() {\n          if (window.vaadin && window.vaadin.clients) {\n            var frameworkVersions = Object.values(window.vaadin.clients).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().vaadinVersion;\n            });\n            if (frameworkVersions.length > 0) {\n              return frameworkVersions[0];\n            }\n          }\n        },\n        'AngularJs': function AngularJs() {\n          if (window.angular && window.angular.version && window.angular.version) {\n            return window.angular.version.full;\n          }\n        },\n        'Angular': function Angular() {\n          if (window.ng) {\n            var tags = document.querySelectorAll(\"[ng-version]\");\n            if (tags.length > 0) {\n              return tags[0].getAttribute(\"ng-version\");\n            }\n            return \"Unknown\";\n          }\n        },\n        'Backbone.js': function BackboneJs() {\n          if (window.Backbone) {\n            return window.Backbone.VERSION;\n          }\n        },\n        'React': function React() {\n          var reactSelector = '[data-reactroot], [data-reactid]';\n          if (!!document.querySelector(reactSelector)) {\n            // React does not publish the version by default\n            return \"unknown\";\n          }\n        },\n        'Ember': function Ember() {\n          if (window.Em && window.Em.VERSION) {\n            return window.Em.VERSION;\n          } else if (window.Ember && window.Ember.VERSION) {\n            return window.Ember.VERSION;\n          }\n        },\n        'jQuery': function (_jQuery) {\n          function jQuery() {\n            return _jQuery.apply(this, arguments);\n          }\n\n          jQuery.toString = function () {\n            return _jQuery.toString();\n          };\n\n          return jQuery;\n        }(function () {\n          if (typeof jQuery === 'function' && jQuery.prototype.jquery !== undefined) {\n            return jQuery.prototype.jquery;\n          }\n        }),\n        'Polymer': function Polymer() {\n          var version = getPolymerVersion();\n          if (version) {\n            return version;\n          }\n        },\n        'LitElement': function LitElement() {\n          var version = window.litElementVersions && window.litElementVersions[0];\n          if (version) {\n            return version;\n          }\n        },\n        'LitHtml': function LitHtml() {\n          var version = window.litHtmlVersions && window.litHtmlVersions[0];\n          if (version) {\n            return version;\n          }\n        },\n        'Vue.js': function VueJs() {\n          if (window.Vue) {\n            return window.Vue.version;\n          }\n        }\n      };\n    }\n  }, {\n    key: 'getUsedVaadinElements',\n    value: function getUsedVaadinElements(elements) {\n      var version = getPolymerVersion();\n      var elementClasses = void 0;\n      // NOTE: In case you edit the code here, YOU MUST UPDATE any statistics reporting code in Flow.\n      // Check all locations calling the method getEntries() in\n      // https://github.com/vaadin/flow/blob/master/flow-server/src/main/java/com/vaadin/flow/internal/UsageStatistics.java#L106\n      // Currently it is only used by BootstrapHandler.\n      if (version && version.indexOf('2') === 0) {\n        // Polymer 2: components classes are stored in window.Vaadin\n        elementClasses = Object.keys(window.Vaadin).map(function (c) {\n          return window.Vaadin[c];\n        }).filter(function (c) {\n          return c.is;\n        });\n      } else {\n        // Polymer 3: components classes are stored in window.Vaadin.registrations\n        elementClasses = window.Vaadin.registrations || [];\n      }\n      elementClasses.forEach(function (klass) {\n        var version = klass.version ? klass.version : \"0.0.0\";\n        elements[klass.is] = { version: version };\n      });\n    }\n  }, {\n    key: 'getUsedVaadinThemes',\n    value: function getUsedVaadinThemes(themes) {\n      ['Lumo', 'Material'].forEach(function (themeName) {\n        var theme;\n        var version = getPolymerVersion();\n        if (version && version.indexOf('2') === 0) {\n          // Polymer 2: themes are stored in window.Vaadin\n          theme = window.Vaadin[themeName];\n        } else {\n          // Polymer 3: themes are stored in custom element registry\n          theme = customElements.get('vaadin-' + themeName.toLowerCase() + '-styles');\n        }\n        if (theme && theme.version) {\n          themes[themeName] = { version: theme.version };\n        }\n      });\n    }\n  }, {\n    key: 'getFrameworks',\n    value: function getFrameworks(frameworks) {\n      var detectors = this.frameworkVersionDetectors();\n      Object.keys(detectors).forEach(function (framework) {\n        var detector = detectors[framework];\n        try {\n          var version = detector();\n          if (version) {\n            frameworks[framework] = { version: version };\n          }\n        } catch (e) {}\n      });\n    }\n  }, {\n    key: 'gather',\n    value: function gather(storage) {\n      var storedStats = storage.read();\n      var gatheredStats = {};\n      var types = [\"elements\", \"frameworks\", \"themes\"];\n\n      types.forEach(function (type) {\n        gatheredStats[type] = {};\n        if (!storedStats[type]) {\n          storedStats[type] = {};\n        }\n      });\n\n      var previousStats = JSON.stringify(storedStats);\n\n      this.getUsedVaadinElements(gatheredStats.elements);\n      this.getFrameworks(gatheredStats.frameworks);\n      this.getUsedVaadinThemes(gatheredStats.themes);\n\n      var now = this.now;\n      types.forEach(function (type) {\n        var keys = Object.keys(gatheredStats[type]);\n        keys.forEach(function (key) {\n          if (!storedStats[type][key] || _typeof(storedStats[type][key]) != _typeof({})) {\n            storedStats[type][key] = { firstUsed: now };\n          }\n          // Discards any previously logged version number\n          storedStats[type][key].version = gatheredStats[type][key].version;\n          storedStats[type][key].lastUsed = now;\n        });\n      });\n\n      var newStats = JSON.stringify(storedStats);\n      storage.write(newStats);\n      if (newStats != previousStats && Object.keys(storedStats).length > 0) {\n        this.logger.debug(\"New stats: \" + newStats);\n      }\n    }\n  }]);\n  return StatisticsGatherer;\n}();\n\nvar StatisticsStorage = function () {\n  function StatisticsStorage(key) {\n    classCallCheck(this, StatisticsStorage);\n\n    this.key = key;\n  }\n\n  createClass(StatisticsStorage, [{\n    key: 'read',\n    value: function read() {\n      var localStorageStatsString = localStorage.getItem(this.key);\n      try {\n        return JSON.parse(localStorageStatsString ? localStorageStatsString : '{}');\n      } catch (e) {\n        return {};\n      }\n    }\n  }, {\n    key: 'write',\n    value: function write(data) {\n      localStorage.setItem(this.key, data);\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      localStorage.removeItem(this.key);\n    }\n  }, {\n    key: 'isEmpty',\n    value: function isEmpty() {\n      var storedStats = this.read();\n      var empty = true;\n      Object.keys(storedStats).forEach(function (key) {\n        if (Object.keys(storedStats[key]).length > 0) {\n          empty = false;\n        }\n      });\n\n      return empty;\n    }\n  }]);\n  return StatisticsStorage;\n}();\n\nvar StatisticsSender = function () {\n  function StatisticsSender(url, logger) {\n    classCallCheck(this, StatisticsSender);\n\n    this.url = url;\n    this.logger = logger;\n  }\n\n  createClass(StatisticsSender, [{\n    key: 'send',\n    value: function send(data, errorHandler) {\n      var logger = this.logger;\n\n      if (navigator.onLine === false) {\n        logger.debug(\"Offline, can't send\");\n        errorHandler();\n        return;\n      }\n      logger.debug(\"Sending data to \" + this.url);\n\n      var req = new XMLHttpRequest();\n      req.withCredentials = true;\n      req.addEventListener(\"load\", function () {\n        // Stats sent, nothing more to do\n        logger.debug(\"Response: \" + req.responseText);\n      });\n      req.addEventListener(\"error\", function () {\n        logger.debug(\"Send failed\");\n        errorHandler();\n      });\n      req.addEventListener(\"abort\", function () {\n        logger.debug(\"Send aborted\");\n        errorHandler();\n      });\n      req.open(\"POST\", this.url);\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n      req.send(data);\n    }\n  }]);\n  return StatisticsSender;\n}();\n\nvar StatisticsLogger = function () {\n  function StatisticsLogger(id) {\n    classCallCheck(this, StatisticsLogger);\n\n    this.id = id;\n  }\n\n  createClass(StatisticsLogger, [{\n    key: '_isDebug',\n    value: function _isDebug() {\n      return localStorage.getItem(\"vaadin.\" + this.id + \".debug\");\n    }\n  }, {\n    key: 'debug',\n    value: function debug(msg) {\n      if (this._isDebug()) {\n        console.info(this.id + \": \" + msg);\n      }\n    }\n  }]);\n  return StatisticsLogger;\n}();\n\nvar UsageStatistics = function () {\n  function UsageStatistics() {\n    classCallCheck(this, UsageStatistics);\n\n    this.now = new Date();\n    this.timeNow = this.now.getTime();\n    this.gatherDelay = 10; // Delay between loading this file and gathering stats\n    this.initialDelay = 24 * 60 * 60;\n\n    this.logger = new StatisticsLogger(\"statistics\");\n    this.storage = new StatisticsStorage(\"vaadin.statistics.basket\");\n    this.gatherer = new StatisticsGatherer(this.logger);\n    this.sender = new StatisticsSender(\"https://tools.vaadin.com/usage-stats/submit\", this.logger);\n  }\n\n  createClass(UsageStatistics, [{\n    key: 'maybeGatherAndSend',\n    value: function maybeGatherAndSend() {\n      var _this = this;\n\n      if (localStorage.getItem(UsageStatistics.optOutKey)) {\n        return;\n      }\n      this.gatherer.gather(this.storage);\n      setTimeout(function () {\n        _this.maybeSend();\n      }, this.gatherDelay * 1000);\n    }\n  }, {\n    key: 'lottery',\n    value: function lottery() {\n      return true;\n    }\n  }, {\n    key: 'currentMonth',\n    value: function currentMonth() {\n      return this.now.getYear() * 12 + this.now.getMonth();\n    }\n  }, {\n    key: 'maybeSend',\n    value: function maybeSend() {\n      var firstUse = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      var monthProcessed = Number(localStorage.getItem(UsageStatistics.monthProcessedKey));\n\n      if (!firstUse) {\n        // Use a grace period to avoid interfering with tests, incognito mode etc\n        firstUse = this.timeNow;\n        localStorage.setItem(UsageStatistics.firstUseKey, firstUse);\n      }\n\n      if (this.timeNow < firstUse + this.initialDelay * 1000) {\n        this.logger.debug(\"No statistics will be sent until the initial delay of \" + this.initialDelay + \"s has passed\");\n        return;\n      }\n      if (this.currentMonth() <= monthProcessed) {\n        this.logger.debug(\"This month has already been processed\");\n        return;\n      }\n      localStorage.setItem(UsageStatistics.monthProcessedKey, this.currentMonth());\n      // Use random sampling\n      if (this.lottery()) {\n        this.logger.debug(\"Congratulations, we have a winner!\");\n      } else {\n        this.logger.debug(\"Sorry, no stats from you this time\");\n        return;\n      }\n\n      this.send();\n    }\n  }, {\n    key: 'send',\n    value: function send() {\n      // Ensure we have the latest data\n      this.gatherer.gather(this.storage);\n\n      // Read, send and clean up\n      var data = this.storage.read();\n      data[\"firstUse\"] = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      data[\"usageStatisticsVersion\"] = UsageStatistics.version;\n      var info = 'This request contains usage statistics gathered from the application running in development mode. \\n\\nStatistics gathering is automatically disabled and excluded from production builds.\\n\\nFor details and to opt-out, see https://github.com/vaadin/vaadin-usage-statistics.\\n\\n\\n\\n';\n      var self = this;\n      this.sender.send(info + JSON.stringify(data), function () {\n        // Revert the 'month processed' flag\n        localStorage.setItem(UsageStatistics.monthProcessedKey, self.currentMonth() - 1);\n      });\n    }\n  }], [{\n    key: 'version',\n    get: function get$1() {\n      return '2.1.0';\n    }\n  }, {\n    key: 'firstUseKey',\n    get: function get$1() {\n      return 'vaadin.statistics.firstuse';\n    }\n  }, {\n    key: 'monthProcessedKey',\n    get: function get$1() {\n      return 'vaadin.statistics.monthProcessed';\n    }\n  }, {\n    key: 'optOutKey',\n    get: function get$1() {\n      return 'vaadin.statistics.optout';\n    }\n  }]);\n  return UsageStatistics;\n}();\n\ntry {\n  window.Vaadin = window.Vaadin || {};\n  window.Vaadin.usageStatsChecker = window.Vaadin.usageStatsChecker || new UsageStatistics();\n  window.Vaadin.usageStatsChecker.maybeGatherAndSend();\n} catch (e) {\n  // Intentionally ignored as this is not a problem in the app being developed\n}\n\n}());\n\n  vaadin-dev-mode:end **/\n}\n\nconst usageStatistics = function() {\n  if (typeof runIfDevelopmentMode === 'function') {\n    return runIfDevelopmentMode(maybeGatherAndSendStats);\n  }\n};\n\nwindow.Vaadin = window.Vaadin || {};\nwindow.Vaadin.registrations = window.Vaadin.registrations || [];\n\nwindow.Vaadin.registrations.push({\n  is: '@vaadin/router',\n  version: '1.7.2',\n});\n\nusageStatistics();\n\nRouter.NavigationTrigger = {POPSTATE, CLICK};\n\nexport { Resolver, Router };\n//# sourceMappingURL=vaadin-router.js.map\n"
      },
      {
       "name": "../target/flow-frontend/Flow.ts",
       "source": "import { ConnectionIndicator } from './ConnectionIndicator';\nimport { ConnectionState } from './ConnectionState';\n// flow uses body for keeping references\nconst flowRoot = window.document.body;\nconst $wnd = window;\n/**\n * Client API for flow UI operations.\n */\nexport class Flow {\n    constructor(config) {\n        this.response = undefined;\n        this.pathname = '';\n        // flag used to inform Testbench whether a server route is in progress\n        this.isActive = false;\n        this.baseRegex = /^\\//;\n        flowRoot.$ = flowRoot.$ || [];\n        this.config = config || {};\n        // TB checks for the existence of window.Vaadin.Flow in order\n        // to consider that TB needs to wait for `initFlow()`.\n        $wnd.Vaadin = $wnd.Vaadin || {};\n        $wnd.Vaadin.Flow = $wnd.Vaadin.Flow || {};\n        $wnd.Vaadin.Flow.clients = {\n            TypeScript: {\n                isActive: () => this.isActive,\n                loadingStarted: () => this.loadingStarted(),\n                loadingFinished: () => this.loadingFinished()\n            }\n        };\n        // Regular expression used to remove the app-context\n        const elm = document.head.querySelector('base');\n        this.baseRegex = new RegExp('^' +\n            // IE11 does not support document.baseURI\n            (document.baseURI || (elm && elm.href) || '/').replace(/^https?:\\/\\/[^/]+/i, ''));\n        this.appShellTitle = document.title;\n        // Put a vaadin-connection-indicator in the dom\n        this.addConnectionIndicator();\n    }\n    /**\n     * Return a `route` object for vaadin-router in an one-element array.\n     *\n     * The `FlowRoute` object `path` property handles any route,\n     * and the `action` returns the flow container without updating the content,\n     * delaying the actual Flow server call to the `onBeforeEnter` phase.\n     *\n     * This is a specific API for its use with `vaadin-router`.\n     */\n    get serverSideRoutes() {\n        return [\n            {\n                path: '(.*)',\n                action: this.action\n            }\n        ];\n    }\n    loadingStarted() {\n        // Make Testbench know that server request is in progress\n        this.isActive = true;\n        $wnd.Vaadin.connectionState.loadingStarted();\n    }\n    loadingFinished() {\n        // Make Testbench know that server request has finished\n        this.isActive = false;\n        $wnd.Vaadin.connectionState.loadingFinished();\n    }\n    get action() {\n        // Return a function which is bound to the flow instance, thus we can use\n        // the syntax `...serverSideRoutes` in vaadin-router.\n        // @ts-ignore\n        return async (params) => {\n            // Store last action pathname so as we can check it in events\n            this.pathname = params.pathname;\n            if ($wnd.Vaadin.connectionState.online) {\n                // @ts-ignore\n                try {\n                    await this.flowInit();\n                }\n                catch (error) {\n                    if (error instanceof FlowUiInitializationError) {\n                        // error initializing Flow: assume connection lost\n                        $wnd.Vaadin.connectionState.state = ConnectionState.CONNECTION_LOST;\n                        return this.offlineStubAction();\n                    }\n                    else {\n                        throw error;\n                    }\n                }\n            }\n            else {\n                // insert an offline stub\n                return this.offlineStubAction();\n            }\n            // When an action happens, navigation will be resolved `onBeforeEnter`\n            this.container.onBeforeEnter = (ctx, cmd) => this.flowNavigate(ctx, cmd);\n            // For covering the 'server -> client' use case\n            this.container.onBeforeLeave = (ctx, cmd) => this.flowLeave(ctx, cmd);\n            return this.container;\n        };\n    }\n    // Send a remote call to `JavaScriptBootstrapUI` to check\n    // whether navigation has to be cancelled.\n    async flowLeave(\n    // @ts-ignore\n    ctx, cmd) {\n        // server -> server, viewing offline stub, or browser is offline\n        const connectionState = $wnd.Vaadin.connectionState;\n        if (this.pathname === ctx.pathname || !this.isFlowClientLoaded() || connectionState.offline) {\n            return Promise.resolve({});\n        }\n        // 'server -> client'\n        return new Promise((resolve) => {\n            this.loadingStarted();\n            // The callback to run from server side to cancel navigation\n            this.container.serverConnected = (cancel) => {\n                resolve(cmd && cancel ? cmd.prevent() : {});\n                this.loadingFinished();\n            };\n            // Call server side to check whether we can leave the view\n            flowRoot.$server.leaveNavigation(this.getFlowRoute(ctx));\n        });\n    }\n    // Send the remote call to `JavaScriptBootstrapUI` to render the flow\n    // route specified by the context\n    async flowNavigate(ctx, cmd) {\n        if (this.response) {\n            return new Promise((resolve) => {\n                this.loadingStarted();\n                // The callback to run from server side once the view is ready\n                this.container.serverConnected = (cancel, redirectContext) => {\n                    if (cmd && cancel) {\n                        resolve(cmd.prevent());\n                    }\n                    else if (cmd && cmd.redirect && redirectContext) {\n                        resolve(cmd.redirect(redirectContext.pathname));\n                    }\n                    else {\n                        this.container.style.display = '';\n                        resolve(this.container);\n                    }\n                    this.loadingFinished();\n                };\n                // Call server side to navigate to the given route\n                flowRoot.$server.connectClient(this.container.localName, this.container.id, this.getFlowRoute(ctx), this.appShellTitle);\n            });\n        }\n        else {\n            // No server response => offline or erroneous connection\n            return Promise.resolve(this.container);\n        }\n    }\n    getFlowRoute(context) {\n        return (context.pathname + (context.search || '')).replace(this.baseRegex, '');\n    }\n    // import flow client modules and initialize UI in server side.\n    async flowInit(serverSideRouting = false) {\n        // Do not start flow twice\n        if (!this.isFlowClientLoaded()) {\n            // show flow progress indicator\n            this.loadingStarted();\n            // Initialize server side UI\n            this.response = await this.flowInitUi(serverSideRouting);\n            // Enable or disable server side routing\n            this.response.appConfig.clientRouting = !serverSideRouting;\n            const { pushScript, appConfig } = this.response;\n            if (typeof pushScript === 'string') {\n                await this.loadScript(pushScript);\n            }\n            const { appId } = appConfig;\n            // Load bootstrap script with server side parameters\n            const bootstrapMod = await import('./FlowBootstrap');\n            await bootstrapMod.init(this.response);\n            // Load custom modules defined by user\n            if (typeof this.config.imports === 'function') {\n                this.injectAppIdScript(appId);\n                await this.config.imports();\n            }\n            // Load flow-client module\n            const clientMod = await import('./FlowClient');\n            await this.flowInitClient(clientMod);\n            if (!serverSideRouting) {\n                // we use a custom tag for the flow app container\n                const tag = `flow-container-${appId.toLowerCase()}`;\n                this.container = flowRoot.$[appId] = document.createElement(tag);\n                this.container.id = appId;\n                // It might be that components created from server expect that their content has been rendered.\n                // Appending eagerly the container we avoid these kind of errors.\n                // Note that the client router will move this container to the outlet if the navigation succeed\n                this.container.style.display = 'none';\n                document.body.appendChild(this.container);\n            }\n            // hide flow progress indicator\n            this.loadingFinished();\n        }\n        return this.response;\n    }\n    async loadScript(url) {\n        return new Promise((resolve, reject) => {\n            const script = document.createElement('script');\n            script.onload = () => resolve();\n            script.onerror = reject;\n            script.src = url;\n            document.body.appendChild(script);\n        });\n    }\n    injectAppIdScript(appId) {\n        const appIdWithoutHashCode = appId.substring(0, appId.lastIndexOf('-'));\n        const scriptAppId = document.createElement('script');\n        scriptAppId.type = 'module';\n        scriptAppId.setAttribute('data-app-id', appIdWithoutHashCode);\n        document.body.append(scriptAppId);\n    }\n    // After the flow-client javascript module has been loaded, this initializes flow UI\n    // in the browser.\n    async flowInitClient(clientMod) {\n        clientMod.init();\n        // client init is async, we need to loop until initialized\n        return new Promise((resolve) => {\n            const intervalId = setInterval(() => {\n                // client `isActive() == true` while initializing or processing\n                const initializing = Object.keys($wnd.Vaadin.Flow.clients)\n                    .filter((key) => key !== 'TypeScript')\n                    .reduce((prev, id) => prev || $wnd.Vaadin.Flow.clients[id].isActive(), false);\n                if (!initializing) {\n                    clearInterval(intervalId);\n                    resolve();\n                }\n            }, 5);\n        });\n    }\n    // Returns the `appConfig` object\n    async flowInitUi(serverSideRouting) {\n        // appConfig was sent in the index.html request\n        const initial = $wnd.Vaadin && $wnd.Vaadin.TypeScript && $wnd.Vaadin.TypeScript.initial;\n        if (initial) {\n            $wnd.Vaadin.TypeScript.initial = undefined;\n            return Promise.resolve(initial);\n        }\n        // send a request to the `JavaScriptBootstrapHandler`\n        return new Promise((resolve, reject) => {\n            const xhr = new XMLHttpRequest();\n            const httpRequest = xhr;\n            const currentPath = location.pathname || '/';\n            const requestPath = `${currentPath}?v-r=init` + (serverSideRouting ? `&location=${encodeURI(this.getFlowRoute(location))}` : '');\n            httpRequest.open('GET', requestPath);\n            httpRequest.onerror = () => reject(new FlowUiInitializationError(`Invalid server response when initializing Flow UI.\n        ${httpRequest.status}\n        ${httpRequest.responseText}`));\n            httpRequest.onload = () => {\n                const contentType = httpRequest.getResponseHeader('content-type');\n                if (contentType && contentType.indexOf('application/json') !== -1) {\n                    resolve(JSON.parse(httpRequest.responseText));\n                }\n                else {\n                    httpRequest.onerror();\n                }\n            };\n            httpRequest.send();\n        });\n    }\n    // Create shared connection state store and connection indicator\n    addConnectionIndicator() {\n        // add connection indicator to DOM\n        ConnectionIndicator.create();\n        // Listen to browser online/offline events and update the loading indicator accordingly.\n        // Note: if flow-client is loaded, it instead handles the state transitions.\n        $wnd.addEventListener('online', () => {\n            if (!this.isFlowClientLoaded()) {\n                // Send an HTTP HEAD request for sw.js to verify server reachability.\n                // We do not expect sw.js to be cached, so the request goes to the\n                // server rather than being served from local cache.\n                // Require network-level failure to revert the state to CONNECTION_LOST\n                // (HTTP error code is ok since it still verifies server's presence).\n                $wnd.Vaadin.connectionState.state = ConnectionState.RECONNECTING;\n                const http = new XMLHttpRequest();\n                const serverRoot = location.pathname || '/';\n                http.open('HEAD', serverRoot + (serverRoot.endsWith('/') ? '' : ' /') + 'sw.js');\n                http.onload = () => {\n                    $wnd.Vaadin.connectionState.state = ConnectionState.CONNECTED;\n                };\n                http.onerror = () => {\n                    $wnd.Vaadin.connectionState.state = ConnectionState.CONNECTION_LOST;\n                };\n                http.send();\n            }\n        });\n        $wnd.addEventListener('offline', () => {\n            if (!this.isFlowClientLoaded()) {\n                $wnd.Vaadin.connectionState.state = ConnectionState.CONNECTION_LOST;\n            }\n        });\n    }\n    async offlineStubAction() {\n        await import('./OfflineStub');\n        const offlineStub = document.createElement('vaadin-offline-stub');\n        this.response = undefined;\n        let onlineListener;\n        const removeOfflineStubAndOnlineListener = () => {\n            if (onlineListener !== undefined) {\n                $wnd.Vaadin.connectionState.removeStateChangeListener(onlineListener);\n                onlineListener = undefined;\n            }\n        };\n        offlineStub.onBeforeEnter = (ctx, _cmds, router) => {\n            onlineListener = () => {\n                if ($wnd.Vaadin.connectionState.online) {\n                    removeOfflineStubAndOnlineListener();\n                    router.render(ctx, false);\n                }\n            };\n            $wnd.Vaadin.connectionState.addStateChangeListener(onlineListener);\n        };\n        offlineStub.onBeforeLeave = (_ctx, _cmds, _router) => {\n            removeOfflineStubAndOnlineListener();\n        };\n        return offlineStub;\n    }\n    isFlowClientLoaded() {\n        return this.response !== undefined;\n    }\n}\nclass FlowUiInitializationError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n"
      },
      {
       "name": "../target/flow-frontend/ConnectionIndicator.ts",
       "source": "/*\n * Copyright 2000-2020 Vaadin Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { css, html, LitElement, property } from 'lit-element';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { ConnectionState } from './ConnectionState';\nconst DEFAULT_STYLE_ID = 'css-loading-indicator';\n/**\n * Component showing loading and connection indicator. When added to DOM,\n * listens for changes on `window.Vaadin.connectionState` ConnectionStateStore.\n */\nexport class ConnectionIndicator extends LitElement {\n    constructor() {\n        super();\n        /**\n         * The delay before showing the loading indicator, in ms.\n         */\n        this.firstDelay = 300;\n        /**\n         * The delay before the loading indicator goes into \"second\" state, in ms.\n         */\n        this.secondDelay = 1500;\n        /**\n         * The delay before the loading indicator goes into \"third\" state, in ms.\n         */\n        this.thirdDelay = 5000;\n        /**\n         * The duration for which the connection state change message is visible,\n         * in ms.\n         */\n        this.expandedDuration = 2000;\n        /**\n         * The message shown when the connection goes to connected state.\n         */\n        this.onlineText = 'Online';\n        /**\n         * The message shown when the connection goes to lost state.\n         */\n        this.offlineText = 'Connection lost';\n        /**\n         * The message shown when the connection goes to reconnecting state.\n         */\n        this.reconnectingText = 'Connection lost, trying to reconnect...';\n        this.offline = false;\n        this.reconnecting = false;\n        this.expanded = false;\n        this.loading = false;\n        this.loadingBarState = \"\" /* IDLE */;\n        this.applyDefaultThemeState = true;\n        this.firstTimeout = 0;\n        this.secondTimeout = 0;\n        this.thirdTimeout = 0;\n        this.expandedTimeout = 0;\n        this.lastMessageState = ConnectionState.CONNECTED;\n        this.connectionStateListener = () => {\n            this.expanded = this.updateConnectionState();\n            this.expandedTimeout = this.timeoutFor(this.expandedTimeout, this.expanded, () => (this.expanded = false), this.expandedDuration);\n        };\n    }\n    /**\n     * Initialize global connection indicator instance at window.Vaadin.connectionIndicator\n     * and add instance to the document body.\n     */\n    static create() {\n        var _a, _b;\n        const $wnd = window;\n        if (!((_a = $wnd.Vaadin) === null || _a === void 0 ? void 0 : _a.connectionIndicator)) {\n            $wnd.Vaadin = $wnd.Vaadin || {};\n            $wnd.Vaadin.connectionIndicator = document.createElement('vaadin-connection-indicator');\n            document.body.appendChild($wnd.Vaadin.connectionIndicator);\n        }\n        return (_b = $wnd.Vaadin) === null || _b === void 0 ? void 0 : _b.connectionIndicator;\n    }\n    render() {\n        return html `\n      <div class=\"v-loading-indicator ${this.loadingBarState}\" style=\"${this.getLoadingBarStyle()}\"></div>\n\n      <div\n        class=\"v-status-message ${classMap({\n            active: this.reconnecting\n        })}\"\n      >\n        <span class=\"text\"> ${this.renderMessage()} </span>\n      </div>\n    `;\n    }\n    connectedCallback() {\n        var _a;\n        super.connectedCallback();\n        const $wnd = window;\n        if ((_a = $wnd.Vaadin) === null || _a === void 0 ? void 0 : _a.connectionState) {\n            this.connectionStateStore = $wnd.Vaadin.connectionState;\n            this.connectionStateStore.addStateChangeListener(this.connectionStateListener);\n            this.updateConnectionState();\n        }\n        this.updateTheme();\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        if (this.connectionStateStore) {\n            this.connectionStateStore.removeStateChangeListener(this.connectionStateListener);\n        }\n        this.updateTheme();\n    }\n    get applyDefaultTheme() {\n        return this.applyDefaultThemeState;\n    }\n    set applyDefaultTheme(applyDefaultTheme) {\n        if (applyDefaultTheme !== this.applyDefaultThemeState) {\n            this.applyDefaultThemeState = applyDefaultTheme;\n            this.updateTheme();\n        }\n    }\n    createRenderRoot() {\n        return this;\n    }\n    /**\n     * Update state flags.\n     *\n     * @return true if the connection message changes, and therefore a new\n     * message should be shown\n     */\n    updateConnectionState() {\n        var _a;\n        const state = (_a = this.connectionStateStore) === null || _a === void 0 ? void 0 : _a.state;\n        this.offline = state === ConnectionState.CONNECTION_LOST;\n        this.reconnecting = state === ConnectionState.RECONNECTING;\n        this.updateLoading(state === ConnectionState.LOADING);\n        if (this.loading) {\n            // Entering loading state, do not show message\n            return false;\n        }\n        if (state !== this.lastMessageState) {\n            this.lastMessageState = state;\n            // Message changes, show new message\n            return true;\n        }\n        // Message did not change\n        return false;\n    }\n    updateLoading(loading) {\n        this.loading = loading;\n        this.loadingBarState = \"\" /* IDLE */;\n        this.firstTimeout = this.timeoutFor(this.firstTimeout, loading, () => (this.loadingBarState = \"first\" /* FIRST */), this.firstDelay);\n        this.secondTimeout = this.timeoutFor(this.secondTimeout, loading, () => (this.loadingBarState = \"second\" /* SECOND */), this.secondDelay);\n        this.thirdTimeout = this.timeoutFor(this.thirdTimeout, loading, () => (this.loadingBarState = \"third\" /* THIRD */), this.thirdDelay);\n    }\n    renderMessage() {\n        if (this.reconnecting) {\n            return this.reconnectingText;\n        }\n        if (this.offline) {\n            return this.offlineText;\n        }\n        return this.onlineText;\n    }\n    updateTheme() {\n        if (this.applyDefaultThemeState && this.isConnected) {\n            if (!document.getElementById(DEFAULT_STYLE_ID)) {\n                const style = document.createElement('style');\n                style.id = DEFAULT_STYLE_ID;\n                style.textContent = this.getDefaultStyle().cssText;\n                document.head.appendChild(style);\n            }\n        }\n        else {\n            const style = document.getElementById(DEFAULT_STYLE_ID);\n            if (style) {\n                document.head.removeChild(style);\n            }\n        }\n    }\n    getDefaultStyle() {\n        return css `\n      @keyframes v-progress-start {\n        0% {\n          width: 0%;\n        }\n        100% {\n          width: 50%;\n        }\n      }\n      @keyframes v-progress-delay {\n        0% {\n          width: 50%;\n        }\n        100% {\n          width: 90%;\n        }\n      }\n      @keyframes v-progress-wait {\n        0% {\n          width: 90%;\n          height: 4px;\n        }\n        3% {\n          width: 91%;\n          height: 7px;\n        }\n        100% {\n          width: 96%;\n          height: 7px;\n        }\n      }\n      @keyframes v-progress-wait-pulse {\n        0% {\n          opacity: 1;\n        }\n        50% {\n          opacity: 0.1;\n        }\n        100% {\n          opacity: 1;\n        }\n      }\n      .v-loading-indicator,\n      .v-status-message {\n        position: fixed;\n        z-index: 251;\n        left: 0;\n        right: auto;\n        top: 0;\n        background-color: var(--lumo-primary-color, var(--material-primary-color, blue));\n        transition: none;\n      }\n      .v-loading-indicator {\n        width: 50%;\n        height: 4px;\n        opacity: 1;\n        pointer-events: none;\n        animation: v-progress-start 1000ms 200ms both;\n      }\n      .v-loading-indicator[style*='none'] {\n        display: block !important;\n        width: 100%;\n        opacity: 0;\n        animation: none;\n        transition: opacity 500ms 300ms, width 300ms;\n      }\n      .v-loading-indicator.second {\n        width: 90%;\n        animation: v-progress-delay 3.8s forwards;\n      }\n      .v-loading-indicator.third {\n        width: 96%;\n        animation: v-progress-wait 5s forwards, v-progress-wait-pulse 1s 4s infinite backwards;\n      }\n\n      vaadin-connection-indicator[offline] .v-loading-indicator,\n      vaadin-connection-indicator[reconnecting] .v-loading-indicator {\n        display: none;\n      }\n\n      .v-status-message {\n        opacity: 0;\n        width: 100%;\n        max-height: var(--status-height-collapsed, 8px);\n        overflow: hidden;\n        background-color: var(--status-bg-color-online, var(--lumo-primary-color, var(--material-primary-color, blue)));\n        color: var(\n          --status-text-color-online,\n          var(--lumo-primary-contrast-color, var(--material-primary-contrast-color, #fff))\n        );\n        font-size: 0.75rem;\n        font-weight: 600;\n        line-height: 1;\n        transition: all 0.5s;\n        padding: 0 0.5em;\n      }\n\n      vaadin-connection-indicator[offline] .v-status-message,\n      vaadin-connection-indicator[reconnecting] .v-status-message {\n        opacity: 1;\n        background-color: var(--status-bg-color-offline, var(--lumo-shade, #333));\n        color: var(\n          --status-text-color-offline,\n          var(--lumo-primary-contrast-color, var(--material-primary-contrast-color, #fff))\n        );\n        background-image: repeating-linear-gradient(\n          45deg,\n          rgba(255, 255, 255, 0),\n          rgba(255, 255, 255, 0) 10px,\n          rgba(255, 255, 255, 0.1) 10px,\n          rgba(255, 255, 255, 0.1) 20px\n        );\n      }\n\n      vaadin-connection-indicator[reconnecting] .v-status-message {\n        animation: show-reconnecting-status 2s;\n      }\n\n      vaadin-connection-indicator[offline] .v-status-message:hover,\n      vaadin-connection-indicator[reconnecting] .v-status-message:hover,\n      vaadin-connection-indicator[expanded] .v-status-message {\n        max-height: var(--status-height, 1.75rem);\n      }\n\n      vaadin-connection-indicator[expanded] .v-status-message {\n        opacity: 1;\n      }\n\n      .v-status-message span {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: var(--status-height, 1.75rem);\n      }\n\n      vaadin-connection-indicator[reconnecting] .v-status-message span::before {\n        content: '';\n        width: 1em;\n        height: 1em;\n        border-top: 2px solid\n          var(--status-spinner-color, var(--lumo-primary-color, var(--material-primary-color, blue)));\n        border-left: 2px solid\n          var(--status-spinner-color, var(--lumo-primary-color, var(--material-primary-color, blue)));\n        border-right: 2px solid transparent;\n        border-bottom: 2px solid transparent;\n        border-radius: 50%;\n        box-sizing: border-box;\n        animation: v-spin 0.4s linear infinite;\n        margin: 0 0.5em;\n      }\n\n      @keyframes v-spin {\n        100% {\n          transform: rotate(360deg);\n        }\n      }\n    `;\n    }\n    getLoadingBarStyle() {\n        switch (this.loadingBarState) {\n            case \"\" /* IDLE */:\n                return 'display: none';\n            case \"first\" /* FIRST */:\n            case \"second\" /* SECOND */:\n            case \"third\" /* THIRD */:\n                return 'display: block';\n            default:\n                return '';\n        }\n    }\n    timeoutFor(timeoutId, enabled, handler, delay) {\n        if (timeoutId !== 0) {\n            window.clearTimeout(timeoutId);\n        }\n        return enabled ? window.setTimeout(handler, delay) : 0;\n    }\n    static get instance() {\n        return ConnectionIndicator.create();\n    }\n}\n__decorate([\n    property({ type: Number })\n], ConnectionIndicator.prototype, \"firstDelay\", void 0);\n__decorate([\n    property({ type: Number })\n], ConnectionIndicator.prototype, \"secondDelay\", void 0);\n__decorate([\n    property({ type: Number })\n], ConnectionIndicator.prototype, \"thirdDelay\", void 0);\n__decorate([\n    property({ type: Number })\n], ConnectionIndicator.prototype, \"expandedDuration\", void 0);\n__decorate([\n    property({ type: String })\n], ConnectionIndicator.prototype, \"onlineText\", void 0);\n__decorate([\n    property({ type: String })\n], ConnectionIndicator.prototype, \"offlineText\", void 0);\n__decorate([\n    property({ type: String })\n], ConnectionIndicator.prototype, \"reconnectingText\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], ConnectionIndicator.prototype, \"offline\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], ConnectionIndicator.prototype, \"reconnecting\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], ConnectionIndicator.prototype, \"expanded\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], ConnectionIndicator.prototype, \"loading\", void 0);\n__decorate([\n    property({ type: String })\n], ConnectionIndicator.prototype, \"loadingBarState\", void 0);\n__decorate([\n    property({ type: Boolean })\n], ConnectionIndicator.prototype, \"applyDefaultTheme\", null);\nif (customElements.get('vaadin-connection-indicator') === undefined) {\n    customElements.define('vaadin-connection-indicator', ConnectionIndicator);\n}\n/**\n * The global connection indicator object. Its appearance and behavior can be\n * configured via properties:\n *\n * connectionIndicator.firstDelay = 0;\n * connectionIndicator.onlineText = 'The application is online';\n *\n * To avoid altering the appearance while the indicator is active, apply the\n * configuration in your application 'frontend/index.ts' file.\n */\nexport const connectionIndicator = ConnectionIndicator.instance;\n"
      }
     ]
    }
   ]
  },
  {
   "id": 1,
   "names": [],
   "files": [
    "VAADIN/build/vaadin-1-c71422e23f8e09071a21.cache.js"
   ],
   "hash": "5c6f4aee204ea397634e",
   "modules": [
    {
     "id": 14,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/polymer-element.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { ElementMixin, version } from './lib/mixins/element-mixin.js';\nexport { html } from './lib/utils/html-tag.js';\n\nexport { version };\n\n/**\n * Base class that provides the core API for Polymer's meta-programming\n * features including template stamping, data-binding, attribute deserialization,\n * and property change observation.\n *\n * @customElement\n * @polymer\n * @constructor\n * @implements {Polymer_ElementMixin}\n * @extends HTMLElement\n * @appliesMixin ElementMixin\n * @summary Custom element base class that provides the core API for Polymer's\n *   key meta-programming features including template stamping, data-binding,\n *   attribute deserialization, and property change observation\n */\nexport const PolymerElement = ElementMixin(HTMLElement);\n"
    },
    {
     "id": 15,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-themable-mixin@1.6.2/node_modules/@vaadin/vaadin-themable-mixin/register-styles.js",
     "source": "import '@polymer/polymer/lib/elements/dom-module.js';\nimport { CSSResult } from 'lit-element';\nexport { css, unsafeCSS } from 'lit-element';\n\nlet moduleIdIndex = 0;\n// Map of <CSSResult, Polymer.DomModule> pairs.\nconst styleMap = {};\n\n/**\n * Registers CSS styles for a component type. Make sure to register the styles before\n * the first instance of a component of the type is attached to DOM.\n *\n * @param {String} themeFor The local/tag name of the component type to register the styles for\n * @param {CSSResult | CSSResult[]} styles The CSS style rules to be registered for the component type\n * matching themeFor and included in the local scope of each component instance\n * @param {Object=} options Additional options\n * @return {void}\n */\nexport const registerStyles = (themeFor, styles, options) => {\n  const themeId = (options && options.moduleId) || `custom-style-module-${moduleIdIndex++}`;\n\n  if (!Array.isArray(styles)) {\n    styles = styles ? [styles] : [];\n  }\n\n  styles.forEach(cssResult => {\n    if (!(cssResult instanceof CSSResult)) {\n      throw new Error(\n        'An item in styles is not of type CSSResult. Use `unsafeCSS` or `css`.');\n    }\n    if (!styleMap[cssResult]) {\n      const styleModuleElement = document.createElement('dom-module');\n      styleModuleElement.innerHTML = `\n        <template>\n          <style>${cssResult.toString()}</style>\n        </template>\n      `;\n\n      const styleId = `custom-style-module-${moduleIdIndex++}`;\n      styleModuleElement.register(styleId);\n      styleMap[cssResult] = styleId;\n    }\n  });\n\n  const themeModuleElement = document.createElement('dom-module');\n  if (themeFor) {\n    const elementClass = window.customElements && window.customElements.get(themeFor);\n    if (elementClass && elementClass.hasOwnProperty('__finalized')) {\n      console.warn(`The custom element definition for \"${themeFor}\"\n      was finalized before a style module was registered.\n      Make sure to add component specific style modules before\n      importing the corresponding custom element.`);\n    }\n    themeModuleElement.setAttribute('theme-for', themeFor);\n  }\n\n  const moduleIncludes = (options && options.include) || [];\n\n  themeModuleElement.innerHTML = `\n    <template>\n      ${moduleIncludes.map(include => `<style include=${include}></style>`)}\n      ${styles.map(style => `<style include=${styleMap[style]}></style>`)}\n    </template>\n  `;\n\n  themeModuleElement.register(themeId);\n};\n"
    },
    {
     "id": 16,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/utils/html-tag.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\n/**\n * Class representing a static string value which can be used to filter\n * strings by asseting that they have been created via this class. The\n * `value` property returns the string passed to the constructor.\n */\nclass LiteralString {\n  constructor(string) {\n    /** @type {string} */\n    this.value = string.toString();\n  }\n  /**\n   * @return {string} LiteralString string value\n   * @override\n   */\n  toString() {\n    return this.value;\n  }\n}\n\n/**\n * @param {*} value Object to stringify into HTML\n * @return {string} HTML stringified form of `obj`\n */\nfunction literalValue(value) {\n  if (value instanceof LiteralString) {\n    return /** @type {!LiteralString} */(value).value;\n  } else {\n    throw new Error(\n        `non-literal value passed to Polymer's htmlLiteral function: ${value}`\n    );\n  }\n}\n\n/**\n * @param {*} value Object to stringify into HTML\n * @return {string} HTML stringified form of `obj`\n */\nfunction htmlValue(value) {\n  if (value instanceof HTMLTemplateElement) {\n    return /** @type {!HTMLTemplateElement } */(value).innerHTML;\n  } else if (value instanceof LiteralString) {\n    return literalValue(value);\n  } else {\n    throw new Error(\n        `non-template value passed to Polymer's html function: ${value}`);\n  }\n}\n\n/**\n * A template literal tag that creates an HTML <template> element from the\n * contents of the string.\n *\n * This allows you to write a Polymer Template in JavaScript.\n *\n * Templates can be composed by interpolating `HTMLTemplateElement`s in\n * expressions in the JavaScript template literal. The nested template's\n * `innerHTML` is included in the containing template.  The only other\n * values allowed in expressions are those returned from `htmlLiteral`\n * which ensures only literal values from JS source ever reach the HTML, to\n * guard against XSS risks.\n *\n * All other values are disallowed in expressions to help prevent XSS\n * attacks; however, `htmlLiteral` can be used to compose static\n * string values into templates. This is useful to compose strings into\n * places that do not accept html, like the css text of a `style`\n * element.\n *\n * Example:\n *\n *     static get template() {\n *       return html`\n *         <style>:host{ content:\"...\" }</style>\n *         <div class=\"shadowed\">${this.partialTemplate}</div>\n *         ${super.template}\n *       `;\n *     }\n *     static get partialTemplate() { return html`<span>Partial!</span>`; }\n *\n * @param {!ITemplateArray} strings Constant parts of tagged template literal\n * @param {...*} values Variable parts of tagged template literal\n * @return {!HTMLTemplateElement} Constructed HTMLTemplateElement\n */\nexport const html = function html(strings, ...values) {\n  const template = /** @type {!HTMLTemplateElement} */(document.createElement('template'));\n  template.innerHTML = values.reduce((acc, v, idx) =>\n      acc + htmlValue(v) + strings[idx + 1], strings[0]);\n  return template;\n};\n\n/**\n * An html literal tag that can be used with `html` to compose.\n * a literal string.\n *\n * Example:\n *\n *     static get template() {\n *       return html`\n *         <style>\n *           :host { display: block; }\n *           ${this.styleTemplate()}\n *         </style>\n *         <div class=\"shadowed\">${staticValue}</div>\n *         ${super.template}\n *       `;\n *     }\n *     static get styleTemplate() {\n *        return htmlLiteral`.shadowed { background: gray; }`;\n *     }\n *\n * @param {!ITemplateArray} strings Constant parts of tagged template literal\n * @param {...*} values Variable parts of tagged template literal\n * @return {!LiteralString} Constructed literal string\n */\nexport const htmlLiteral = function(strings, ...values) {\n  return new LiteralString(values.reduce((acc, v, idx) =>\n      acc + literalValue(v) + strings[idx + 1], strings[0]));\n};\n"
    },
    {
     "id": 17,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-themable-mixin@1.6.2/node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js",
     "source": "import { DomModule } from '@polymer/polymer/lib/elements/dom-module.js';\nimport { ThemePropertyMixin } from './vaadin-theme-property-mixin.js';\n\n/**\n * @polymerMixin\n * @mixes ThemePropertyMixin\n */\nexport const ThemableMixin = superClass => class VaadinThemableMixin extends ThemePropertyMixin(superClass) {\n\n  /** @protected */\n  static finalize() {\n    super.finalize();\n\n    const template = this.prototype._template;\n\n    const hasOwnTemplate = this.template && this.template.parentElement && this.template.parentElement.id === this.is;\n    const inheritedTemplate = Object.getPrototypeOf(this.prototype)._template;\n    if (inheritedTemplate && !hasOwnTemplate) {\n      // The element doesn't define its own template -> include the theme modules from the inherited template\n      Array.from(inheritedTemplate.content.querySelectorAll('style[include]')).forEach(s => {\n        this._includeStyle(s.getAttribute('include'), template);\n      });\n    }\n\n    this._includeMatchingThemes(template);\n  }\n\n  /** @private */\n  static _includeMatchingThemes(template) {\n    const domModule = DomModule;\n    const modules = domModule.prototype.modules;\n\n    let hasThemes = false;\n    const defaultModuleName = this.is + '-default-theme';\n\n    Object.keys(modules)\n      .sort((moduleNameA, moduleNameB) => {\n        const vaadinA = moduleNameA.indexOf('vaadin-') === 0;\n        const vaadinB = moduleNameB.indexOf('vaadin-') === 0;\n\n        const vaadinThemePrefixes = ['lumo-', 'material-'];\n        const vaadinThemeA = vaadinThemePrefixes.filter(prefix => moduleNameA.indexOf(prefix) === 0).length > 0;\n        const vaadinThemeB = vaadinThemePrefixes.filter(prefix => moduleNameB.indexOf(prefix) === 0).length > 0;\n\n        if (vaadinA !== vaadinB) {\n          // Include vaadin core styles first\n          return vaadinA ? -1 : 1;\n        } else if (vaadinThemeA !== vaadinThemeB) {\n          // Include vaadin theme styles after that\n          return vaadinThemeA ? -1 : 1;\n        } else {\n          // Lastly include custom styles so they override all vaadin styles\n          return 0;\n        }\n      })\n      .forEach(moduleName => {\n        if (moduleName !== defaultModuleName) {\n          const themeFor = modules[moduleName].getAttribute('theme-for');\n          if (themeFor) {\n            themeFor.split(' ').forEach(themeForToken => {\n              if (new RegExp('^' + themeForToken.split('*').join('.*') + '$').test(this.is)) {\n                hasThemes = true;\n                this._includeStyle(moduleName, template);\n              }\n            });\n          }\n        }\n      });\n\n    if (!hasThemes && modules[defaultModuleName]) {\n      // No theme modules found, include the default module if it exists\n      this._includeStyle(defaultModuleName, template);\n    }\n  }\n\n  /** @private */\n  static _includeStyle(moduleName, template) {\n    if (template && !template.content.querySelector(`style[include=\"${moduleName}\"]`)) {\n      const styleEl = document.createElement('style');\n      styleEl.setAttribute('include', moduleName);\n      template.content.appendChild(styleEl);\n    }\n  }\n\n};\n"
    },
    {
     "id": 18,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-lumo-styles@1.6.1/node_modules/@vaadin/vaadin-lumo-styles/spacing.js",
     "source": "import './version.js';\nimport '@polymer/polymer/lib/elements/custom-style.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<custom-style>\n  <style>\n    html {\n      /* Square */\n      --lumo-space-xs: 0.25rem;\n      --lumo-space-s: 0.5rem;\n      --lumo-space-m: 1rem;\n      --lumo-space-l: 1.5rem;\n      --lumo-space-xl: 2.5rem;\n\n      /* Wide */\n      --lumo-space-wide-xs: calc(var(--lumo-space-xs) / 2) var(--lumo-space-xs);\n      --lumo-space-wide-s: calc(var(--lumo-space-s) / 2) var(--lumo-space-s);\n      --lumo-space-wide-m: calc(var(--lumo-space-m) / 2) var(--lumo-space-m);\n      --lumo-space-wide-l: calc(var(--lumo-space-l) / 2) var(--lumo-space-l);\n      --lumo-space-wide-xl: calc(var(--lumo-space-xl) / 2) var(--lumo-space-xl);\n\n      /* Tall */\n      --lumo-space-tall-xs: var(--lumo-space-xs) calc(var(--lumo-space-xs) / 2);\n      --lumo-space-tall-s: var(--lumo-space-s) calc(var(--lumo-space-s) / 2);\n      --lumo-space-tall-m: var(--lumo-space-m) calc(var(--lumo-space-m) / 2);\n      --lumo-space-tall-l: var(--lumo-space-l) calc(var(--lumo-space-l) / 2);\n      --lumo-space-tall-xl: var(--lumo-space-xl) calc(var(--lumo-space-xl) / 2);\n    }\n  </style>\n</custom-style>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
    },
    {
     "id": 19,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-lumo-styles@1.6.1/node_modules/@vaadin/vaadin-lumo-styles/color.js",
     "source": "import './version.js';\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport '@polymer/polymer/lib/elements/dom-module.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<custom-style>\n  <style>\n    html {\n      /* Base (background) */\n      --lumo-base-color: #FFF;\n\n      /* Tint */\n      --lumo-tint-5pct: hsla(0, 0%, 100%, 0.3);\n      --lumo-tint-10pct: hsla(0, 0%, 100%, 0.37);\n      --lumo-tint-20pct: hsla(0, 0%, 100%, 0.44);\n      --lumo-tint-30pct: hsla(0, 0%, 100%, 0.5);\n      --lumo-tint-40pct: hsla(0, 0%, 100%, 0.57);\n      --lumo-tint-50pct: hsla(0, 0%, 100%, 0.64);\n      --lumo-tint-60pct: hsla(0, 0%, 100%, 0.7);\n      --lumo-tint-70pct: hsla(0, 0%, 100%, 0.77);\n      --lumo-tint-80pct: hsla(0, 0%, 100%, 0.84);\n      --lumo-tint-90pct: hsla(0, 0%, 100%, 0.9);\n      --lumo-tint: #FFF;\n\n      /* Shade */\n      --lumo-shade-5pct: hsla(214, 61%, 25%, 0.05);\n      --lumo-shade-10pct: hsla(214, 57%, 24%, 0.1);\n      --lumo-shade-20pct: hsla(214, 53%, 23%, 0.16);\n      --lumo-shade-30pct: hsla(214, 50%, 22%, 0.26);\n      --lumo-shade-40pct: hsla(214, 47%, 21%, 0.38);\n      --lumo-shade-50pct: hsla(214, 45%, 20%, 0.5);\n      --lumo-shade-60pct: hsla(214, 43%, 19%, 0.61);\n      --lumo-shade-70pct: hsla(214, 42%, 18%, 0.72);\n      --lumo-shade-80pct: hsla(214, 41%, 17%, 0.83);\n      --lumo-shade-90pct: hsla(214, 40%, 16%, 0.94);\n      --lumo-shade: hsl(214, 35%, 15%);\n\n      /* Contrast */\n      --lumo-contrast-5pct: var(--lumo-shade-5pct);\n      --lumo-contrast-10pct: var(--lumo-shade-10pct);\n      --lumo-contrast-20pct: var(--lumo-shade-20pct);\n      --lumo-contrast-30pct: var(--lumo-shade-30pct);\n      --lumo-contrast-40pct: var(--lumo-shade-40pct);\n      --lumo-contrast-50pct: var(--lumo-shade-50pct);\n      --lumo-contrast-60pct: var(--lumo-shade-60pct);\n      --lumo-contrast-70pct: var(--lumo-shade-70pct);\n      --lumo-contrast-80pct: var(--lumo-shade-80pct);\n      --lumo-contrast-90pct: var(--lumo-shade-90pct);\n      --lumo-contrast: var(--lumo-shade);\n\n      /* Text */\n      --lumo-header-text-color: var(--lumo-contrast);\n      --lumo-body-text-color: var(--lumo-contrast-90pct);\n      --lumo-secondary-text-color: var(--lumo-contrast-70pct);\n      --lumo-tertiary-text-color: var(--lumo-contrast-50pct);\n      --lumo-disabled-text-color: var(--lumo-contrast-30pct);\n\n      /* Primary */\n      --lumo-primary-color: hsl(214, 90%, 52%);\n      --lumo-primary-color-50pct: hsla(214, 90%, 52%, 0.5);\n      --lumo-primary-color-10pct: hsla(214, 90%, 52%, 0.1);\n      --lumo-primary-text-color: var(--lumo-primary-color);\n      --lumo-primary-contrast-color: #FFF;\n\n      /* Error */\n      --lumo-error-color: hsl(3, 100%, 61%);\n      --lumo-error-color-50pct: hsla(3, 100%, 60%, 0.5);\n      --lumo-error-color-10pct: hsla(3, 100%, 60%, 0.1);\n      --lumo-error-text-color: hsl(3, 92%, 53%);\n      --lumo-error-contrast-color: #FFF;\n\n      /* Success */\n      --lumo-success-color: hsl(145, 80%, 42%); /* hsl(144,82%,37%); */\n      --lumo-success-color-50pct: hsla(145, 76%, 44%, 0.55);\n      --lumo-success-color-10pct: hsla(145, 76%, 44%, 0.12);\n      --lumo-success-text-color: hsl(145, 100%, 32%);\n      --lumo-success-contrast-color: #FFF;\n    }\n  </style>\n</custom-style><dom-module id=\"lumo-color\">\n  <template>\n    <style>\n      [theme~=\"dark\"] {\n        /* Base (background) */\n        --lumo-base-color: hsl(214, 35%, 21%);\n\n        /* Tint */\n        --lumo-tint-5pct: hsla(214, 65%, 85%, 0.06);\n        --lumo-tint-10pct: hsla(214, 60%, 80%, 0.14);\n        --lumo-tint-20pct: hsla(214, 64%, 82%, 0.23);\n        --lumo-tint-30pct: hsla(214, 69%, 84%, 0.32);\n        --lumo-tint-40pct: hsla(214, 73%, 86%, 0.41);\n        --lumo-tint-50pct: hsla(214, 78%, 88%, 0.5);\n        --lumo-tint-60pct: hsla(214, 82%, 90%, 0.6);\n        --lumo-tint-70pct: hsla(214, 87%, 92%, 0.7);\n        --lumo-tint-80pct: hsla(214, 91%, 94%, 0.8);\n        --lumo-tint-90pct: hsla(214, 96%, 96%, 0.9);\n        --lumo-tint: hsl(214, 100%, 98%);\n\n        /* Shade */\n        --lumo-shade-5pct: hsla(214, 0%, 0%, 0.07);\n        --lumo-shade-10pct: hsla(214, 4%, 2%, 0.15);\n        --lumo-shade-20pct: hsla(214, 8%, 4%, 0.23);\n        --lumo-shade-30pct: hsla(214, 12%, 6%, 0.32);\n        --lumo-shade-40pct: hsla(214, 16%, 8%, 0.41);\n        --lumo-shade-50pct: hsla(214, 20%, 10%, 0.5);\n        --lumo-shade-60pct: hsla(214, 24%, 12%, 0.6);\n        --lumo-shade-70pct: hsla(214, 28%, 13%, 0.7);\n        --lumo-shade-80pct: hsla(214, 32%, 13%, 0.8);\n        --lumo-shade-90pct: hsla(214, 33%, 13%, 0.9);\n        --lumo-shade: hsl(214, 33%, 13%);\n\n        /* Contrast */\n        --lumo-contrast-5pct: var(--lumo-tint-5pct);\n        --lumo-contrast-10pct: var(--lumo-tint-10pct);\n        --lumo-contrast-20pct: var(--lumo-tint-20pct);\n        --lumo-contrast-30pct: var(--lumo-tint-30pct);\n        --lumo-contrast-40pct: var(--lumo-tint-40pct);\n        --lumo-contrast-50pct: var(--lumo-tint-50pct);\n        --lumo-contrast-60pct: var(--lumo-tint-60pct);\n        --lumo-contrast-70pct: var(--lumo-tint-70pct);\n        --lumo-contrast-80pct: var(--lumo-tint-80pct);\n        --lumo-contrast-90pct: var(--lumo-tint-90pct);\n        --lumo-contrast: var(--lumo-tint);\n\n        /* Text */\n        --lumo-header-text-color: var(--lumo-contrast);\n        --lumo-body-text-color: var(--lumo-contrast-90pct);\n        --lumo-secondary-text-color: var(--lumo-contrast-70pct);\n        --lumo-tertiary-text-color: var(--lumo-contrast-50pct);\n        --lumo-disabled-text-color: var(--lumo-contrast-30pct);\n\n        /* Primary */\n        --lumo-primary-color: hsl(214, 86%, 55%);\n        --lumo-primary-color-50pct: hsla(214, 86%, 55%, 0.5);\n        --lumo-primary-color-10pct: hsla(214, 90%, 63%, 0.1);\n        --lumo-primary-text-color: hsl(214, 100%, 70%);\n        --lumo-primary-contrast-color: #FFF;\n\n        /* Error */\n        --lumo-error-color: hsl(3, 90%, 63%);\n        --lumo-error-color-50pct: hsla(3, 90%, 63%, 0.5);\n        --lumo-error-color-10pct: hsla(3, 90%, 63%, 0.1);\n        --lumo-error-text-color: hsl(3, 100%, 67%);\n\n        /* Success */\n        --lumo-success-color: hsl(145, 65%, 42%);\n        --lumo-success-color-50pct: hsla(145, 65%, 42%, 0.5);\n        --lumo-success-color-10pct: hsla(145, 65%, 42%, 0.1);\n        --lumo-success-text-color: hsl(145, 85%, 47%);\n      }\n\n      html {\n        color: var(--lumo-body-text-color);\n        background-color: var(--lumo-base-color);\n      }\n\n      [theme~=\"dark\"] {\n        color: var(--lumo-body-text-color);\n        background-color: var(--lumo-base-color);\n      }\n\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        color: var(--lumo-header-text-color);\n      }\n\n      a {\n        color: var(--lumo-primary-text-color);\n      }\n\n      blockquote {\n        color: var(--lumo-secondary-text-color);\n      }\n\n      code,\n      pre {\n        background-color: var(--lumo-contrast-10pct);\n        border-radius: var(--lumo-border-radius-m);\n      }\n    </style>\n  </template>\n</dom-module><dom-module id=\"lumo-color-legacy\">\n  <template>\n    <style include=\"lumo-color\">\n      :host {\n        color: var(--lumo-body-text-color) !important;\n        background-color: var(--lumo-base-color) !important;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n\n/* Only needed for IE11 when you want to use the dark palette inside the light palette */\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\n;\n"
    },
    {
     "id": 20,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-element-mixin@2.4.2/node_modules/@vaadin/vaadin-element-mixin/vaadin-element-mixin.js + 3 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-element-mixin@2.4.2/node_modules/@vaadin/vaadin-element-mixin/vaadin-element-mixin.js",
       "source": "import { idlePeriod } from '@polymer/polymer/lib/utils/async.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { enqueueDebouncer } from '@polymer/polymer/lib/utils/flush.js';\n\nimport { DirMixin } from './vaadin-dir-mixin.js';\nimport { usageStatistics } from '@vaadin/vaadin-usage-statistics/vaadin-usage-statistics.js';\nif (!window.Vaadin) {\n  window['Vaadin'] = {};\n}\n\n/**\n * Array of Vaadin custom element classes that have been finalized.\n */\nwindow['Vaadin'].registrations = window.Vaadin.registrations || [];\n\n// Use the hack to prevent polymer-modulizer from converting to exports\nwindow['Vaadin'].developmentModeCallback = window.Vaadin.developmentModeCallback || {};\nwindow['Vaadin'].developmentModeCallback['vaadin-usage-statistics'] = function() {\n  if (usageStatistics) {\n    usageStatistics();\n  }\n};\n\nlet statsJob;\n\nconst registered = new Set();\n\n/**\n * @polymerMixin\n * @mixes DirMixin\n */\nexport const ElementMixin = superClass => class VaadinElementMixin extends DirMixin(superClass) {\n  /** @protected */\n  static finalize() {\n    super.finalize();\n\n    const {is} = this;\n\n    // Registers a class prototype for telemetry purposes.\n    if (is && !registered.has(is)) {\n      window.Vaadin.registrations.push(this);\n      registered.add(is);\n\n      if (window.Vaadin.developmentModeCallback) {\n        statsJob = Debouncer.debounce(statsJob,\n          idlePeriod, () => {\n            window.Vaadin.developmentModeCallback['vaadin-usage-statistics']();\n          }\n        );\n        enqueueDebouncer(statsJob);\n      }\n    }\n  }\n\n  constructor() {\n    super();\n    if (document.doctype === null) {\n      console.warn(\n        'Vaadin components require the \"standards mode\" declaration. Please add <!DOCTYPE html> to the HTML document.'\n      );\n    }\n  }\n};\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-usage-statistics@2.1.0/node_modules/@vaadin/vaadin-usage-statistics/vaadin-usage-statistics.js",
       "source": "export * from './vaadin-usage-statistics-collect.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-usage-statistics@2.1.0/node_modules/@vaadin/vaadin-usage-statistics/vaadin-usage-statistics-collect.js",
       "source": "/* This file is autogenerated from src/vaadin-usage-statistics.tpl.html */\n/*\n\nThis script gathers usage statistics from the application running in development mode.\n\nStatistics gathering is automatically disabled and excluded from production builds.\n\nFor details and to opt-out, see https://github.com/vaadin/vaadin-usage-statistics.\n\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\nimport { runIfDevelopmentMode } from '@vaadin/vaadin-development-mode-detector/vaadin-development-mode-detector.js';\n\nfunction maybeGatherAndSendStats() {\n  /** vaadin-dev-mode:start\n  (function () {\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar getPolymerVersion = function getPolymerVersion() {\n  return window.Polymer && window.Polymer.version;\n};\n\nvar StatisticsGatherer = function () {\n  function StatisticsGatherer(logger) {\n    classCallCheck(this, StatisticsGatherer);\n\n    this.now = new Date().getTime();\n    this.logger = logger;\n  }\n\n  createClass(StatisticsGatherer, [{\n    key: 'frameworkVersionDetectors',\n    value: function frameworkVersionDetectors() {\n      return {\n        'Flow': function Flow() {\n          if (window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients) {\n            var flowVersions = Object.keys(window.Vaadin.Flow.clients).map(function (key) {\n              return window.Vaadin.Flow.clients[key];\n            }).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().flow;\n            });\n            if (flowVersions.length > 0) {\n              return flowVersions[0];\n            }\n          }\n        },\n        'Vaadin Framework': function VaadinFramework() {\n          if (window.vaadin && window.vaadin.clients) {\n            var frameworkVersions = Object.values(window.vaadin.clients).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().vaadinVersion;\n            });\n            if (frameworkVersions.length > 0) {\n              return frameworkVersions[0];\n            }\n          }\n        },\n        'AngularJs': function AngularJs() {\n          if (window.angular && window.angular.version && window.angular.version) {\n            return window.angular.version.full;\n          }\n        },\n        'Angular': function Angular() {\n          if (window.ng) {\n            var tags = document.querySelectorAll(\"[ng-version]\");\n            if (tags.length > 0) {\n              return tags[0].getAttribute(\"ng-version\");\n            }\n            return \"Unknown\";\n          }\n        },\n        'Backbone.js': function BackboneJs() {\n          if (window.Backbone) {\n            return window.Backbone.VERSION;\n          }\n        },\n        'React': function React() {\n          var reactSelector = '[data-reactroot], [data-reactid]';\n          if (!!document.querySelector(reactSelector)) {\n            // React does not publish the version by default\n            return \"unknown\";\n          }\n        },\n        'Ember': function Ember() {\n          if (window.Em && window.Em.VERSION) {\n            return window.Em.VERSION;\n          } else if (window.Ember && window.Ember.VERSION) {\n            return window.Ember.VERSION;\n          }\n        },\n        'jQuery': function (_jQuery) {\n          function jQuery() {\n            return _jQuery.apply(this, arguments);\n          }\n\n          jQuery.toString = function () {\n            return _jQuery.toString();\n          };\n\n          return jQuery;\n        }(function () {\n          if (typeof jQuery === 'function' && jQuery.prototype.jquery !== undefined) {\n            return jQuery.prototype.jquery;\n          }\n        }),\n        'Polymer': function Polymer() {\n          var version = getPolymerVersion();\n          if (version) {\n            return version;\n          }\n        },\n        'LitElement': function LitElement() {\n          var version = window.litElementVersions && window.litElementVersions[0];\n          if (version) {\n            return version;\n          }\n        },\n        'LitHtml': function LitHtml() {\n          var version = window.litHtmlVersions && window.litHtmlVersions[0];\n          if (version) {\n            return version;\n          }\n        },\n        'Vue.js': function VueJs() {\n          if (window.Vue) {\n            return window.Vue.version;\n          }\n        }\n      };\n    }\n  }, {\n    key: 'getUsedVaadinElements',\n    value: function getUsedVaadinElements(elements) {\n      var version = getPolymerVersion();\n      var elementClasses = void 0;\n      // NOTE: In case you edit the code here, YOU MUST UPDATE any statistics reporting code in Flow.\n      // Check all locations calling the method getEntries() in\n      // https://github.com/vaadin/flow/blob/master/flow-server/src/main/java/com/vaadin/flow/internal/UsageStatistics.java#L106\n      // Currently it is only used by BootstrapHandler.\n      if (version && version.indexOf('2') === 0) {\n        // Polymer 2: components classes are stored in window.Vaadin\n        elementClasses = Object.keys(window.Vaadin).map(function (c) {\n          return window.Vaadin[c];\n        }).filter(function (c) {\n          return c.is;\n        });\n      } else {\n        // Polymer 3: components classes are stored in window.Vaadin.registrations\n        elementClasses = window.Vaadin.registrations || [];\n      }\n      elementClasses.forEach(function (klass) {\n        var version = klass.version ? klass.version : \"0.0.0\";\n        elements[klass.is] = { version: version };\n      });\n    }\n  }, {\n    key: 'getUsedVaadinThemes',\n    value: function getUsedVaadinThemes(themes) {\n      ['Lumo', 'Material'].forEach(function (themeName) {\n        var theme;\n        var version = getPolymerVersion();\n        if (version && version.indexOf('2') === 0) {\n          // Polymer 2: themes are stored in window.Vaadin\n          theme = window.Vaadin[themeName];\n        } else {\n          // Polymer 3: themes are stored in custom element registry\n          theme = customElements.get('vaadin-' + themeName.toLowerCase() + '-styles');\n        }\n        if (theme && theme.version) {\n          themes[themeName] = { version: theme.version };\n        }\n      });\n    }\n  }, {\n    key: 'getFrameworks',\n    value: function getFrameworks(frameworks) {\n      var detectors = this.frameworkVersionDetectors();\n      Object.keys(detectors).forEach(function (framework) {\n        var detector = detectors[framework];\n        try {\n          var version = detector();\n          if (version) {\n            frameworks[framework] = { version: version };\n          }\n        } catch (e) {}\n      });\n    }\n  }, {\n    key: 'gather',\n    value: function gather(storage) {\n      var storedStats = storage.read();\n      var gatheredStats = {};\n      var types = [\"elements\", \"frameworks\", \"themes\"];\n\n      types.forEach(function (type) {\n        gatheredStats[type] = {};\n        if (!storedStats[type]) {\n          storedStats[type] = {};\n        }\n      });\n\n      var previousStats = JSON.stringify(storedStats);\n\n      this.getUsedVaadinElements(gatheredStats.elements);\n      this.getFrameworks(gatheredStats.frameworks);\n      this.getUsedVaadinThemes(gatheredStats.themes);\n\n      var now = this.now;\n      types.forEach(function (type) {\n        var keys = Object.keys(gatheredStats[type]);\n        keys.forEach(function (key) {\n          if (!storedStats[type][key] || _typeof(storedStats[type][key]) != _typeof({})) {\n            storedStats[type][key] = { firstUsed: now };\n          }\n          // Discards any previously logged version number\n          storedStats[type][key].version = gatheredStats[type][key].version;\n          storedStats[type][key].lastUsed = now;\n        });\n      });\n\n      var newStats = JSON.stringify(storedStats);\n      storage.write(newStats);\n      if (newStats != previousStats && Object.keys(storedStats).length > 0) {\n        this.logger.debug(\"New stats: \" + newStats);\n      }\n    }\n  }]);\n  return StatisticsGatherer;\n}();\n\nvar StatisticsStorage = function () {\n  function StatisticsStorage(key) {\n    classCallCheck(this, StatisticsStorage);\n\n    this.key = key;\n  }\n\n  createClass(StatisticsStorage, [{\n    key: 'read',\n    value: function read() {\n      var localStorageStatsString = localStorage.getItem(this.key);\n      try {\n        return JSON.parse(localStorageStatsString ? localStorageStatsString : '{}');\n      } catch (e) {\n        return {};\n      }\n    }\n  }, {\n    key: 'write',\n    value: function write(data) {\n      localStorage.setItem(this.key, data);\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      localStorage.removeItem(this.key);\n    }\n  }, {\n    key: 'isEmpty',\n    value: function isEmpty() {\n      var storedStats = this.read();\n      var empty = true;\n      Object.keys(storedStats).forEach(function (key) {\n        if (Object.keys(storedStats[key]).length > 0) {\n          empty = false;\n        }\n      });\n\n      return empty;\n    }\n  }]);\n  return StatisticsStorage;\n}();\n\nvar StatisticsSender = function () {\n  function StatisticsSender(url, logger) {\n    classCallCheck(this, StatisticsSender);\n\n    this.url = url;\n    this.logger = logger;\n  }\n\n  createClass(StatisticsSender, [{\n    key: 'send',\n    value: function send(data, errorHandler) {\n      var logger = this.logger;\n\n      if (navigator.onLine === false) {\n        logger.debug(\"Offline, can't send\");\n        errorHandler();\n        return;\n      }\n      logger.debug(\"Sending data to \" + this.url);\n\n      var req = new XMLHttpRequest();\n      req.withCredentials = true;\n      req.addEventListener(\"load\", function () {\n        // Stats sent, nothing more to do\n        logger.debug(\"Response: \" + req.responseText);\n      });\n      req.addEventListener(\"error\", function () {\n        logger.debug(\"Send failed\");\n        errorHandler();\n      });\n      req.addEventListener(\"abort\", function () {\n        logger.debug(\"Send aborted\");\n        errorHandler();\n      });\n      req.open(\"POST\", this.url);\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n      req.send(data);\n    }\n  }]);\n  return StatisticsSender;\n}();\n\nvar StatisticsLogger = function () {\n  function StatisticsLogger(id) {\n    classCallCheck(this, StatisticsLogger);\n\n    this.id = id;\n  }\n\n  createClass(StatisticsLogger, [{\n    key: '_isDebug',\n    value: function _isDebug() {\n      return localStorage.getItem(\"vaadin.\" + this.id + \".debug\");\n    }\n  }, {\n    key: 'debug',\n    value: function debug(msg) {\n      if (this._isDebug()) {\n        console.info(this.id + \": \" + msg);\n      }\n    }\n  }]);\n  return StatisticsLogger;\n}();\n\nvar UsageStatistics = function () {\n  function UsageStatistics() {\n    classCallCheck(this, UsageStatistics);\n\n    this.now = new Date();\n    this.timeNow = this.now.getTime();\n    this.gatherDelay = 10; // Delay between loading this file and gathering stats\n    this.initialDelay = 24 * 60 * 60;\n\n    this.logger = new StatisticsLogger(\"statistics\");\n    this.storage = new StatisticsStorage(\"vaadin.statistics.basket\");\n    this.gatherer = new StatisticsGatherer(this.logger);\n    this.sender = new StatisticsSender(\"https://tools.vaadin.com/usage-stats/submit\", this.logger);\n  }\n\n  createClass(UsageStatistics, [{\n    key: 'maybeGatherAndSend',\n    value: function maybeGatherAndSend() {\n      var _this = this;\n\n      if (localStorage.getItem(UsageStatistics.optOutKey)) {\n        return;\n      }\n      this.gatherer.gather(this.storage);\n      setTimeout(function () {\n        _this.maybeSend();\n      }, this.gatherDelay * 1000);\n    }\n  }, {\n    key: 'lottery',\n    value: function lottery() {\n      return true;\n    }\n  }, {\n    key: 'currentMonth',\n    value: function currentMonth() {\n      return this.now.getYear() * 12 + this.now.getMonth();\n    }\n  }, {\n    key: 'maybeSend',\n    value: function maybeSend() {\n      var firstUse = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      var monthProcessed = Number(localStorage.getItem(UsageStatistics.monthProcessedKey));\n\n      if (!firstUse) {\n        // Use a grace period to avoid interfering with tests, incognito mode etc\n        firstUse = this.timeNow;\n        localStorage.setItem(UsageStatistics.firstUseKey, firstUse);\n      }\n\n      if (this.timeNow < firstUse + this.initialDelay * 1000) {\n        this.logger.debug(\"No statistics will be sent until the initial delay of \" + this.initialDelay + \"s has passed\");\n        return;\n      }\n      if (this.currentMonth() <= monthProcessed) {\n        this.logger.debug(\"This month has already been processed\");\n        return;\n      }\n      localStorage.setItem(UsageStatistics.monthProcessedKey, this.currentMonth());\n      // Use random sampling\n      if (this.lottery()) {\n        this.logger.debug(\"Congratulations, we have a winner!\");\n      } else {\n        this.logger.debug(\"Sorry, no stats from you this time\");\n        return;\n      }\n\n      this.send();\n    }\n  }, {\n    key: 'send',\n    value: function send() {\n      // Ensure we have the latest data\n      this.gatherer.gather(this.storage);\n\n      // Read, send and clean up\n      var data = this.storage.read();\n      data[\"firstUse\"] = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      data[\"usageStatisticsVersion\"] = UsageStatistics.version;\n      var info = 'This request contains usage statistics gathered from the application running in development mode. \\n\\nStatistics gathering is automatically disabled and excluded from production builds.\\n\\nFor details and to opt-out, see https://github.com/vaadin/vaadin-usage-statistics.\\n\\n\\n\\n';\n      var self = this;\n      this.sender.send(info + JSON.stringify(data), function () {\n        // Revert the 'month processed' flag\n        localStorage.setItem(UsageStatistics.monthProcessedKey, self.currentMonth() - 1);\n      });\n    }\n  }], [{\n    key: 'version',\n    get: function get$1() {\n      return '2.1.0';\n    }\n  }, {\n    key: 'firstUseKey',\n    get: function get$1() {\n      return 'vaadin.statistics.firstuse';\n    }\n  }, {\n    key: 'monthProcessedKey',\n    get: function get$1() {\n      return 'vaadin.statistics.monthProcessed';\n    }\n  }, {\n    key: 'optOutKey',\n    get: function get$1() {\n      return 'vaadin.statistics.optout';\n    }\n  }]);\n  return UsageStatistics;\n}();\n\ntry {\n  window.Vaadin = window.Vaadin || {};\n  window.Vaadin.usageStatsChecker = window.Vaadin.usageStatsChecker || new UsageStatistics();\n  window.Vaadin.usageStatsChecker.maybeGatherAndSend();\n} catch (e) {\n  // Intentionally ignored as this is not a problem in the app being developed\n}\n\n}());\n\n  vaadin-dev-mode:end **/\n}\n\nexport const usageStatistics = function() {\n  if (typeof runIfDevelopmentMode === 'function') {\n    return runIfDevelopmentMode(maybeGatherAndSendStats);\n  }\n};\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-development-mode-detector@2.0.4/node_modules/@vaadin/vaadin-development-mode-detector/vaadin-development-mode-detector.js",
       "source": "const DEV_MODE_CODE_REGEXP =\n  /\\/\\*\\*\\s+vaadin-dev-mode:start([\\s\\S]*)vaadin-dev-mode:end\\s+\\*\\*\\//i;\n\nconst FlowClients = window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients;\n\nfunction isMinified() {\n  function test() {\n    /** vaadin-dev-mode:start\n    return false;\n    vaadin-dev-mode:end **/\n    return true;\n  }\n  return uncommentAndRun(test);\n}\n\nfunction isDevelopmentMode() {\n  try {\n    if (isForcedDevelopmentMode()) {\n      return true;\n    }\n\n    if (!isLocalhost()) {\n      return false;\n    }\n\n    if (FlowClients) {\n      return !isFlowProductionMode();\n    }\n\n    return !isMinified();\n  } catch (e) {\n    // Some error in this code, assume production so no further actions will be taken\n    return false;\n  }\n}\n\nfunction isForcedDevelopmentMode() {\n  return localStorage.getItem(\"vaadin.developmentmode.force\");\n}\n\nfunction isLocalhost() {\n  return ([\"localhost\",\"127.0.0.1\"].indexOf(window.location.hostname) >= 0);\n}\n\nfunction isFlowProductionMode() {\n  if (FlowClients) {\n    const productionModeApps = Object.keys(FlowClients)\n      .map(key => FlowClients[key])\n      .filter(client => client.productionMode);\n    if (productionModeApps.length > 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction uncommentAndRun(callback, args) {\n  if (typeof callback !== 'function') {\n    return;\n  }\n\n  const match = DEV_MODE_CODE_REGEXP.exec(callback.toString());\n  if (match) {\n    try {\n      // requires CSP: script-src 'unsafe-eval'\n      callback = new Function(match[1]);\n    } catch (e) {\n      // eat the exception\n      console.log('vaadin-development-mode-detector: uncommentAndRun() failed', e)\n    }\n  }\n\n  return callback(args);\n}\n\n// A guard against polymer-modulizer removing the window.Vaadin\n// initialization above.\nwindow['Vaadin'] = window['Vaadin'] || {};\n\n/**\n * Inspects the source code of the given `callback` function for\n * specially-marked _commented_ code. If such commented code is found in the\n * callback source, uncomments and runs that code instead of the callback\n * itself. Otherwise runs the callback as is.\n *\n * The optional arguments are passed into the callback / uncommented code,\n * the result is returned.\n *\n * See the `isMinified()` function source code in this file for an example.\n *\n */\nexport const runIfDevelopmentMode = function(callback, args) {\n  if (window.Vaadin.developmentMode) {\n    return uncommentAndRun(callback, args);\n  }\n};\n\nif (window.Vaadin.developmentMode === undefined) {\n  window.Vaadin.developmentMode = isDevelopmentMode();\n}\n"
      }
     ]
    },
    {
     "id": 21,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/utils/debounce.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\nimport './mixin.js';\nimport './async.js';\n\n/**\n * @summary Collapse multiple callbacks into one invocation after a timer.\n */\nexport class Debouncer {\n  constructor() {\n    this._asyncModule = null;\n    this._callback = null;\n    this._timer = null;\n  }\n  /**\n   * Sets the scheduler; that is, a module with the Async interface,\n   * a callback and optional arguments to be passed to the run function\n   * from the async module.\n   *\n   * @param {!AsyncInterface} asyncModule Object with Async interface.\n   * @param {function()} callback Callback to run.\n   * @return {void}\n   */\n  setConfig(asyncModule, callback) {\n    this._asyncModule = asyncModule;\n    this._callback = callback;\n    this._timer = this._asyncModule.run(() => {\n      this._timer = null;\n      debouncerQueue.delete(this);\n      this._callback();\n    });\n  }\n  /**\n   * Cancels an active debouncer and returns a reference to itself.\n   *\n   * @return {void}\n   */\n  cancel() {\n    if (this.isActive()) {\n      this._cancelAsync();\n      // Canceling a debouncer removes its spot from the flush queue,\n      // so if a debouncer is manually canceled and re-debounced, it\n      // will reset its flush order (this is a very minor difference from 1.x)\n      // Re-debouncing via the `debounce` API retains the 1.x FIFO flush order\n      debouncerQueue.delete(this);\n    }\n  }\n  /**\n   * Cancels a debouncer's async callback.\n   *\n   * @return {void}\n   */\n  _cancelAsync() {\n    if (this.isActive()) {\n      this._asyncModule.cancel(/** @type {number} */(this._timer));\n      this._timer = null;\n    }\n  }\n  /**\n   * Flushes an active debouncer and returns a reference to itself.\n   *\n   * @return {void}\n   */\n  flush() {\n    if (this.isActive()) {\n      this.cancel();\n      this._callback();\n    }\n  }\n  /**\n   * Returns true if the debouncer is active.\n   *\n   * @return {boolean} True if active.\n   */\n  isActive() {\n    return this._timer != null;\n  }\n  /**\n   * Creates a debouncer if no debouncer is passed as a parameter\n   * or it cancels an active debouncer otherwise. The following\n   * example shows how a debouncer can be called multiple times within a\n   * microtask and \"debounced\" such that the provided callback function is\n   * called once. Add this method to a custom element:\n   *\n   * ```js\n   * import {microTask} from '@polymer/polymer/lib/utils/async.js';\n   * import {Debouncer} from '@polymer/polymer/lib/utils/debounce.js';\n   * // ...\n   *\n   * _debounceWork() {\n   *   this._debounceJob = Debouncer.debounce(this._debounceJob,\n   *       microTask, () => this._doWork());\n   * }\n   * ```\n   *\n   * If the `_debounceWork` method is called multiple times within the same\n   * microtask, the `_doWork` function will be called only once at the next\n   * microtask checkpoint.\n   *\n   * Note: In testing it is often convenient to avoid asynchrony. To accomplish\n   * this with a debouncer, you can use `enqueueDebouncer` and\n   * `flush`. For example, extend the above example by adding\n   * `enqueueDebouncer(this._debounceJob)` at the end of the\n   * `_debounceWork` method. Then in a test, call `flush` to ensure\n   * the debouncer has completed.\n   *\n   * @param {Debouncer?} debouncer Debouncer object.\n   * @param {!AsyncInterface} asyncModule Object with Async interface\n   * @param {function()} callback Callback to run.\n   * @return {!Debouncer} Returns a debouncer object.\n   */\n  static debounce(debouncer, asyncModule, callback) {\n    if (debouncer instanceof Debouncer) {\n      // Cancel the async callback, but leave in debouncerQueue if it was\n      // enqueued, to maintain 1.x flush order\n      debouncer._cancelAsync();\n    } else {\n      debouncer = new Debouncer();\n    }\n    debouncer.setConfig(asyncModule, callback);\n    return debouncer;\n  }\n}\n\nlet debouncerQueue = new Set();\n\n/**\n * Adds a `Debouncer` to a list of globally flushable tasks.\n *\n * @param {!Debouncer} debouncer Debouncer to enqueue\n * @return {void}\n */\nexport const enqueueDebouncer = function(debouncer) {\n  debouncerQueue.add(debouncer);\n};\n\n/**\n * Flushes any enqueued debouncers\n *\n * @return {boolean} Returns whether any debouncers were flushed\n */\nexport const flushDebouncers = function() {\n  const didFlush = Boolean(debouncerQueue.size);\n  // If new debouncers are added while flushing, Set.forEach will ensure\n  // newly added ones are also flushed\n  debouncerQueue.forEach(debouncer => {\n    try {\n      debouncer.flush();\n    } catch(e) {\n      setTimeout(() => {\n        throw e;\n      });\n    }\n  });\n  return didFlush;\n};"
    },
    {
     "id": 22,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/utils/async.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * @fileoverview\n *\n * This module provides a number of strategies for enqueuing asynchronous\n * tasks. Each sub-module provides a standard `run(fn)` interface that returns a\n * handle, and a `cancel(handle)` interface for canceling async tasks before\n * they run.\n *\n * @summary Module that provides a number of strategies for enqueuing\n * asynchronous tasks.\n */\n\nimport './boot.js';\n\n// Microtask implemented using Mutation Observer\nlet microtaskCurrHandle = 0;\nlet microtaskLastHandle = 0;\nlet microtaskCallbacks = [];\nlet microtaskNodeContent = 0;\nlet microtaskNode = document.createTextNode('');\nnew window.MutationObserver(microtaskFlush).observe(microtaskNode, {characterData: true});\n\nfunction microtaskFlush() {\n  const len = microtaskCallbacks.length;\n  for (let i = 0; i < len; i++) {\n    let cb = microtaskCallbacks[i];\n    if (cb) {\n      try {\n        cb();\n      } catch (e) {\n        setTimeout(() => { throw e; });\n      }\n    }\n  }\n  microtaskCallbacks.splice(0, len);\n  microtaskLastHandle += len;\n}\n\n/**\n * Async interface wrapper around `setTimeout`.\n *\n * @namespace\n * @summary Async interface wrapper around `setTimeout`.\n */\nconst timeOut = {\n  /**\n   * Returns a sub-module with the async interface providing the provided\n   * delay.\n   *\n   * @memberof timeOut\n   * @param {number=} delay Time to wait before calling callbacks in ms\n   * @return {!AsyncInterface} An async timeout interface\n   */\n  after(delay) {\n    return {\n      run(fn) { return window.setTimeout(fn, delay); },\n      cancel(handle) {\n        window.clearTimeout(handle);\n      }\n    };\n  },\n  /**\n   * Enqueues a function called in the next task.\n   *\n   * @memberof timeOut\n   * @param {!Function} fn Callback to run\n   * @param {number=} delay Delay in milliseconds\n   * @return {number} Handle used for canceling task\n   */\n  run(fn, delay) {\n    return window.setTimeout(fn, delay);\n  },\n  /**\n   * Cancels a previously enqueued `timeOut` callback.\n   *\n   * @memberof timeOut\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.clearTimeout(handle);\n  }\n};\nexport {timeOut};\n\n/**\n * Async interface wrapper around `requestAnimationFrame`.\n *\n * @namespace\n * @summary Async interface wrapper around `requestAnimationFrame`.\n */\nconst animationFrame = {\n  /**\n   * Enqueues a function called at `requestAnimationFrame` timing.\n   *\n   * @memberof animationFrame\n   * @param {function(number):void} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestAnimationFrame(fn);\n  },\n  /**\n   * Cancels a previously enqueued `animationFrame` callback.\n   *\n   * @memberof animationFrame\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.cancelAnimationFrame(handle);\n  }\n};\nexport {animationFrame};\n\n/**\n * Async interface wrapper around `requestIdleCallback`.  Falls back to\n * `setTimeout` on browsers that do not support `requestIdleCallback`.\n *\n * @namespace\n * @summary Async interface wrapper around `requestIdleCallback`.\n */\nconst idlePeriod = {\n  /**\n   * Enqueues a function called at `requestIdleCallback` timing.\n   *\n   * @memberof idlePeriod\n   * @param {function(!IdleDeadline):void} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestIdleCallback ?\n      window.requestIdleCallback(fn) :\n      window.setTimeout(fn, 16);\n  },\n  /**\n   * Cancels a previously enqueued `idlePeriod` callback.\n   *\n   * @memberof idlePeriod\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.cancelIdleCallback ?\n      window.cancelIdleCallback(handle) :\n      window.clearTimeout(handle);\n  }\n};\nexport {idlePeriod};\n\n/**\n * Async interface for enqueuing callbacks that run at microtask timing.\n *\n * Note that microtask timing is achieved via a single `MutationObserver`,\n * and thus callbacks enqueued with this API will all run in a single\n * batch, and not interleaved with other microtasks such as promises.\n * Promises are avoided as an implementation choice for the time being\n * due to Safari bugs that cause Promises to lack microtask guarantees.\n *\n * @namespace\n * @summary Async interface for enqueuing callbacks that run at microtask\n *   timing.\n */\nconst microTask = {\n\n  /**\n   * Enqueues a function called at microtask timing.\n   *\n   * @memberof microTask\n   * @param {!Function=} callback Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(callback) {\n    microtaskNode.textContent = microtaskNodeContent++;\n    microtaskCallbacks.push(callback);\n    return microtaskCurrHandle++;\n  },\n\n  /**\n   * Cancels a previously enqueued `microTask` callback.\n   *\n   * @memberof microTask\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    const idx = handle - microtaskLastHandle;\n    if (idx >= 0) {\n      if (!microtaskCallbacks[idx]) {\n        throw new Error('invalid async handle: ' + handle);\n      }\n      microtaskCallbacks[idx] = null;\n    }\n  }\n\n};\nexport {microTask};\n"
    },
    {
     "id": 23,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-lumo-styles@1.6.1/node_modules/@vaadin/vaadin-lumo-styles/style.js",
     "source": "import './version.js';\nimport '@polymer/polymer/lib/elements/custom-style.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<custom-style>\n  <style>\n    html {\n      /* Border radius */\n      --lumo-border-radius-s: 0.25em; /* Checkbox, badge, date-picker year indicator, etc */\n      --lumo-border-radius-m: var(--lumo-border-radius, 0.25em); /* Button, text field, menu overlay, etc */\n      --lumo-border-radius-l: 0.5em; /* Dialog, notification, etc */\n      --lumo-border-radius: 0.25em; /* Deprecated */\n\n      /* Shadow */\n      --lumo-box-shadow-xs: 0 1px 4px -1px var(--lumo-shade-50pct);\n      --lumo-box-shadow-s: 0 2px 4px -1px var(--lumo-shade-20pct), 0 3px 12px -1px var(--lumo-shade-30pct);\n      --lumo-box-shadow-m: 0 2px 6px -1px var(--lumo-shade-20pct), 0 8px 24px -4px var(--lumo-shade-40pct);\n      --lumo-box-shadow-l: 0 3px 18px -2px var(--lumo-shade-20pct), 0 12px 48px -6px var(--lumo-shade-40pct);\n      --lumo-box-shadow-xl: 0 4px 24px -3px var(--lumo-shade-20pct), 0 18px 64px -8px var(--lumo-shade-40pct);\n\n      /* Clickable element cursor */\n      --lumo-clickable-cursor: default;\n    }\n  </style>\n</custom-style>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
    },
    {
     "id": 24,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/utils/boot.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/* eslint-disable no-unused-vars */\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is replaced by the munged name for object[property]\n * We cannot alias this function, so we have to use a small shim that has the same behavior when not compiling.\n *\n * @param {string} prop Property name\n * @param {?Object} obj Reference object\n * @return {string} Potentially renamed property name\n */\nwindow.JSCompiler_renameProperty = function(prop, obj) {\n  return prop;\n};\n/* eslint-enable */\n\nexport {};\n"
    },
    {
     "id": 25,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-lumo-styles@1.6.1/node_modules/@vaadin/vaadin-lumo-styles/sizing.js",
     "source": "import './version.js';\nimport '@polymer/polymer/lib/elements/custom-style.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<custom-style>\n  <style>\n    html {\n      --lumo-size-xs: 1.625rem;\n      --lumo-size-s: 1.875rem;\n      --lumo-size-m: 2.25rem;\n      --lumo-size-l: 2.75rem;\n      --lumo-size-xl: 3.5rem;\n\n      /* Icons */\n      --lumo-icon-size-s: 1.25em;\n      --lumo-icon-size-m: 1.5em;\n      --lumo-icon-size-l: 2.25em;\n      /* For backwards compatibility */\n      --lumo-icon-size: var(--lumo-icon-size-m);\n    }\n  </style>\n</custom-style>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
    },
    {
     "id": 26,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-lumo-styles@1.6.1/node_modules/@vaadin/vaadin-lumo-styles/typography.js",
     "source": "import './version.js';\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport '@polymer/polymer/lib/elements/dom-module.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<custom-style>\n  <style>\n    html {\n      /* Font families */\n      --lumo-font-family: -apple-system, BlinkMacSystemFont, \"Roboto\", \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n\n      /* Font sizes */\n      --lumo-font-size-xxs: .75rem;\n      --lumo-font-size-xs: .8125rem;\n      --lumo-font-size-s: .875rem;\n      --lumo-font-size-m: 1rem;\n      --lumo-font-size-l: 1.125rem;\n      --lumo-font-size-xl: 1.375rem;\n      --lumo-font-size-xxl: 1.75rem;\n      --lumo-font-size-xxxl: 2.5rem;\n\n      /* Line heights */\n      --lumo-line-height-xs: 1.25;\n      --lumo-line-height-s: 1.375;\n      --lumo-line-height-m: 1.625;\n    }\n\n  </style>\n</custom-style><dom-module id=\"lumo-typography\">\n  <template>\n    <style>\n      html {\n        font-family: var(--lumo-font-family);\n        font-size: var(--lumo-font-size, var(--lumo-font-size-m));\n        line-height: var(--lumo-line-height-m);\n        -webkit-text-size-adjust: 100%;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n      }\n\n      /* Can’t combine with the above selector because that doesn’t work in browsers without native shadow dom */\n      :host {\n        font-family: var(--lumo-font-family);\n        font-size: var(--lumo-font-size, var(--lumo-font-size-m));\n        line-height: var(--lumo-line-height-m);\n        -webkit-text-size-adjust: 100%;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n      }\n\n      small,\n      [theme~=\"font-size-s\"] {\n        font-size: var(--lumo-font-size-s);\n        line-height: var(--lumo-line-height-s);\n      }\n\n      [theme~=\"font-size-xs\"] {\n        font-size: var(--lumo-font-size-xs);\n        line-height: var(--lumo-line-height-xs);\n      }\n\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        font-weight: 600;\n        line-height: var(--lumo-line-height-xs);\n        margin-top: 1.25em;\n      }\n\n      h1 {\n        font-size: var(--lumo-font-size-xxxl);\n        margin-bottom: 0.75em;\n      }\n\n      h2 {\n        font-size: var(--lumo-font-size-xxl);\n        margin-bottom: 0.5em;\n      }\n\n      h3 {\n        font-size: var(--lumo-font-size-xl);\n        margin-bottom: 0.5em;\n      }\n\n      h4 {\n        font-size: var(--lumo-font-size-l);\n        margin-bottom: 0.5em;\n      }\n\n      h5 {\n        font-size: var(--lumo-font-size-m);\n        margin-bottom: 0.25em;\n      }\n\n      h6 {\n        font-size: var(--lumo-font-size-xs);\n        margin-bottom: 0;\n        text-transform: uppercase;\n        letter-spacing: 0.03em;\n      }\n\n      p,\n      blockquote {\n        margin-top: 0.5em;\n        margin-bottom: 0.75em;\n      }\n\n      a {\n        text-decoration: none;\n      }\n\n      a:hover {\n        text-decoration: underline;\n      }\n\n      hr {\n        display: block;\n        align-self: stretch;\n        height: 1px;\n        border: 0;\n        padding: 0;\n        margin: var(--lumo-space-s) calc(var(--lumo-border-radius-m) / 2);\n        background-color: var(--lumo-contrast-10pct);\n      }\n\n      blockquote {\n        border-left: 2px solid var(--lumo-contrast-30pct);\n      }\n\n      b,\n      strong {\n        font-weight: 600;\n      }\n\n      /* RTL specific styles */\n\n      blockquote[dir=\"rtl\"] {\n        border-left: none;\n        border-right: 2px solid var(--lumo-contrast-30pct);\n      }\n\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
    },
    {
     "id": 27,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/utils/flattened-nodes-observer.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\nimport { calculateSplices } from './array-splice.js';\nimport { microTask } from './async.js';\nimport { wrap } from './wrap.js';\n\n/**\n * Returns true if `node` is a slot element\n * @param {!Node} node Node to test.\n * @return {boolean} Returns true if the given `node` is a slot\n * @private\n */\nfunction isSlot(node) {\n  return (node.localName === 'slot');\n}\n\n/**\n * Class that listens for changes (additions or removals) to\n * \"flattened nodes\" on a given `node`. The list of flattened nodes consists\n * of a node's children and, for any children that are `<slot>` elements,\n * the expanded flattened list of `assignedNodes`.\n * For example, if the observed node has children `<a></a><slot></slot><b></b>`\n * and the `<slot>` has one `<div>` assigned to it, then the flattened\n * nodes list is `<a></a><div></div><b></b>`. If the `<slot>` has other\n * `<slot>` elements assigned to it, these are flattened as well.\n *\n * The provided `callback` is called whenever any change to this list\n * of flattened nodes occurs, where an addition or removal of a node is\n * considered a change. The `callback` is called with one argument, an object\n * containing an array of any `addedNodes` and `removedNodes`.\n *\n * Note: the callback is called asynchronous to any changes\n * at a microtask checkpoint. This is because observation is performed using\n * `MutationObserver` and the `<slot>` element's `slotchange` event which\n * are asynchronous.\n *\n * An example:\n * ```js\n * class TestSelfObserve extends PolymerElement {\n *   static get is() { return 'test-self-observe';}\n *   connectedCallback() {\n *     super.connectedCallback();\n *     this._observer = new FlattenedNodesObserver(this, (info) => {\n *       this.info = info;\n *     });\n *   }\n *   disconnectedCallback() {\n *     super.disconnectedCallback();\n *     this._observer.disconnect();\n *   }\n * }\n * customElements.define(TestSelfObserve.is, TestSelfObserve);\n * ```\n *\n * @summary Class that listens for changes (additions or removals) to\n * \"flattened nodes\" on a given `node`.\n * @implements {PolymerDomApi.ObserveHandle}\n */\nexport let FlattenedNodesObserver = class {\n\n  /**\n   * Returns the list of flattened nodes for the given `node`.\n   * This list consists of a node's children and, for any children\n   * that are `<slot>` elements, the expanded flattened list of `assignedNodes`.\n   * For example, if the observed node has children `<a></a><slot></slot><b></b>`\n   * and the `<slot>` has one `<div>` assigned to it, then the flattened\n   * nodes list is `<a></a><div></div><b></b>`. If the `<slot>` has other\n   * `<slot>` elements assigned to it, these are flattened as well.\n   *\n   * @param {!HTMLElement|!HTMLSlotElement} node The node for which to\n   *      return the list of flattened nodes.\n   * @return {!Array<!Node>} The list of flattened nodes for the given `node`.\n   * @nocollapse See https://github.com/google/closure-compiler/issues/2763\n   */\n  // eslint-disable-next-line\n  static getFlattenedNodes(node) {\n    const wrapped = wrap(node);\n    if (isSlot(node)) {\n      node = /** @type {!HTMLSlotElement} */(node); // eslint-disable-line no-self-assign\n      return wrapped.assignedNodes({flatten: true});\n    } else {\n      return Array.from(wrapped.childNodes).map((node) => {\n        if (isSlot(node)) {\n          node = /** @type {!HTMLSlotElement} */(node); // eslint-disable-line no-self-assign\n          return wrap(node).assignedNodes({flatten: true});\n        } else {\n          return [node];\n        }\n      }).reduce((a, b) => a.concat(b), []);\n    }\n  }\n\n  /**\n   * @param {!HTMLElement} target Node on which to listen for changes.\n   * @param {?function(this: Element, { target: !HTMLElement, addedNodes: !Array<!Element>, removedNodes: !Array<!Element> }):void} callback Function called when there are additions\n   * or removals from the target's list of flattened nodes.\n   */\n  // eslint-disable-next-line\n  constructor(target, callback) {\n    /**\n     * @type {MutationObserver}\n     * @private\n     */\n    this._shadyChildrenObserver = null;\n    /**\n     * @type {MutationObserver}\n     * @private\n     */\n    this._nativeChildrenObserver = null;\n    this._connected = false;\n    /**\n     * @type {!HTMLElement}\n     * @private\n     */\n    this._target = target;\n    this.callback = callback;\n    this._effectiveNodes = [];\n    this._observer = null;\n    this._scheduled = false;\n    /**\n     * @type {function()}\n     * @private\n     */\n    this._boundSchedule = () => {\n      this._schedule();\n    };\n    this.connect();\n    this._schedule();\n  }\n\n  /**\n   * Activates an observer. This method is automatically called when\n   * a `FlattenedNodesObserver` is created. It should only be called to\n   * re-activate an observer that has been deactivated via the `disconnect` method.\n   *\n   * @return {void}\n   */\n  connect() {\n    if (isSlot(this._target)) {\n      this._listenSlots([this._target]);\n    } else if (wrap(this._target).children) {\n      this._listenSlots(\n          /** @type {!NodeList<!Node>} */ (wrap(this._target).children));\n      if (window.ShadyDOM) {\n        this._shadyChildrenObserver =\n          ShadyDOM.observeChildren(this._target, (mutations) => {\n            this._processMutations(mutations);\n          });\n      } else {\n        this._nativeChildrenObserver =\n          new MutationObserver((mutations) => {\n            this._processMutations(mutations);\n          });\n        this._nativeChildrenObserver.observe(this._target, {childList: true});\n      }\n    }\n    this._connected = true;\n  }\n\n  /**\n   * Deactivates the flattened nodes observer. After calling this method\n   * the observer callback will not be called when changes to flattened nodes\n   * occur. The `connect` method may be subsequently called to reactivate\n   * the observer.\n   *\n   * @return {void}\n   * @override\n   */\n  disconnect() {\n    if (isSlot(this._target)) {\n      this._unlistenSlots([this._target]);\n    } else if (wrap(this._target).children) {\n      this._unlistenSlots(\n          /** @type {!NodeList<!Node>} */ (wrap(this._target).children));\n      if (window.ShadyDOM && this._shadyChildrenObserver) {\n        ShadyDOM.unobserveChildren(this._shadyChildrenObserver);\n        this._shadyChildrenObserver = null;\n      } else if (this._nativeChildrenObserver) {\n        this._nativeChildrenObserver.disconnect();\n        this._nativeChildrenObserver = null;\n      }\n    }\n    this._connected = false;\n  }\n\n  /**\n   * @return {void}\n   * @private\n   */\n  _schedule() {\n    if (!this._scheduled) {\n      this._scheduled = true;\n      microTask.run(() => this.flush());\n    }\n  }\n\n  /**\n   * @param {Array<MutationRecord>} mutations Mutations signaled by the mutation observer\n   * @return {void}\n   * @private\n   */\n  _processMutations(mutations) {\n    this._processSlotMutations(mutations);\n    this.flush();\n  }\n\n  /**\n   * @param {Array<MutationRecord>} mutations Mutations signaled by the mutation observer\n   * @return {void}\n   * @private\n   */\n  _processSlotMutations(mutations) {\n    if (mutations) {\n      for (let i=0; i < mutations.length; i++) {\n        let mutation = mutations[i];\n        if (mutation.addedNodes) {\n          this._listenSlots(mutation.addedNodes);\n        }\n        if (mutation.removedNodes) {\n          this._unlistenSlots(mutation.removedNodes);\n        }\n      }\n    }\n  }\n\n  /**\n   * Flushes the observer causing any pending changes to be immediately\n   * delivered the observer callback. By default these changes are delivered\n   * asynchronously at the next microtask checkpoint.\n   *\n   * @return {boolean} Returns true if any pending changes caused the observer\n   * callback to run.\n   */\n  flush() {\n    if (!this._connected) {\n      return false;\n    }\n    if (window.ShadyDOM) {\n      ShadyDOM.flush();\n    }\n    if (this._nativeChildrenObserver) {\n      this._processSlotMutations(this._nativeChildrenObserver.takeRecords());\n    } else if (this._shadyChildrenObserver) {\n      this._processSlotMutations(this._shadyChildrenObserver.takeRecords());\n    }\n    this._scheduled = false;\n    let info = {\n      target: this._target,\n      addedNodes: [],\n      removedNodes: []\n    };\n    let newNodes = this.constructor.getFlattenedNodes(this._target);\n    let splices = calculateSplices(newNodes,\n      this._effectiveNodes);\n    // process removals\n    for (let i=0, s; (i<splices.length) && (s=splices[i]); i++) {\n      for (let j=0, n; (j < s.removed.length) && (n=s.removed[j]); j++) {\n        info.removedNodes.push(n);\n      }\n    }\n    // process adds\n    for (let i=0, s; (i<splices.length) && (s=splices[i]); i++) {\n      for (let j=s.index; j < s.index + s.addedCount; j++) {\n        info.addedNodes.push(newNodes[j]);\n      }\n    }\n    // update cache\n    this._effectiveNodes = newNodes;\n    let didFlush = false;\n    if (info.addedNodes.length || info.removedNodes.length) {\n      didFlush = true;\n      this.callback.call(this._target, info);\n    }\n    return didFlush;\n  }\n\n  /**\n   * @param {!Array<!Node>|!NodeList<!Node>} nodeList Nodes that could change\n   * @return {void}\n   * @private\n   */\n  _listenSlots(nodeList) {\n    for (let i=0; i < nodeList.length; i++) {\n      let n = nodeList[i];\n      if (isSlot(n)) {\n        n.addEventListener('slotchange', this._boundSchedule);\n      }\n    }\n  }\n\n  /**\n   * @param {!Array<!Node>|!NodeList<!Node>} nodeList Nodes that could change\n   * @return {void}\n   * @private\n   */\n  _unlistenSlots(nodeList) {\n    for (let i=0; i < nodeList.length; i++) {\n      let n = nodeList[i];\n      if (isSlot(n)) {\n        n.removeEventListener('slotchange', this._boundSchedule);\n      }\n    }\n  }\n\n};"
    },
    {
     "id": 28,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-lumo-styles@1.6.1/node_modules/@vaadin/vaadin-lumo-styles/font-icons.js",
     "source": "import '@polymer/polymer/lib/elements/custom-style.js';\nimport './version.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<custom-style>\n  <style>\n    @font-face {\n      font-family: 'lumo-icons';\n      src: url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAABEcAAsAAAAAIiwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAADsAAABUIIslek9TLzIAAAFEAAAAQwAAAFZAIUuKY21hcAAAAYgAAAD4AAADrsCU8d5nbHlmAAACgAAAC2MAABd4h9To2WhlYWQAAA3kAAAAMAAAADZa/6SsaGhlYQAADhQAAAAdAAAAJAbpA35obXR4AAAONAAAABAAAACspBAAAGxvY2EAAA5EAAAAWAAAAFh55IAsbWF4cAAADpwAAAAfAAAAIAFKAXBuYW1lAAAOvAAAATEAAAIuUUJZCHBvc3QAAA/wAAABKwAAAelm8SzVeJxjYGRgYOBiMGCwY2BycfMJYeDLSSzJY5BiYGGAAJA8MpsxJzM9kYEDxgPKsYBpDiBmg4gCACY7BUgAeJxjYGS+yDiBgZWBgamKaQ8DA0MPhGZ8wGDIyAQUZWBlZsAKAtJcUxgcXjG+0mIO+p/FEMUcxDANKMwIkgMABn8MLQB4nO3SWW6DMABF0UtwCEnIPM/zhLK8LqhfXRybSP14XUYtHV9hGYQwQBNIo3cUIPkhQeM7rib1ekqnXg981XuC1qvy84lzojleh3puxL0hPjGjRU473teloEefAUNGjJkwZcacBUtWrNmwZceeA0dOnLlw5cadB09elPGhGf+j0NTI/65KfXerT6JhqKnpRKtgOpuqaTrtKjPUlqHmhto21I7pL6i6hlqY3q7qGWrfUAeGOjTUkaGODXViqFNDnRnq3FAXhro01JWhrg11Y6hbQ90Z6t5QD4Z6NNSToZ4N9WKoV0O9GerdUB+G+jTUl6GWRvkL24BkEXictVh9bFvVFb/nxvbz+7Rf/N6zHcd2bCfP+Wgc1Z9N0jpNnEL6kbRVS6HA2hQYGh9TGR1CbCqa2rXrWOkQE/sHNJgmtZvoVNZqE1B1DNHxzTQxCehUTYiJTQyENui0qSLezr3PduyQfgmRWOfde8+9551z7rnn/O4jLoJ/bRP0UaKQMLFJjpBAvphLZC3Dk0ok7WBzR2/upJs7Ryw/nfFbln/uuN/apCvwrKLrSvUqRufbm5pn0fs0w4gYxnGVP6qHnO4bWiDQGQgwtS6lm3lB3QoX1M2vwEmuzirF39y+Es2+DJ8d1pkyqBIqoze3D1+Zz4DrFoazxI8dWwMrDlZ2DMqQAR9AROsJU+2cmlTPazTco52F1xTa2a2+K8vvq92dVHmtLoPeQX/AZPRYGthDYOeZjBjKoFsVGulR3lWU95WeCK44qHU7MhWUGUKZDT3oKUcG2GWuh+EDDfUYA/jhAhl0TOsJNYSEu7mQmi3UzfXwZKA4BsVsHLXQYGgRW95uEtpJ1Vfn9XiLriRBlFEqxsDjA09yCNUoQxxwd7KWSTt2y3GTKiflqHRSoWZc3m11Wa/fJdFgXD4sSYfleJBKd8GMz7J8dZn/cGRCcKGDnA2Ge3fKzcvlnTDNthGWLXzX/WaXtUAmRgeLlHSr30r0G9UTXMb0AtmwzOoy73fkSlHZkduw/TYuU9cAD4YutPoxTTsA3797wVr4Z/1NC5zARHr4vtxJjxIfiZMhMkbWk+14BnJZKwqGZwDfswLyxWDSg11rFLJF7Nopxjd1h1/QOT+oezgfu3Yq+Hk+duf5x+40o1GTkaIgikK/IEnC6aYxCUBaZJSN4XTYFjU/YMNIKqJwhDGOCCI8FDXnXmXjtGhGJyShqjAOnBOkW2JG9S7GgYeMWAU5JzhnWmBOaOM+CKEPoqSfFDC2Unq+DLlUgUVUFFLZGJg6jtlojsdsa8kPObPuJdi5dnBdBsLJMGTWDa4t2JvtwuPo9s+Y86suv/W33QG1rAaOAUV+vx4K6f2D04PVKlC7WLSrZzAi45ZV6lIC7WoXqmRyvUqoVwrzUoVsIjeTXWQv+RH5GTlBXiB/In8ln0IbBCAFOajAJrgZYyOHWqOfUe/aHjI12R6OQo1jCgt215l+4f6XPb+0MNou0V+43n2F77tSfRb24d7zitgnKmvYHs69zugaPvBwv6ioXkb2LdL65Atw51uLkXlu1bhMMRcXSPcYoqKIRlh34lQP8/5JbuUFye4vxD6/6MxFF11C0uVLr9Ulgw44tS3pMViNLUExbycFgLIct+QDMibRimx1ydUz8FXZiuOIDBOMVX2nUZc+huNE5XUJ81uiJoiabwqaVF0uacKbau/pl4R2VW0XXlJra6boVrYG646TF5NYzwy4vjENVrDlcNpZPl8DH6XX8XWCx0mvWVZY6KFLrvsY66/zPict5FnxaNUR/juvZCM3TvD60E2W1tZizbXTPDuabcm0nbbzpWKpmA1ayBQ8giedLUM+A0kNjBjQjmuYz7YrgIXYvmF63ZLBwSXrpn9Tb9wwdd/U1H0PMQK3XcO8ul3WT7PyPPdpy0TemKxNRcJNauiXJnnUDpUppQWs4SnUIy0EESGYqJYQLGHxzaGWwVIaS6Y7mQFM8ZjYDQ3axjf61SWjU33JwOZA1pwaG1L9mzf71aHRdX1JHw6Fp0aXhNwbqyeGNg4NbdzGCBxoz4ZXjy4Nu69Zr6sDY6vMrLU5nA1P8JkbdWXJ6ERfMryvNh1JfQ9+T4dIhGvK9w3dxjBBzatsQ/MlOHVIDnYpDz6odAXlQ01t2Pa5Iafd8MMpxAeDKP0C6CjgVLT5osB6icUx01lWjXxzT/GyRF2welEM5Z/7jG3VjQ1SrNn5IbyzOG5dobB3/QHxyZvsXcoz8IoEwS7plCg+zxHQk424q9BfEpkESJbFHQusDBSWFkuBkoPO0kLKwRVYjxGXlHTcTDQMJ/H6TX9afkO7mnraTO1feTnZAXLu4cp7HAXMmNG1yeFk9TgS/NHhZR/4QoBTr/ZB+6hCgyl15Nq1UbN6nE1/ZnP1U2cizCBpvs8cJQZJ4LkYx5N/yZPAUZNQQ0V4f3BQllWrK3YRzl30dOT6RVn2upNur6woSa8CqpdT/aKnBM4o3jNur9d9xqtUT6veBEt9Ca9at+ERzEEhUkR8sa5mQ4aVvJoVeEA8zI4ei5mULXFGyU7z/6TAeYLVcpzSWZY8PYYF5yrTV60sT0+XV141vX++Wf16V2bFeGVPZXxFpkvyeKTWLlzfW0mnKxsY6Y3294/0998SCfX1blm5pbcvFGlq/r07MRAMhYIDiW5JFKWW3vdrEpCsZSJG+om7Zu/PSScZJhNkLbmW5Wsr12pWqW5zKtlwRS4bFOxUw17mCzy6lskCDl1WYOGWDYrADrMA7BDDweWWNd5koiJnR1dz+ytLP2q0SqPB1lnK2ccB7RYe4FSoPks3iB3t4txTSHctb2sy1ivk0pvHuCNm6w1f6wxv3+OCgN78LqdQnUVh7R0oTAp0zOf2rbW770Vu5C2dIyGdTnHo8zSji7dppj0USoVCz+lhRMTh53Teq9VbGfbjuSbAooSdXayY4PYHg374C6f7gl1B/DXuJ4/QXxOBdJFJspFsI3egpoWUUCjlTIFnNYNl+ZyZKmBeYKGHkD1QyDlhaKbKwKcIJqJ4TLJ2OmdY/JWXae4DdGBw8HZ7eXcgFF2zr2SoalDry5iKqoa0Puhe3hPQ2s3elTYM+MI+n3rK0KgL7/La3GeMLt6m7u912vGnvtORiIa0qBmhqVi+XW9XNBmqb8eVgKzIHfGI5bNoG7X0UCzeISmqIcO/nY8FH7U8avX9fx/ST+hx0sezPw9Qy8Mum3GWf2N4Uy/yIYGVBXbJHWIZp7dfTcptdMTr9Qmq7DaiK/ukqCL4kt4RUfS5XPnMtmT22/mQFqF7emSqtrlu8SVElxDRJrZODkpuwe0VfTfjdEp1f7A7v+fozNBXUJ/6WTuK2TtFlpFVZAZ3LcFvUi1Z2p2YT+EMAkGJVStOzLTAPg4IqWIAlzRSjOBkl2zxj3TKycpzT/MnvX3uaSMWM+gU0rkXjohhefVRMaps3/kLMSKv23lT23uxQrkQjyOJleMDsdhAnD6ZGElWZ5MjCXzCE/hkWX+WF4knzGhVOyK2eQZekV3eyo0zL8kuYWCnDCvjjhAkcTPOBDXVdoav3HVcFnQjLvtV9S2p0zA6JegPwMQxt+yFb3ll9zGlq/5dRKb3cEyQYoaNYpharJ7xCB7AWxsLY3jjZXY0XsZj0Wjwc9I6PP/dKABnCZaqHpaZEACxk4ZeLZSKNgZABl+lYQX1sJQOSX3n6r410evcoud5JeAGUXVP9H1tZOKejTq4Ono0z0erro1FrnOpohva1d/hTdtVsQdKN5W9RlT3NjD0nznyKNTgKAMfWNWcyodV0IGLPIHOF0o4JyqufaK4z6WIIzuGh3d8c8cwQg8ER+OVxyrjdm8vNuhts4LoOihGxIMuUdgzwiYN7xhh1+oZnJNuTG7gQZvu4XWZ9GAZZjGEubwePqYhtKDTH+9VQkl17/iGybsnJ+8+sKtyPrcll9ty65Zsdst/9iqpEKh7M5VdBxh3csOdNc6tW3I1uyM1PzOXegSOrLFsFNI2O27M+TF2ApnN9MUv5ud6LjxIvEQnHRzxIu4IsA9MLFkJn2tcZoZ7ON7dXe7ujrc8HrusPKamlqXwd77lQUuLpilau4PUMapueBb7irU4RoUXEYXuVuIGlRGmOp+2lNkaRPVziOqmlaZvaqG4dFgSj0jxEJWrv12IUWntmw+rfQarRE0Aph4ocI6nlUlGqs+u3/+T/ethW62PpHp2eHbZstnh/wOO95yDAHicY2BkYGAA4pmJ6QHx/DZfGbiZXwBFGGpUNzQi6P+vmacy3QJyORiYQKIANoULVXicY2BkYGAO+p8FJF8wAAHzVAZGBlSgDQBW9gNvAAAAeJxjYGBgYH4xNDAAzwQmjwAAAAAATgCaAOgBCgEsAU4BcAGaAcQB7gIaApwC6ASaBLwE1gTyBQ4FKgV6BdAF/gZEBmYGtgcYB5AIGAhSCGoI/glGCb4J2goECjwKggq4CvALUAuWC7x4nGNgZGBg0GZMYRBlAAEmIOYCQgaG/2A+AwAYlAG8AHicbZE9TsMwGIbf9A/RSggEYmHxAgtq+jN2ZGj3Dt3T1GlTOXHkuBW9AyfgEByCgTNwCA7BW/NJlVBtyd/jx+8XKwmAa3whwnFE6Ib1OBq44O6Pm6Qb4Rb5QbiNHh6FO/RD4S6eMRHu4RaaT4halzR3eBVu4Apvwk36d+EW+UO4jXt8Cnfov4W7WOBHuIen6MXsCtvPU1vWc73emcSdxIkW2tW5LdUoHp7kTJfaJV6v1PKg6v167H2mMmcLNbWl18ZYVTm71amPN95Xk8EgEx+ntoDBDgUs+siRspaoMef7rukNEriziXNuwS7Hmoe9wggxv+e55IzJMqQTeNYV00scuNbY8+YxrUfGfcaMZb/CNPQe04bT0lThbEuT0sfYhK6K/23Amf3Lx+H24hcj4GScAAAAeJxtjtlugzAQRbkJUEJIuu/7vqR8lGNPAcWx0YAb5e/LklR96EgenSufGY038PqKvf9rhgGG8BEgxA4ijBBjjAQTTLGLPezjAIc4wjFOcIoznOMCl7jCNW5wizvc4wGPeMIzXvCKN7zjAzN8eonQRWZSSaYmjvug6ase98hFltexMJmmVNmV2WBvdNgZUc+ujAWzXW3UDnu1w43asStHc8GpzAXX/py0jqTQZJTgkcxJLpaCF0lD32xNt+43tAsn29Dft02uDKS2cjGUNgsk26qK2lFthYoU27INPqmiDqg5goe0pqR5qSoqMdek/CUZFywL46rEsiImleqiqoMyt4baXlu/1GLdNFf5zbcNmdr1YUWCZe47o+zUmb/DoStbw3cVsef9ALjjiPQA) format('woff');\n      font-weight: normal;\n      font-style: normal;\n    }\n\n    html {\n      --lumo-icons-align-center: \"\\\\ea01\";\n      --lumo-icons-align-left: \"\\\\ea02\";\n      --lumo-icons-align-right: \"\\\\ea03\";\n      --lumo-icons-angle-down: \"\\\\ea04\";\n      --lumo-icons-angle-left: \"\\\\ea05\";\n      --lumo-icons-angle-right: \"\\\\ea06\";\n      --lumo-icons-angle-up: \"\\\\ea07\";\n      --lumo-icons-arrow-down: \"\\\\ea08\";\n      --lumo-icons-arrow-left: \"\\\\ea09\";\n      --lumo-icons-arrow-right: \"\\\\ea0a\";\n      --lumo-icons-arrow-up: \"\\\\ea0b\";\n      --lumo-icons-bar-chart: \"\\\\ea0c\";\n      --lumo-icons-bell: \"\\\\ea0d\";\n      --lumo-icons-calendar: \"\\\\ea0e\";\n      --lumo-icons-checkmark: \"\\\\ea0f\";\n      --lumo-icons-chevron-down: \"\\\\ea10\";\n      --lumo-icons-chevron-left: \"\\\\ea11\";\n      --lumo-icons-chevron-right: \"\\\\ea12\";\n      --lumo-icons-chevron-up: \"\\\\ea13\";\n      --lumo-icons-clock: \"\\\\ea14\";\n      --lumo-icons-cog: \"\\\\ea15\";\n      --lumo-icons-cross: \"\\\\ea16\";\n      --lumo-icons-download: \"\\\\ea17\";\n      --lumo-icons-dropdown: \"\\\\ea18\";\n      --lumo-icons-edit: \"\\\\ea19\";\n      --lumo-icons-error: \"\\\\ea1a\";\n      --lumo-icons-eye: \"\\\\ea1b\";\n      --lumo-icons-eye-disabled: \"\\\\ea1c\";\n      --lumo-icons-menu: \"\\\\ea1d\";\n      --lumo-icons-minus: \"\\\\ea1e\";\n      --lumo-icons-ordered-list: \"\\\\ea1f\";\n      --lumo-icons-phone: \"\\\\ea20\";\n      --lumo-icons-photo: \"\\\\ea21\";\n      --lumo-icons-play: \"\\\\ea22\";\n      --lumo-icons-plus: \"\\\\ea23\";\n      --lumo-icons-redo: \"\\\\ea24\";\n      --lumo-icons-reload: \"\\\\ea25\";\n      --lumo-icons-search: \"\\\\ea26\";\n      --lumo-icons-undo: \"\\\\ea27\";\n      --lumo-icons-unordered-list: \"\\\\ea28\";\n      --lumo-icons-upload: \"\\\\ea29\";\n      --lumo-icons-user: \"\\\\ea2a\";\n    }\n  </style>\n</custom-style>`;\n\ndocument.head.appendChild($_documentContainer.content);\n\n/* NOTICE: Generated with 'gulp icons' */\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\n;\n"
    },
    {
     "id": 29,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/mixins/gesture-event-listeners.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { addListener, removeListener } from '../utils/gestures.js';\n\n/**\n * Element class mixin that provides API for adding Polymer's cross-platform\n * gesture events to nodes.\n *\n * The API is designed to be compatible with override points implemented\n * in `TemplateStamp` such that declarative event listeners in\n * templates will support gesture events when this mixin is applied along with\n * `TemplateStamp`.\n *\n * @mixinFunction\n * @polymer\n * @summary Element class mixin that provides API for adding Polymer's\n *   cross-platform\n * gesture events to nodes\n */\nexport const GestureEventListeners = dedupingMixin(\n    /**\n     * @template T\n     * @param {function(new:T)} superClass Class to apply mixin to.\n     * @return {function(new:T)} superClass with mixin applied.\n     */\n    (superClass) => {\n      /**\n       * @polymer\n       * @mixinClass\n       * @implements {Polymer_GestureEventListeners}\n       */\n      class GestureEventListeners extends superClass {\n        /**\n         * Add the event listener to the node if it is a gestures event.\n         *\n         * @param {!EventTarget} node Node to add event listener to\n         * @param {string} eventName Name of event\n         * @param {function(!Event):void} handler Listener function to add\n         * @return {void}\n         * @override\n         */\n        _addEventListenerToNode(node, eventName, handler) {\n          if (!addListener(node, eventName, handler)) {\n            super._addEventListenerToNode(node, eventName, handler);\n          }\n        }\n\n        /**\n         * Remove the event listener to the node if it is a gestures event.\n         *\n         * @param {!EventTarget} node Node to remove event listener from\n         * @param {string} eventName Name of event\n         * @param {function(!Event):void} handler Listener function to remove\n         * @return {void}\n         * @override\n         */\n        _removeEventListenerFromNode(node, eventName, handler) {\n          if (!removeListener(node, eventName, handler)) {\n            super._removeEventListenerFromNode(node, eventName, handler);\n          }\n        }\n      }\n\n      return GestureEventListeners;\n    });\n"
    },
    {
     "id": 30,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/utils/mixin.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\n// unique global id for deduping mixins.\nlet dedupeId = 0;\n\n/**\n * @constructor\n * @extends {Function}\n * @private\n */\nfunction MixinFunction(){}\n/** @type {(WeakMap | undefined)} */\nMixinFunction.prototype.__mixinApplications;\n/** @type {(Object | undefined)} */\nMixinFunction.prototype.__mixinSet;\n\n/* eslint-disable valid-jsdoc */\n/**\n * Wraps an ES6 class expression mixin such that the mixin is only applied\n * if it has not already been applied its base argument. Also memoizes mixin\n * applications.\n *\n * @template T\n * @param {T} mixin ES6 class expression mixin to wrap\n * @return {T}\n * @suppress {invalidCasts}\n */\nexport const dedupingMixin = function(mixin) {\n  let mixinApplications = /** @type {!MixinFunction} */(mixin).__mixinApplications;\n  if (!mixinApplications) {\n    mixinApplications = new WeakMap();\n    /** @type {!MixinFunction} */(mixin).__mixinApplications = mixinApplications;\n  }\n  // maintain a unique id for each mixin\n  let mixinDedupeId = dedupeId++;\n  function dedupingMixin(base) {\n    let baseSet = /** @type {!MixinFunction} */(base).__mixinSet;\n    if (baseSet && baseSet[mixinDedupeId]) {\n      return base;\n    }\n    let map = mixinApplications;\n    let extended = map.get(base);\n    if (!extended) {\n      extended = /** @type {!Function} */(mixin)(base);\n      map.set(base, extended);\n    }\n    // copy inherited mixin set from the extended class, or the base class\n    // NOTE: we avoid use of Set here because some browser (IE11)\n    // cannot extend a base Set via the constructor.\n    let mixinSet = Object.create(/** @type {!MixinFunction} */(extended).__mixinSet || baseSet || null);\n    mixinSet[mixinDedupeId] = true;\n    /** @type {!MixinFunction} */(extended).__mixinSet = mixinSet;\n    return extended;\n  }\n\n  return dedupingMixin;\n};\n/* eslint-enable valid-jsdoc */\n"
    },
    {
     "id": 31,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/utils/flush.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n/* eslint-disable no-unused-vars */\nimport { Debouncer } from '../utils/debounce.js';  // used in type annotations\n/* eslint-enable no-unused-vars */\nimport { flushDebouncers } from '../utils/debounce.js';  // used in type annotations\nexport { enqueueDebouncer } from '../utils/debounce.js';  // used in type annotations\n\n/**\n * Forces several classes of asynchronously queued tasks to flush:\n * - Debouncers added via `enqueueDebouncer`\n * - ShadyDOM distribution\n *\n * @return {void}\n */\nexport const flush = function() {\n  let shadyDOM, debouncers;\n  do {\n    shadyDOM = window.ShadyDOM && ShadyDOM.flush();\n    if (window.ShadyCSS && window.ShadyCSS.ScopingShim) {\n      window.ShadyCSS.ScopingShim.flush();\n    }\n    debouncers = flushDebouncers();\n  } while (shadyDOM || debouncers);\n};\n"
    },
    {
     "id": 32,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/polymer-legacy.js + 3 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/polymer-legacy.js",
       "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { LegacyElementMixin } from './lib/legacy/legacy-element-mixin.js';\nexport { Polymer } from  './lib/legacy/polymer-fn.js';\n/* template elements */\nimport './lib/legacy/templatizer-behavior.js';\nimport './lib/elements/dom-bind.js';\nimport './lib/elements/dom-repeat.js';\nimport './lib/elements/dom-if.js';\nimport './lib/elements/array-selector.js';\n/* custom-style */\nimport './lib/elements/custom-style.js';\n/* bc behaviors */\nimport './lib/legacy/mutable-data-behavior.js';\n/* import html-tag to export html */\nexport { html } from './lib/utils/html-tag.js';\n\n// bc\nexport const Base = LegacyElementMixin(HTMLElement).prototype;\n"
      },
      {
       "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/elements/dom-bind.js",
       "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { PropertyEffects } from '../mixins/property-effects.js';\nimport { OptionalMutableData } from '../mixins/mutable-data.js';\nimport { GestureEventListeners } from '../mixins/gesture-event-listeners.js';\nimport { strictTemplatePolicy } from '../utils/settings.js';\nimport { wrap } from '../utils/wrap.js';\n\n/**\n * @constructor\n * @extends {HTMLElement}\n * @implements {Polymer_PropertyEffects}\n * @implements {Polymer_OptionalMutableData}\n * @implements {Polymer_GestureEventListeners}\n * @private\n */\nconst domBindBase =\n  GestureEventListeners(\n    OptionalMutableData(\n      PropertyEffects(HTMLElement)));\n\n/**\n * Custom element to allow using Polymer's template features (data binding,\n * declarative event listeners, etc.) in the main document without defining\n * a new custom element.\n *\n * `<template>` tags utilizing bindings may be wrapped with the `<dom-bind>`\n * element, which will immediately stamp the wrapped template into the main\n * document and bind elements to the `dom-bind` element itself as the\n * binding scope.\n *\n * @polymer\n * @customElement\n * @appliesMixin PropertyEffects\n * @appliesMixin OptionalMutableData\n * @appliesMixin GestureEventListeners\n * @extends {domBindBase}\n * @summary Custom element to allow using Polymer's template features (data\n *   binding, declarative event listeners, etc.) in the main document.\n */\nexport class DomBind extends domBindBase {\n\n  static get observedAttributes() { return ['mutable-data']; }\n\n  constructor() {\n    super();\n    if (strictTemplatePolicy) {\n      throw new Error(`strictTemplatePolicy: dom-bind not allowed`);\n    }\n    this.root = null;\n    this.$ = null;\n    this.__children = null;\n  }\n\n  /**\n   * @override\n   * @return {void}\n   */\n  attributeChangedCallback() {\n    // assumes only one observed attribute\n    this.mutableData = true;\n  }\n\n  /**\n   * @override\n   * @return {void}\n   */\n  connectedCallback() {\n    this.style.display = 'none';\n    this.render();\n  }\n\n  /**\n   * @override\n   * @return {void}\n   */\n  disconnectedCallback() {\n    this.__removeChildren();\n  }\n\n  __insertChildren() {\n    wrap(wrap(this).parentNode).insertBefore(this.root, this);\n  }\n\n  __removeChildren() {\n    if (this.__children) {\n      for (let i=0; i<this.__children.length; i++) {\n        this.root.appendChild(this.__children[i]);\n      }\n    }\n  }\n\n  /**\n   * Forces the element to render its content. This is typically only\n   * necessary to call if HTMLImports with the async attribute are used.\n   * @return {void}\n   */\n  render() {\n    let template;\n    if (!this.__children) {\n      template = /** @type {HTMLTemplateElement} */(template || this.querySelector('template'));\n      if (!template) {\n        // Wait until childList changes and template should be there by then\n        let observer = new MutationObserver(() => {\n          template = /** @type {HTMLTemplateElement} */(this.querySelector('template'));\n          if (template) {\n            observer.disconnect();\n            this.render();\n          } else {\n            throw new Error('dom-bind requires a <template> child');\n          }\n        });\n        observer.observe(this, {childList: true});\n        return;\n      }\n      this.root = this._stampTemplate(\n        /** @type {!HTMLTemplateElement} */(template));\n      this.$ = this.root.$;\n      this.__children = [];\n      for (let n=this.root.firstChild; n; n=n.nextSibling) {\n        this.__children[this.__children.length] = n;\n      }\n      this._enableProperties();\n    }\n    this.__insertChildren();\n    this.dispatchEvent(new CustomEvent('dom-change', {\n      bubbles: true,\n      composed: true\n    }));\n  }\n\n}\n\ncustomElements.define('dom-bind', DomBind);\n"
      },
      {
       "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/elements/dom-if.js",
       "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport { PolymerElement } from '../../polymer-element.js';\n\nimport { templatize } from '../utils/templatize.js';\nimport { Debouncer } from '../utils/debounce.js';\nimport { enqueueDebouncer, flush } from '../utils/flush.js';\nimport { microTask } from '../utils/async.js';\nimport { root } from '../utils/path.js';\nimport { wrap } from '../utils/wrap.js';\n\n/**\n * The `<dom-if>` element will stamp a light-dom `<template>` child when\n * the `if` property becomes truthy, and the template can use Polymer\n * data-binding and declarative event features when used in the context of\n * a Polymer element's template.\n *\n * When `if` becomes falsy, the stamped content is hidden but not\n * removed from dom. When `if` subsequently becomes truthy again, the content\n * is simply re-shown. This approach is used due to its favorable performance\n * characteristics: the expense of creating template content is paid only\n * once and lazily.\n *\n * Set the `restamp` property to true to force the stamped content to be\n * created / destroyed when the `if` condition changes.\n *\n * @customElement\n * @polymer\n * @extends PolymerElement\n * @summary Custom element that conditionally stamps and hides or removes\n *   template content based on a boolean flag.\n */\nexport class DomIf extends PolymerElement {\n\n  // Not needed to find template; can be removed once the analyzer\n  // can find the tag name from customElements.define call\n  static get is() { return 'dom-if'; }\n\n  static get template() { return null; }\n\n  static get properties() {\n\n    return {\n\n      /**\n       * Fired whenever DOM is added or removed/hidden by this template (by\n       * default, rendering occurs lazily).  To force immediate rendering, call\n       * `render`.\n       *\n       * @event dom-change\n       */\n\n      /**\n       * A boolean indicating whether this template should stamp.\n       */\n      if: {\n        type: Boolean,\n        observer: '__debounceRender'\n      },\n\n      /**\n       * When true, elements will be removed from DOM and discarded when `if`\n       * becomes false and re-created and added back to the DOM when `if`\n       * becomes true.  By default, stamped elements will be hidden but left\n       * in the DOM when `if` becomes false, which is generally results\n       * in better performance.\n       */\n      restamp: {\n        type: Boolean,\n        observer: '__debounceRender'\n      }\n\n    };\n\n  }\n\n  constructor() {\n    super();\n    this.__renderDebouncer = null;\n    this.__invalidProps = null;\n    this.__instance = null;\n    this._lastIf = false;\n    this.__ctor = null;\n    this.__hideTemplateChildren__ = false;\n  }\n\n  __debounceRender() {\n    // Render is async for 2 reasons:\n    // 1. To eliminate dom creation trashing if user code thrashes `if` in the\n    //    same turn. This was more common in 1.x where a compound computed\n    //    property could result in the result changing multiple times, but is\n    //    mitigated to a large extent by batched property processing in 2.x.\n    // 2. To avoid double object propagation when a bag including values bound\n    //    to the `if` property as well as one or more hostProps could enqueue\n    //    the <dom-if> to flush before the <template>'s host property\n    //    forwarding. In that scenario creating an instance would result in\n    //    the host props being set once, and then the enqueued changes on the\n    //    template would set properties a second time, potentially causing an\n    //    object to be set to an instance more than once.  Creating the\n    //    instance async from flushing data ensures this doesn't happen. If\n    //    we wanted a sync option in the future, simply having <dom-if> flush\n    //    (or clear) its template's pending host properties before creating\n    //    the instance would also avoid the problem.\n    this.__renderDebouncer = Debouncer.debounce(\n          this.__renderDebouncer\n        , microTask\n        , () => this.__render());\n    enqueueDebouncer(this.__renderDebouncer);\n  }\n\n  /**\n   * @override\n   * @return {void}\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    const parent = wrap(this).parentNode;\n    if (!parent || (parent.nodeType == Node.DOCUMENT_FRAGMENT_NODE &&\n        !wrap(parent).host)) {\n      this.__teardownInstance();\n    }\n  }\n\n  /**\n   * @override\n   * @return {void}\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.style.display = 'none';\n    if (this.if) {\n      this.__debounceRender();\n    }\n  }\n\n  /**\n   * Forces the element to render its content. Normally rendering is\n   * asynchronous to a provoking change. This is done for efficiency so\n   * that multiple changes trigger only a single render. The render method\n   * should be called if, for example, template rendering is required to\n   * validate application state.\n   * @return {void}\n   */\n  render() {\n    flush();\n  }\n\n  __render() {\n    if (this.if) {\n      if (!this.__ensureInstance()) {\n        // No template found yet\n        return;\n      }\n      this._showHideChildren();\n    } else if (this.restamp) {\n      this.__teardownInstance();\n    }\n    if (!this.restamp && this.__instance) {\n      this._showHideChildren();\n    }\n    if (this.if != this._lastIf) {\n      this.dispatchEvent(new CustomEvent('dom-change', {\n        bubbles: true,\n        composed: true\n      }));\n      this._lastIf = this.if;\n    }\n  }\n\n  __ensureInstance() {\n    let parentNode = wrap(this).parentNode;\n    // Guard against element being detached while render was queued\n    if (parentNode) {\n      if (!this.__ctor) {\n        let template = /** @type {HTMLTemplateElement} */(wrap(this).querySelector('template'));\n        if (!template) {\n          // Wait until childList changes and template should be there by then\n          let observer = new MutationObserver(() => {\n            if (wrap(this).querySelector('template')) {\n              observer.disconnect();\n              this.__render();\n            } else {\n              throw new Error('dom-if requires a <template> child');\n            }\n          });\n          observer.observe(this, {childList: true});\n          return false;\n        }\n        this.__ctor = templatize(template, this, {\n          // dom-if templatizer instances require `mutable: true`, as\n          // `__syncHostProperties` relies on that behavior to sync objects\n          mutableData: true,\n          /**\n           * @param {string} prop Property to forward\n           * @param {*} value Value of property\n           * @this {DomIf}\n           */\n          forwardHostProp: function(prop, value) {\n            if (this.__instance) {\n              if (this.if) {\n                this.__instance.forwardHostProp(prop, value);\n              } else {\n                // If we have an instance but are squelching host property\n                // forwarding due to if being false, note the invalidated\n                // properties so `__syncHostProperties` can sync them the next\n                // time `if` becomes true\n                this.__invalidProps = this.__invalidProps || Object.create(null);\n                this.__invalidProps[root(prop)] = true;\n              }\n            }\n          }\n        });\n      }\n      if (!this.__instance) {\n        this.__instance = new this.__ctor();\n        wrap(parentNode).insertBefore(this.__instance.root, this);\n      } else {\n        this.__syncHostProperties();\n        let c$ = this.__instance.children;\n        if (c$ && c$.length) {\n          // Detect case where dom-if was re-attached in new position\n          let lastChild = wrap(this).previousSibling;\n          if (lastChild !== c$[c$.length-1]) {\n            for (let i=0, n; (i<c$.length) && (n=c$[i]); i++) {\n              wrap(parentNode).insertBefore(n, this);\n            }\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  __syncHostProperties() {\n    let props = this.__invalidProps;\n    if (props) {\n      for (let prop in props) {\n        this.__instance._setPendingProperty(prop, this.__dataHost[prop]);\n      }\n      this.__invalidProps = null;\n      this.__instance._flushProperties();\n    }\n  }\n\n  __teardownInstance() {\n    if (this.__instance) {\n      let c$ = this.__instance.children;\n      if (c$ && c$.length) {\n        // use first child parent, for case when dom-if may have been detached\n        let parent = wrap(c$[0]).parentNode;\n        // Instance children may be disconnected from parents when dom-if\n        // detaches if a tree was innerHTML'ed\n        if (parent) {\n          parent = wrap(parent);\n          for (let i=0, n; (i<c$.length) && (n=c$[i]); i++) {\n            parent.removeChild(n);\n          }\n        }\n      }\n      this.__instance = null;\n      this.__invalidProps = null;\n    }\n  }\n\n  /**\n   * Shows or hides the template instance top level child elements. For\n   * text nodes, `textContent` is removed while \"hidden\" and replaced when\n   * \"shown.\"\n   * @return {void}\n   * @protected\n   * @suppress {visibility}\n   */\n  _showHideChildren() {\n    let hidden = this.__hideTemplateChildren__ || !this.if;\n    if (this.__instance) {\n      this.__instance._showHideChildren(hidden);\n    }\n  }\n\n}\n\ncustomElements.define(DomIf.is, DomIf);\n"
      },
      {
       "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/elements/array-selector.js",
       "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport { PolymerElement } from '../../polymer-element.js';\n\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { calculateSplices } from '../utils/array-splice.js';\nimport { ElementMixin } from '../mixins/element-mixin.js';\n\n/**\n * Element mixin for recording dynamic associations between item paths in a\n * master `items` array and a `selected` array such that path changes to the\n * master array (at the host) element or elsewhere via data-binding) are\n * correctly propagated to items in the selected array and vice-versa.\n *\n * The `items` property accepts an array of user data, and via the\n * `select(item)` and `deselect(item)` API, updates the `selected` property\n * which may be bound to other parts of the application, and any changes to\n * sub-fields of `selected` item(s) will be kept in sync with items in the\n * `items` array.  When `multi` is false, `selected` is a property\n * representing the last selected item.  When `multi` is true, `selected`\n * is an array of multiply selected items.\n *\n * @polymer\n * @mixinFunction\n * @appliesMixin ElementMixin\n * @summary Element mixin for recording dynamic associations between item paths in a\n * master `items` array and a `selected` array\n */\nlet ArraySelectorMixin = dedupingMixin(superClass => {\n\n  /**\n   * @constructor\n   * @implements {Polymer_ElementMixin}\n   * @private\n   */\n  let elementBase = ElementMixin(superClass);\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_ArraySelectorMixin}\n   * @unrestricted\n   */\n  class ArraySelectorMixin extends elementBase {\n\n    static get properties() {\n      return {\n\n        /**\n         * An array containing items from which selection will be made.\n         */\n        items: {\n          type: Array,\n        },\n\n        /**\n         * When `true`, multiple items may be selected at once (in this case,\n         * `selected` is an array of currently selected items).  When `false`,\n         * only one item may be selected at a time.\n         */\n        multi: {\n          type: Boolean,\n          value: false,\n        },\n\n        /**\n         * When `multi` is true, this is an array that contains any selected.\n         * When `multi` is false, this is the currently selected item, or `null`\n         * if no item is selected.\n         * @type {?Object|?Array<!Object>}\n         */\n        selected: {type: Object, notify: true},\n\n        /**\n         * When `multi` is false, this is the currently selected item, or `null`\n         * if no item is selected.\n         * @type {?Object}\n         */\n        selectedItem: {type: Object, notify: true},\n\n        /**\n         * When `true`, calling `select` on an item that is already selected\n         * will deselect the item.\n         */\n        toggle: {type: Boolean, value: false}\n\n      };\n    }\n\n    static get observers() {\n      return ['__updateSelection(multi, items.*)'];\n    }\n\n    constructor() {\n      super();\n      this.__lastItems = null;\n      this.__lastMulti = null;\n      this.__selectedMap = null;\n    }\n\n    __updateSelection(multi, itemsInfo) {\n      let path = itemsInfo.path;\n      if (path == JSCompiler_renameProperty('items', this)) {\n        // Case 1 - items array changed, so diff against previous array and\n        // deselect any removed items and adjust selected indices\n        let newItems = itemsInfo.base || [];\n        let lastItems = this.__lastItems;\n        let lastMulti = this.__lastMulti;\n        if (multi !== lastMulti) {\n          this.clearSelection();\n        }\n        if (lastItems) {\n          let splices = calculateSplices(newItems, lastItems);\n          this.__applySplices(splices);\n        }\n        this.__lastItems = newItems;\n        this.__lastMulti = multi;\n      } else if (itemsInfo.path == `${JSCompiler_renameProperty('items', this)}.splices`) {\n        // Case 2 - got specific splice information describing the array mutation:\n        // deselect any removed items and adjust selected indices\n        this.__applySplices(itemsInfo.value.indexSplices);\n      } else {\n        // Case 3 - an array element was changed, so deselect the previous\n        // item for that index if it was previously selected\n        let part = path.slice(`${JSCompiler_renameProperty('items', this)}.`.length);\n        let idx = parseInt(part, 10);\n        if ((part.indexOf('.') < 0) && part == idx) {\n          this.__deselectChangedIdx(idx);\n        }\n      }\n    }\n\n    __applySplices(splices) {\n      let selected = this.__selectedMap;\n      // Adjust selected indices and mark removals\n      for (let i=0; i<splices.length; i++) {\n        let s = splices[i];\n        selected.forEach((idx, item) => {\n          if (idx < s.index) {\n            // no change\n          } else if (idx >= s.index + s.removed.length) {\n            // adjust index\n            selected.set(item, idx + s.addedCount - s.removed.length);\n          } else {\n            // remove index\n            selected.set(item, -1);\n          }\n        });\n        for (let j=0; j<s.addedCount; j++) {\n          let idx = s.index + j;\n          if (selected.has(this.items[idx])) {\n            selected.set(this.items[idx], idx);\n          }\n        }\n      }\n      // Update linked paths\n      this.__updateLinks();\n      // Remove selected items that were removed from the items array\n      let sidx = 0;\n      selected.forEach((idx, item) => {\n        if (idx < 0) {\n          if (this.multi) {\n            this.splice(JSCompiler_renameProperty('selected', this), sidx, 1);\n          } else {\n            this.selected = this.selectedItem = null;\n          }\n          selected.delete(item);\n        } else {\n          sidx++;\n        }\n      });\n    }\n\n    __updateLinks() {\n      this.__dataLinkedPaths = {};\n      if (this.multi) {\n        let sidx = 0;\n        this.__selectedMap.forEach(idx => {\n          if (idx >= 0) {\n            this.linkPaths(\n                `${JSCompiler_renameProperty('items', this)}.${idx}`,\n                `${JSCompiler_renameProperty('selected', this)}.${sidx++}`);\n          }\n        });\n      } else {\n        this.__selectedMap.forEach(idx => {\n          this.linkPaths(\n              JSCompiler_renameProperty('selected', this),\n              `${JSCompiler_renameProperty('items', this)}.${idx}`);\n          this.linkPaths(\n              JSCompiler_renameProperty('selectedItem', this),\n              `${JSCompiler_renameProperty('items', this)}.${idx}`);\n        });\n      }\n    }\n\n    /**\n     * Clears the selection state.\n     * @override\n     * @return {void}\n     */\n    clearSelection() {\n      // Unbind previous selection\n      this.__dataLinkedPaths = {};\n      // The selected map stores 3 pieces of information:\n      // key: items array object\n      // value: items array index\n      // order: selected array index\n      this.__selectedMap = new Map();\n      // Initialize selection\n      this.selected = this.multi ? [] : null;\n      this.selectedItem = null;\n    }\n\n    /**\n     * Returns whether the item is currently selected.\n     *\n     * @override\n     * @param {*} item Item from `items` array to test\n     * @return {boolean} Whether the item is selected\n     */\n    isSelected(item) {\n      return this.__selectedMap.has(item);\n    }\n\n    /**\n     * Returns whether the item is currently selected.\n     *\n     * @override\n     * @param {number} idx Index from `items` array to test\n     * @return {boolean} Whether the item is selected\n     */\n    isIndexSelected(idx) {\n      return this.isSelected(this.items[idx]);\n    }\n\n    __deselectChangedIdx(idx) {\n      let sidx = this.__selectedIndexForItemIndex(idx);\n      if (sidx >= 0) {\n        let i = 0;\n        this.__selectedMap.forEach((idx, item) => {\n          if (sidx == i++) {\n            this.deselect(item);\n          }\n        });\n      }\n    }\n\n    __selectedIndexForItemIndex(idx) {\n      let selected = this.__dataLinkedPaths[`${JSCompiler_renameProperty('items', this)}.${idx}`];\n      if (selected) {\n        return parseInt(selected.slice(`${JSCompiler_renameProperty('selected', this)}.`.length), 10);\n      }\n    }\n\n    /**\n     * Deselects the given item if it is already selected.\n     *\n     * @override\n     * @param {*} item Item from `items` array to deselect\n     * @return {void}\n     */\n    deselect(item) {\n      let idx = this.__selectedMap.get(item);\n      if (idx >= 0) {\n        this.__selectedMap.delete(item);\n        let sidx;\n        if (this.multi) {\n          sidx = this.__selectedIndexForItemIndex(idx);\n        }\n        this.__updateLinks();\n        if (this.multi) {\n          this.splice(JSCompiler_renameProperty('selected', this), sidx, 1);\n        } else {\n          this.selected = this.selectedItem = null;\n        }\n      }\n    }\n\n    /**\n     * Deselects the given index if it is already selected.\n     *\n     * @override\n     * @param {number} idx Index from `items` array to deselect\n     * @return {void}\n     */\n    deselectIndex(idx) {\n      this.deselect(this.items[idx]);\n    }\n\n    /**\n     * Selects the given item.  When `toggle` is true, this will automatically\n     * deselect the item if already selected.\n     *\n     * @override\n     * @param {*} item Item from `items` array to select\n     * @return {void}\n     */\n    select(item) {\n      this.selectIndex(this.items.indexOf(item));\n    }\n\n    /**\n     * Selects the given index.  When `toggle` is true, this will automatically\n     * deselect the item if already selected.\n     *\n     * @override\n     * @param {number} idx Index from `items` array to select\n     * @return {void}\n     */\n    selectIndex(idx) {\n      let item = this.items[idx];\n      if (!this.isSelected(item)) {\n        if (!this.multi) {\n          this.__selectedMap.clear();\n        }\n        this.__selectedMap.set(item, idx);\n        this.__updateLinks();\n        if (this.multi) {\n          this.push(JSCompiler_renameProperty('selected', this), item);\n        } else {\n          this.selected = this.selectedItem = item;\n        }\n      } else if (this.toggle) {\n        this.deselectIndex(idx);\n      }\n    }\n\n  }\n\n  return ArraySelectorMixin;\n\n});\n\n// export mixin\nexport { ArraySelectorMixin };\n\n/**\n * @constructor\n * @extends {PolymerElement}\n * @implements {Polymer_ArraySelectorMixin}\n * @private\n */\nlet baseArraySelector = ArraySelectorMixin(PolymerElement);\n\n/**\n * Element implementing the `ArraySelector` mixin, which records\n * dynamic associations between item paths in a master `items` array and a\n * `selected` array such that path changes to the master array (at the host)\n * element or elsewhere via data-binding) are correctly propagated to items\n * in the selected array and vice-versa.\n *\n * The `items` property accepts an array of user data, and via the\n * `select(item)` and `deselect(item)` API, updates the `selected` property\n * which may be bound to other parts of the application, and any changes to\n * sub-fields of `selected` item(s) will be kept in sync with items in the\n * `items` array.  When `multi` is false, `selected` is a property\n * representing the last selected item.  When `multi` is true, `selected`\n * is an array of multiply selected items.\n *\n * Example:\n *\n * ```js\n * import {PolymerElement} from '@polymer/polymer';\n * import '@polymer/polymer/lib/elements/array-selector.js';\n *\n * class EmployeeList extends PolymerElement {\n *   static get _template() {\n *     return html`\n *         <div> Employee list: </div>\n *         <dom-repeat id=\"employeeList\" items=\"{{employees}}\">\n *           <template>\n *             <div>First name: <span>{{item.first}}</span></div>\n *               <div>Last name: <span>{{item.last}}</span></div>\n *               <button on-click=\"toggleSelection\">Select</button>\n *           </template>\n *         </dom-repeat>\n *\n *         <array-selector id=\"selector\"\n *                         items=\"{{employees}}\"\n *                         selected=\"{{selected}}\"\n *                         multi toggle></array-selector>\n *\n *         <div> Selected employees: </div>\n *         <dom-repeat items=\"{{selected}}\">\n *           <template>\n *             <div>First name: <span>{{item.first}}</span></div>\n *             <div>Last name: <span>{{item.last}}</span></div>\n *           </template>\n *         </dom-repeat>`;\n *   }\n *   static get is() { return 'employee-list'; }\n *   static get properties() {\n *     return {\n *       employees: {\n *         value() {\n *           return [\n *             {first: 'Bob', last: 'Smith'},\n *             {first: 'Sally', last: 'Johnson'},\n *             ...\n *           ];\n *         }\n *       }\n *     };\n *   }\n *   toggleSelection(e) {\n *     const item = this.$.employeeList.itemForElement(e.target);\n *     this.$.selector.select(item);\n *   }\n * }\n * ```\n *\n * @polymer\n * @customElement\n * @extends {baseArraySelector}\n * @appliesMixin ArraySelectorMixin\n * @summary Custom element that links paths between an input `items` array and\n *   an output `selected` item or array based on calls to its selection API.\n */\nclass ArraySelector extends baseArraySelector {\n  // Not needed to find template; can be removed once the analyzer\n  // can find the tag name from customElements.define call\n  static get is() { return 'array-selector'; }\n  static get template() { return null; }\n}\ncustomElements.define(ArraySelector.is, ArraySelector);\nexport { ArraySelector };\n"
      }
     ]
    },
    {
     "id": 33,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/utils/gestures.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * @fileoverview\n *\n * Module for adding listeners to a node for the following normalized\n * cross-platform \"gesture\" events:\n * - `down` - mouse or touch went down\n * - `up` - mouse or touch went up\n * - `tap` - mouse click or finger tap\n * - `track` - mouse drag or touch move\n *\n * @summary Module for adding cross-platform gesture event listeners.\n */\n\nimport './boot.js';\n\nimport { timeOut, microTask } from './async.js';\nimport { Debouncer } from './debounce.js';\nimport { passiveTouchGestures } from './settings.js';\nimport { wrap } from './wrap.js';\n\n// detect native touch action support\nlet HAS_NATIVE_TA = typeof document.head.style.touchAction === 'string';\nlet GESTURE_KEY = '__polymerGestures';\nlet HANDLED_OBJ = '__polymerGesturesHandled';\nlet TOUCH_ACTION = '__polymerGesturesTouchAction';\n// radius for tap and track\nlet TAP_DISTANCE = 25;\nlet TRACK_DISTANCE = 5;\n// number of last N track positions to keep\nlet TRACK_LENGTH = 2;\n\n// Disabling \"mouse\" handlers for 2500ms is enough\nlet MOUSE_TIMEOUT = 2500;\nlet MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'click'];\n// an array of bitmask values for mapping MouseEvent.which to MouseEvent.buttons\nlet MOUSE_WHICH_TO_BUTTONS = [0, 1, 4, 2];\nlet MOUSE_HAS_BUTTONS = (function() {\n  try {\n    return new MouseEvent('test', {buttons: 1}).buttons === 1;\n  } catch (e) {\n    return false;\n  }\n})();\n\n/**\n * @param {string} name Possible mouse event name\n * @return {boolean} true if mouse event, false if not\n */\nfunction isMouseEvent(name) {\n  return MOUSE_EVENTS.indexOf(name) > -1;\n}\n\n/* eslint no-empty: [\"error\", { \"allowEmptyCatch\": true }] */\n// check for passive event listeners\nlet SUPPORTS_PASSIVE = false;\n(function() {\n  try {\n    let opts = Object.defineProperty({}, 'passive', {get() {SUPPORTS_PASSIVE = true;}});\n    window.addEventListener('test', null, opts);\n    window.removeEventListener('test', null, opts);\n  } catch(e) {}\n})();\n\n/**\n * Generate settings for event listeners, dependant on `passiveTouchGestures`\n *\n * @param {string} eventName Event name to determine if `{passive}` option is\n *   needed\n * @return {{passive: boolean} | undefined} Options to use for addEventListener\n *   and removeEventListener\n */\nfunction PASSIVE_TOUCH(eventName) {\n  if (isMouseEvent(eventName) || eventName === 'touchend') {\n    return;\n  }\n  if (HAS_NATIVE_TA && SUPPORTS_PASSIVE && passiveTouchGestures) {\n    return {passive: true};\n  } else {\n    return;\n  }\n}\n\n// Check for touch-only devices\nlet IS_TOUCH_ONLY = navigator.userAgent.match(/iP(?:[oa]d|hone)|Android/);\n\n// keep track of any labels hit by the mouseCanceller\n/** @type {!Array<!HTMLLabelElement>} */\nconst clickedLabels = [];\n\n/** @type {!Object<boolean>} */\nconst labellable = {\n  'button': true,\n  'input': true,\n  'keygen': true,\n  'meter': true,\n  'output': true,\n  'textarea': true,\n  'progress': true,\n  'select': true\n};\n\n// Defined at https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#enabling-and-disabling-form-controls:-the-disabled-attribute\n/** @type {!Object<boolean>} */\nconst canBeDisabled = {\n  'button': true,\n  'command': true,\n  'fieldset': true,\n  'input': true,\n  'keygen': true,\n  'optgroup': true,\n  'option': true,\n  'select': true,\n  'textarea': true\n};\n\n/**\n * @param {HTMLElement} el Element to check labelling status\n * @return {boolean} element can have labels\n */\nfunction canBeLabelled(el) {\n  return labellable[el.localName] || false;\n}\n\n/**\n * @param {HTMLElement} el Element that may be labelled.\n * @return {!Array<!HTMLLabelElement>} Relevant label for `el`\n */\nfunction matchingLabels(el) {\n  let labels = Array.prototype.slice.call(/** @type {HTMLInputElement} */(el).labels || []);\n  // IE doesn't have `labels` and Safari doesn't populate `labels`\n  // if element is in a shadowroot.\n  // In this instance, finding the non-ancestor labels is enough,\n  // as the mouseCancellor code will handle ancstor labels\n  if (!labels.length) {\n    labels = [];\n    let root = el.getRootNode();\n    // if there is an id on `el`, check for all labels with a matching `for` attribute\n    if (el.id) {\n      let matching = root.querySelectorAll(`label[for = ${el.id}]`);\n      for (let i = 0; i < matching.length; i++) {\n        labels.push(/** @type {!HTMLLabelElement} */(matching[i]));\n      }\n    }\n  }\n  return labels;\n}\n\n// touch will make synthetic mouse events\n// `preventDefault` on touchend will cancel them,\n// but this breaks `<input>` focus and link clicks\n// disable mouse handlers for MOUSE_TIMEOUT ms after\n// a touchend to ignore synthetic mouse events\nlet mouseCanceller = function(mouseEvent) {\n  // Check for sourceCapabilities, used to distinguish synthetic events\n  // if mouseEvent did not come from a device that fires touch events,\n  // it was made by a real mouse and should be counted\n  // http://wicg.github.io/InputDeviceCapabilities/#dom-inputdevicecapabilities-firestouchevents\n  let sc = mouseEvent.sourceCapabilities;\n  if (sc && !sc.firesTouchEvents) {\n    return;\n  }\n  // skip synthetic mouse events\n  mouseEvent[HANDLED_OBJ] = {skip: true};\n  // disable \"ghost clicks\"\n  if (mouseEvent.type === 'click') {\n    let clickFromLabel = false;\n    let path = getComposedPath(mouseEvent);\n    for (let i = 0; i < path.length; i++) {\n      if (path[i].nodeType === Node.ELEMENT_NODE) {\n        if (path[i].localName === 'label') {\n          clickedLabels.push(/** @type {!HTMLLabelElement} */ (path[i]));\n        } else if (canBeLabelled(/** @type {!HTMLElement} */ (path[i]))) {\n          let ownerLabels =\n              matchingLabels(/** @type {!HTMLElement} */ (path[i]));\n          // check if one of the clicked labels is labelling this element\n          for (let j = 0; j < ownerLabels.length; j++) {\n            clickFromLabel = clickFromLabel || clickedLabels.indexOf(ownerLabels[j]) > -1;\n          }\n        }\n      }\n      if (path[i] === POINTERSTATE.mouse.target) {\n        return;\n      }\n    }\n    // if one of the clicked labels was labelling the target element,\n    // this is not a ghost click\n    if (clickFromLabel) {\n      return;\n    }\n    mouseEvent.preventDefault();\n    mouseEvent.stopPropagation();\n  }\n};\n\n/**\n * @param {boolean=} setup True to add, false to remove.\n * @return {void}\n */\nfunction setupTeardownMouseCanceller(setup) {\n  let events = IS_TOUCH_ONLY ? ['click'] : MOUSE_EVENTS;\n  for (let i = 0, en; i < events.length; i++) {\n    en = events[i];\n    if (setup) {\n      // reset clickLabels array\n      clickedLabels.length = 0;\n      document.addEventListener(en, mouseCanceller, true);\n    } else {\n      document.removeEventListener(en, mouseCanceller, true);\n    }\n  }\n}\n\nfunction ignoreMouse(e) {\n  if (!POINTERSTATE.mouse.mouseIgnoreJob) {\n    setupTeardownMouseCanceller(true);\n  }\n  let unset = function() {\n    setupTeardownMouseCanceller();\n    POINTERSTATE.mouse.target = null;\n    POINTERSTATE.mouse.mouseIgnoreJob = null;\n  };\n  POINTERSTATE.mouse.target = getComposedPath(e)[0];\n  POINTERSTATE.mouse.mouseIgnoreJob = Debouncer.debounce(\n        POINTERSTATE.mouse.mouseIgnoreJob\n      , timeOut.after(MOUSE_TIMEOUT)\n      , unset);\n}\n\n/**\n * @param {MouseEvent} ev event to test for left mouse button down\n * @return {boolean} has left mouse button down\n */\nfunction hasLeftMouseButton(ev) {\n  let type = ev.type;\n  // exit early if the event is not a mouse event\n  if (!isMouseEvent(type)) {\n    return false;\n  }\n  // ev.button is not reliable for mousemove (0 is overloaded as both left button and no buttons)\n  // instead we use ev.buttons (bitmask of buttons) or fall back to ev.which (deprecated, 0 for no buttons, 1 for left button)\n  if (type === 'mousemove') {\n    // allow undefined for testing events\n    let buttons = ev.buttons === undefined ? 1 : ev.buttons;\n    if ((ev instanceof window.MouseEvent) && !MOUSE_HAS_BUTTONS) {\n      buttons = MOUSE_WHICH_TO_BUTTONS[ev.which] || 0;\n    }\n    // buttons is a bitmask, check that the left button bit is set (1)\n    return Boolean(buttons & 1);\n  } else {\n    // allow undefined for testing events\n    let button = ev.button === undefined ? 0 : ev.button;\n    // ev.button is 0 in mousedown/mouseup/click for left button activation\n    return button === 0;\n  }\n}\n\nfunction isSyntheticClick(ev) {\n  if (ev.type === 'click') {\n    // ev.detail is 0 for HTMLElement.click in most browsers\n    if (ev.detail === 0) {\n      return true;\n    }\n    // in the worst case, check that the x/y position of the click is within\n    // the bounding box of the target of the event\n    // Thanks IE 10 >:(\n    let t = _findOriginalTarget(ev);\n    // make sure the target of the event is an element so we can use getBoundingClientRect,\n    // if not, just assume it is a synthetic click\n    if (!t.nodeType || /** @type {Element} */(t).nodeType !== Node.ELEMENT_NODE) {\n      return true;\n    }\n    let bcr = /** @type {Element} */(t).getBoundingClientRect();\n    // use page x/y to account for scrolling\n    let x = ev.pageX, y = ev.pageY;\n    // ev is a synthetic click if the position is outside the bounding box of the target\n    return !((x >= bcr.left && x <= bcr.right) && (y >= bcr.top && y <= bcr.bottom));\n  }\n  return false;\n}\n\nlet POINTERSTATE = {\n  mouse: {\n    target: null,\n    mouseIgnoreJob: null\n  },\n  touch: {\n    x: 0,\n    y: 0,\n    id: -1,\n    scrollDecided: false\n  }\n};\n\nfunction firstTouchAction(ev) {\n  let ta = 'auto';\n  let path = getComposedPath(ev);\n  for (let i = 0, n; i < path.length; i++) {\n    n = path[i];\n    if (n[TOUCH_ACTION]) {\n      ta = n[TOUCH_ACTION];\n      break;\n    }\n  }\n  return ta;\n}\n\nfunction trackDocument(stateObj, movefn, upfn) {\n  stateObj.movefn = movefn;\n  stateObj.upfn = upfn;\n  document.addEventListener('mousemove', movefn);\n  document.addEventListener('mouseup', upfn);\n}\n\nfunction untrackDocument(stateObj) {\n  document.removeEventListener('mousemove', stateObj.movefn);\n  document.removeEventListener('mouseup', stateObj.upfn);\n  stateObj.movefn = null;\n  stateObj.upfn = null;\n}\n\n// use a document-wide touchend listener to start the ghost-click prevention mechanism\n// Use passive event listeners, if supported, to not affect scrolling performance\ndocument.addEventListener('touchend', ignoreMouse, SUPPORTS_PASSIVE ? {passive: true} : false);\n\n/**\n * Returns the composedPath for the given event.\n * @param {Event} event to process\n * @return {!Array<!EventTarget>} Path of the event\n */\nconst getComposedPath = window.ShadyDOM && window.ShadyDOM.noPatch ?\n  window.ShadyDOM.composedPath :\n  (event) => event.composedPath && event.composedPath() || [];\n\n/** @type {!Object<string, !GestureRecognizer>} */\nexport const gestures = {};\n\n/** @type {!Array<!GestureRecognizer>} */\nexport const recognizers = [];\n\n/**\n * Finds the element rendered on the screen at the provided coordinates.\n *\n * Similar to `document.elementFromPoint`, but pierces through\n * shadow roots.\n *\n * @param {number} x Horizontal pixel coordinate\n * @param {number} y Vertical pixel coordinate\n * @return {Element} Returns the deepest shadowRoot inclusive element\n * found at the screen position given.\n */\nexport function deepTargetFind(x, y) {\n  let node = document.elementFromPoint(x, y);\n  let next = node;\n  // this code path is only taken when native ShadowDOM is used\n  // if there is a shadowroot, it may have a node at x/y\n  // if there is not a shadowroot, exit the loop\n  while (next && next.shadowRoot && !window.ShadyDOM) {\n    // if there is a node at x/y in the shadowroot, look deeper\n    let oldNext = next;\n    next = next.shadowRoot.elementFromPoint(x, y);\n    // on Safari, elementFromPoint may return the shadowRoot host\n    if (oldNext === next) {\n      break;\n    }\n    if (next) {\n      node = next;\n    }\n  }\n  return node;\n}\n\n/**\n * a cheaper check than ev.composedPath()[0];\n *\n * @private\n * @param {Event|Touch} ev Event.\n * @return {EventTarget} Returns the event target.\n */\nfunction _findOriginalTarget(ev) {\n  const path = getComposedPath(/** @type {?Event} */ (ev));\n  // It shouldn't be, but sometimes path is empty (window on Safari).\n  return path.length > 0 ? path[0] : ev.target;\n}\n\n/**\n * @private\n * @param {Event} ev Event.\n * @return {void}\n */\nfunction _handleNative(ev) {\n  let handled;\n  let type = ev.type;\n  let node = ev.currentTarget;\n  let gobj = node[GESTURE_KEY];\n  if (!gobj) {\n    return;\n  }\n  let gs = gobj[type];\n  if (!gs) {\n    return;\n  }\n  if (!ev[HANDLED_OBJ]) {\n    ev[HANDLED_OBJ] = {};\n    if (type.slice(0, 5) === 'touch') {\n      ev = /** @type {TouchEvent} */(ev); // eslint-disable-line no-self-assign\n      let t = ev.changedTouches[0];\n      if (type === 'touchstart') {\n        // only handle the first finger\n        if (ev.touches.length === 1) {\n          POINTERSTATE.touch.id = t.identifier;\n        }\n      }\n      if (POINTERSTATE.touch.id !== t.identifier) {\n        return;\n      }\n      if (!HAS_NATIVE_TA) {\n        if (type === 'touchstart' || type === 'touchmove') {\n          _handleTouchAction(ev);\n        }\n      }\n    }\n  }\n  handled = ev[HANDLED_OBJ];\n  // used to ignore synthetic mouse events\n  if (handled.skip) {\n    return;\n  }\n  // reset recognizer state\n  for (let i = 0, r; i < recognizers.length; i++) {\n    r = recognizers[i];\n    if (gs[r.name] && !handled[r.name]) {\n      if (r.flow && r.flow.start.indexOf(ev.type) > -1 && r.reset) {\n        r.reset();\n      }\n    }\n  }\n  // enforce gesture recognizer order\n  for (let i = 0, r; i < recognizers.length; i++) {\n    r = recognizers[i];\n    if (gs[r.name] && !handled[r.name]) {\n      handled[r.name] = true;\n      r[type](ev);\n    }\n  }\n}\n\n/**\n * @private\n * @param {TouchEvent} ev Event.\n * @return {void}\n */\nfunction _handleTouchAction(ev) {\n  let t = ev.changedTouches[0];\n  let type = ev.type;\n  if (type === 'touchstart') {\n    POINTERSTATE.touch.x = t.clientX;\n    POINTERSTATE.touch.y = t.clientY;\n    POINTERSTATE.touch.scrollDecided = false;\n  } else if (type === 'touchmove') {\n    if (POINTERSTATE.touch.scrollDecided) {\n      return;\n    }\n    POINTERSTATE.touch.scrollDecided = true;\n    let ta = firstTouchAction(ev);\n    let shouldPrevent = false;\n    let dx = Math.abs(POINTERSTATE.touch.x - t.clientX);\n    let dy = Math.abs(POINTERSTATE.touch.y - t.clientY);\n    if (!ev.cancelable) {\n      // scrolling is happening\n    } else if (ta === 'none') {\n      shouldPrevent = true;\n    } else if (ta === 'pan-x') {\n      shouldPrevent = dy > dx;\n    } else if (ta === 'pan-y') {\n      shouldPrevent = dx > dy;\n    }\n    if (shouldPrevent) {\n      ev.preventDefault();\n    } else {\n      prevent('track');\n    }\n  }\n}\n\n/**\n * Adds an event listener to a node for the given gesture type.\n *\n * @param {!EventTarget} node Node to add listener on\n * @param {string} evType Gesture type: `down`, `up`, `track`, or `tap`\n * @param {!function(!Event):void} handler Event listener function to call\n * @return {boolean} Returns true if a gesture event listener was added.\n */\nexport function addListener(node, evType, handler) {\n  if (gestures[evType]) {\n    _add(node, evType, handler);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Removes an event listener from a node for the given gesture type.\n *\n * @param {!EventTarget} node Node to remove listener from\n * @param {string} evType Gesture type: `down`, `up`, `track`, or `tap`\n * @param {!function(!Event):void} handler Event listener function previously passed to\n *  `addListener`.\n * @return {boolean} Returns true if a gesture event listener was removed.\n */\nexport function removeListener(node, evType, handler) {\n  if (gestures[evType]) {\n    _remove(node, evType, handler);\n    return true;\n  }\n  return false;\n}\n\n/**\n * automate the event listeners for the native events\n *\n * @private\n * @param {!EventTarget} node Node on which to add the event.\n * @param {string} evType Event type to add.\n * @param {function(!Event)} handler Event handler function.\n * @return {void}\n */\nfunction _add(node, evType, handler) {\n  let recognizer = gestures[evType];\n  let deps = recognizer.deps;\n  let name = recognizer.name;\n  let gobj = node[GESTURE_KEY];\n  if (!gobj) {\n    node[GESTURE_KEY] = gobj = {};\n  }\n  for (let i = 0, dep, gd; i < deps.length; i++) {\n    dep = deps[i];\n    // don't add mouse handlers on iOS because they cause gray selection overlays\n    if (IS_TOUCH_ONLY && isMouseEvent(dep) && dep !== 'click') {\n      continue;\n    }\n    gd = gobj[dep];\n    if (!gd) {\n      gobj[dep] = gd = {_count: 0};\n    }\n    if (gd._count === 0) {\n      node.addEventListener(dep, _handleNative, PASSIVE_TOUCH(dep));\n    }\n    gd[name] = (gd[name] || 0) + 1;\n    gd._count = (gd._count || 0) + 1;\n  }\n  node.addEventListener(evType, handler);\n  if (recognizer.touchAction) {\n    setTouchAction(node, recognizer.touchAction);\n  }\n}\n\n/**\n * automate event listener removal for native events\n *\n * @private\n * @param {!EventTarget} node Node on which to remove the event.\n * @param {string} evType Event type to remove.\n * @param {function(!Event): void} handler Event handler function.\n * @return {void}\n */\nfunction _remove(node, evType, handler) {\n  let recognizer = gestures[evType];\n  let deps = recognizer.deps;\n  let name = recognizer.name;\n  let gobj = node[GESTURE_KEY];\n  if (gobj) {\n    for (let i = 0, dep, gd; i < deps.length; i++) {\n      dep = deps[i];\n      gd = gobj[dep];\n      if (gd && gd[name]) {\n        gd[name] = (gd[name] || 1) - 1;\n        gd._count = (gd._count || 1) - 1;\n        if (gd._count === 0) {\n          node.removeEventListener(dep, _handleNative, PASSIVE_TOUCH(dep));\n        }\n      }\n    }\n  }\n  node.removeEventListener(evType, handler);\n}\n\n/**\n * Registers a new gesture event recognizer for adding new custom\n * gesture event types.\n *\n * @param {!GestureRecognizer} recog Gesture recognizer descriptor\n * @return {void}\n */\nexport function register(recog) {\n  recognizers.push(recog);\n  for (let i = 0; i < recog.emits.length; i++) {\n    gestures[recog.emits[i]] = recog;\n  }\n}\n\n/**\n * @private\n * @param {string} evName Event name.\n * @return {Object} Returns the gesture for the given event name.\n */\nfunction _findRecognizerByEvent(evName) {\n  for (let i = 0, r; i < recognizers.length; i++) {\n    r = recognizers[i];\n    for (let j = 0, n; j < r.emits.length; j++) {\n      n = r.emits[j];\n      if (n === evName) {\n        return r;\n      }\n    }\n  }\n  return null;\n}\n\n/**\n * Sets scrolling direction on node.\n *\n * This value is checked on first move, thus it should be called prior to\n * adding event listeners.\n *\n * @param {!EventTarget} node Node to set touch action setting on\n * @param {string} value Touch action value\n * @return {void}\n */\nexport function setTouchAction(node, value) {\n  if (HAS_NATIVE_TA && node instanceof HTMLElement) {\n    // NOTE: add touchAction async so that events can be added in\n    // custom element constructors. Otherwise we run afoul of custom\n    // elements restriction against settings attributes (style) in the\n    // constructor.\n    microTask.run(() => {\n      node.style.touchAction = value;\n    });\n  }\n  node[TOUCH_ACTION] = value;\n}\n\n/**\n * Dispatches an event on the `target` element of `type` with the given\n * `detail`.\n * @private\n * @param {!EventTarget} target The element on which to fire an event.\n * @param {string} type The type of event to fire.\n * @param {!Object=} detail The detail object to populate on the event.\n * @return {void}\n */\nfunction _fire(target, type, detail) {\n  let ev = new Event(type, { bubbles: true, cancelable: true, composed: true });\n  ev.detail = detail;\n  wrap(/** @type {!Node} */(target)).dispatchEvent(ev);\n  // forward `preventDefault` in a clean way\n  if (ev.defaultPrevented) {\n    let preventer = detail.preventer || detail.sourceEvent;\n    if (preventer && preventer.preventDefault) {\n      preventer.preventDefault();\n    }\n  }\n}\n\n/**\n * Prevents the dispatch and default action of the given event name.\n *\n * @param {string} evName Event name.\n * @return {void}\n */\nexport function prevent(evName) {\n  let recognizer = _findRecognizerByEvent(evName);\n  if (recognizer.info) {\n    recognizer.info.prevent = true;\n  }\n}\n\n/**\n * Reset the 2500ms timeout on processing mouse input after detecting touch input.\n *\n * Touch inputs create synthesized mouse inputs anywhere from 0 to 2000ms after the touch.\n * This method should only be called during testing with simulated touch inputs.\n * Calling this method in production may cause duplicate taps or other Gestures.\n *\n * @return {void}\n */\nexport function resetMouseCanceller() {\n  if (POINTERSTATE.mouse.mouseIgnoreJob) {\n    POINTERSTATE.mouse.mouseIgnoreJob.flush();\n  }\n}\n\n/* eslint-disable valid-jsdoc */\n\nregister({\n  name: 'downup',\n  deps: ['mousedown', 'touchstart', 'touchend'],\n  flow: {\n    start: ['mousedown', 'touchstart'],\n    end: ['mouseup', 'touchend']\n  },\n  emits: ['down', 'up'],\n\n  info: {\n    movefn: null,\n    upfn: null\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @return {void}\n   */\n  reset: function() {\n    untrackDocument(this.info);\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   * @return {void}\n   */\n  mousedown: function(e) {\n    if (!hasLeftMouseButton(e)) {\n      return;\n    }\n    let t = _findOriginalTarget(e);\n    let self = this;\n    let movefn = function movefn(e) {\n      if (!hasLeftMouseButton(e)) {\n        downupFire('up', t, e);\n        untrackDocument(self.info);\n      }\n    };\n    let upfn = function upfn(e) {\n      if (hasLeftMouseButton(e)) {\n        downupFire('up', t, e);\n      }\n      untrackDocument(self.info);\n    };\n    trackDocument(this.info, movefn, upfn);\n    downupFire('down', t, e);\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchstart: function(e) {\n    downupFire('down', _findOriginalTarget(e), e.changedTouches[0], e);\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchend: function(e) {\n    downupFire('up', _findOriginalTarget(e), e.changedTouches[0], e);\n  }\n});\n\n/**\n * @param {string} type\n * @param {EventTarget} target\n * @param {Event|Touch} event\n * @param {Event=} preventer\n * @return {void}\n */\nfunction downupFire(type, target, event, preventer) {\n  if (!target) {\n    return;\n  }\n  _fire(target, type, {\n    x: event.clientX,\n    y: event.clientY,\n    sourceEvent: event,\n    preventer: preventer,\n    prevent: function(e) {\n      return prevent(e);\n    }\n  });\n}\n\nregister({\n  name: 'track',\n  touchAction: 'none',\n  deps: ['mousedown', 'touchstart', 'touchmove', 'touchend'],\n  flow: {\n    start: ['mousedown', 'touchstart'],\n    end: ['mouseup', 'touchend']\n  },\n  emits: ['track'],\n\n  info: {\n    x: 0,\n    y: 0,\n    state: 'start',\n    started: false,\n    moves: [],\n    /** @this {GestureInfo} */\n    addMove: function(move) {\n      if (this.moves.length > TRACK_LENGTH) {\n        this.moves.shift();\n      }\n      this.moves.push(move);\n    },\n    movefn: null,\n    upfn: null,\n    prevent: false\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @return {void}\n   */\n  reset: function() {\n    this.info.state = 'start';\n    this.info.started = false;\n    this.info.moves = [];\n    this.info.x = 0;\n    this.info.y = 0;\n    this.info.prevent = false;\n    untrackDocument(this.info);\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   * @return {void}\n   */\n  mousedown: function(e) {\n    if (!hasLeftMouseButton(e)) {\n      return;\n    }\n    let t = _findOriginalTarget(e);\n    let self = this;\n    let movefn = function movefn(e) {\n      let x = e.clientX, y = e.clientY;\n      if (trackHasMovedEnough(self.info, x, y)) {\n        // first move is 'start', subsequent moves are 'move', mouseup is 'end'\n        self.info.state = self.info.started ? (e.type === 'mouseup' ? 'end' : 'track') : 'start';\n        if (self.info.state === 'start') {\n          // if and only if tracking, always prevent tap\n          prevent('tap');\n        }\n        self.info.addMove({x: x, y: y});\n        if (!hasLeftMouseButton(e)) {\n          // always fire \"end\"\n          self.info.state = 'end';\n          untrackDocument(self.info);\n        }\n        if (t) {\n          trackFire(self.info, t, e);\n        }\n        self.info.started = true;\n      }\n    };\n    let upfn = function upfn(e) {\n      if (self.info.started) {\n        movefn(e);\n      }\n\n      // remove the temporary listeners\n      untrackDocument(self.info);\n    };\n    // add temporary document listeners as mouse retargets\n    trackDocument(this.info, movefn, upfn);\n    this.info.x = e.clientX;\n    this.info.y = e.clientY;\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchstart: function(e) {\n    let ct = e.changedTouches[0];\n    this.info.x = ct.clientX;\n    this.info.y = ct.clientY;\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchmove: function(e) {\n    let t = _findOriginalTarget(e);\n    let ct = e.changedTouches[0];\n    let x = ct.clientX, y = ct.clientY;\n    if (trackHasMovedEnough(this.info, x, y)) {\n      if (this.info.state === 'start') {\n        // if and only if tracking, always prevent tap\n        prevent('tap');\n      }\n      this.info.addMove({x: x, y: y});\n      trackFire(this.info, t, ct);\n      this.info.state = 'track';\n      this.info.started = true;\n    }\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchend: function(e) {\n    let t = _findOriginalTarget(e);\n    let ct = e.changedTouches[0];\n    // only trackend if track was started and not aborted\n    if (this.info.started) {\n      // reset started state on up\n      this.info.state = 'end';\n      this.info.addMove({x: ct.clientX, y: ct.clientY});\n      trackFire(this.info, t, ct);\n    }\n  }\n});\n\n/**\n * @param {!GestureInfo} info\n * @param {number} x\n * @param {number} y\n * @return {boolean}\n */\nfunction trackHasMovedEnough(info, x, y) {\n  if (info.prevent) {\n    return false;\n  }\n  if (info.started) {\n    return true;\n  }\n  let dx = Math.abs(info.x - x);\n  let dy = Math.abs(info.y - y);\n  return (dx >= TRACK_DISTANCE || dy >= TRACK_DISTANCE);\n}\n\n/**\n * @param {!GestureInfo} info\n * @param {?EventTarget} target\n * @param {Touch} touch\n * @return {void}\n */\nfunction trackFire(info, target, touch) {\n  if (!target) {\n    return;\n  }\n  let secondlast = info.moves[info.moves.length - 2];\n  let lastmove = info.moves[info.moves.length - 1];\n  let dx = lastmove.x - info.x;\n  let dy = lastmove.y - info.y;\n  let ddx, ddy = 0;\n  if (secondlast) {\n    ddx = lastmove.x - secondlast.x;\n    ddy = lastmove.y - secondlast.y;\n  }\n  _fire(target, 'track', {\n    state: info.state,\n    x: touch.clientX,\n    y: touch.clientY,\n    dx: dx,\n    dy: dy,\n    ddx: ddx,\n    ddy: ddy,\n    sourceEvent: touch,\n    hover: function() {\n      return deepTargetFind(touch.clientX, touch.clientY);\n    }\n  });\n}\n\nregister({\n  name: 'tap',\n  deps: ['mousedown', 'click', 'touchstart', 'touchend'],\n  flow: {\n    start: ['mousedown', 'touchstart'],\n    end: ['click', 'touchend']\n  },\n  emits: ['tap'],\n  info: {\n    x: NaN,\n    y: NaN,\n    prevent: false\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @return {void}\n   */\n  reset: function() {\n    this.info.x = NaN;\n    this.info.y = NaN;\n    this.info.prevent = false;\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   * @return {void}\n   */\n  mousedown: function(e) {\n    if (hasLeftMouseButton(e)) {\n      this.info.x = e.clientX;\n      this.info.y = e.clientY;\n    }\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   * @return {void}\n   */\n  click: function(e) {\n    if (hasLeftMouseButton(e)) {\n      trackForward(this.info, e);\n    }\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchstart: function(e) {\n    const touch = e.changedTouches[0];\n    this.info.x = touch.clientX;\n    this.info.y = touch.clientY;\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchend: function(e) {\n    trackForward(this.info, e.changedTouches[0], e);\n  }\n});\n\n/**\n * @param {!GestureInfo} info\n * @param {Event | Touch} e\n * @param {Event=} preventer\n * @return {void}\n */\nfunction trackForward(info, e, preventer) {\n  let dx = Math.abs(e.clientX - info.x);\n  let dy = Math.abs(e.clientY - info.y);\n  // find original target from `preventer` for TouchEvents, or `e` for MouseEvents\n  let t = _findOriginalTarget((preventer || e));\n  if (!t || (canBeDisabled[/** @type {!HTMLElement} */(t).localName] && t.hasAttribute('disabled'))) {\n    return;\n  }\n  // dx,dy can be NaN if `click` has been simulated and there was no `down` for `start`\n  if (isNaN(dx) || isNaN(dy) || (dx <= TAP_DISTANCE && dy <= TAP_DISTANCE) || isSyntheticClick(e)) {\n    // prevent taps from being generated if an event has canceled them\n    if (!info.prevent) {\n      _fire(t, 'tap', {\n        x: e.clientX,\n        y: e.clientY,\n        sourceEvent: e,\n        preventer: preventer\n      });\n    }\n  }\n}\n\n/* eslint-enable valid-jsdoc */\n\n/** @deprecated */\nexport const findOriginalTarget = _findOriginalTarget;\n\n/** @deprecated */\nexport const add = addListener;\n\n/** @deprecated */\nexport const remove = removeListener;\n"
    },
    {
     "id": 34,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/utils/wrap.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/* eslint-disable valid-jsdoc */\n/**\n * Node wrapper to ensure ShadowDOM safe operation regardless of polyfill\n * presence or mode. Note that with the introduction of `ShadyDOM.noPatch`,\n * a node wrapper must be used to access ShadowDOM API.\n * This is similar to using `Polymer.dom` but relies exclusively\n * on the presence of the ShadyDOM polyfill rather than requiring the loading\n * of legacy (Polymer.dom) API.\n * @type {function(Node):Node}\n */\nexport const wrap = (window['ShadyDOM'] && window['ShadyDOM']['noPatch'] && window['ShadyDOM']['wrap']) ?\n  window['ShadyDOM']['wrap'] : (n) => n;\n\n"
    },
    {
     "id": 35,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/legacy/class.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { LegacyElementMixin } from './legacy-element-mixin.js';\nimport { legacyOptimizations } from '../utils/settings.js';\n\nconst lifecycleProps = {\n  attached: true,\n  detached: true,\n  ready: true,\n  created: true,\n  beforeRegister: true,\n  registered: true,\n  attributeChanged: true,\n  listeners: true,\n  hostAttributes: true\n};\n\nconst excludeOnInfo = {\n  attached: true,\n  detached: true,\n  ready: true,\n  created: true,\n  beforeRegister: true,\n  registered: true,\n  attributeChanged: true,\n  behaviors: true,\n  _noAccessors: true\n};\n\nconst excludeOnBehaviors = Object.assign({\n  listeners: true,\n  hostAttributes: true,\n  properties: true,\n  observers: true,\n}, excludeOnInfo);\n\nfunction copyProperties(source, target, excludeProps) {\n  const noAccessors = source._noAccessors;\n  const propertyNames = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < propertyNames.length; i++) {\n    let p = propertyNames[i];\n    if (p in excludeProps) {\n      continue;\n    }\n    if (noAccessors) {\n      target[p] = source[p];\n    } else {\n      let pd = Object.getOwnPropertyDescriptor(source, p);\n      if (pd) {\n        // ensure property is configurable so that a later behavior can\n        // re-configure it.\n        pd.configurable = true;\n        Object.defineProperty(target, p, pd);\n      }\n    }\n  }\n}\n\n/**\n * Applies a \"legacy\" behavior or array of behaviors to the provided class.\n *\n * Note: this method will automatically also apply the `LegacyElementMixin`\n * to ensure that any legacy behaviors can rely on legacy Polymer API on\n * the underlying element.\n *\n * @function\n * @template T\n * @param {!Object|!Array<!Object>} behaviors Behavior object or array of behaviors.\n * @param {function(new:T)} klass Element class.\n * @return {?} Returns a new Element class extended by the\n * passed in `behaviors` and also by `LegacyElementMixin`.\n * @suppress {invalidCasts, checkTypes}\n */\nexport function mixinBehaviors(behaviors, klass) {\n  return GenerateClassFromInfo({}, LegacyElementMixin(klass), behaviors);\n}\n\n// NOTE:\n// 1.x\n// Behaviors were mixed in *in reverse order* and de-duped on the fly.\n// The rule was that behavior properties were copied onto the element\n// prototype if and only if the property did not already exist.\n// Given: Polymer{ behaviors: [A, B, C, A, B]}, property copy order was:\n// (1), B, (2), A, (3) C. This means prototype properties win over\n// B properties win over A win over C. This mirrors what would happen\n// with inheritance if element extended B extended A extended C.\n//\n// Again given, Polymer{ behaviors: [A, B, C, A, B]}, the resulting\n// `behaviors` array was [C, A, B].\n// Behavior lifecycle methods were called in behavior array order\n// followed by the element, e.g. (1) C.created, (2) A.created,\n// (3) B.created, (4) element.created. There was no support for\n// super, and \"super-behavior\" methods were callable only by name).\n//\n// 2.x\n// Behaviors are made into proper mixins which live in the\n// element's prototype chain. Behaviors are placed in the element prototype\n// eldest to youngest and de-duped youngest to oldest:\n// So, first [A, B, C, A, B] becomes [C, A, B] then,\n// the element prototype becomes (oldest) (1) PolymerElement, (2) class(C),\n// (3) class(A), (4) class(B), (5) class(Polymer({...})).\n// Result:\n// This means element properties win over B properties win over A win\n// over C. (same as 1.x)\n// If lifecycle is called (super then me), order is\n// (1) C.created, (2) A.created, (3) B.created, (4) element.created\n// (again same as 1.x)\nfunction applyBehaviors(proto, behaviors, lifecycle) {\n  for (let i=0; i<behaviors.length; i++) {\n    applyInfo(proto, behaviors[i], lifecycle, excludeOnBehaviors);\n  }\n}\n\nfunction applyInfo(proto, info, lifecycle, excludeProps) {\n  copyProperties(info, proto, excludeProps);\n  for (let p in lifecycleProps) {\n    if (info[p]) {\n      lifecycle[p] = lifecycle[p] || [];\n      lifecycle[p].push(info[p]);\n    }\n  }\n}\n\n/**\n * @param {Array} behaviors List of behaviors to flatten.\n * @param {Array=} list Target list to flatten behaviors into.\n * @param {Array=} exclude List of behaviors to exclude from the list.\n * @return {!Array} Returns the list of flattened behaviors.\n */\nfunction flattenBehaviors(behaviors, list, exclude) {\n  list = list || [];\n  for (let i=behaviors.length-1; i >= 0; i--) {\n    let b = behaviors[i];\n    if (b) {\n      if (Array.isArray(b)) {\n        flattenBehaviors(b, list);\n      } else {\n        // dedup\n        if (list.indexOf(b) < 0 && (!exclude || exclude.indexOf(b) < 0)) {\n          list.unshift(b);\n        }\n      }\n    } else {\n      console.warn('behavior is null, check for missing or 404 import');\n    }\n  }\n  return list;\n}\n\n/**\n * Copies property descriptors from source to target, overwriting all fields\n * of any previous descriptor for a property *except* for `value`, which is\n * merged in from the target if it does not exist on the source.\n * \n * @param {*} target Target properties object\n * @param {*} source Source properties object\n */\nfunction mergeProperties(target, source) {\n  for (const p in source) {\n    const targetInfo = target[p];\n    const sourceInfo = source[p];\n    if (!('value' in sourceInfo) && targetInfo && ('value' in targetInfo)) {\n      target[p] = Object.assign({value: targetInfo.value}, sourceInfo);\n    } else {\n      target[p] = sourceInfo;\n    }\n  }\n}\n\n/* Note about construction and extension of legacy classes.\n  [Changed in Q4 2018 to optimize performance.]\n\n  When calling `Polymer` or `mixinBehaviors`, the generated class below is\n  made. The list of behaviors was previously made into one generated class per\n  behavior, but this is no longer the case as behaviors are now called\n  manually. Note, there may *still* be multiple generated classes in the\n  element's prototype chain if extension is used with `mixinBehaviors`.\n\n  The generated class is directly tied to the info object and behaviors\n  used to create it. That list of behaviors is filtered so it's only the\n  behaviors not active on the superclass. In order to call through to the\n  entire list of lifecycle methods, it's important to call `super`.\n\n  The element's `properties` and `observers` are controlled via the finalization\n  mechanism provided by `PropertiesMixin`. `Properties` and `observers` are\n  collected by manually traversing the prototype chain and merging.\n\n  To limit changes, the `_registered` method is called via `_initializeProperties`\n  and not `_finalizeClass`.\n\n*/\n/**\n * @param {!PolymerInit} info Polymer info object\n * @param {function(new:HTMLElement)} Base base class to extend with info object\n * @param {Object=} behaviors behaviors to copy into the element\n * @return {function(new:HTMLElement)} Generated class\n * @suppress {checkTypes}\n * @private\n */\nfunction GenerateClassFromInfo(info, Base, behaviors) {\n\n  // manages behavior and lifecycle processing (filled in after class definition)\n  let behaviorList;\n  const lifecycle = {};\n\n  /** @private */\n  class PolymerGenerated extends Base {\n\n    // explicitly not calling super._finalizeClass\n    static _finalizeClass() {\n      // if calling via a subclass that hasn't been generated, pass through to super\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('generatedFrom', this))) {\n        super._finalizeClass();\n      } else {\n        // interleave properties and observers per behavior and `info`\n        if (behaviorList) {\n          for (let i=0, b; i < behaviorList.length; i++) {\n            b = behaviorList[i];\n            if (b.properties) {\n              this.createProperties(b.properties);\n            }\n            if (b.observers) {\n              this.createObservers(b.observers, b.properties);\n            }\n          }\n        }\n        if (info.properties) {\n          this.createProperties(info.properties);\n        }\n        if (info.observers) {\n          this.createObservers(info.observers, info.properties);\n        }\n        // make sure to prepare the element template\n        this._prepareTemplate();\n      }\n    }\n\n    static get properties() {\n      const properties = {};\n      if (behaviorList) {\n        for (let i=0; i < behaviorList.length; i++) {\n          mergeProperties(properties, behaviorList[i].properties);\n        }\n      }\n      mergeProperties(properties, info.properties);\n      return properties;\n    }\n\n    static get observers() {\n      let observers = [];\n      if (behaviorList) {\n        for (let i=0, b; i < behaviorList.length; i++) {\n          b = behaviorList[i];\n          if (b.observers) {\n            observers = observers.concat(b.observers);\n          }\n        }\n      }\n      if (info.observers) {\n        observers = observers.concat(info.observers);\n      }\n      return observers;\n    }\n\n    /**\n     * @return {void}\n     */\n    created() {\n      super.created();\n      const list = lifecycle.created;\n      if (list) {\n        for (let i=0; i < list.length; i++) {\n          list[i].call(this);\n        }\n      }\n    }\n\n    /**\n     * @return {void}\n     */\n    _registered() {\n      /* NOTE: `beforeRegister` is called here for bc, but the behavior\n        is different than in 1.x. In 1.0, the method was called *after*\n        mixing prototypes together but *before* processing of meta-objects.\n        However, dynamic effects can still be set here and can be done either\n        in `beforeRegister` or `registered`. It is no longer possible to set\n        `is` in `beforeRegister` as you could in 1.x.\n      */\n      // only proceed if the generated class' prototype has not been registered.\n      const generatedProto = PolymerGenerated.prototype;\n      if (!generatedProto.hasOwnProperty('__hasRegisterFinished')) {\n        generatedProto.__hasRegisterFinished = true;\n        // ensure superclass is registered first.\n        super._registered();\n        // copy properties onto the generated class lazily if we're optimizing,\n        if (legacyOptimizations) {\n          copyPropertiesToProto(generatedProto);\n        }\n        // make sure legacy lifecycle is called on the *element*'s prototype\n        // and not the generated class prototype; if the element has been\n        // extended, these are *not* the same.\n        const proto = Object.getPrototypeOf(this);\n        let list = lifecycle.beforeRegister;\n        if (list) {\n          for (let i=0; i < list.length; i++) {\n            list[i].call(proto);\n          }\n        }\n        list = lifecycle.registered;\n        if (list) {\n          for (let i=0; i < list.length; i++) {\n            list[i].call(proto);\n          }\n        }\n      }\n    }\n\n    /**\n     * @return {void}\n     */\n    _applyListeners() {\n      super._applyListeners();\n      const list = lifecycle.listeners;\n      if (list) {\n        for (let i=0; i < list.length; i++) {\n          const listeners = list[i];\n          if (listeners) {\n            for (let l in listeners) {\n              this._addMethodEventListenerToNode(this, l, listeners[l]);\n            }\n          }\n        }\n      }\n    }\n\n    // note: exception to \"super then me\" rule;\n    // do work before calling super so that super attributes\n    // only apply if not already set.\n    /**\n     * @return {void}\n     */\n    _ensureAttributes() {\n      const list = lifecycle.hostAttributes;\n      if (list) {\n        for (let i=list.length-1; i >= 0; i--) {\n          const hostAttributes = list[i];\n          for (let a in hostAttributes) {\n              this._ensureAttribute(a, hostAttributes[a]);\n            }\n        }\n      }\n      super._ensureAttributes();\n    }\n\n    /**\n     * @return {void}\n     */\n    ready() {\n      super.ready();\n      let list = lifecycle.ready;\n      if (list) {\n        for (let i=0; i < list.length; i++) {\n          list[i].call(this);\n        }\n      }\n    }\n\n    /**\n     * @return {void}\n     */\n    attached() {\n      super.attached();\n      let list = lifecycle.attached;\n      if (list) {\n        for (let i=0; i < list.length; i++) {\n          list[i].call(this);\n        }\n      }\n    }\n\n    /**\n     * @return {void}\n     */\n    detached() {\n      super.detached();\n      let list = lifecycle.detached;\n      if (list) {\n        for (let i=0; i < list.length; i++) {\n          list[i].call(this);\n        }\n      }\n    }\n\n    /**\n     * Implements native Custom Elements `attributeChangedCallback` to\n     * set an attribute value to a property via `_attributeToProperty`.\n     *\n     * @param {string} name Name of attribute that changed\n     * @param {?string} old Old attribute value\n     * @param {?string} value New attribute value\n     * @return {void}\n     */\n    attributeChanged(name, old, value) {\n      super.attributeChanged();\n      let list = lifecycle.attributeChanged;\n      if (list) {\n        for (let i=0; i < list.length; i++) {\n          list[i].call(this, name, old, value);\n        }\n      }\n    }\n  }\n\n  // apply behaviors, note actual copying is done lazily at first instance creation\n  if (behaviors) {\n    // NOTE: ensure the behavior is extending a class with\n    // legacy element api. This is necessary since behaviors expect to be able\n    // to access 1.x legacy api.\n    if (!Array.isArray(behaviors)) {\n      behaviors = [behaviors];\n    }\n    let superBehaviors = Base.prototype.behaviors;\n    // get flattened, deduped list of behaviors *not* already on super class\n    behaviorList = flattenBehaviors(behaviors, null, superBehaviors);\n    PolymerGenerated.prototype.behaviors = superBehaviors ?\n      superBehaviors.concat(behaviors) : behaviorList;\n  }\n\n  const copyPropertiesToProto = (proto) => {\n    if (behaviorList) {\n      applyBehaviors(proto, behaviorList, lifecycle);\n    }\n    applyInfo(proto, info, lifecycle, excludeOnInfo);\n  };\n\n  // copy properties if we're not optimizing\n  if (!legacyOptimizations) {\n    copyPropertiesToProto(PolymerGenerated.prototype);\n  }\n\n  PolymerGenerated.generatedFrom = info;\n\n  return PolymerGenerated;\n}\n\n/**\n * Generates a class that extends `LegacyElement` based on the\n * provided info object.  Metadata objects on the `info` object\n * (`properties`, `observers`, `listeners`, `behaviors`, `is`) are used\n * for Polymer's meta-programming systems, and any functions are copied\n * to the generated class.\n *\n * Valid \"metadata\" values are as follows:\n *\n * `is`: String providing the tag name to register the element under. In\n * addition, if a `dom-module` with the same id exists, the first template\n * in that `dom-module` will be stamped into the shadow root of this element,\n * with support for declarative event listeners (`on-...`), Polymer data\n * bindings (`[[...]]` and `{{...}}`), and id-based node finding into\n * `this.$`.\n *\n * `properties`: Object describing property-related metadata used by Polymer\n * features (key: property names, value: object containing property metadata).\n * Valid keys in per-property metadata include:\n * - `type` (String|Number|Object|Array|...): Used by\n *   `attributeChangedCallback` to determine how string-based attributes\n *   are deserialized to JavaScript property values.\n * - `notify` (boolean): Causes a change in the property to fire a\n *   non-bubbling event called `<property>-changed`. Elements that have\n *   enabled two-way binding to the property use this event to observe changes.\n * - `readOnly` (boolean): Creates a getter for the property, but no setter.\n *   To set a read-only property, use the private setter method\n *   `_setProperty(property, value)`.\n * - `observer` (string): Observer method name that will be called when\n *   the property changes. The arguments of the method are\n *   `(value, previousValue)`.\n * - `computed` (string): String describing method and dependent properties\n *   for computing the value of this property (e.g. `'computeFoo(bar, zot)'`).\n *   Computed properties are read-only by default and can only be changed\n *   via the return value of the computing method.\n *\n * `observers`: Array of strings describing multi-property observer methods\n *  and their dependent properties (e.g. `'observeABC(a, b, c)'`).\n *\n * `listeners`: Object describing event listeners to be added to each\n *  instance of this element (key: event name, value: method name).\n *\n * `behaviors`: Array of additional `info` objects containing metadata\n * and callbacks in the same format as the `info` object here which are\n * merged into this element.\n *\n * `hostAttributes`: Object listing attributes to be applied to the host\n *  once created (key: attribute name, value: attribute value).  Values\n *  are serialized based on the type of the value.  Host attributes should\n *  generally be limited to attributes such as `tabIndex` and `aria-...`.\n *  Attributes in `hostAttributes` are only applied if a user-supplied\n *  attribute is not already present (attributes in markup override\n *  `hostAttributes`).\n *\n * In addition, the following Polymer-specific callbacks may be provided:\n * - `registered`: called after first instance of this element,\n * - `created`: called during `constructor`\n * - `attached`: called during `connectedCallback`\n * - `detached`: called during `disconnectedCallback`\n * - `ready`: called before first `attached`, after all properties of\n *   this element have been propagated to its template and all observers\n *   have run\n *\n * @param {!PolymerInit} info Object containing Polymer metadata and functions\n *   to become class methods.\n * @template T\n * @param {function(T):T} mixin Optional mixin to apply to legacy base class\n *   before extending with Polymer metaprogramming.\n * @return {function(new:HTMLElement)} Generated class\n */\nexport const Class = function(info, mixin) {\n  if (!info) {\n    console.warn('Polymer.Class requires `info` argument');\n  }\n  let klass = mixin ? mixin(LegacyElementMixin(HTMLElement)) :\n      LegacyElementMixin(HTMLElement);\n  klass = GenerateClassFromInfo(info, klass, info.behaviors);\n  // decorate klass with registration info\n  klass.is = klass.prototype.is = info.is;\n  return klass;\n};\n"
    },
    {
     "id": 36,
     "name": "../node_modules/.pnpm/@polymer+iron-resizable-behavior@3.0.1/node_modules/@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
     "source": "/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {useShadow} from '@polymer/polymer/lib/utils/settings.js';\n\n// Contains all connected resizables that do not have a parent.\nvar ORPHANS = new Set();\n\n/**\n * `IronResizableBehavior` is a behavior that can be used in Polymer elements to\n * coordinate the flow of resize events between \"resizers\" (elements that\n *control the size or hidden state of their children) and \"resizables\" (elements\n *that need to be notified when they are resized or un-hidden by their parents\n *in order to take action on their new measurements).\n *\n * Elements that perform measurement should add the `IronResizableBehavior`\n *behavior to their element definition and listen for the `iron-resize` event on\n *themselves. This event will be fired when they become showing after having\n *been hidden, when they are resized explicitly by another resizable, or when\n *the window has been resized.\n *\n * Note, the `iron-resize` event is non-bubbling.\n *\n * @polymerBehavior\n * @demo demo/index.html\n **/\nexport const IronResizableBehavior = {\n  properties: {\n    /**\n     * The closest ancestor element that implements `IronResizableBehavior`.\n     */\n    _parentResizable: {\n      type: Object,\n      observer: '_parentResizableChanged',\n    },\n\n    /**\n     * True if this element is currently notifying its descendant elements of\n     * resize.\n     */\n    _notifyingDescendant: {\n      type: Boolean,\n      value: false,\n    }\n  },\n\n  listeners: {\n    'iron-request-resize-notifications': '_onIronRequestResizeNotifications'\n  },\n\n  created: function() {\n    // We don't really need property effects on these, and also we want them\n    // to be created before the `_parentResizable` observer fires:\n    this._interestedResizables = [];\n    this._boundNotifyResize = this.notifyResize.bind(this);\n    this._boundOnDescendantIronResize = this._onDescendantIronResize.bind(this);\n  },\n\n  attached: function() {\n    this._requestResizeNotifications();\n  },\n\n  detached: function() {\n    if (this._parentResizable) {\n      this._parentResizable.stopResizeNotificationsFor(this);\n    } else {\n      ORPHANS.delete(this);\n      window.removeEventListener('resize', this._boundNotifyResize);\n    }\n\n    this._parentResizable = null;\n  },\n\n  /**\n   * Can be called to manually notify a resizable and its descendant\n   * resizables of a resize change.\n   */\n  notifyResize: function() {\n    if (!this.isAttached) {\n      return;\n    }\n\n    this._interestedResizables.forEach(function(resizable) {\n      if (this.resizerShouldNotify(resizable)) {\n        this._notifyDescendant(resizable);\n      }\n    }, this);\n\n    this._fireResize();\n  },\n\n  /**\n   * Used to assign the closest resizable ancestor to this resizable\n   * if the ancestor detects a request for notifications.\n   */\n  assignParentResizable: function(parentResizable) {\n    if (this._parentResizable) {\n      this._parentResizable.stopResizeNotificationsFor(this);\n    }\n\n    this._parentResizable = parentResizable;\n\n    if (parentResizable &&\n        parentResizable._interestedResizables.indexOf(this) === -1) {\n      parentResizable._interestedResizables.push(this);\n      parentResizable._subscribeIronResize(this);\n    }\n  },\n\n  /**\n   * Used to remove a resizable descendant from the list of descendants\n   * that should be notified of a resize change.\n   */\n  stopResizeNotificationsFor: function(target) {\n    var index = this._interestedResizables.indexOf(target);\n\n    if (index > -1) {\n      this._interestedResizables.splice(index, 1);\n      this._unsubscribeIronResize(target);\n    }\n  },\n\n  /**\n   * Subscribe this element to listen to iron-resize events on the given target.\n   *\n   * Preferred over target.listen because the property renamer does not\n   * understand to rename when the target is not specifically \"this\"\n   *\n   * @param {!HTMLElement} target Element to listen to for iron-resize events.\n   */\n  _subscribeIronResize: function(target) {\n    target.addEventListener('iron-resize', this._boundOnDescendantIronResize);\n  },\n\n  /**\n   * Unsubscribe this element from listening to to iron-resize events on the\n   * given target.\n   *\n   * Preferred over target.unlisten because the property renamer does not\n   * understand to rename when the target is not specifically \"this\"\n   *\n   * @param {!HTMLElement} target Element to listen to for iron-resize events.\n   */\n  _unsubscribeIronResize: function(target) {\n    target.removeEventListener(\n        'iron-resize', this._boundOnDescendantIronResize);\n  },\n\n  /**\n   * This method can be overridden to filter nested elements that should or\n   * should not be notified by the current element. Return true if an element\n   * should be notified, or false if it should not be notified.\n   *\n   * @param {HTMLElement} element A candidate descendant element that\n   * implements `IronResizableBehavior`.\n   * @return {boolean} True if the `element` should be notified of resize.\n   */\n  resizerShouldNotify: function(element) {\n    return true;\n  },\n\n  _onDescendantIronResize: function(event) {\n    if (this._notifyingDescendant) {\n      event.stopPropagation();\n      return;\n    }\n\n    // no need to use this during shadow dom because of event retargeting\n    if (!useShadow) {\n      this._fireResize();\n    }\n  },\n\n  _fireResize: function() {\n    this.fire('iron-resize', null, {node: this, bubbles: false});\n  },\n\n  _onIronRequestResizeNotifications: function(event) {\n    var target = /** @type {!EventTarget} */ (dom(event).rootTarget);\n    if (target === this) {\n      return;\n    }\n\n    target.assignParentResizable(this);\n    this._notifyDescendant(target);\n\n    event.stopPropagation();\n  },\n\n  _parentResizableChanged: function(parentResizable) {\n    if (parentResizable) {\n      window.removeEventListener('resize', this._boundNotifyResize);\n    }\n  },\n\n  _notifyDescendant: function(descendant) {\n    // NOTE(cdata): In IE10, attached is fired on children first, so it's\n    // important not to notify them if the parent is not attached yet (or\n    // else they will get redundantly notified when the parent attaches).\n    if (!this.isAttached) {\n      return;\n    }\n\n    this._notifyingDescendant = true;\n    descendant.notifyResize();\n    this._notifyingDescendant = false;\n  },\n\n  _requestResizeNotifications: function() {\n    if (!this.isAttached) {\n      return;\n    }\n\n    if (document.readyState === 'loading') {\n      var _requestResizeNotifications =\n          this._requestResizeNotifications.bind(this);\n      document.addEventListener(\n          'readystatechange', function readystatechanged() {\n            document.removeEventListener('readystatechange', readystatechanged);\n            _requestResizeNotifications();\n          });\n    } else {\n      this._findParent();\n\n      if (!this._parentResizable) {\n        // If this resizable is an orphan, tell other orphans to try to find\n        // their parent again, in case it's this resizable.\n        ORPHANS.forEach(function(orphan) {\n          if (orphan !== this) {\n            orphan._findParent();\n          }\n        }, this);\n\n        window.addEventListener('resize', this._boundNotifyResize);\n        this.notifyResize();\n      } else {\n        // If this resizable has a parent, tell other child resizables of\n        // that parent to try finding their parent again, in case it's this\n        // resizable.\n        this._parentResizable._interestedResizables\n            .forEach(function(resizable) {\n              if (resizable !== this) {\n                resizable._findParent();\n              }\n            }, this);\n      }\n    }\n  },\n\n  _findParent: function() {\n    this.assignParentResizable(null);\n    this.fire(\n        'iron-request-resize-notifications',\n        null,\n        {node: this, bubbles: true, cancelable: true});\n\n    if (!this._parentResizable) {\n      ORPHANS.add(this);\n    } else {\n      ORPHANS.delete(this);\n    }\n  }\n};\n"
    },
    {
     "id": 37,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-text-field@3.0.2/node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-text-field.js",
     "source": "import './vaadin-text-field-styles.js';\nimport '../../src/vaadin-text-field.js';\n"
    },
    {
     "id": 38,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-text-field@3.0.2/node_modules/@vaadin/vaadin-text-field/src/vaadin-text-field.js",
     "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { TextFieldMixin } from './vaadin-text-field-mixin.js';\nimport { ControlStateMixin } from '@vaadin/vaadin-control-state-mixin/vaadin-control-state-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\n\n/**\n * `<vaadin-text-field>` is a Web Component for text field control in forms.\n *\n * ```html\n * <vaadin-text-field label=\"First Name\">\n * </vaadin-text-field>\n * ```\n *\n * ### Prefixes and suffixes\n *\n * These are child elements of a `<vaadin-text-field>` that are displayed\n * inline with the input, before or after.\n * In order for an element to be considered as a prefix, it must have the slot\n * attribute set to `prefix` (and similarly for `suffix`).\n *\n * ```html\n * <vaadin-text-field label=\"Email address\">\n *   <div slot=\"prefix\">Sent to:</div>\n *   <div slot=\"suffix\">@vaadin.com</div>\n * </vaadin-text-area>\n * ```\n *\n * ### Styling\n *\n * The following custom properties are available for styling:\n *\n * Custom property | Description | Default\n * ----------------|-------------|-------------\n * `--vaadin-text-field-default-width` | Set the default width of the input field | `12em`\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `label` | The label element\n * `input-field` | The element that wraps prefix, value and suffix\n * `value` | The text value element inside the `input-field` element\n * `error-message` | The error message element\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `disabled` | Set to a disabled text field | :host\n * `has-value` | Set when the element has a value | :host\n * `has-label` | Set when the element has a label | :host\n * `has-helper` | Set when the element has helper text or slot | :host\n * `has-error-message` | Set when the element has an error message | :host\n * `invalid` | Set when the element is invalid | :host\n * `input-prevented` | Temporarily set when invalid input is prevented | :host\n * `focused` | Set when the element is focused | :host\n * `focus-ring` | Set when the element is keyboard focused | :host\n * `readonly` | Set to a readonly text field | :host\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @fires {Event} input - Fired when the value is changed by the user: on every typing keystroke, and the value is cleared using the clear button.\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n *\n * @extends HTMLElement\n * @mixes TextFieldMixin\n * @mixes ControlStateMixin\n * @mixes ThemableMixin\n * @mixes ElementMixin\n */\nclass TextFieldElement extends ElementMixin(TextFieldMixin(ControlStateMixin(ThemableMixin(PolymerElement)))) {\n  static get template() {\n    return html`\n      <style include=\"vaadin-text-field-shared-styles\"></style>\n\n      <div class=\"vaadin-text-field-container\">\n        <label part=\"label\" on-click=\"focus\" id=\"[[_labelId]]\">[[label]]</label>\n\n        <div part=\"input-field\" id=\"[[_inputId]]\">\n          <slot name=\"prefix\"></slot>\n\n          <slot name=\"input\">\n            <input part=\"value\" />\n          </slot>\n\n          <div part=\"clear-button\" id=\"clearButton\" role=\"button\" aria-label$=\"[[i18n.clear]]\"></div>\n          <slot name=\"suffix\"></slot>\n        </div>\n\n        <div part=\"helper-text\" on-click=\"focus\" id=\"[[_helperTextId]]\">\n          <slot name=\"helper\">[[helperText]]</slot>\n        </div>\n\n        <div\n          part=\"error-message\"\n          id=\"[[_errorId]]\"\n          aria-live=\"assertive\"\n          aria-hidden$=\"[[_getErrorMessageAriaHidden(invalid, errorMessage, _errorId)]]\"\n          >[[errorMessage]]</div\n        >\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-text-field';\n  }\n\n  static get version() {\n    return '3.0.2';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * A regular expression that the value is checked against.\n       * The pattern must match the entire value, not just some subset.\n       */\n      pattern: {\n        type: String\n      },\n\n      /**\n       * The text usually displayed in a tooltip popup when the mouse is over the field.\n       * @type {string}\n       */\n      title: {\n        type: String\n      }\n    };\n  }\n}\n\ncustomElements.define(TextFieldElement.is, TextFieldElement);\n\nexport { TextFieldElement };\n"
    },
    {
     "id": 39,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/utils/render-status.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Module for scheduling flushable pre-render and post-render tasks.\n *\n * @summary Module for scheduling flushable pre-render and post-render tasks.\n */\n\nimport './boot.js';\n\nlet scheduled = false;\nlet beforeRenderQueue = [];\nlet afterRenderQueue = [];\n\nfunction schedule() {\n  scheduled = true;\n  // before next render\n  requestAnimationFrame(function() {\n    scheduled = false;\n    flushQueue(beforeRenderQueue);\n    // after the render\n    setTimeout(function() {\n      runQueue(afterRenderQueue);\n    });\n  });\n}\n\nfunction flushQueue(queue) {\n  while (queue.length) {\n    callMethod(queue.shift());\n  }\n}\n\nfunction runQueue(queue) {\n  for (let i=0, l=queue.length; i < l; i++) {\n    callMethod(queue.shift());\n  }\n}\n\nfunction callMethod(info) {\n  const context = info[0];\n  const callback = info[1];\n  const args = info[2];\n  try {\n    callback.apply(context, args);\n  } catch(e) {\n    setTimeout(() => {\n      throw e;\n    });\n  }\n}\n\n/**\n * Flushes all `beforeNextRender` tasks, followed by all `afterNextRender`\n * tasks.\n *\n * @return {void}\n */\nexport function flush() {\n  while (beforeRenderQueue.length || afterRenderQueue.length) {\n    flushQueue(beforeRenderQueue);\n    flushQueue(afterRenderQueue);\n  }\n  scheduled = false;\n}\n\n\n/**\n * Enqueues a callback which will be run before the next render, at\n * `requestAnimationFrame` timing.\n *\n * This method is useful for enqueuing work that requires DOM measurement,\n * since measurement may not be reliable in custom element callbacks before\n * the first render, as well as for batching measurement tasks in general.\n *\n * Tasks in this queue may be flushed by calling `flush()`.\n *\n * @param {*} context Context object the callback function will be bound to\n * @param {function(...*):void} callback Callback function\n * @param {!Array=} args An array of arguments to call the callback function with\n * @return {void}\n */\nexport function beforeNextRender(context, callback, args) {\n  if (!scheduled) {\n    schedule();\n  }\n  beforeRenderQueue.push([context, callback, args]);\n}\n\n/**\n * Enqueues a callback which will be run after the next render, equivalent\n * to one task (`setTimeout`) after the next `requestAnimationFrame`.\n *\n * This method is useful for tuning the first-render performance of an\n * element or application by deferring non-critical work until after the\n * first paint.  Typical non-render-critical work may include adding UI\n * event listeners and aria attributes.\n *\n * @param {*} context Context object the callback function will be bound to\n * @param {function(...*):void} callback Callback function\n * @param {!Array=} args An array of arguments to call the callback function with\n * @return {void}\n */\nexport function afterNextRender(context, callback, args) {\n  if (!scheduled) {\n    schedule();\n  }\n  afterRenderQueue.push([context, callback, args]);\n}\n\n"
    },
    {
     "id": 40,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/utils/templatize.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Module for preparing and stamping instances of templates that utilize\n * Polymer's data-binding and declarative event listener features.\n *\n * Example:\n *\n *     // Get a template from somewhere, e.g. light DOM\n *     let template = this.querySelector('template');\n *     // Prepare the template\n *     let TemplateClass = Templatize.templatize(template);\n *     // Instance the template with an initial data model\n *     let instance = new TemplateClass({myProp: 'initial'});\n *     // Insert the instance's DOM somewhere, e.g. element's shadow DOM\n *     this.shadowRoot.appendChild(instance.root);\n *     // Changing a property on the instance will propagate to bindings\n *     // in the template\n *     instance.myProp = 'new value';\n *\n * The `options` dictionary passed to `templatize` allows for customizing\n * features of the generated template class, including how outer-scope host\n * properties should be forwarded into template instances, how any instance\n * properties added into the template's scope should be notified out to\n * the host, and whether the instance should be decorated as a \"parent model\"\n * of any event handlers.\n *\n *     // Customize property forwarding and event model decoration\n *     let TemplateClass = Templatize.templatize(template, this, {\n *       parentModel: true,\n *       forwardHostProp(property, value) {...},\n *       instanceProps: {...},\n *       notifyInstanceProp(instance, property, value) {...},\n *     });\n *\n * @summary Module for preparing and stamping instances of templates\n *   utilizing Polymer templating features.\n */\n\nimport './boot.js';\n\nimport { PropertyEffects } from '../mixins/property-effects.js';\nimport { MutableData } from '../mixins/mutable-data.js';\nimport { strictTemplatePolicy } from './settings.js';\nimport { wrap } from './wrap.js';\n\n// Base class for HTMLTemplateElement extension that has property effects\n// machinery for propagating host properties to children. This is an ES5\n// class only because Babel (incorrectly) requires super() in the class\n// constructor even though no `this` is used and it returns an instance.\nlet newInstance = null;\n\n/**\n * @constructor\n * @extends {HTMLTemplateElement}\n * @private\n */\nfunction HTMLTemplateElementExtension() { return newInstance; }\nHTMLTemplateElementExtension.prototype = Object.create(HTMLTemplateElement.prototype, {\n  constructor: {\n    value: HTMLTemplateElementExtension,\n    writable: true\n  }\n});\n\n/**\n * @constructor\n * @implements {Polymer_PropertyEffects}\n * @extends {HTMLTemplateElementExtension}\n * @private\n */\nconst DataTemplate = PropertyEffects(HTMLTemplateElementExtension);\n\n/**\n * @constructor\n * @implements {Polymer_MutableData}\n * @extends {DataTemplate}\n * @private\n */\nconst MutableDataTemplate = MutableData(DataTemplate);\n\n// Applies a DataTemplate subclass to a <template> instance\nfunction upgradeTemplate(template, constructor) {\n  newInstance = template;\n  Object.setPrototypeOf(template, constructor.prototype);\n  new constructor();\n  newInstance = null;\n}\n\n/**\n * Base class for TemplateInstance.\n * @constructor\n * @implements {Polymer_PropertyEffects}\n * @private\n */\nconst templateInstanceBase = PropertyEffects(class {});\n\n/**\n * @polymer\n * @customElement\n * @appliesMixin PropertyEffects\n * @unrestricted\n */\nclass TemplateInstanceBase extends templateInstanceBase {\n  constructor(props) {\n    super();\n    this._configureProperties(props);\n    /** @type {!StampedTemplate} */\n    this.root = this._stampTemplate(this.__dataHost);\n    // Save list of stamped children\n    let children = this.children = [];\n    // Polymer 1.x did not use `Polymer.dom` here so not bothering.\n    for (let n = this.root.firstChild; n; n=n.nextSibling) {\n      children.push(n);\n      n.__templatizeInstance = this;\n    }\n    if (this.__templatizeOwner &&\n      this.__templatizeOwner.__hideTemplateChildren__) {\n      this._showHideChildren(true);\n    }\n    // Flush props only when props are passed if instance props exist\n    // or when there isn't instance props.\n    let options = this.__templatizeOptions;\n    if ((props && options.instanceProps) || !options.instanceProps) {\n      this._enableProperties();\n    }\n  }\n  /**\n   * Configure the given `props` by calling `_setPendingProperty`. Also\n   * sets any properties stored in `__hostProps`.\n   * @private\n   * @param {Object} props Object of property name-value pairs to set.\n   * @return {void}\n   */\n  _configureProperties(props) {\n    let options = this.__templatizeOptions;\n    if (options.forwardHostProp) {\n      for (let hprop in this.__hostProps) {\n        this._setPendingProperty(hprop, this.__dataHost['_host_' + hprop]);\n      }\n    }\n    // Any instance props passed in the constructor will overwrite host props;\n    // normally this would be a user error but we don't specifically filter them\n    for (let iprop in props) {\n      this._setPendingProperty(iprop, props[iprop]);\n    }\n  }\n  /**\n   * Forwards a host property to this instance.  This method should be\n   * called on instances from the `options.forwardHostProp` callback\n   * to propagate changes of host properties to each instance.\n   *\n   * Note this method enqueues the change, which are flushed as a batch.\n   *\n   * @param {string} prop Property or path name\n   * @param {*} value Value of the property to forward\n   * @return {void}\n   */\n  forwardHostProp(prop, value) {\n    if (this._setPendingPropertyOrPath(prop, value, false, true)) {\n      this.__dataHost._enqueueClient(this);\n    }\n  }\n\n  /**\n   * Override point for adding custom or simulated event handling.\n   *\n   * @override\n   * @param {!Node} node Node to add event listener to\n   * @param {string} eventName Name of event\n   * @param {function(!Event):void} handler Listener function to add\n   * @return {void}\n   */\n  _addEventListenerToNode(node, eventName, handler) {\n    if (this._methodHost && this.__templatizeOptions.parentModel) {\n      // If this instance should be considered a parent model, decorate\n      // events this template instance as `model`\n      this._methodHost._addEventListenerToNode(node, eventName, (e) => {\n        e.model = this;\n        handler(e);\n      });\n    } else {\n      // Otherwise delegate to the template's host (which could be)\n      // another template instance\n      let templateHost = this.__dataHost.__dataHost;\n      if (templateHost) {\n        templateHost._addEventListenerToNode(node, eventName, handler);\n      }\n    }\n  }\n  /**\n   * Shows or hides the template instance top level child elements. For\n   * text nodes, `textContent` is removed while \"hidden\" and replaced when\n   * \"shown.\"\n   * @param {boolean} hide Set to true to hide the children;\n   * set to false to show them.\n   * @return {void}\n   * @protected\n   */\n  _showHideChildren(hide) {\n    let c = this.children;\n    for (let i=0; i<c.length; i++) {\n      let n = c[i];\n      // Ignore non-changes\n      if (Boolean(hide) != Boolean(n.__hideTemplateChildren__)) {\n        if (n.nodeType === Node.TEXT_NODE) {\n          if (hide) {\n            n.__polymerTextContent__ = n.textContent;\n            n.textContent = '';\n          } else {\n            n.textContent = n.__polymerTextContent__;\n          }\n        // remove and replace slot\n        } else if (n.localName === 'slot') {\n          if (hide) {\n            n.__polymerReplaced__ = document.createComment('hidden-slot');\n            wrap(wrap(n).parentNode).replaceChild(n.__polymerReplaced__, n);\n          } else {\n            const replace = n.__polymerReplaced__;\n            if (replace) {\n              wrap(wrap(replace).parentNode).replaceChild(n, replace);\n            }\n          }\n        }\n\n        else if (n.style) {\n          if (hide) {\n            n.__polymerDisplay__ = n.style.display;\n            n.style.display = 'none';\n          } else {\n            n.style.display = n.__polymerDisplay__;\n          }\n        }\n      }\n      n.__hideTemplateChildren__ = hide;\n      if (n._showHideChildren) {\n        n._showHideChildren(hide);\n      }\n    }\n  }\n  /**\n   * Overrides default property-effects implementation to intercept\n   * textContent bindings while children are \"hidden\" and cache in\n   * private storage for later retrieval.\n   *\n   * @override\n   * @param {!Node} node The node to set a property on\n   * @param {string} prop The property to set\n   * @param {*} value The value to set\n   * @return {void}\n   * @protected\n   */\n  _setUnmanagedPropertyToNode(node, prop, value) {\n    if (node.__hideTemplateChildren__ &&\n        node.nodeType == Node.TEXT_NODE && prop == 'textContent') {\n      node.__polymerTextContent__ = value;\n    } else {\n      super._setUnmanagedPropertyToNode(node, prop, value);\n    }\n  }\n  /**\n   * Find the parent model of this template instance.  The parent model\n   * is either another templatize instance that had option `parentModel: true`,\n   * or else the host element.\n   *\n   * @return {!Polymer_PropertyEffects} The parent model of this instance\n   */\n  get parentModel() {\n    let model = this.__parentModel;\n    if (!model) {\n      let options;\n      model = this;\n      do {\n        // A template instance's `__dataHost` is a <template>\n        // `model.__dataHost.__dataHost` is the template's host\n        model = model.__dataHost.__dataHost;\n      } while ((options = model.__templatizeOptions) && !options.parentModel);\n      this.__parentModel = model;\n    }\n    return model;\n  }\n\n  /**\n   * Stub of HTMLElement's `dispatchEvent`, so that effects that may\n   * dispatch events safely no-op.\n   *\n   * @param {Event} event Event to dispatch\n   * @return {boolean} Always true.\n   */\n   dispatchEvent(event) { // eslint-disable-line no-unused-vars\n     return true;\n  }\n}\n\n/** @type {!DataTemplate} */\nTemplateInstanceBase.prototype.__dataHost;\n/** @type {!TemplatizeOptions} */\nTemplateInstanceBase.prototype.__templatizeOptions;\n/** @type {!Polymer_PropertyEffects} */\nTemplateInstanceBase.prototype._methodHost;\n/** @type {!Object} */\nTemplateInstanceBase.prototype.__templatizeOwner;\n/** @type {!Object} */\nTemplateInstanceBase.prototype.__hostProps;\n\n/**\n * @constructor\n * @extends {TemplateInstanceBase}\n * @implements {Polymer_MutableData}\n * @private\n */\nconst MutableTemplateInstanceBase = MutableData(TemplateInstanceBase);\n\nfunction findMethodHost(template) {\n  // Technically this should be the owner of the outermost template.\n  // In shadow dom, this is always getRootNode().host, but we can\n  // approximate this via cooperation with our dataHost always setting\n  // `_methodHost` as long as there were bindings (or id's) on this\n  // instance causing it to get a dataHost.\n  let templateHost = template.__dataHost;\n  return templateHost && templateHost._methodHost || templateHost;\n}\n\n/* eslint-disable valid-jsdoc */\n/**\n * @suppress {missingProperties} class.prototype is not defined for some reason\n */\nfunction createTemplatizerClass(template, templateInfo, options) {\n  /**\n   * @constructor\n   * @extends {TemplateInstanceBase}\n   */\n  let templatizerBase = options.mutableData ?\n    MutableTemplateInstanceBase : TemplateInstanceBase;\n\n  // Affordance for global mixins onto TemplatizeInstance\n  if (templatize.mixin) {\n    templatizerBase = templatize.mixin(templatizerBase);\n  }\n\n  /**\n   * Anonymous class created by the templatize\n   * @constructor\n   * @private\n   */\n  let klass = class extends templatizerBase { };\n  /** @override */\n  klass.prototype.__templatizeOptions = options;\n  klass.prototype._bindTemplate(template);\n  addNotifyEffects(klass, template, templateInfo, options);\n  return klass;\n}\n\n/**\n * @suppress {missingProperties} class.prototype is not defined for some reason\n */\nfunction addPropagateEffects(template, templateInfo, options) {\n  let userForwardHostProp = options.forwardHostProp;\n  if (userForwardHostProp) {\n    // Provide data API and property effects on memoized template class\n    let klass = templateInfo.templatizeTemplateClass;\n    if (!klass) {\n      /**\n       * @constructor\n       * @extends {DataTemplate}\n       */\n      let templatizedBase = options.mutableData ? MutableDataTemplate : DataTemplate;\n      /** @private */\n      klass = templateInfo.templatizeTemplateClass =\n        class TemplatizedTemplate extends templatizedBase {};\n      // Add template - >instances effects\n      // and host <- template effects\n      let hostProps = templateInfo.hostProps;\n      for (let prop in hostProps) {\n        klass.prototype._addPropertyEffect('_host_' + prop,\n          klass.prototype.PROPERTY_EFFECT_TYPES.PROPAGATE,\n          {fn: createForwardHostPropEffect(prop, userForwardHostProp)});\n        klass.prototype._createNotifyingProperty('_host_' + prop);\n      }\n    }\n    upgradeTemplate(template, klass);\n    // Mix any pre-bound data into __data; no need to flush this to\n    // instances since they pull from the template at instance-time\n    if (template.__dataProto) {\n      // Note, generally `__dataProto` could be chained, but it's guaranteed\n      // to not be since this is a vanilla template we just added effects to\n      Object.assign(template.__data, template.__dataProto);\n    }\n    // Clear any pending data for performance\n    template.__dataTemp = {};\n    template.__dataPending = null;\n    template.__dataOld = null;\n    template._enableProperties();\n  }\n}\n/* eslint-enable valid-jsdoc */\n\nfunction createForwardHostPropEffect(hostProp, userForwardHostProp) {\n  return function forwardHostProp(template, prop, props) {\n    userForwardHostProp.call(template.__templatizeOwner,\n      prop.substring('_host_'.length), props[prop]);\n  };\n}\n\nfunction addNotifyEffects(klass, template, templateInfo, options) {\n  let hostProps = templateInfo.hostProps || {};\n  for (let iprop in options.instanceProps) {\n    delete hostProps[iprop];\n    let userNotifyInstanceProp = options.notifyInstanceProp;\n    if (userNotifyInstanceProp) {\n      klass.prototype._addPropertyEffect(iprop,\n        klass.prototype.PROPERTY_EFFECT_TYPES.NOTIFY,\n        {fn: createNotifyInstancePropEffect(iprop, userNotifyInstanceProp)});\n    }\n  }\n  if (options.forwardHostProp && template.__dataHost) {\n    for (let hprop in hostProps) {\n      klass.prototype._addPropertyEffect(hprop,\n        klass.prototype.PROPERTY_EFFECT_TYPES.NOTIFY,\n        {fn: createNotifyHostPropEffect()});\n    }\n  }\n}\n\nfunction createNotifyInstancePropEffect(instProp, userNotifyInstanceProp) {\n  return function notifyInstanceProp(inst, prop, props) {\n    userNotifyInstanceProp.call(inst.__templatizeOwner,\n      inst, prop, props[prop]);\n  };\n}\n\nfunction createNotifyHostPropEffect() {\n  return function notifyHostProp(inst, prop, props) {\n    inst.__dataHost._setPendingPropertyOrPath('_host_' + prop, props[prop], true, true);\n  };\n}\n\n\n/**\n * Returns an anonymous `PropertyEffects` class bound to the\n * `<template>` provided.  Instancing the class will result in the\n * template being stamped into a document fragment stored as the instance's\n * `root` property, after which it can be appended to the DOM.\n *\n * Templates may utilize all Polymer data-binding features as well as\n * declarative event listeners.  Event listeners and inline computing\n * functions in the template will be called on the host of the template.\n *\n * The constructor returned takes a single argument dictionary of initial\n * property values to propagate into template bindings.  Additionally\n * host properties can be forwarded in, and instance properties can be\n * notified out by providing optional callbacks in the `options` dictionary.\n *\n * Valid configuration in `options` are as follows:\n *\n * - `forwardHostProp(property, value)`: Called when a property referenced\n *   in the template changed on the template's host. As this library does\n *   not retain references to templates instanced by the user, it is the\n *   templatize owner's responsibility to forward host property changes into\n *   user-stamped instances.  The `instance.forwardHostProp(property, value)`\n *    method on the generated class should be called to forward host\n *   properties into the template to prevent unnecessary property-changed\n *   notifications. Any properties referenced in the template that are not\n *   defined in `instanceProps` will be notified up to the template's host\n *   automatically.\n * - `instanceProps`: Dictionary of property names that will be added\n *   to the instance by the templatize owner.  These properties shadow any\n *   host properties, and changes within the template to these properties\n *   will result in `notifyInstanceProp` being called.\n * - `mutableData`: When `true`, the generated class will skip strict\n *   dirty-checking for objects and arrays (always consider them to be\n *   \"dirty\").\n * - `notifyInstanceProp(instance, property, value)`: Called when\n *   an instance property changes.  Users may choose to call `notifyPath`\n *   on e.g. the owner to notify the change.\n * - `parentModel`: When `true`, events handled by declarative event listeners\n *   (`on-event=\"handler\"`) will be decorated with a `model` property pointing\n *   to the template instance that stamped it.  It will also be returned\n *   from `instance.parentModel` in cases where template instance nesting\n *   causes an inner model to shadow an outer model.\n *\n * All callbacks are called bound to the `owner`. Any context\n * needed for the callbacks (such as references to `instances` stamped)\n * should be stored on the `owner` such that they can be retrieved via\n * `this`.\n *\n * When `options.forwardHostProp` is declared as an option, any properties\n * referenced in the template will be automatically forwarded from the host of\n * the `<template>` to instances, with the exception of any properties listed in\n * the `options.instanceProps` object.  `instanceProps` are assumed to be\n * managed by the owner of the instances, either passed into the constructor\n * or set after the fact.  Note, any properties passed into the constructor will\n * always be set to the instance (regardless of whether they would normally\n * be forwarded from the host).\n *\n * Note that `templatize()` can be run only once for a given `<template>`.\n * Further calls will result in an error. Also, there is a special\n * behavior if the template was duplicated through a mechanism such as\n * `<dom-repeat>` or `<test-fixture>`. In this case, all calls to\n * `templatize()` return the same class for all duplicates of a template.\n * The class returned from `templatize()` is generated only once using\n * the `options` from the first call. This means that any `options`\n * provided to subsequent calls will be ignored. Therefore, it is very\n * important not to close over any variables inside the callbacks. Also,\n * arrow functions must be avoided because they bind the outer `this`.\n * Inside the callbacks, any contextual information can be accessed\n * through `this`, which points to the `owner`.\n *\n * @param {!HTMLTemplateElement} template Template to templatize\n * @param {Polymer_PropertyEffects=} owner Owner of the template instances;\n *   any optional callbacks will be bound to this owner.\n * @param {Object=} options Options dictionary (see summary for details)\n * @return {function(new:TemplateInstanceBase)} Generated class bound to the template\n *   provided\n * @suppress {invalidCasts}\n */\nexport function templatize(template, owner, options) {\n  // Under strictTemplatePolicy, the templatized element must be owned\n  // by a (trusted) Polymer element, indicated by existence of _methodHost;\n  // e.g. for dom-if & dom-repeat in main document, _methodHost is null\n  if (strictTemplatePolicy && !findMethodHost(template)) {\n    throw new Error('strictTemplatePolicy: template owner not trusted');\n  }\n  options = /** @type {!TemplatizeOptions} */(options || {});\n  if (template.__templatizeOwner) {\n    throw new Error('A <template> can only be templatized once');\n  }\n  template.__templatizeOwner = owner;\n  const ctor = owner ? owner.constructor : TemplateInstanceBase;\n  let templateInfo = ctor._parseTemplate(template);\n  // Get memoized base class for the prototypical template, which\n  // includes property effects for binding template & forwarding\n  /**\n   * @constructor\n   * @extends {TemplateInstanceBase}\n   */\n  let baseClass = templateInfo.templatizeInstanceClass;\n  if (!baseClass) {\n    baseClass = createTemplatizerClass(template, templateInfo, options);\n    templateInfo.templatizeInstanceClass = baseClass;\n  }\n  // Host property forwarding must be installed onto template instance\n  addPropagateEffects(template, templateInfo, options);\n  // Subclass base class and add reference for this specific template\n  /** @private */\n  let klass = class TemplateInstance extends baseClass {};\n  /** @override */\n  klass.prototype._methodHost = findMethodHost(template);\n  /** @override */\n  klass.prototype.__dataHost = /** @type {!DataTemplate} */ (template);\n  /** @override */\n  klass.prototype.__templatizeOwner = /** @type {!Object} */ (owner);\n  /** @override */\n  klass.prototype.__hostProps = templateInfo.hostProps;\n  klass = /** @type {function(new:TemplateInstanceBase)} */(klass); //eslint-disable-line no-self-assign\n  return klass;\n}\n\n/**\n * Returns the template \"model\" associated with a given element, which\n * serves as the binding scope for the template instance the element is\n * contained in. A template model is an instance of\n * `TemplateInstanceBase`, and should be used to manipulate data\n * associated with this template instance.\n *\n * Example:\n *\n *   let model = modelForElement(el);\n *   if (model.index < 10) {\n *     model.set('item.checked', true);\n *   }\n *\n * @param {HTMLTemplateElement} template The model will be returned for\n *   elements stamped from this template\n * @param {Node=} node Node for which to return a template model.\n * @return {TemplateInstanceBase} Template instance representing the\n *   binding scope for the element\n */\nexport function modelForElement(template, node) {\n  let model;\n  while (node) {\n    // An element with a __templatizeInstance marks the top boundary\n    // of a scope; walk up until we find one, and then ensure that\n    // its __dataHost matches `this`, meaning this dom-repeat stamped it\n    if ((model = node.__templatizeInstance)) {\n      // Found an element stamped by another template; keep walking up\n      // from its __dataHost\n      if (model.__dataHost != template) {\n        node = model.__dataHost;\n      } else {\n        return model;\n      }\n    } else {\n      // Still in a template scope, keep going up until\n      // a __templatizeInstance is found\n      node = wrap(node).parentNode;\n    }\n  }\n  return null;\n}\n\nexport { TemplateInstanceBase };\n"
    },
    {
     "id": 41,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-element-mixin@2.4.2/node_modules/@vaadin/vaadin-element-mixin/vaadin-dir-mixin.js",
     "source": "import { DirHelper } from './vaadin-dir-helper.js';\n/**\n * Array of Vaadin custom element classes that have been subscribed to the dir changes.\n */\nconst directionSubscribers = [];\nconst directionUpdater = function() {\n  const documentDir = getDocumentDir();\n  directionSubscribers.forEach(element => {\n    alignDirs(element, documentDir);\n  });\n};\n\nlet scrollType;\n\nconst directionObserver = new MutationObserver(directionUpdater);\ndirectionObserver.observe(document.documentElement, {attributes: true, attributeFilter: ['dir']});\n\nconst alignDirs = function(element, documentDir) {\n  if (documentDir) {\n    element.setAttribute('dir', documentDir);\n  } else {\n    element.removeAttribute('dir');\n  }\n};\n\nconst getDocumentDir = function() {\n  return document.documentElement.getAttribute('dir');\n};\n\n/**\n * @polymerMixin\n */\nexport const DirMixin = superClass => class VaadinDirMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * @protected\n       */\n      dir: {\n        type: String,\n        readOnly: true\n      }\n    };\n  }\n\n  /** @protected */\n  static finalize() {\n    super.finalize();\n\n    if (!scrollType) {\n      scrollType = DirHelper.detectScrollType();\n    }\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n\n    if (!this.hasAttribute('dir')) {\n      this.__subscribe();\n      alignDirs(this, getDocumentDir());\n    }\n  }\n\n  /** @protected */\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (name !== 'dir') {\n      return;\n    }\n\n    // New value equals to the document direction and the element is not subscribed to the changes\n    const newValueEqlDocDir = newValue === getDocumentDir() && directionSubscribers.indexOf(this) === -1;\n    // Value was emptied and the element is not subscribed to the changes\n    const newValueEmptied = !newValue && oldValue && directionSubscribers.indexOf(this) === -1;\n    // New value is different and the old equals to document direction and the element is not subscribed to the changes\n    const newDiffValue = newValue !== getDocumentDir() && oldValue === getDocumentDir();\n\n    if (newValueEqlDocDir || newValueEmptied) {\n      this.__subscribe();\n      alignDirs(this, getDocumentDir());\n    } else if (newDiffValue) {\n      this.__subscribe(false);\n    }\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__subscribe(false);\n    this.removeAttribute('dir');\n  }\n\n  /** @private */\n  __subscribe(push = true) {\n    if (push) {\n      directionSubscribers.indexOf(this) === -1 &&\n        directionSubscribers.push(this);\n    } else {\n      directionSubscribers.indexOf(this) > -1 &&\n        directionSubscribers.splice(directionSubscribers.indexOf(this), 1);\n    }\n  }\n\n  /**\n   * @param {Element} element\n   * @return {number}\n   * @protected\n   */\n  __getNormalizedScrollLeft(element) {\n    return DirHelper.getNormalizedScrollLeft(scrollType, this.getAttribute('dir') || 'ltr', element);\n  }\n\n  /**\n   * @param {Element} element\n   * @param {number} scrollLeft\n   * @protected\n   */\n  __setNormalizedScrollLeft(element, scrollLeft) {\n    return DirHelper.setNormalizedScrollLeft(scrollType, this.getAttribute('dir') || 'ltr', element, scrollLeft);\n  }\n};\n"
    },
    {
     "id": 42,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-control-state-mixin@2.2.4/node_modules/@vaadin/vaadin-control-state-mixin/vaadin-control-state-mixin.js",
     "source": "/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n// We consider the keyboard to be active if the window has received a keydown\n// event since the last mousedown event.\nlet keyboardActive = false;\n\n// Listen for top-level keydown and mousedown events.\n// Use capture phase so we detect events even if they're handled.\nwindow.addEventListener(\n  'keydown',\n  () => {\n    keyboardActive = true;\n  },\n  {capture: true}\n);\n\nwindow.addEventListener(\n  'mousedown',\n  () => {\n    keyboardActive = false;\n  },\n  {capture: true}\n);\n\n/**\n * A private mixin to avoid problems with dynamic properties and Polymer Analyzer.\n * No need to expose these properties in the API docs.\n * @polymerMixin\n * @private\n */\nconst TabIndexMixin = superClass => class VaadinTabIndexMixin extends superClass {\n  static get properties() {\n    var properties = {\n      /**\n       * Internal property needed to listen to `tabindex` attribute changes.\n       *\n       * For changing the tabindex of this component use the native `tabIndex` property.\n       * @private\n       */\n      tabindex: {\n        type: Number,\n        value: 0,\n        reflectToAttribute: true,\n        observer: '_tabindexChanged'\n      }\n    };\n\n    if (window.ShadyDOM) {\n      // ShadyDOM browsers need the `tabIndex` in order to notify when the user changes it programmatically.\n      properties['tabIndex'] = properties.tabindex;\n    }\n\n    return properties;\n  }\n};\n\n/**\n * Polymer.IronControlState is not a proper 2.0 class, also, its tabindex\n * implementation fails in the shadow dom, so we have this for vaadin elements.\n * @polymerMixin\n */\nexport const ControlStateMixin = superClass => class VaadinControlStateMixin extends TabIndexMixin(superClass) {\n  static get properties() {\n    return {\n      /**\n       * Specify that this control should have input focus when the page loads.\n       */\n      autofocus: {\n        type: Boolean\n      },\n\n      /**\n       * Stores the previous value of tabindex attribute of the disabled element\n       * @private\n       */\n      _previousTabIndex: {\n        type: Number\n      },\n\n      /**\n       * If true, the user cannot interact with this element.\n       */\n      disabled: {\n        type: Boolean,\n        observer: '_disabledChanged',\n        reflectToAttribute: true\n      },\n\n      /**\n       * @private\n       */\n      _isShiftTabbing: {\n        type: Boolean\n      }\n    };\n  }\n\n  /**\n   * @protected\n   */\n  ready() {\n    this.addEventListener('focusin', e => {\n      if (e.composedPath()[0] === this) {\n        // Only focus if the focus is received from somewhere outside\n        if (!this.contains(e.relatedTarget)) {\n          this._focus();\n        }\n      } else if (e.composedPath().indexOf(this.focusElement) !== -1 && !this.disabled) {\n        this._setFocused(true);\n      }\n    });\n    this.addEventListener('focusout', e => this._setFocused(false));\n\n    // In super.ready() other 'focusin' and 'focusout' listeners might be\n    // added, so we call it after our own ones to ensure they execute first.\n    // Issue to watch out: when incorrect, <vaadin-combo-box> refocuses the\n    // input field on iOS after “Done” is pressed.\n    super.ready();\n\n    // This fixes the bug in Firefox 61 (https://bugzilla.mozilla.org/show_bug.cgi?id=1472887)\n    // where focusout event does not go out of shady DOM because composed property in the event is not true\n    const ensureEventComposed = e => {\n      if (!e.composed) {\n        e.target.dispatchEvent(new CustomEvent(e.type, {\n          bubbles: true,\n          composed: true,\n          cancelable: false\n        }));\n      }\n    };\n    this.shadowRoot.addEventListener('focusin', ensureEventComposed);\n    this.shadowRoot.addEventListener('focusout', ensureEventComposed);\n\n    this.addEventListener('keydown', e => {\n      if (!e.defaultPrevented && e.keyCode === 9) {\n        if (e.shiftKey) {\n          // Flag is checked in _focus event handler.\n          this._isShiftTabbing = true;\n          HTMLElement.prototype.focus.apply(this);\n          this._setFocused(false);\n          // Event handling in IE is asynchronous and the flag is removed asynchronously as well\n          setTimeout(() => this._isShiftTabbing = false, 0);\n        } else {\n          // Workaround for FF63-65 bug that causes the focus to get lost when\n          // blurring a slotted component with focusable shadow root content\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=1528686\n          // TODO: Remove when safe\n          const firefox = window.navigator.userAgent.match(/Firefox\\/(\\d\\d\\.\\d)/);\n          if (firefox\n            && parseFloat(firefox[1]) >= 63\n            && parseFloat(firefox[1]) < 66\n            && this.parentNode\n            && this.nextSibling) {\n            const fakeTarget = document.createElement('input');\n            fakeTarget.style.position = 'absolute';\n            fakeTarget.style.opacity = '0';\n            fakeTarget.tabIndex = this.tabIndex;\n\n            this.parentNode.insertBefore(fakeTarget, this.nextSibling);\n            fakeTarget.focus();\n            fakeTarget.addEventListener('focusout', () => this.parentNode.removeChild(fakeTarget));\n          }\n        }\n\n      }\n    });\n\n    if (this.autofocus && !this.disabled) {\n      window.requestAnimationFrame(() => {\n        this._focus();\n        this._setFocused(true);\n        this.setAttribute('focus-ring', '');\n      });\n    }\n  }\n\n  /**\n   * @protected\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    // in non-Chrome browsers, blur does not fire on the element when it is disconnected.\n    // reproducible in `<vaadin-date-picker>` when closing on `Cancel` or `Today` click.\n    if (this.hasAttribute('focused')) {\n      this._setFocused(false);\n    }\n  }\n\n  /**\n   * @param {boolean} focused\n   * @protected\n   */\n  _setFocused(focused) {\n    if (focused) {\n      this.setAttribute('focused', '');\n    } else {\n      this.removeAttribute('focused');\n    }\n\n    // focus-ring is true when the element was focused from the keyboard.\n    // Focus Ring [A11ycasts]: https://youtu.be/ilj2P5-5CjI\n    if (focused && keyboardActive) {\n      this.setAttribute('focus-ring', '');\n    } else {\n      this.removeAttribute('focus-ring');\n    }\n  }\n\n  /**\n   * Any element extending this mixin is required to implement this getter.\n   * It returns the actual focusable element in the component.\n   * @return {Element | null | undefined}\n   */\n  get focusElement() {\n    window.console.warn(`Please implement the 'focusElement' property in <${this.localName}>`);\n    return this;\n  }\n\n  /**\n   * @protected\n   */\n  _focus() {\n    if (!this.focusElement || this._isShiftTabbing) {\n      return;\n    }\n\n    this.focusElement.focus();\n    this._setFocused(true);\n  }\n\n  /**\n   * Moving the focus from the host element causes firing of the blur event what leads to problems in IE.\n   * @private\n   */\n  focus() {\n    if (!this.focusElement || this.disabled) {\n      return;\n    }\n\n    this.focusElement.focus();\n    this._setFocused(true);\n  }\n\n  /**\n   * Native bluring in the host element does nothing because it does not have the focus.\n   * In chrome it works, but not in FF.\n   * @private\n   */\n  blur() {\n    if (!this.focusElement) {\n      return;\n    }\n    this.focusElement.blur();\n    this._setFocused(false);\n  }\n\n  /**\n   * @param {boolean} disabled\n   * @private\n   */\n  _disabledChanged(disabled) {\n    this.focusElement.disabled = disabled;\n    if (disabled) {\n      this.blur();\n      this._previousTabIndex = this.tabindex;\n      this.tabindex = -1;\n      this.setAttribute('aria-disabled', 'true');\n    } else {\n      if (typeof this._previousTabIndex !== 'undefined') {\n        this.tabindex = this._previousTabIndex;\n      }\n      this.removeAttribute('aria-disabled');\n    }\n  }\n\n  /**\n   * @param {number | null | undefined} tabindex\n   * @private\n   */\n  _tabindexChanged(tabindex) {\n    if (tabindex !== undefined) {\n      this.focusElement.tabIndex = tabindex;\n    }\n\n    if (this.disabled && this.tabindex) {\n      // If tabindex attribute was changed while checkbox was disabled\n      if (this.tabindex !== -1) {\n        this._previousTabIndex = this.tabindex;\n      }\n      this.tabindex = tabindex = undefined;\n    }\n\n    if (window.ShadyDOM) {\n      this.setProperties({tabIndex: tabindex, tabindex: tabindex});\n    }\n  }\n\n  /**\n   * @protected\n   */\n  click() {\n    if (!this.disabled) {\n      super.click();\n    }\n  }\n};\n"
    },
    {
     "id": 43,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/elements/custom-style.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/elements/custom-style.js",
       "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '@webcomponents/shadycss/entrypoints/custom-style-interface.js';\n\nimport { cssFromModules } from '../utils/style-gather.js';\n\nconst attr = 'include';\n\nconst CustomStyleInterface = window.ShadyCSS.CustomStyleInterface;\n\n/**\n * Custom element for defining styles in the main document that can take\n * advantage of [shady DOM](https://github.com/webcomponents/shadycss) shims\n * for style encapsulation, custom properties, and custom mixins.\n *\n * - Document styles defined in a `<custom-style>` are shimmed to ensure they\n *   do not leak into local DOM when running on browsers without native\n *   Shadow DOM.\n * - Custom properties can be defined in a `<custom-style>`. Use the `html` selector\n *   to define custom properties that apply to all custom elements.\n * - Custom mixins can be defined in a `<custom-style>`, if you import the optional\n *   [apply shim](https://github.com/webcomponents/shadycss#about-applyshim)\n *   (`shadycss/apply-shim.html`).\n *\n * To use:\n *\n * - Import `custom-style.html`.\n * - Place a `<custom-style>` element in the main document, wrapping an inline `<style>` tag that\n *   contains the CSS rules you want to shim.\n *\n * For example:\n *\n * ```html\n * <!-- import apply shim--only required if using mixins -->\n * <link rel=\"import\" href=\"bower_components/shadycss/apply-shim.html\">\n * <!-- import custom-style element -->\n * <link rel=\"import\" href=\"bower_components/polymer/lib/elements/custom-style.html\">\n *\n * <custom-style>\n *   <style>\n *     html {\n *       --custom-color: blue;\n *       --custom-mixin: {\n *         font-weight: bold;\n *         color: red;\n *       };\n *     }\n *   </style>\n * </custom-style>\n * ```\n *\n * @customElement\n * @extends HTMLElement\n * @summary Custom element for defining styles in the main document that can\n *   take advantage of Polymer's style scoping and custom properties shims.\n */\nexport class CustomStyle extends HTMLElement {\n  constructor() {\n    super();\n    this._style = null;\n    CustomStyleInterface.addCustomStyle(this);\n  }\n  /**\n   * Returns the light-DOM `<style>` child this element wraps.  Upon first\n   * call any style modules referenced via the `include` attribute will be\n   * concatenated to this element's `<style>`.\n   *\n   * @export\n   * @return {HTMLStyleElement} This element's light-DOM `<style>`\n   */\n  getStyle() {\n    if (this._style) {\n      return this._style;\n    }\n    const style = /** @type {HTMLStyleElement} */(this.querySelector('style'));\n    if (!style) {\n      return null;\n    }\n    this._style = style;\n    const include = style.getAttribute(attr);\n    if (include) {\n      style.removeAttribute(attr);\n      style.textContent = cssFromModules(include) + style.textContent;\n    }\n    /*\n    HTML Imports styling the main document are deprecated in Chrome\n    https://crbug.com/523952\n\n    If this element is not in the main document, then it must be in an HTML Import document.\n    In that case, move the custom style to the main document.\n\n    The ordering of `<custom-style>` should stay the same as when loaded by HTML Imports, but there may be odd\n    cases of ordering w.r.t the main document styles.\n    */\n    if (this.ownerDocument !== window.document) {\n      window.document.head.appendChild(this);\n    }\n    return this._style;\n  }\n}\n\nwindow.customElements.define('custom-style', CustomStyle);\n"
      },
      {
       "name": "../node_modules/.pnpm/@webcomponents+shadycss@1.11.0/node_modules/@webcomponents/shadycss/entrypoints/custom-style-interface.js",
       "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport CustomStyleInterface from '../src/custom-style-interface.js';\n// prettier-ignore\nimport {getComputedStyleValue, updateNativeProperties} from '../src/common-utils.js';\n// prettier-ignore\nimport {nativeCssVariables, nativeShadow, cssBuild, disableRuntime} from '../src/style-settings.js';\n\nconst customStyleInterface = new CustomStyleInterface();\n\nif (!window.ShadyCSS) {\n  window.ShadyCSS = {\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     * @param {string=} elementExtends\n     */\n    prepareTemplate(template, elementName, elementExtends) {}, // eslint-disable-line @typescript-eslint/no-unused-vars\n\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     */\n    prepareTemplateDom(template, elementName) {}, // eslint-disable-line @typescript-eslint/no-unused-vars\n\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     * @param {string=} elementExtends\n     */\n    prepareTemplateStyles(template, elementName, elementExtends) {}, // eslint-disable-line @typescript-eslint/no-unused-vars\n\n    /**\n     * @param {Element} element\n     * @param {Object=} properties\n     */\n    styleSubtree(element, properties) {\n      customStyleInterface.processStyles();\n      updateNativeProperties(element, properties);\n    },\n\n    /**\n     * @param {Element} element\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    styleElement(element) {\n      customStyleInterface.processStyles();\n    },\n\n    /**\n     * @param {Object=} properties\n     */\n    styleDocument(properties) {\n      customStyleInterface.processStyles();\n      updateNativeProperties(document.body, properties);\n    },\n\n    /**\n     * @param {Element} element\n     * @param {string} property\n     * @return {string}\n     */\n    getComputedStyleValue(element, property) {\n      return getComputedStyleValue(element, property);\n    },\n\n    flushCustomStyles() {},\n    nativeCss: nativeCssVariables,\n    nativeShadow: nativeShadow,\n    cssBuild: cssBuild,\n    disableRuntime: disableRuntime,\n  };\n}\n\nwindow.ShadyCSS.CustomStyleInterface = customStyleInterface;\n"
      }
     ]
    },
    {
     "id": 44,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/utils/settings.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\nimport { pathFromUrl } from './resolve-url.js';\nexport const useShadow = !(window.ShadyDOM);\nexport const useNativeCSSProperties = Boolean(!window.ShadyCSS || window.ShadyCSS.nativeCss);\nexport const useNativeCustomElements = !(window.customElements.polyfillWrapFlushCallback);\n\n\n/**\n * Globally settable property that is automatically assigned to\n * `ElementMixin` instances, useful for binding in templates to\n * make URL's relative to an application's root.  Defaults to the main\n * document URL, but can be overridden by users.  It may be useful to set\n * `rootPath` to provide a stable application mount path when\n * using client side routing.\n */\nexport let rootPath = pathFromUrl(document.baseURI || window.location.href);\n\n/**\n * Sets the global rootPath property used by `ElementMixin` and\n * available via `rootPath`.\n *\n * @param {string} path The new root path\n * @return {void}\n */\nexport const setRootPath = function(path) {\n  rootPath = path;\n};\n\n/**\n * A global callback used to sanitize any value before inserting it into the DOM.\n * The callback signature is:\n *\n *  function sanitizeDOMValue(value, name, type, node) { ... }\n *\n * Where:\n *\n * `value` is the value to sanitize.\n * `name` is the name of an attribute or property (for example, href).\n * `type` indicates where the value is being inserted: one of property, attribute, or text.\n * `node` is the node where the value is being inserted.\n *\n * @type {(function(*,string,string,Node):*)|undefined}\n */\nexport let sanitizeDOMValue = window.Polymer && window.Polymer.sanitizeDOMValue || undefined;\n\n/**\n * Sets the global sanitizeDOMValue available via this module's exported\n * `sanitizeDOMValue` variable.\n *\n * @param {(function(*,string,string,Node):*)|undefined} newSanitizeDOMValue the global sanitizeDOMValue callback\n * @return {void}\n */\nexport const setSanitizeDOMValue = function(newSanitizeDOMValue) {\n  sanitizeDOMValue = newSanitizeDOMValue;\n};\n\n/**\n * Globally settable property to make Polymer Gestures use passive TouchEvent listeners when recognizing gestures.\n * When set to `true`, gestures made from touch will not be able to prevent scrolling, allowing for smoother\n * scrolling performance.\n * Defaults to `false` for backwards compatibility.\n */\nexport let passiveTouchGestures = false;\n\n/**\n * Sets `passiveTouchGestures` globally for all elements using Polymer Gestures.\n *\n * @param {boolean} usePassive enable or disable passive touch gestures globally\n * @return {void}\n */\nexport const setPassiveTouchGestures = function(usePassive) {\n  passiveTouchGestures = usePassive;\n};\n\n/**\n * Setting to ensure Polymer template evaluation only occurs based on tempates\n * defined in trusted script.  When true, `<dom-module>` re-registration is\n * disallowed, `<dom-bind>` is disabled, and `<dom-if>`/`<dom-repeat>`\n * templates will only evaluate in the context of a trusted element template.\n */\nexport let strictTemplatePolicy = false;\n\n/**\n * Sets `strictTemplatePolicy` globally for all elements\n *\n * @param {boolean} useStrictPolicy enable or disable strict template policy\n *   globally\n * @return {void}\n */\nexport const setStrictTemplatePolicy = function(useStrictPolicy) {\n  strictTemplatePolicy = useStrictPolicy;\n};\n\n/**\n * Setting to enable dom-module lookup from Polymer.Element.  By default,\n * templates must be defined in script using the `static get template()`\n * getter and the `html` tag function.  To enable legacy loading of templates\n * via dom-module, set this flag to true.\n */\nexport let allowTemplateFromDomModule = false;\n\n/**\n * Sets `lookupTemplateFromDomModule` globally for all elements\n *\n * @param {boolean} allowDomModule enable or disable template lookup\n *   globally\n * @return {void}\n */\nexport const setAllowTemplateFromDomModule = function(allowDomModule) {\n  allowTemplateFromDomModule = allowDomModule;\n};\n\n/**\n * Setting to skip processing style includes and re-writing urls in css styles.\n * Normally \"included\" styles are pulled into the element and all urls in styles\n * are re-written to be relative to the containing script url.\n * If no includes or relative urls are used in styles, these steps can be\n * skipped as an optimization.\n */\nexport let legacyOptimizations = false;\n\n/**\n * Sets `legacyOptimizations` globally for all elements to enable optimizations\n * when only legacy based elements are used.\n *\n * @param {boolean} useLegacyOptimizations enable or disable legacy optimizations\n * includes and url rewriting\n * @return {void}\n */\nexport const setLegacyOptimizations = function(useLegacyOptimizations) {\n  legacyOptimizations = useLegacyOptimizations;\n};\n\n/**\n * Setting to perform initial rendering synchronously when running under ShadyDOM.\n * This matches the behavior of Polymer 1.\n */\nexport let syncInitialRender = false;\n\n/**\n * Sets `syncInitialRender` globally for all elements to enable synchronous\n * initial rendering.\n *\n * @param {boolean} useSyncInitialRender enable or disable synchronous initial\n * rendering globally.\n * @return {void}\n */\nexport const setSyncInitialRender = function(useSyncInitialRender) {\n  syncInitialRender = useSyncInitialRender;\n};\n"
    },
    {
     "id": 45,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/elements/dom-module.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { resolveUrl, pathFromUrl } from '../utils/resolve-url.js';\nimport { strictTemplatePolicy } from '../utils/settings.js';\n\nlet modules = {};\nlet lcModules = {};\n/**\n * Sets a dom-module into the global registry by id.\n *\n * @param {string} id dom-module id\n * @param {DomModule} module dom-module instance\n * @return {void}\n */\nfunction setModule(id, module) {\n  // store id separate from lowercased id so that\n  // in all cases mixedCase id will stored distinctly\n  // and lowercase version is a fallback\n  modules[id] = lcModules[id.toLowerCase()] = module;\n}\n/**\n * Retrieves a dom-module from the global registry by id.\n *\n * @param {string} id dom-module id\n * @return {DomModule!} dom-module instance\n */\nfunction findModule(id) {\n  return modules[id] || lcModules[id.toLowerCase()];\n}\n\nfunction styleOutsideTemplateCheck(inst) {\n  if (inst.querySelector('style')) {\n    console.warn('dom-module %s has style outside template', inst.id);\n  }\n}\n\n/**\n * The `dom-module` element registers the dom it contains to the name given\n * by the module's id attribute. It provides a unified database of dom\n * accessible via its static `import` API.\n *\n * A key use case of `dom-module` is for providing custom element `<template>`s\n * via HTML imports that are parsed by the native HTML parser, that can be\n * relocated during a bundling pass and still looked up by `id`.\n *\n * Example:\n *\n *     <dom-module id=\"foo\">\n *       <img src=\"stuff.png\">\n *     </dom-module>\n *\n * Then in code in some other location that cannot access the dom-module above\n *\n *     let img = customElements.get('dom-module').import('foo', 'img');\n *\n * @customElement\n * @extends HTMLElement\n * @summary Custom element that provides a registry of relocatable DOM content\n *   by `id` that is agnostic to bundling.\n * @unrestricted\n */\nexport class DomModule extends HTMLElement {\n\n  static get observedAttributes() { return ['id']; }\n\n  /**\n   * Retrieves the element specified by the css `selector` in the module\n   * registered by `id`. For example, this.import('foo', 'img');\n   * @param {string} id The id of the dom-module in which to search.\n   * @param {string=} selector The css selector by which to find the element.\n   * @return {Element} Returns the element which matches `selector` in the\n   * module registered at the specified `id`.\n   *\n   * @export\n   * @nocollapse Referred to indirectly in style-gather.js\n   */\n  static import(id, selector) {\n    if (id) {\n      let m = findModule(id);\n      if (m && selector) {\n        return m.querySelector(selector);\n      }\n      return m;\n    }\n    return null;\n  }\n\n  /* eslint-disable no-unused-vars */\n  /**\n   * @param {string} name Name of attribute.\n   * @param {?string} old Old value of attribute.\n   * @param {?string} value Current value of attribute.\n   * @param {?string} namespace Attribute namespace.\n   * @return {void}\n   * @override\n   */\n  attributeChangedCallback(name, old, value, namespace) {\n    if (old !== value) {\n      this.register();\n    }\n  }\n  /* eslint-enable no-unused-args */\n\n  /**\n   * The absolute URL of the original location of this `dom-module`.\n   *\n   * This value will differ from this element's `ownerDocument` in the\n   * following ways:\n   * - Takes into account any `assetpath` attribute added during bundling\n   *   to indicate the original location relative to the bundled location\n   * - Uses the HTMLImports polyfill's `importForElement` API to ensure\n   *   the path is relative to the import document's location since\n   *   `ownerDocument` is not currently polyfilled\n   */\n  get assetpath() {\n    // Don't override existing assetpath.\n    if (!this.__assetpath) {\n      // note: assetpath set via an attribute must be relative to this\n      // element's location; accomodate polyfilled HTMLImports\n      const owner = window.HTMLImports && HTMLImports.importForElement ?\n        HTMLImports.importForElement(this) || document : this.ownerDocument;\n      const url = resolveUrl(\n        this.getAttribute('assetpath') || '', owner.baseURI);\n      this.__assetpath = pathFromUrl(url);\n    }\n    return this.__assetpath;\n  }\n\n  /**\n   * Registers the dom-module at a given id. This method should only be called\n   * when a dom-module is imperatively created. For\n   * example, `document.createElement('dom-module').register('foo')`.\n   * @param {string=} id The id at which to register the dom-module.\n   * @return {void}\n   */\n  register(id) {\n    id = id || this.id;\n    if (id) {\n      // Under strictTemplatePolicy, reject and null out any re-registered\n      // dom-module since it is ambiguous whether first-in or last-in is trusted\n      if (strictTemplatePolicy && findModule(id) !== undefined) {\n        setModule(id, null);\n        throw new Error(`strictTemplatePolicy: dom-module ${id} re-registered`);\n      }\n      this.id = id;\n      setModule(id, this);\n      styleOutsideTemplateCheck(this);\n    }\n  }\n}\n\nDomModule.prototype['modules'] = modules;\n\ncustomElements.define('dom-module', DomModule);\n"
    },
    {
     "id": 46,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/legacy/polymer-fn.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport { Class } from './class.js';\n\nimport '../utils/boot.js';\n\n/**\n * Legacy class factory and registration helper for defining Polymer\n * elements.\n *\n * This method is equivalent to\n *\n *     import {Class} from '@polymer/polymer/lib/legacy/class.js';\n *     customElements.define(info.is, Class(info));\n *\n * See `Class` for details on valid legacy metadata format for `info`.\n *\n * @global\n * @override\n * @function\n * @param {!PolymerInit} info Object containing Polymer metadata and functions\n *   to become class methods.\n * @return {function(new: HTMLElement)} Generated class\n * @suppress {duplicate, invalidCasts, checkTypes}\n */\nconst Polymer = function(info) {\n  // if input is a `class` (aka a function with a prototype), use the prototype\n  // remember that the `constructor` will never be called\n  let klass;\n  if (typeof info === 'function') {\n    klass = info;\n  } else {\n    klass = Polymer.Class(info);\n  }\n  customElements.define(klass.is, /** @type {!HTMLElement} */(klass));\n  return klass;\n};\n\nPolymer.Class = Class;\n\nexport { Polymer };"
    },
    {
     "id": 47,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-lumo-styles@1.6.1/node_modules/@vaadin/vaadin-lumo-styles/version.js",
     "source": "class Lumo extends HTMLElement {\n  static get version() {\n    return '1.6.1';\n  }\n}\n\ncustomElements.define('vaadin-lumo-styles', Lumo);\n\nexport { Lumo };\n"
    },
    {
     "id": 48,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-overlay@3.5.1/node_modules/@vaadin/vaadin-overlay/src/vaadin-overlay.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-overlay@3.5.1/node_modules/@vaadin/vaadin-overlay/src/vaadin-overlay.js",
       "source": "/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { templatize } from '@polymer/polymer/lib/utils/templatize.js';\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { DirMixin } from '@vaadin/vaadin-element-mixin/vaadin-dir-mixin.js';\nimport { FocusablesHelper } from './vaadin-focusables-helper.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nlet overlayContentCounter = 0;\nconst overlayContentCache = {};\n\nconst createOverlayContent = (cssText) => {\n  const is = overlayContentCache[cssText] || processOverlayStyles(cssText);\n  return document.createElement(is);\n};\n\nconst processOverlayStyles = (cssText) => {\n  overlayContentCounter++;\n  const is = `vaadin-overlay-content-${overlayContentCounter}`;\n\n  const styledTemplate = document.createElement('template');\n  const style = document.createElement('style');\n  style.textContent = ':host { display: block; }' + cssText;\n  styledTemplate.content.appendChild(style);\n\n  if (window.ShadyCSS) {\n    window.ShadyCSS.prepareTemplate(styledTemplate, is);\n  }\n\n  // NOTE(platosha): Have to use an awkward IIFE returning class here\n  // to prevent this class from showing up in analysis.json & API docs.\n  const klass = (() => /** @private */ class extends HTMLElement {\n    static get is() {\n      return is;\n    }\n\n    constructor() {\n      super();\n\n      if (!this.shadowRoot) {\n        this.attachShadow({mode: 'open'});\n        this.shadowRoot.appendChild(document.importNode(styledTemplate.content, true));\n      }\n    }\n\n    connectedCallback() {\n      if (window.ShadyCSS) {\n        window.ShadyCSS.styleElement(this);\n      }\n    }\n  })();\n\n  customElements.define(klass.is, klass);\n\n  overlayContentCache[cssText] = is;\n  return is;\n};\n\n/**\n *\n * `<vaadin-overlay>` is a Web Component for creating overlays. The content of the overlay\n * can be populated in two ways: imperatively by using renderer callback function and\n * declaratively by using Polymer's Templates.\n *\n * ### Rendering\n *\n * By default, the overlay uses the content provided by using the renderer callback function.\n *\n * The renderer function provides `root`, `owner`, `model` arguments when applicable.\n * Generate DOM content by using `model` object properties if needed, append it to the `root`\n * element and control the state of the host element by accessing `owner`. Before generating new\n * content, users are able to check if there is already content in `root` for reusing it.\n *\n * ```html\n * <vaadin-overlay id=\"overlay\"></vaadin-overlay>\n * ```\n * ```js\n * const overlay = document.querySelector('#overlay');\n * overlay.renderer = function(root) {\n *  root.textContent = \"Overlay content\";\n * };\n * ```\n *\n * Renderer is called on the opening of the overlay and each time the related model is updated.\n * DOM generated during the renderer call can be reused\n * in the next renderer call and will be provided with the `root` argument.\n * On first call it will be empty.\n *\n * **NOTE:** when the renderer property is defined, the `<template>` content is not used.\n *\n * ### Templating\n *\n * Alternatively, the content can be provided with Polymer Template.\n * Overlay finds the first child template and uses that in case renderer callback function\n * is not provided. You can also set a custom template using the `template` property.\n *\n * After the content from the template is stamped, the `content` property\n * points to the content container.\n *\n * The overlay provides `forwardHostProp` when calling\n * `Polymer.Templatize.templatize` for the template, so that the bindings\n * from the parent scope propagate to the content.  You can also pass\n * custom `instanceProps` object using the `instanceProps` property.\n *\n * ```html\n * <vaadin-overlay>\n *   <template>Overlay content</template>\n * </vaadin-overlay>\n * ```\n *\n * **NOTE:** when using `instanceProps`: because of the Polymer limitation,\n * every template can only be templatized once, so it is important\n * to set `instanceProps` before the `template` is assigned to the overlay.\n *\n * ### Styling\n *\n * To style the overlay content, use styles in the parent scope:\n *\n * - If the overlay is used in a component, then the component styles\n *   apply the overlay content.\n * - If the overlay is used in the global DOM scope, then global styles\n *   apply to the overlay content.\n *\n * See examples for styling the overlay content in the live demos.\n *\n * The following Shadow DOM parts are available for styling the overlay component itself:\n *\n * Part name  | Description\n * -----------|---------------------------------------------------------|\n * `backdrop` | Backdrop of the overlay\n * `overlay`  | Container for position/sizing/alignment of the content\n * `content`  | Content of the overlay\n *\n * The following state attributes are available for styling:\n *\n * Attribute | Description | Part\n * ---|---|---\n * `opening` | Applied just after the overlay is attached to the DOM. You can apply a CSS @keyframe animation for this state. | `:host`\n * `closing` | Applied just before the overlay is detached from the DOM. You can apply a CSS @keyframe animation for this state. | `:host`\n *\n * The following custom CSS properties are available for styling:\n *\n * Custom CSS property | Description | Default value\n * ---|---|---\n * `--vaadin-overlay-viewport-bottom` | Bottom offset of the visible viewport area | `0` or detected offset\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends PolymerElement\n * @mixes ThemableMixin\n * @demo demo/index.html\n */\nclass OverlayElement extends ThemableMixin(DirMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        z-index: 200;\n        position: fixed;\n\n        /*\n          Despite of what the names say, <vaadin-overlay> is just a container\n          for position/sizing/alignment. The actual overlay is the overlay part.\n        */\n\n        /*\n          Default position constraints: the entire viewport. Note: themes can\n          override this to introduce gaps between the overlay and the viewport.\n        */\n        top: 0;\n        right: 0;\n        bottom: var(--vaadin-overlay-viewport-bottom);\n        left: 0;\n\n        /* Use flexbox alignment for the overlay part. */\n        display: flex;\n        flex-direction: column; /* makes dropdowns sizing easier */\n        /* Align to center by default. */\n        align-items: center;\n        justify-content: center;\n\n        /* Allow centering when max-width/max-height applies. */\n        margin: auto;\n\n        /* The host is not clickable, only the overlay part is. */\n        pointer-events: none;\n\n        /* Remove tap highlight on touch devices. */\n        -webkit-tap-highlight-color: transparent;\n\n        /* CSS API for host */\n        --vaadin-overlay-viewport-bottom: 0;\n      }\n\n      :host([hidden]),\n      :host(:not([opened]):not([closing])) {\n        display: none !important;\n      }\n\n      [part=\"overlay\"] {\n        -webkit-overflow-scrolling: touch;\n        overflow: auto;\n        pointer-events: auto;\n\n        /* Prevent overflowing the host in MSIE 11 */\n        max-width: 100%;\n        box-sizing: border-box;\n\n        -webkit-tap-highlight-color: initial; /* reenable tap highlight inside */\n      }\n\n      [part=\"backdrop\"] {\n        z-index: -1;\n        content: \"\";\n        background: rgba(0, 0, 0, 0.5);\n        position: fixed;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n        pointer-events: auto;\n      }\n    </style>\n\n    <div id=\"backdrop\" part=\"backdrop\" hidden\\$=\"{{!withBackdrop}}\"></div>\n    <div part=\"overlay\" id=\"overlay\" tabindex=\"0\">\n      <div part=\"content\" id=\"content\">\n        <slot></slot>\n      </div>\n    </div>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-overlay';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * When true, the overlay is visible and attached to body.\n       */\n      opened: {\n        type: Boolean,\n        notify: true,\n        observer: '_openedChanged',\n        reflectToAttribute: true\n      },\n\n      /**\n       * Owner element passed with renderer function\n       * @type {HTMLElement}\n       */\n      owner: Element,\n\n      /**\n       * Custom function for rendering the content of the overlay.\n       * Receives three arguments:\n       *\n       * - `root` The root container DOM element. Append your content to it.\n       * - `owner` The host element of the renderer function.\n       * - `model` The object with the properties related with rendering.\n       * @type {OverlayRenderer | null | undefined}\n       */\n      renderer: Function,\n\n      /**\n       * The template of the overlay content.\n       * @type {HTMLTemplateElement | null | undefined}\n       */\n      template: {\n        type: Object,\n        notify: true\n      },\n\n      /**\n       * Optional argument for `Polymer.Templatize.templatize`.\n       */\n      instanceProps: {\n        type: Object\n      },\n\n      /**\n       * References the content container after the template is stamped.\n       * @type {!HTMLElement | undefined}\n       */\n      content: {\n        type: Object,\n        notify: true\n      },\n\n      /**\n       * When true the overlay has backdrop on top of content when opened.\n       * @type {boolean}\n       */\n      withBackdrop: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * Object with properties that is passed to `renderer` function\n       */\n      model: Object,\n\n      /**\n       * When true the overlay won't disable the main content, showing\n       * it doesn’t change the functionality of the user interface.\n       * @type {boolean}\n       */\n      modeless: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        observer: '_modelessChanged'\n      },\n\n      /**\n       * When set to true, the overlay is hidden. This also closes the overlay\n       * immediately in case there is a closing animation in progress.\n       * @type {boolean}\n       */\n      hidden: {\n        type: Boolean,\n        reflectToAttribute: true,\n        observer: '_hiddenChanged'\n      },\n\n      /**\n       * When true move focus to the first focusable element in the overlay,\n       * or to the overlay if there are no focusable elements.\n       * @type {boolean}\n       */\n      focusTrap: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Set to true to enable restoring of focus when overlay is closed.\n       * @type {boolean}\n       */\n      restoreFocusOnClose: {\n        type: Boolean,\n        value: false,\n      },\n\n      /** @private */\n      _mouseDownInside: {\n        type: Boolean\n      },\n\n      /** @private */\n      _mouseUpInside: {\n        type: Boolean\n      },\n\n      /** @private */\n      _instance: {\n        type: Object\n      },\n\n      /** @private */\n      _originalContentPart: Object,\n\n      /** @private */\n      _contentNodes: Array,\n\n      /** @private */\n      _oldOwner: Element,\n\n      /** @private */\n      _oldModel: Object,\n\n      /** @private */\n      _oldTemplate: Object,\n\n      /** @private */\n      _oldInstanceProps: Object,\n\n      /** @private */\n      _oldRenderer: Object,\n\n      /** @private */\n      _oldOpened: Boolean\n    };\n  }\n\n  static get observers() {\n    return [\n      '_templateOrRendererChanged(template, renderer, owner, model, instanceProps, opened)'\n    ];\n  }\n\n  constructor() {\n    super();\n    this._boundMouseDownListener = this._mouseDownListener.bind(this);\n    this._boundMouseUpListener = this._mouseUpListener.bind(this);\n    this._boundOutsideClickListener = this._outsideClickListener.bind(this);\n    this._boundKeydownListener = this._keydownListener.bind(this);\n\n    this._observer = new FlattenedNodesObserver(this, info => {\n      this._setTemplateFromNodes(info.addedNodes);\n    });\n\n    // Listener for preventing closing of the paper-dialog and all components extending `iron-overlay-behavior`.\n    this._boundIronOverlayCanceledListener = this._ironOverlayCanceled.bind(this);\n\n    if (/iPad|iPhone|iPod/.test(navigator.userAgent)) {\n      this._boundIosResizeListener = () => this._detectIosNavbar();\n    }\n  }\n\n  ready() {\n    super.ready();\n\n    this._observer.flush();\n\n    // Need to add dummy click listeners to this and the backdrop or else\n    // the document click event listener (_outsideClickListener) may never\n    // get invoked on iOS Safari (reproducible in <vaadin-dialog>\n    // and <vaadin-context-menu>).\n    this.addEventListener('click', () => {});\n    this.$.backdrop.addEventListener('click', () => {});\n  }\n\n  /** @private */\n  _detectIosNavbar() {\n    if (!this.opened) {\n      return;\n    }\n\n    const innerHeight = window.innerHeight;\n    const innerWidth = window.innerWidth;\n\n    const landscape = innerWidth > innerHeight;\n\n    const clientHeight = document.documentElement.clientHeight;\n\n    if (landscape && clientHeight > innerHeight) {\n      this.style.setProperty('--vaadin-overlay-viewport-bottom', clientHeight - innerHeight + 'px');\n    } else {\n      this.style.setProperty('--vaadin-overlay-viewport-bottom', '0');\n    }\n  }\n\n  /**\n   * @param {!Array<!Element>} nodes\n   * @protected\n   */\n  _setTemplateFromNodes(nodes) {\n    this.template = nodes.filter(node => node.localName && node.localName === 'template')[0] || this.template;\n  }\n\n  /**\n   * @param {Event=} sourceEvent\n   * @event vaadin-overlay-close\n   * fired before the `vaadin-overlay` will be closed. If canceled the closing of the overlay is canceled as well.\n   */\n  close(sourceEvent) {\n    var evt = new CustomEvent('vaadin-overlay-close', {bubbles: true, cancelable: true, detail: {sourceEvent: sourceEvent}});\n    this.dispatchEvent(evt);\n    if (!evt.defaultPrevented) {\n      this.opened = false;\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    if (this._boundIosResizeListener) {\n      this._detectIosNavbar();\n      window.addEventListener('resize', this._boundIosResizeListener);\n    }\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this._boundIosResizeListener && window.removeEventListener('resize', this._boundIosResizeListener);\n  }\n\n  /** @private */\n  _ironOverlayCanceled(event) {\n    event.preventDefault();\n  }\n\n  /** @private */\n  _mouseDownListener(event) {\n    this._mouseDownInside = event.composedPath().indexOf(this.$.overlay) >= 0;\n  }\n\n  /** @private */\n  _mouseUpListener(event) {\n    this._mouseUpInside = event.composedPath().indexOf(this.$.overlay) >= 0;\n  }\n\n  /**\n   * We need to listen on 'click' / 'tap' event and capture it and close the overlay before\n   * propagating the event to the listener in the button. Otherwise, if the clicked button would call\n   * open(), this would happen: https://www.youtube.com/watch?v=Z86V_ICUCD4\n   *\n   * @event vaadin-overlay-outside-click\n   * fired before the `vaadin-overlay` will be closed on outside click. If canceled the closing of the overlay is canceled as well.\n   *\n   * @private\n   */\n  _outsideClickListener(event) {\n    if (event.composedPath().indexOf(this.$.overlay) !== -1 ||\n        this._mouseDownInside || this._mouseUpInside) {\n      this._mouseDownInside = false;\n      this._mouseUpInside = false;\n      return;\n    }\n    if (!this._last) {\n      return;\n    }\n\n    const evt = new CustomEvent('vaadin-overlay-outside-click', {bubbles: true, cancelable: true, detail: {sourceEvent: event}});\n    this.dispatchEvent(evt);\n\n    if (this.opened && !evt.defaultPrevented) {\n      this.close(event);\n    }\n  }\n\n  /**\n   * @event vaadin-overlay-escape-press\n   * fired before the `vaadin-overlay` will be closed on ESC button press. If canceled the closing of the overlay is canceled as well.\n   *\n   * @private\n   */\n  _keydownListener(event) {\n    if (!this._last) {\n      return;\n    }\n\n    // TAB\n    if (event.key === 'Tab' && this.focusTrap && !event.defaultPrevented) {\n      // if only tab key is pressed, cycle forward, else cycle backwards.\n      this._cycleTab(event.shiftKey ? -1 : 1);\n\n      event.preventDefault();\n\n    // ESC\n    } else if (event.key === 'Escape' || event.key === 'Esc') {\n      const evt = new CustomEvent('vaadin-overlay-escape-press', {bubbles: true, cancelable: true, detail: {sourceEvent: event}});\n      this.dispatchEvent(evt);\n\n      if (this.opened && !evt.defaultPrevented) {\n        this.close(event);\n      }\n    }\n  }\n\n  /** @protected */\n  _ensureTemplatized() {\n    this._setTemplateFromNodes(Array.from(this.children));\n  }\n\n  /**\n   * @event vaadin-overlay-open\n   * fired after the `vaadin-overlay` is opened.\n   *\n   * @private\n   */\n  _openedChanged(opened, wasOpened) {\n    if (!this._instance) {\n      this._ensureTemplatized();\n    }\n\n    if (opened) {\n      // Store focused node.\n      this.__restoreFocusNode = this._getActiveElement();\n      this._animatedOpening();\n\n      afterNextRender(this, () => {\n        if (this.focusTrap && !this.contains(document._activeElement || document.activeElement)) {\n          this._cycleTab(0, 0);\n        }\n\n        const evt = new CustomEvent('vaadin-overlay-open', {bubbles: true});\n        this.dispatchEvent(evt);\n      });\n\n      if (!this.modeless) {\n        this._addGlobalListeners();\n      }\n    } else if (wasOpened) {\n      this._animatedClosing();\n\n      if (!this.modeless) {\n        this._removeGlobalListeners();\n      }\n    }\n  }\n\n  /** @private */\n  _hiddenChanged(hidden) {\n    if (hidden && this.hasAttribute('closing')) {\n      this._flushAnimation('closing');\n    }\n  }\n\n  /**\n   * @return {boolean}\n   * @protected\n   */\n  _shouldAnimate() {\n    const name = getComputedStyle(this).getPropertyValue('animation-name');\n    const hidden = getComputedStyle(this).getPropertyValue('display') === 'none';\n    return !hidden && name && name != 'none';\n  }\n\n  /**\n   * @param {string} type\n   * @param {Function} callback\n   * @protected\n   */\n  _enqueueAnimation(type, callback) {\n    const handler = `__${type}Handler`;\n    const listener = event => {\n      if (event && event.target !== this) {\n        return;\n      }\n      callback();\n      this.removeEventListener('animationend', listener);\n      delete this[handler];\n    };\n    this[handler] = listener;\n    this.addEventListener('animationend', listener);\n  }\n\n  /**\n   * @param {string} type\n   * @protected\n   */\n  _flushAnimation(type) {\n    const handler = `__${type}Handler`;\n    if (typeof this[handler] === 'function') {\n      this[handler]();\n    }\n  }\n\n  /** @protected */\n  _animatedOpening() {\n    if (this.parentNode === document.body && this.hasAttribute('closing')) {\n      this._flushAnimation('closing');\n    }\n    this._attachOverlay();\n    if (!this.modeless) {\n      this._enterModalState();\n    }\n    this.setAttribute('opening', '');\n\n    const finishOpening = () => {\n      document.addEventListener('iron-overlay-canceled', this._boundIronOverlayCanceledListener);\n\n      this.removeAttribute('opening');\n    };\n\n    if (this._shouldAnimate()) {\n      this._enqueueAnimation('opening', finishOpening);\n    } else {\n      finishOpening();\n    }\n  }\n\n  /** @protected */\n  _attachOverlay() {\n    this._placeholder = document.createComment('vaadin-overlay-placeholder');\n    this.parentNode.insertBefore(this._placeholder, this);\n    document.body.appendChild(this);\n    this.bringToFront();\n  }\n\n  /** @protected */\n  _animatedClosing() {\n    if (this.hasAttribute('opening')) {\n      this._flushAnimation('opening');\n    }\n    if (this._placeholder) {\n      this._exitModalState();\n\n      if (this.restoreFocusOnClose && this.__restoreFocusNode) {\n        // If the activeElement is `<body>` or inside the overlay,\n        // we are allowed to restore the focus. In all the other\n        // cases focus might have been moved elsewhere by another\n        // component or by the user interaction (e.g. click on a\n        // button outside the overlay).\n        const activeElement = this._getActiveElement();\n\n        if (activeElement === document.body || this._deepContains(activeElement)) {\n          this.__restoreFocusNode.focus();\n        }\n        this.__restoreFocusNode = null;\n      }\n\n      this.setAttribute('closing', '');\n\n      const finishClosing = () => {\n        document.removeEventListener('iron-overlay-canceled', this._boundIronOverlayCanceledListener);\n        this._detachOverlay();\n        this.shadowRoot.querySelector('[part=\"overlay\"]').style.removeProperty('pointer-events');\n        this.removeAttribute('closing');\n      };\n\n      if (this._shouldAnimate()) {\n        this._enqueueAnimation('closing', finishClosing);\n      } else {\n        finishClosing();\n      }\n    }\n  }\n\n  /** @protected */\n  _detachOverlay() {\n    this._placeholder.parentNode.insertBefore(this, this._placeholder);\n    this._placeholder.parentNode.removeChild(this._placeholder);\n  }\n\n  /**\n   * Returns all attached overlays in visual stacking order.\n   * @private\n   */\n  static get __attachedInstances() {\n    return Array.from(document.body.children)\n      .filter(el => el instanceof OverlayElement && !el.hasAttribute('closing'))\n      .sort((a, b) => (a.__zIndex - b.__zIndex) || 0);\n  }\n\n  /**\n   * returns true if this is the last one in the opened overlays stack\n   * @return {boolean}\n   * @protected\n   */\n  get _last() {\n    return this === OverlayElement.__attachedInstances.pop();\n  }\n\n  /** @private */\n  _modelessChanged(modeless) {\n    if (!modeless) {\n      if (this.opened) {\n        this._addGlobalListeners();\n        this._enterModalState();\n      }\n    } else {\n      this._removeGlobalListeners();\n      this._exitModalState();\n    }\n  }\n\n  /** @protected */\n  _addGlobalListeners() {\n    document.addEventListener('mousedown', this._boundMouseDownListener);\n    document.addEventListener('mouseup', this._boundMouseUpListener);\n    // Firefox leaks click to document on contextmenu even if prevented\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=990614\n    document.documentElement.addEventListener('click', this._boundOutsideClickListener, true);\n    document.addEventListener('keydown', this._boundKeydownListener);\n  }\n\n  /** @protected */\n  _enterModalState() {\n    if (document.body.style.pointerEvents !== 'none') {\n      // Set body pointer-events to 'none' to disable mouse interactions with\n      // other document nodes.\n      this._previousDocumentPointerEvents = document.body.style.pointerEvents;\n      document.body.style.pointerEvents = 'none';\n    }\n\n    // Disable pointer events in other attached overlays\n    OverlayElement.__attachedInstances.forEach(el => {\n      if (el !== this) {\n        el.shadowRoot.querySelector('[part=\"overlay\"]').style.pointerEvents = 'none';\n      }\n    });\n  }\n\n  /** @protected */\n  _removeGlobalListeners() {\n    document.removeEventListener('mousedown', this._boundMouseDownListener);\n    document.removeEventListener('mouseup', this._boundMouseUpListener);\n    document.documentElement.removeEventListener('click', this._boundOutsideClickListener, true);\n    document.removeEventListener('keydown', this._boundKeydownListener);\n  }\n\n  /** @protected */\n  _exitModalState() {\n    if (this._previousDocumentPointerEvents !== undefined) {\n      // Restore body pointer-events\n      document.body.style.pointerEvents = this._previousDocumentPointerEvents;\n      delete this._previousDocumentPointerEvents;\n    }\n\n    // Restore pointer events in the previous overlay(s)\n    const instances = OverlayElement.__attachedInstances;\n    let el;\n    // Use instances.pop() to ensure the reverse order\n    while (el = instances.pop()) {\n      if (el === this) {\n        // Skip the current instance\n        continue;\n      }\n      el.shadowRoot.querySelector('[part=\"overlay\"]').style.removeProperty('pointer-events');\n      if (!el.modeless) {\n        // Stop after the last modal\n        break;\n      }\n    }\n  }\n\n  /** @protected */\n  _removeOldContent() {\n    if (!this.content || !this._contentNodes) {\n      return;\n    }\n\n    this._observer.disconnect();\n\n    this._contentNodes.forEach(node => {\n      if (node.parentNode === this.content) {\n        this.content.removeChild(node);\n      }\n    });\n\n    if (this._originalContentPart) {\n      // Restore the original <div part=\"content\">\n      this.$.content.parentNode.replaceChild(this._originalContentPart, this.$.content);\n      this.$.content = this._originalContentPart;\n      this._originalContentPart = undefined;\n    }\n\n    this._observer.connect();\n\n    this._contentNodes = undefined;\n    this.content = undefined;\n  }\n\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {object} instanceProps\n   * @protected\n   */\n  _stampOverlayTemplate(template, instanceProps) {\n    this._removeOldContent();\n\n    if (!template._Templatizer) {\n      template._Templatizer = templatize(template, this, {\n        instanceProps: instanceProps,\n        forwardHostProp: function(prop, value) {\n          if (this._instance) {\n            this._instance.forwardHostProp(prop, value);\n          }\n        }\n      });\n    }\n\n    this._instance = new template._Templatizer({});\n    this._contentNodes = Array.from(this._instance.root.childNodes);\n\n    const templateRoot = template._templateRoot || (template._templateRoot = template.getRootNode());\n    const _isScoped = templateRoot !== document;\n\n    if (_isScoped) {\n      const isShady = window.ShadyCSS && !window.ShadyCSS.nativeShadow;\n\n      if (!this.$.content.shadowRoot) {\n        this.$.content.attachShadow({mode: 'open'});\n      }\n\n      let scopeCssText = Array.from(templateRoot.querySelectorAll('style'))\n        .reduce((result, style) => result + style.textContent, '');\n\n      if (isShady) {\n        // NOTE(platosha): ShadyCSS removes <style>’s from templates, so\n        // we have to use these protected APIs to get their contents back\n        const styleInfo = window.ShadyCSS.ScopingShim\n          ._styleInfoForNode(templateRoot.host);\n        if (styleInfo) {\n          scopeCssText += styleInfo._getStyleRules().parsedCssText;\n          scopeCssText += '}';\n        }\n      }\n\n      // The overlay root’s :host styles should not apply inside the overlay\n      scopeCssText = scopeCssText.replace(/:host/g, ':host-nomatch');\n\n      if (scopeCssText) {\n        if (isShady) {\n          // ShadyDOM: replace the <div part=\"content\"> with a generated\n          // styled custom element\n          const contentPart = createOverlayContent(scopeCssText);\n          contentPart.id = 'content';\n          contentPart.setAttribute('part', 'content');\n          this.$.content.parentNode.replaceChild(contentPart, this.$.content);\n          // NOTE(platosha): carry the style scope of the content part\n          contentPart.className = this.$.content.className;\n          this._originalContentPart = this.$.content;\n          this.$.content = contentPart;\n        } else {\n          // Shadow DOM: append a style to the content shadowRoot\n          const style = document.createElement('style');\n          style.textContent = scopeCssText;\n          this.$.content.shadowRoot.appendChild(style);\n          this._contentNodes.unshift(style);\n        }\n      }\n\n      this.$.content.shadowRoot.appendChild(this._instance.root);\n      this.content = this.$.content.shadowRoot;\n    } else {\n      this.appendChild(this._instance.root);\n      this.content = this;\n    }\n  }\n\n  /** @private */\n  _removeNewRendererOrTemplate(template, oldTemplate, renderer, oldRenderer) {\n    if (template !== oldTemplate) {\n      this.template = undefined;\n    } else if (renderer !== oldRenderer) {\n      this.renderer = undefined;\n    }\n  }\n\n  /**\n   * Manually invoke existing renderer.\n   */\n  render() {\n    if (this.renderer) {\n      this.renderer.call(this.owner, this.content, this.owner, this.model);\n    }\n  }\n\n  /** @private */\n  _templateOrRendererChanged(template, renderer, owner, model, instanceProps, opened) {\n    if (template && renderer) {\n      this._removeNewRendererOrTemplate(template, this._oldTemplate, renderer, this._oldRenderer);\n      throw new Error('You should only use either a renderer or a template for overlay content');\n    }\n\n    const ownerOrModelChanged = (this._oldOwner !== owner || this._oldModel !== model);\n    this._oldModel = model;\n    this._oldOwner = owner;\n\n    const templateOrInstancePropsChanged = (this._oldInstanceProps !== instanceProps || this._oldTemplate !== template);\n    this._oldInstanceProps = instanceProps;\n    this._oldTemplate = template;\n\n    const rendererChanged = this._oldRenderer !== renderer;\n    this._oldRenderer = renderer;\n\n    const openedChanged = this._oldOpened !== opened;\n    this._oldOpened = opened;\n\n    if (template && templateOrInstancePropsChanged) {\n      this._stampOverlayTemplate(template, instanceProps);\n    } else if (renderer && (rendererChanged || openedChanged || ownerOrModelChanged)) {\n      this.content = this;\n\n      if (rendererChanged) {\n        while (this.content.firstChild) {\n          this.content.removeChild(this.content.firstChild);\n        }\n      }\n\n      if (opened) {\n        this.render();\n      }\n    }\n  }\n\n  /**\n   * @param {Element} element\n   * @return {boolean}\n   * @protected\n   */\n  _isFocused(element) {\n    return element && element.getRootNode().activeElement === element;\n  }\n\n  /**\n   * @param {Element[]} elements\n   * @return {number}\n   * @protected\n   */\n  _focusedIndex(elements) {\n    elements = elements || this._getFocusableElements();\n    return elements.indexOf(elements.filter(this._isFocused).pop());\n  }\n\n  /**\n   * @param {number} increment\n   * @param {number | undefined} index\n   * @protected\n   */\n  _cycleTab(increment, index) {\n    const focusableElements = this._getFocusableElements();\n\n    if (index === undefined) {\n      index = this._focusedIndex(focusableElements);\n    }\n\n    index += increment;\n\n    // rollover to first item\n    if (index >= focusableElements.length) {\n      index = 0;\n    // go to last item\n    } else if (index < 0) {\n      index = focusableElements.length - 1;\n    }\n\n    focusableElements[index].focus();\n  }\n\n  /**\n   * @return {!Array<!HTMLElement>}\n   * @protected\n   */\n  _getFocusableElements() {\n    // collect all focusable elements\n    return FocusablesHelper.getTabbableNodes(this.$.overlay);\n  }\n\n  /**\n   * @return {!Element}\n   * @protected\n   */\n  _getActiveElement() {\n    let active = document._activeElement || document.activeElement;\n    // document.activeElement can be null\n    // https://developer.mozilla.org/en-US/docs/Web/API/Document/activeElement\n    // In IE 11, it can also be an object when operating in iframes\n    // or document.documentElement (when overlay closed on outside click).\n    // In these cases, default it to document.body.\n    if (!active || active === document.documentElement || active instanceof Element === false) {\n      active = document.body;\n    }\n    while (active.shadowRoot && active.shadowRoot.activeElement) {\n      active = active.shadowRoot.activeElement;\n    }\n    return active;\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   * @protected\n   */\n  _deepContains(node) {\n    if (this.contains(node)) {\n      return true;\n    }\n    let n = node;\n    const doc = node.ownerDocument;\n    // walk from node to `this` or `document`\n    while (n && n !== doc && n !== this) {\n      n = n.parentNode || n.host;\n    }\n    return n === this;\n  }\n\n  /**\n   * Brings the overlay as visually the frontmost one\n   */\n  bringToFront() {\n    let zIndex = '';\n    const frontmost = OverlayElement.__attachedInstances.filter(o => o !== this).pop();\n    if (frontmost) {\n      const frontmostZIndex = frontmost.__zIndex;\n      zIndex = frontmostZIndex + 1;\n    }\n    this.style.zIndex = zIndex;\n    this.__zIndex = zIndex || parseFloat(getComputedStyle(this).zIndex);\n  }\n}\n\ncustomElements.define(OverlayElement.is, OverlayElement);\nexport { OverlayElement };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-overlay@3.5.1/node_modules/@vaadin/vaadin-overlay/src/vaadin-focusables-helper.js",
       "source": "const p = Element.prototype;\nconst matches = p.matches || p.matchesSelector || p.mozMatchesSelector ||\n  p.msMatchesSelector || p.oMatchesSelector || p.webkitMatchesSelector;\n\n/**\n * `Polymer.IronFocusablesHelper` relies on some Polymer-specific legacy API,\n * especially the `root` property which does not exist for native shadow DOM.\n * That's why we have this helper here.\n * See https://github.com/PolymerElements/iron-overlay-behavior/issues/282\n */\nclass FocusablesHelper {\n\n  /**\n   * Returns a sorted array of tabbable nodes, including the root node.\n   * It searches the tabbable nodes in the light and shadow dom of the children,\n   * sorting the result by tabindex.\n   * @param {!Node} node\n   * @return {!Array<!HTMLElement>}\n   */\n  static getTabbableNodes(node) {\n    const result = [];\n    // If there is at least one element with tabindex > 0, we need to sort\n    // the final array by tabindex.\n    const needsSortByTabIndex = this._collectTabbableNodes(node, result);\n    if (needsSortByTabIndex) {\n      return this._sortByTabIndex(result);\n    }\n    return result;\n  }\n\n  /**\n   * Returns if a element is focusable.\n   * @param {!HTMLElement} element\n   * @return {boolean}\n   */\n  static isFocusable(element) {\n    // From http://stackoverflow.com/a/1600194/4228703:\n    // There isn't a definite list, it's up to the browser. The only\n    // standard we have is DOM Level 2 HTML\n    // https://www.w3.org/TR/DOM-Level-2-HTML/html.html, according to which the\n    // only elements that have a focus() method are HTMLInputElement,\n    // HTMLSelectElement, HTMLTextAreaElement and HTMLAnchorElement. This\n    // notably omits HTMLButtonElement and HTMLAreaElement. Referring to these\n    // tests with tabbables in different browsers\n    // http://allyjs.io/data-tables/focusable.html\n\n    // Elements that cannot be focused if they have [disabled] attribute.\n    if (matches.call(element, 'input, select, textarea, button, object')) {\n      return matches.call(element, ':not([disabled])');\n    }\n    // Elements that can be focused even if they have [disabled] attribute.\n    return matches.call(element, 'a[href], area[href], iframe, [tabindex], [contentEditable]');\n  }\n\n  /**\n   * Returns if a element is tabbable. To be tabbable, a element must be\n   * focusable, visible, and with a tabindex !== -1.\n   * @param {!HTMLElement} element\n   * @return {boolean}\n   */\n  static isTabbable(element) {\n    return this.isFocusable(element) &&\n        matches.call(element, ':not([tabindex=\"-1\"])') &&\n        this._isVisible(element);\n  }\n\n  /**\n   * Returns the normalized element tabindex. If not focusable, returns -1.\n   * It checks for the attribute \"tabindex\" instead of the element property\n   * `tabIndex` since browsers assign different values to it.\n   * e.g. in Firefox `<div contenteditable>` has `tabIndex = -1`\n   * @param {!HTMLElement} element\n   * @return {!number}\n   * @private\n   */\n  static _normalizedTabIndex(element) {\n    if (this.isFocusable(element)) {\n      const tabIndex = element.getAttribute('tabindex') || 0;\n      return Number(tabIndex);\n    }\n    return -1;\n  }\n\n  /**\n   * Searches for nodes that are tabbable and adds them to the `result` array.\n   * Returns if the `result` array needs to be sorted by tabindex.\n   * @param {!Node} node The starting point for the search; added to `result` if tabbable.\n   * @param {!Array<!HTMLElement>} result\n   * @return {boolean}\n   * @private\n   */\n  static _collectTabbableNodes(node, result) {\n    // If not an element or not visible, no need to explore children.\n    if (node.nodeType !== Node.ELEMENT_NODE || !this._isVisible(node)) {\n      return false;\n    }\n    const element = /** @type {!HTMLElement} */ (node);\n    const tabIndex = this._normalizedTabIndex(element);\n    let needsSort = tabIndex > 0;\n    if (tabIndex >= 0) {\n      result.push(element);\n    }\n\n    // In ShadowDOM v1, tab order is affected by the order of distribution.\n    // E.g. getTabbableNodes(#root) in ShadowDOM v1 should return [#A, #B];\n    // in ShadowDOM v0 tab order is not affected by the distribution order,\n    // in fact getTabbableNodes(#root) returns [#B, #A].\n    //  <div id=\"root\">\n    //   <!-- shadow -->\n    //     <slot name=\"a\">\n    //     <slot name=\"b\">\n    //   <!-- /shadow -->\n    //   <input id=\"A\" slot=\"a\">\n    //   <input id=\"B\" slot=\"b\" tabindex=\"1\">\n    //  </div>\n    let children;\n    if (element.localName === 'slot') {\n      children = element.assignedNodes({flatten: true});\n    } else {\n      // Use shadow root if possible, will check for distributed nodes.\n      children = (element.shadowRoot || element).children;\n    }\n    if (children) {\n      for (let i = 0; i < children.length; i++) {\n        // Ensure method is always invoked to collect tabbable children.\n        needsSort = this._collectTabbableNodes(children[i], result) || needsSort;\n      }\n    }\n    return needsSort;\n  }\n\n  /**\n   * Returns false if the element has `visibility: hidden` or `display: none`\n   * @param {!HTMLElement} element\n   * @return {boolean}\n   * @private\n   */\n  static _isVisible(element) {\n    // Check inline style first to save a re-flow. If looks good, check also\n    // computed style.\n    let style = element.style;\n    if (style.visibility !== 'hidden' && style.display !== 'none') {\n      style = window.getComputedStyle(element);\n      return (style.visibility !== 'hidden' && style.display !== 'none');\n    }\n    return false;\n  }\n\n  /**\n   * Sorts an array of tabbable elements by tabindex. Returns a new array.\n   * @param {!Array<!HTMLElement>} tabbables\n   * @return {!Array<!HTMLElement>}\n   * @private\n   */\n  static _sortByTabIndex(tabbables) {\n    // Implement a merge sort as Array.prototype.sort does a non-stable sort\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n    const len = tabbables.length;\n    if (len < 2) {\n      return tabbables;\n    }\n    const pivot = Math.ceil(len / 2);\n    const left = this._sortByTabIndex(tabbables.slice(0, pivot));\n    const right = this._sortByTabIndex(tabbables.slice(pivot));\n    return this._mergeSortByTabIndex(left, right);\n  }\n\n  /**\n   * Merge sort iterator, merges the two arrays into one, sorted by tab index.\n   * @param {!Array<!HTMLElement>} left\n   * @param {!Array<!HTMLElement>} right\n   * @return {!Array<!HTMLElement>}\n   * @private\n   */\n  static _mergeSortByTabIndex(left, right) {\n    const result = [];\n    while ((left.length > 0) && (right.length > 0)) {\n      if (this._hasLowerTabOrder(left[0], right[0])) {\n        result.push(right.shift());\n      } else {\n        result.push(left.shift());\n      }\n    }\n\n    return result.concat(left, right);\n  }\n\n  /**\n   * Returns if element `a` has lower tab order compared to element `b`\n   * (both elements are assumed to be focusable and tabbable).\n   * Elements with tabindex = 0 have lower tab order compared to elements\n   * with tabindex > 0.\n   * If both have same tabindex, it returns false.\n   * @param {!HTMLElement} a\n   * @param {!HTMLElement} b\n   * @return {boolean}\n   * @private\n   */\n  static _hasLowerTabOrder(a, b) {\n    // Normalize tabIndexes\n    // e.g. in Firefox `<div contenteditable>` has `tabIndex = -1`\n    const ati = Math.max(a.tabIndex, 0);\n    const bti = Math.max(b.tabIndex, 0);\n    return (ati === 0 || bti === 0) ? bti > ati : ati > bti;\n  }\n}\n\nexport { FocusablesHelper };\n"
      }
     ]
    },
    {
     "id": 49,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-lumo-styles@1.6.1/node_modules/@vaadin/vaadin-lumo-styles/mixins/field-button.js",
     "source": "import '../color.js';\nimport '../font-icons.js';\nimport '../sizing.js';\nimport '../style.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"lumo-field-button\">\n  <template>\n    <style>\n      [part\\$=\"button\"] {\n        flex: none;\n        width: 1em;\n        height: 1em;\n        line-height: 1;\n        font-size: var(--lumo-icon-size-m);\n        text-align: center;\n        color: var(--lumo-contrast-60pct);\n        transition: 0.2s color;\n        cursor: var(--lumo-clickable-cursor);\n      }\n\n      :host(:not([readonly])) [part\\$=\"button\"]:hover {\n        color: var(--lumo-contrast-90pct);\n      }\n\n      :host([disabled]) [part\\$=\"button\"],\n      :host([readonly]) [part\\$=\"button\"] {\n        color: var(--lumo-contrast-20pct);\n      }\n\n      [part\\$=\"button\"]::before {\n        font-family: \"lumo-icons\";\n        display: block;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
    },
    {
     "id": 50,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/legacy/polymer.dom.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\nimport { wrap } from '../utils/wrap.js';\nimport '../utils/settings.js';\nimport { FlattenedNodesObserver } from '../utils/flattened-nodes-observer.js';\nexport { flush, enqueueDebouncer as addDebouncer } from '../utils/flush.js';\n/* eslint-disable no-unused-vars */\nimport { Debouncer } from '../utils/debounce.js';  // used in type annotations\n/* eslint-enable no-unused-vars */\n\nconst p = Element.prototype;\n/**\n * @const {function(this:Node, string): boolean}\n */\nconst normalizedMatchesSelector = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\n/**\n * Cross-platform `element.matches` shim.\n *\n * @function matchesSelector\n * @param {!Node} node Node to check selector against\n * @param {string} selector Selector to match\n * @return {boolean} True if node matched selector\n */\nexport const matchesSelector = function(node, selector) {\n  return normalizedMatchesSelector.call(node, selector);\n};\n\n/**\n * Node API wrapper class returned from `Polymer.dom.(target)` when\n * `target` is a `Node`.\n * @implements {PolymerDomApi}\n * @unrestricted\n */\nclass DomApiNative {\n\n  /**\n   * @param {Node} node Node for which to create a Polymer.dom helper object.\n   */\n  constructor(node) {\n    this.node = node;\n  }\n\n  /**\n   * Returns an instance of `FlattenedNodesObserver` that\n   * listens for node changes on this element.\n   *\n   * @param {function(this:HTMLElement, { target: !HTMLElement, addedNodes: !Array<!Element>, removedNodes: !Array<!Element> }):void} callback Called when direct or distributed children\n   *   of this element changes\n   * @return {!PolymerDomApi.ObserveHandle} Observer instance\n   * @override\n   */\n  observeNodes(callback) {\n    return new FlattenedNodesObserver(\n        /** @type {!HTMLElement} */(this.node), callback);\n  }\n\n  /**\n   * Disconnects an observer previously created via `observeNodes`\n   *\n   * @param {!PolymerDomApi.ObserveHandle} observerHandle Observer instance\n   *   to disconnect.\n   * @return {void}\n   * @override\n   */\n  unobserveNodes(observerHandle) {\n    observerHandle.disconnect();\n  }\n\n  /**\n   * Provided as a backwards-compatible API only.  This method does nothing.\n   * @return {void}\n   */\n  notifyObserver() {}\n\n  /**\n   * Returns true if the provided node is contained with this element's\n   * light-DOM children or shadow root, including any nested shadow roots\n   * of children therein.\n   *\n   * @param {Node} node Node to test\n   * @return {boolean} Returns true if the given `node` is contained within\n   *   this element's light or shadow DOM.\n   * @override\n   */\n  deepContains(node) {\n    if (wrap(this.node).contains(node)) {\n      return true;\n    }\n    let n = node;\n    let doc = node.ownerDocument;\n    // walk from node to `this` or `document`\n    while (n && n !== doc && n !== this.node) {\n      // use logical parentnode, or native ShadowRoot host\n      n = wrap(n).parentNode || wrap(n).host;\n    }\n    return n === this.node;\n  }\n\n  /**\n   * Returns the root node of this node.  Equivalent to `getRootNode()`.\n   *\n   * @return {Node} Top most element in the dom tree in which the node\n   * exists. If the node is connected to a document this is either a\n   * shadowRoot or the document; otherwise, it may be the node\n   * itself or a node or document fragment containing it.\n   * @override\n   */\n  getOwnerRoot() {\n    return wrap(this.node).getRootNode();\n  }\n\n  /**\n   * For slot elements, returns the nodes assigned to the slot; otherwise\n   * an empty array. It is equivalent to `<slot>.addignedNodes({flatten:true})`.\n   *\n   * @return {!Array<!Node>} Array of assigned nodes\n   * @override\n   */\n  getDistributedNodes() {\n    return (this.node.localName === 'slot') ?\n      wrap(this.node).assignedNodes({flatten: true}) :\n      [];\n  }\n\n  /**\n   * Returns an array of all slots this element was distributed to.\n   *\n   * @return {!Array<!HTMLSlotElement>} Description\n   * @override\n   */\n  getDestinationInsertionPoints() {\n    let ip$ = [];\n    let n = wrap(this.node).assignedSlot;\n    while (n) {\n      ip$.push(n);\n      n = wrap(n).assignedSlot;\n    }\n    return ip$;\n  }\n\n  /**\n   * Calls `importNode` on the `ownerDocument` for this node.\n   *\n   * @param {!Node} node Node to import\n   * @param {boolean} deep True if the node should be cloned deeply during\n   *   import\n   * @return {Node} Clone of given node imported to this owner document\n   */\n  importNode(node, deep) {\n    let doc = this.node instanceof Document ? this.node :\n      this.node.ownerDocument;\n    return wrap(doc).importNode(node, deep);\n  }\n\n  /**\n   * @return {!Array<!Node>} Returns a flattened list of all child nodes and\n   * nodes assigned to child slots.\n   * @override\n   */\n  getEffectiveChildNodes() {\n    return FlattenedNodesObserver.getFlattenedNodes(\n        /** @type {!HTMLElement} */ (this.node));\n  }\n\n  /**\n   * Returns a filtered list of flattened child elements for this element based\n   * on the given selector.\n   *\n   * @param {string} selector Selector to filter nodes against\n   * @return {!Array<!HTMLElement>} List of flattened child elements\n   * @override\n   */\n  queryDistributedElements(selector) {\n    let c$ = this.getEffectiveChildNodes();\n    let list = [];\n    for (let i=0, l=c$.length, c; (i<l) && (c=c$[i]); i++) {\n      if ((c.nodeType === Node.ELEMENT_NODE) &&\n          matchesSelector(c, selector)) {\n        list.push(c);\n      }\n    }\n    return list;\n  }\n\n  /**\n   * For shadow roots, returns the currently focused element within this\n   * shadow root.\n   *\n   * return {Node|undefined} Currently focused element\n   * @override\n   */\n  get activeElement() {\n    let node = this.node;\n    return node._activeElement !== undefined ? node._activeElement : node.activeElement;\n  }\n}\n\nfunction forwardMethods(proto, methods) {\n  for (let i=0; i < methods.length; i++) {\n    let method = methods[i];\n    /* eslint-disable valid-jsdoc */\n    proto[method] = /** @this {DomApiNative} */ function() {\n      return this.node[method].apply(this.node, arguments);\n    };\n    /* eslint-enable */\n  }\n}\n\nfunction forwardReadOnlyProperties(proto, properties) {\n  for (let i=0; i < properties.length; i++) {\n    let name = properties[i];\n    Object.defineProperty(proto, name, {\n      get: function() {\n        const domApi = /** @type {DomApiNative} */(this);\n        return domApi.node[name];\n      },\n      configurable: true\n    });\n  }\n}\n\nfunction forwardProperties(proto, properties) {\n  for (let i=0; i < properties.length; i++) {\n    let name = properties[i];\n    Object.defineProperty(proto, name, {\n      /**\n       * @this {DomApiNative}\n       * @return {*} .\n       */\n      get: function() {\n        return this.node[name];\n      },\n      /**\n       * @this {DomApiNative}\n       * @param {*} value .\n       */\n      set: function(value) {\n        this.node[name] = value;\n      },\n      configurable: true\n    });\n  }\n}\n\n\n/**\n * Event API wrapper class returned from `dom.(target)` when\n * `target` is an `Event`.\n */\nexport class EventApi {\n  constructor(event) {\n    this.event = event;\n  }\n\n  /**\n   * Returns the first node on the `composedPath` of this event.\n   *\n   * @return {!EventTarget} The node this event was dispatched to\n   */\n  get rootTarget() {\n    return this.path[0];\n  }\n\n  /**\n   * Returns the local (re-targeted) target for this event.\n   *\n   * @return {!EventTarget} The local (re-targeted) target for this event.\n   */\n  get localTarget() {\n    return this.event.target;\n  }\n\n  /**\n   * Returns the `composedPath` for this event.\n   * @return {!Array<!EventTarget>} The nodes this event propagated through\n   */\n  get path() {\n    return this.event.composedPath();\n  }\n}\n\n/**\n * @function\n * @param {boolean=} deep\n * @return {!Node}\n */\nDomApiNative.prototype.cloneNode;\n/**\n * @function\n * @param {!Node} node\n * @return {!Node}\n */\nDomApiNative.prototype.appendChild;\n/**\n * @function\n * @param {!Node} newChild\n * @param {Node} refChild\n * @return {!Node}\n */\nDomApiNative.prototype.insertBefore;\n/**\n * @function\n * @param {!Node} node\n * @return {!Node}\n */\nDomApiNative.prototype.removeChild;\n/**\n * @function\n * @param {!Node} oldChild\n * @param {!Node} newChild\n * @return {!Node}\n */\nDomApiNative.prototype.replaceChild;\n/**\n * @function\n * @param {string} name\n * @param {string} value\n * @return {void}\n */\nDomApiNative.prototype.setAttribute;\n/**\n * @function\n * @param {string} name\n * @return {void}\n */\nDomApiNative.prototype.removeAttribute;\n/**\n * @function\n * @param {string} selector\n * @return {?Element}\n */\nDomApiNative.prototype.querySelector;\n/**\n * @function\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nDomApiNative.prototype.querySelectorAll;\n\n/** @type {?Node} */\nDomApiNative.prototype.parentNode;\n/** @type {?Node} */\nDomApiNative.prototype.firstChild;\n/** @type {?Node} */\nDomApiNative.prototype.lastChild;\n/** @type {?Node} */\nDomApiNative.prototype.nextSibling;\n/** @type {?Node} */\nDomApiNative.prototype.previousSibling;\n/** @type {?HTMLElement} */\nDomApiNative.prototype.firstElementChild;\n/** @type {?HTMLElement} */\nDomApiNative.prototype.lastElementChild;\n/** @type {?HTMLElement} */\nDomApiNative.prototype.nextElementSibling;\n/** @type {?HTMLElement} */\nDomApiNative.prototype.previousElementSibling;\n/** @type {!Array<!Node>} */\nDomApiNative.prototype.childNodes;\n/** @type {!Array<!HTMLElement>} */\nDomApiNative.prototype.children;\n/** @type {?DOMTokenList} */\nDomApiNative.prototype.classList;\n\n/** @type {string} */\nDomApiNative.prototype.textContent;\n/** @type {string} */\nDomApiNative.prototype.innerHTML;\n\nlet DomApiImpl = DomApiNative;\n\nif (window['ShadyDOM'] && window['ShadyDOM']['inUse'] && window['ShadyDOM']['noPatch'] && window['ShadyDOM']['Wrapper']) {\n\n  /**\n   * @private\n   * @extends {HTMLElement}\n   */\n  class Wrapper extends window['ShadyDOM']['Wrapper'] {}\n\n  // copy bespoke API onto wrapper\n  Object.getOwnPropertyNames(DomApiNative.prototype).forEach((prop) => {\n    if (prop != 'activeElement') {\n      Wrapper.prototype[prop] = DomApiNative.prototype[prop];\n    }\n  });\n\n  // Note, `classList` is here only for legacy compatibility since it does not\n  // trigger distribution in v1 Shadow DOM.\n  forwardReadOnlyProperties(Wrapper.prototype, [\n    'classList'\n  ]);\n\n  DomApiImpl = Wrapper;\n\n  Object.defineProperties(EventApi.prototype, {\n\n    localTarget: {\n      get() {\n        return this.event.currentTarget;\n      },\n      configurable: true\n    },\n\n    path: {\n      get() {\n        return window['ShadyDOM']['composedPath'](this.event);\n      },\n      configurable: true\n    }\n  });\n\n} else {\n\n  // Methods that can provoke distribution or must return the logical, not\n  // composed tree.\n  forwardMethods(DomApiNative.prototype, [\n    'cloneNode', 'appendChild', 'insertBefore', 'removeChild',\n    'replaceChild', 'setAttribute', 'removeAttribute',\n    'querySelector', 'querySelectorAll'\n  ]);\n\n  // Properties that should return the logical, not composed tree. Note, `classList`\n  // is here only for legacy compatibility since it does not trigger distribution\n  // in v1 Shadow DOM.\n  forwardReadOnlyProperties(DomApiNative.prototype, [\n    'parentNode', 'firstChild', 'lastChild',\n    'nextSibling', 'previousSibling', 'firstElementChild',\n    'lastElementChild', 'nextElementSibling', 'previousElementSibling',\n    'childNodes', 'children', 'classList'\n  ]);\n\n  forwardProperties(DomApiNative.prototype, [\n    'textContent', 'innerHTML'\n  ]);\n}\n\nexport const DomApi = DomApiImpl;\n\n/**\n * Legacy DOM and Event manipulation API wrapper factory used to abstract\n * differences between native Shadow DOM and \"Shady DOM\" when polyfilling on\n * older browsers.\n *\n * Note that in Polymer 2.x use of `Polymer.dom` is no longer required and\n * in the majority of cases simply facades directly to the standard native\n * API.\n *\n * @summary Legacy DOM and Event manipulation API wrapper factory used to\n * abstract differences between native Shadow DOM and \"Shady DOM.\"\n * @param {(Node|Event|DomApiNative|EventApi)=} obj Node or event to operate on\n * @return {!DomApiNative|!EventApi} Wrapper providing either node API or event API\n */\nexport const dom = function(obj) {\n  obj = obj || document;\n  if (obj instanceof DomApiImpl) {\n    return /** @type {!DomApi} */(obj);\n  }\n  if (obj instanceof EventApi) {\n    return /** @type {!EventApi} */(obj);\n  }\n  let helper = obj['__domApi'];\n  if (!helper) {\n    if (obj instanceof Event) {\n      helper = new EventApi(obj);\n    } else {\n      helper = new DomApiImpl(/** @type {Node} */(obj));\n    }\n    obj['__domApi'] = helper;\n  }\n  return helper;\n};\n"
    },
    {
     "id": 51,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-column.js",
     "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { DirMixin } from '@vaadin/vaadin-element-mixin/vaadin-dir-mixin.js';\nimport { Templatizer } from './vaadin-grid-templatizer.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { animationFrame } from '@polymer/polymer/lib/utils/async.js';\n\n/**\n * @polymerMixin\n */\nexport const ColumnBaseMixin = (superClass) =>\n  class ColumnBaseMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * When set to true, the column is user-resizable.\n         * @default false\n         */\n        resizable: {\n          type: Boolean,\n          value: function () {\n            if (this.localName === 'vaadin-grid-column-group') {\n              return;\n            }\n\n            const parent = this.parentNode;\n            if (parent && parent.localName === 'vaadin-grid-column-group') {\n              return parent.resizable || false;\n            } else {\n              return false;\n            }\n          }\n        },\n\n        /**\n         * @type {HTMLTemplateElement}\n         * @protected\n         */\n        _headerTemplate: {\n          type: Object\n        },\n\n        /**\n         * @type {HTMLTemplateElement}\n         * @protected\n         */\n        _footerTemplate: {\n          type: Object\n        },\n\n        /**\n         * When true, the column is frozen. When a column inside of a column group is frozen,\n         * all of the sibling columns inside the group will get frozen also.\n         * @type {boolean}\n         */\n        frozen: {\n          type: Boolean,\n          value: false\n        },\n\n        /**\n         * When set to true, the cells for this column are hidden.\n         */\n        hidden: {\n          type: Boolean\n        },\n\n        /**\n         * Text content to display in the header cell of the column.\n         */\n        header: {\n          type: String\n        },\n\n        /**\n         * Aligns the columns cell content horizontally.\n         * Supported values: \"start\", \"center\" and \"end\".\n         * @attr {start|center|end} text-align\n         * @type {GridColumnTextAlign | null | undefined}\n         */\n        textAlign: {\n          type: String\n        },\n\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _lastFrozen: {\n          type: Boolean,\n          value: false\n        },\n\n        /** @protected */\n        _order: Number,\n\n        /** @private */\n        _reorderStatus: Boolean,\n\n        /**\n         * @type {Array<!HTMLElement>}\n         * @protected\n         */\n        _emptyCells: Array,\n\n        /** @private */\n        _headerCell: Object,\n\n        /** @private */\n        _footerCell: Object,\n\n        /** @protected */\n        _grid: Object,\n\n        /**\n         * Custom function for rendering the header content.\n         * Receives two arguments:\n         *\n         * - `root` The header cell content DOM element. Append your content to it.\n         * - `column` The `<vaadin-grid-column>` element.\n         *\n         * @type {GridHeaderFooterRenderer | null | undefined}\n         */\n        headerRenderer: Function,\n\n        /**\n         * Custom function for rendering the footer content.\n         * Receives two arguments:\n         *\n         * - `root` The footer cell content DOM element. Append your content to it.\n         * - `column` The `<vaadin-grid-column>` element.\n         *\n         * @type {GridHeaderFooterRenderer | null | undefined}\n         */\n        footerRenderer: Function\n      };\n    }\n\n    static get observers() {\n      return [\n        '_widthChanged(width, _headerCell, _footerCell, _cells.*)',\n        '_frozenChanged(frozen, _headerCell, _footerCell, _cells.*)',\n        '_flexGrowChanged(flexGrow, _headerCell, _footerCell, _cells.*)',\n        '_pathOrHeaderChanged(path, header, _headerCell, _footerCell, _cells.*, renderer, headerRenderer, _bodyTemplate, _headerTemplate)',\n        '_textAlignChanged(textAlign, _cells.*, _headerCell, _footerCell)',\n        '_orderChanged(_order, _headerCell, _footerCell, _cells.*)',\n        '_lastFrozenChanged(_lastFrozen)',\n        '_setBodyTemplateOrRenderer(_bodyTemplate, renderer, _cells, _cells.*)',\n        '_setHeaderTemplateOrRenderer(_headerTemplate, headerRenderer, _headerCell)',\n        '_setFooterTemplateOrRenderer(_footerTemplate, footerRenderer, _footerCell)',\n        '_resizableChanged(resizable, _headerCell)',\n        '_reorderStatusChanged(_reorderStatus, _headerCell, _footerCell, _cells.*)',\n        '_hiddenChanged(hidden, _headerCell, _footerCell, _cells.*)'\n      ];\n    }\n\n    /** @protected */\n    connectedCallback() {\n      super.connectedCallback();\n\n      this._bodyTemplate && (this._bodyTemplate.templatizer._grid = this._grid);\n      this._headerTemplate && (this._headerTemplate.templatizer._grid = this._grid);\n      this._footerTemplate && (this._footerTemplate.templatizer._grid = this._grid);\n\n      this._templateObserver.flush();\n      if (!this._bodyTemplate) {\n        // The observer might not have triggered if the tag is empty. Run manually.\n        this._templateObserver.callback();\n      }\n\n      requestAnimationFrame(() => {\n        this._allCells.forEach((cell) => {\n          if (!cell._content.parentNode) {\n            this._grid && this._grid.appendChild(cell._content);\n          }\n        });\n      });\n    }\n\n    /** @protected */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n\n      requestAnimationFrame(() => {\n        if (!this._findHostGrid()) {\n          this._allCells.forEach((cell) => {\n            if (cell._content.parentNode) {\n              cell._content.parentNode.removeChild(cell._content);\n            }\n          });\n        }\n      });\n\n      this._gridValue = undefined;\n    }\n\n    /**\n     * @return {!GridElement | undefined}\n     * @protected\n     */\n    _findHostGrid() {\n      let el = this;\n      // Custom elements extending grid must have a specific localName\n      while (el && !/^vaadin.*grid(-pro)?$/.test(el.localName)) {\n        el = el.assignedSlot ? el.assignedSlot.parentNode : el.parentNode;\n      }\n      return el || undefined;\n    }\n\n    /**\n     * @return {!GridElement | undefined}\n     * @protected\n     */\n    get _grid() {\n      if (!this._gridValue) {\n        this._gridValue = this._findHostGrid();\n      }\n      return this._gridValue;\n    }\n\n    /**\n     * @return {!Array<!HTMLElement>}\n     * @protected\n     */\n    get _allCells() {\n      return []\n        .concat(this._cells || [])\n        .concat(this._emptyCells || [])\n        .concat(this._headerCell)\n        .concat(this._footerCell)\n        .filter((cell) => cell);\n    }\n\n    constructor() {\n      super();\n\n      this._templateObserver = new FlattenedNodesObserver(this, () => {\n        this._headerTemplate = this._prepareHeaderTemplate();\n        this._footerTemplate = this._prepareFooterTemplate();\n        this._bodyTemplate = this._prepareBodyTemplate();\n      });\n    }\n\n    /**\n     * @return {HTMLTemplateElement}\n     * @protected\n     */\n    _prepareHeaderTemplate() {\n      return this._prepareTemplatizer(this._findTemplate(true) || null, {});\n    }\n\n    /**\n     * @return {HTMLTemplateElement}\n     * @protected\n     */\n    _prepareFooterTemplate() {\n      return this._prepareTemplatizer(this._findTemplate(false, true) || null, {});\n    }\n\n    /**\n     * @return {HTMLTemplateElement}\n     * @protected\n     */\n    _prepareBodyTemplate() {\n      return this._prepareTemplatizer(this._findTemplate() || null);\n    }\n\n    /**\n     * @param {HTMLTemplateElement} template\n     * @param {object} instanceProps\n     * @return {HTMLTemplateElement}\n     * @protected\n     */\n    _prepareTemplatizer(template, instanceProps) {\n      if (template && !template.templatizer) {\n        const templatizer = new Templatizer();\n        templatizer._grid = this._grid;\n        templatizer.dataHost = this.dataHost;\n        templatizer._instanceProps = instanceProps || templatizer._instanceProps;\n        templatizer.template = template;\n        template.templatizer = templatizer;\n      }\n\n      return template;\n    }\n\n    /** @protected */\n    _renderHeaderAndFooter() {\n      if (this.headerRenderer && this._headerCell) {\n        this.__runRenderer(this.headerRenderer, this._headerCell);\n      }\n      if (this.footerRenderer && this._footerCell) {\n        this.__runRenderer(this.footerRenderer, this._footerCell);\n      }\n    }\n\n    /** @private */\n    __runRenderer(renderer, cell, model) {\n      const args = [cell._content, this];\n      if (model && model.item) {\n        args.push(model);\n      }\n      renderer.apply(this, args);\n    }\n\n    /** @private */\n    __setColumnTemplateOrRenderer(template, renderer, cells) {\n      if (template && renderer) {\n        throw new Error('You should only use either a renderer or a template');\n      }\n\n      cells.forEach((cell) => {\n        const model = this._grid.__getRowModel(cell.parentElement);\n\n        if (renderer) {\n          cell._renderer = renderer;\n\n          if (model.item || renderer === this.headerRenderer || renderer === this.footerRenderer) {\n            this.__runRenderer(renderer, cell, model);\n          }\n        } else if (cell._template !== template) {\n          cell._template = template;\n\n          cell._content.innerHTML = '';\n          template.templatizer._grid = template.templatizer._grid || this._grid;\n          const inst = template.templatizer.createInstance();\n          cell._content.appendChild(inst.root);\n          cell._instance = inst;\n          if (model.item) {\n            cell._instance.setProperties(model);\n          }\n        }\n      });\n    }\n\n    /** @private */\n    _setBodyTemplateOrRenderer(template, renderer, cells) {\n      if ((template || renderer) && cells) {\n        this.__setColumnTemplateOrRenderer(template, renderer, cells);\n      }\n    }\n\n    /** @private */\n    _setHeaderTemplateOrRenderer(headerTemplate, headerRenderer, headerCell) {\n      if ((headerTemplate || headerRenderer) && headerCell) {\n        this.__setColumnTemplateOrRenderer(headerTemplate, headerRenderer, [headerCell]);\n      }\n    }\n\n    /** @private */\n    _setFooterTemplateOrRenderer(footerTemplate, footerRenderer, footerCell) {\n      if ((footerTemplate || footerRenderer) && footerCell) {\n        this.__setColumnTemplateOrRenderer(footerTemplate, footerRenderer, [footerCell]);\n        this._grid.__updateHeaderFooterRowVisibility(footerCell.parentElement);\n      }\n    }\n\n    /**\n     * @param {boolean} header\n     * @param {boolean} footer\n     * @return {HTMLTemplateElement}\n     * @protected\n     */\n    _selectFirstTemplate(header = false, footer = false) {\n      return FlattenedNodesObserver.getFlattenedNodes(this).filter(\n        (node) =>\n          node.localName === 'template' &&\n          node.classList.contains('header') === header &&\n          node.classList.contains('footer') === footer\n      )[0];\n    }\n\n    /**\n     * @param {boolean} header\n     * @param {boolean} footer\n     * @return {HTMLTemplateElement}\n     * @protected\n     */\n    _findTemplate(header, footer) {\n      const template = this._selectFirstTemplate(header, footer);\n      if (template) {\n        if (this.dataHost) {\n          // set dataHost to the context where template has been defined\n          template._rootDataHost = this.dataHost._rootDataHost || this.dataHost;\n        }\n      }\n      return template;\n    }\n\n    /** @private */\n    _flexGrowChanged(flexGrow) {\n      if (this.parentElement && this.parentElement._columnPropChanged) {\n        this.parentElement._columnPropChanged('flexGrow');\n      }\n\n      this._allCells.forEach((cell) => (cell.style.flexGrow = flexGrow));\n    }\n\n    /** @private */\n    _orderChanged(order) {\n      this._allCells.forEach((cell) => (cell.style.order = order));\n    }\n\n    /** @private */\n    _widthChanged(width) {\n      if (this.parentElement && this.parentElement._columnPropChanged) {\n        this.parentElement._columnPropChanged('width');\n      }\n\n      this._allCells.forEach((cell) => (cell.style.width = width));\n\n      // Force a reflow to workaround browser issues causing double scrollbars to grid\n      // https://github.com/vaadin/vaadin-grid/issues/1586\n      if (this._grid && this._grid.__forceReflow) {\n        this._grid.__forceReflow();\n      }\n    }\n\n    /** @private */\n    _frozenChanged(frozen) {\n      if (this.parentElement && this.parentElement._columnPropChanged) {\n        this.parentElement._columnPropChanged('frozen', frozen);\n      }\n\n      this._allCells.forEach((cell) => this._toggleAttribute('frozen', frozen, cell));\n\n      this._grid && this._grid._frozenCellsChanged && this._grid._frozenCellsChanged();\n    }\n\n    /** @private */\n    _lastFrozenChanged(lastFrozen) {\n      this._allCells.forEach((cell) => this._toggleAttribute('last-frozen', lastFrozen, cell));\n\n      if (this.parentElement && this.parentElement._columnPropChanged) {\n        this.parentElement._lastFrozen = lastFrozen;\n      }\n    }\n\n    /**\n     * @param {string | undefined} path\n     * @param {string | undefined} header\n     * @param {!HTMLTableCellElement | undefined} headerCell\n     * @param {!HTMLTableCellElement | undefined} footerCell\n     * @param {!object | undefined} cells\n     * @param {GridBodyRenderer | undefined} renderer\n     * @param {GridHeaderFooterRenderer | undefined} headerRenderer\n     * @param {HTMLTemplateElement | undefined} bodyTemplate\n     * @param {HTMLTemplateElement | undefined} headerTemplate\n     * @protected\n     */\n    _pathOrHeaderChanged(\n      path,\n      header,\n      headerCell,\n      footerCell,\n      cells,\n      renderer,\n      headerRenderer,\n      bodyTemplate,\n      headerTemplate\n    ) {\n      const hasHeaderText = header !== undefined;\n      if (!headerRenderer && !headerTemplate && hasHeaderText && headerCell) {\n        this.__setTextContent(headerCell._content, header);\n      }\n\n      if (path && cells.value) {\n        if (!renderer && !bodyTemplate) {\n          const pathRenderer = (root, owner, { item }) => this.__setTextContent(root, this.get(path, item));\n          this.__setColumnTemplateOrRenderer(undefined, pathRenderer, cells.value);\n        }\n\n        if (!headerRenderer && !headerTemplate && !hasHeaderText && headerCell && header !== null) {\n          this.__setTextContent(headerCell._content, this._generateHeader(path));\n        }\n      }\n\n      if (headerCell) {\n        this._grid.__updateHeaderFooterRowVisibility(headerCell.parentElement);\n      }\n    }\n\n    /** @private */\n    __setTextContent(node, textContent) {\n      node.textContent !== textContent && (node.textContent = textContent);\n    }\n\n    /**\n     * @param {string} path\n     * @return {string}\n     * @protected\n     */\n    _generateHeader(path) {\n      return path\n        .substr(path.lastIndexOf('.') + 1)\n        .replace(/([A-Z])/g, '-$1')\n        .toLowerCase()\n        .replace(/-/g, ' ')\n        .replace(/^./, (match) => match.toUpperCase());\n    }\n\n    /**\n     * @param {string} name\n     * @param {boolean} bool\n     * @param {!Element} node\n     * @protected\n     */\n    _toggleAttribute(name, bool, node) {\n      if (node.hasAttribute(name) === !bool) {\n        if (bool) {\n          node.setAttribute(name, '');\n        } else {\n          node.removeAttribute(name);\n        }\n      }\n    }\n\n    /** @private */\n    _reorderStatusChanged(reorderStatus) {\n      this._allCells.forEach((cell) => cell.setAttribute('reorder-status', reorderStatus));\n    }\n\n    /** @private */\n    _resizableChanged(resizable, headerCell) {\n      if (resizable === undefined || headerCell === undefined) {\n        return;\n      }\n\n      if (headerCell) {\n        [headerCell].concat(this._emptyCells).forEach((cell) => {\n          if (cell) {\n            const existingHandle = cell.querySelector('[part~=\"resize-handle\"]');\n            if (existingHandle) {\n              cell.removeChild(existingHandle);\n            }\n\n            if (resizable) {\n              const handle = document.createElement('div');\n              handle.setAttribute('part', 'resize-handle');\n              cell.appendChild(handle);\n            }\n          }\n        });\n      }\n    }\n\n    /** @private */\n    _textAlignChanged(textAlign) {\n      if (textAlign === undefined) {\n        return;\n      }\n      if (['start', 'end', 'center'].indexOf(textAlign) === -1) {\n        console.warn('textAlign can only be set as \"start\", \"end\" or \"center\"');\n        return;\n      }\n\n      let textAlignFallback;\n      if (getComputedStyle(this._grid).direction === 'ltr') {\n        if (textAlign === 'start') {\n          textAlignFallback = 'left';\n        } else if (textAlign === 'end') {\n          textAlignFallback = 'right';\n        }\n      } else {\n        if (textAlign === 'start') {\n          textAlignFallback = 'right';\n        } else if (textAlign === 'end') {\n          textAlignFallback = 'left';\n        }\n      }\n\n      this._allCells.forEach((cell) => {\n        cell._content.style.textAlign = textAlign;\n        if (getComputedStyle(cell._content).textAlign !== textAlign) {\n          cell._content.style.textAlign = textAlignFallback;\n        }\n      });\n    }\n\n    /** @private */\n    _hiddenChanged(hidden) {\n      if (this.parentElement && this.parentElement._columnPropChanged) {\n        this.parentElement._columnPropChanged('hidden', hidden);\n      }\n\n      if (!!hidden !== !!this._previousHidden && this._grid) {\n        if (hidden === true) {\n          this._allCells.forEach((cell) => {\n            if (cell._content.parentNode) {\n              cell._content.parentNode.removeChild(cell._content);\n            }\n          });\n        }\n        this._grid._debouncerHiddenChanged = Debouncer.debounce(\n          this._grid._debouncerHiddenChanged,\n          animationFrame,\n          () => {\n            if (this._grid && this._grid._renderColumnTree) {\n              this._grid._renderColumnTree(this._grid._columnTree);\n            }\n          }\n        );\n\n        this._grid._updateLastFrozen && this._grid._updateLastFrozen();\n        this._grid.notifyResize && this._grid.notifyResize();\n        this._grid._resetKeyboardNavigation && this._grid._resetKeyboardNavigation();\n      }\n      this._previousHidden = hidden;\n    }\n  };\n\n/**\n * A `<vaadin-grid-column>` is used to configure how a column in `<vaadin-grid>`\n * should look like.\n *\n * See `<vaadin-grid>` documentation and demos for instructions and examples on how\n * to configure the `<vaadin-grid-column>`.\n * ```\n *\n * @extends HTMLElement\n * @mixes ColumnBaseMixin\n */\nclass GridColumnElement extends ColumnBaseMixin(DirMixin(PolymerElement)) {\n  static get is() {\n    return 'vaadin-grid-column';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Width of the cells for this column.\n       */\n      width: {\n        type: String,\n        value: '100px'\n      },\n\n      /**\n       * Flex grow ratio for the cell widths. When set to 0, cell width is fixed.\n       * @attr {number} flex-grow\n       * @type {number}\n       */\n      flexGrow: {\n        type: Number,\n        value: 1\n      },\n\n      /**\n       * Custom function for rendering the cell content.\n       * Receives three arguments:\n       *\n       * - `root` The cell content DOM element. Append your content to it.\n       * - `column` The `<vaadin-grid-column>` element.\n       * - `model` The object with the properties related with\n       *   the rendered item, contains:\n       *   - `model.index` The index of the item.\n       *   - `model.item` The item.\n       *   - `model.expanded` Sublevel toggle state.\n       *   - `model.level` Level of the tree represented with a horizontal offset of the toggle button.\n       *   - `model.selected` Selected state.\n       *\n       * @type {GridBodyRenderer | null | undefined}\n       */\n      renderer: Function,\n\n      /**\n       * Path to an item sub-property whose value gets displayed in the column body cells.\n       * The property name is also shown in the column header if an explicit header or renderer isn't defined.\n       */\n      path: {\n        type: String\n      },\n\n      /**\n       * Automatically sets the width of the column based on the column contents when this is set to `true`.\n       *\n       * For performance reasons the column width is calculated automatically only once when the grid items\n       * are rendered for the first time and the calculation only considers the rows which are currently\n       * rendered in DOM (a bit more than what is currently visible). If the grid is scrolled, or the cell\n       * content changes, the column width might not match the contents anymore.\n       *\n       * Hidden columns are ignored in the calculation and their widths are not automatically updated when\n       * you show a column that was initially hidden.\n       *\n       * You can manually trigger the auto sizing behavior again by calling `grid.recalculateColumnWidths()`.\n       *\n       * The column width may still grow larger when `flexGrow` is not 0.\n       * @attr {boolean} auto-width\n       * @type {boolean}\n       */\n      autoWidth: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * @type {HTMLTemplateElement}\n       * @protected\n       */\n      _bodyTemplate: {\n        type: Object\n      },\n\n      /**\n       * @type {Array<!HTMLElement>}\n       * @protected\n       */\n      _cells: Array\n    };\n  }\n}\n\ncustomElements.define(GridColumnElement.is, GridColumnElement);\n\nexport { GridColumnElement };\n"
    },
    {
     "id": 52,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-button@2.4.0/node_modules/@vaadin/vaadin-button/src/vaadin-button.js",
     "source": "/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ControlStateMixin } from '@vaadin/vaadin-control-state-mixin/vaadin-control-state-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { addListener } from '@polymer/polymer/lib/utils/gestures.js';\n/**\n * `<vaadin-button>` is a Web Component providing an accessible and customizable button.\n *\n * ```html\n * <vaadin-button>\n * </vaadin-button>\n * ```\n *\n * ```js\n * document.querySelector('vaadin-button').addEventListener('click', () => alert('Hello World!'));\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are exposed for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `label` | The label (text) inside the button\n * `prefix` | A slot for e.g. an icon before the label\n * `suffix` | A slot for e.g. an icon after the label\n *\n *\n * The following attributes are exposed for styling:\n *\n * Attribute | Description\n * --------- | -----------\n * `active` | Set when the button is pressed down, either with mouse, touch or the keyboard.\n * `disabled` | Set when the button is disabled.\n * `focus-ring` | Set when the button is focused using the keyboard.\n * `focused` | Set when the button is focused.\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends PolymerElement\n * @mixes ElementMixin\n * @mixes ControlStateMixin\n * @mixes ThemableMixin\n * @mixes GestureEventListeners\n * @demo demo/index.html\n */\nclass ButtonElement extends\n  ElementMixin(\n    ControlStateMixin(\n      ThemableMixin(\n        GestureEventListeners(PolymerElement)))) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: inline-block;\n        position: relative;\n        outline: none;\n        white-space: nowrap;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      /* Ensure the button is always aligned on the baseline */\n      .vaadin-button-container::before {\n        content: \"\\\\2003\";\n        display: inline-block;\n        width: 0;\n      }\n\n      .vaadin-button-container {\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n        text-align: center;\n        width: 100%;\n        height: 100%;\n        min-height: inherit;\n        text-shadow: inherit;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        user-select: none;\n      }\n\n      [part=\"prefix\"],\n      [part=\"suffix\"] {\n        flex: none;\n      }\n\n      [part=\"label\"] {\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n\n      #button {\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        width: 100%;\n        height: 100%;\n        opacity: 0;\n        cursor: inherit;\n      }\n    </style>\n    <div class=\"vaadin-button-container\">\n      <div part=\"prefix\">\n        <slot name=\"prefix\"></slot>\n      </div>\n      <div part=\"label\">\n        <slot></slot>\n      </div>\n      <div part=\"suffix\">\n        <slot name=\"suffix\"></slot>\n      </div>\n    </div>\n    <button id=\"button\" type=\"button\"></button>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-button';\n  }\n\n  static get version() {\n    return '2.4.0';\n  }\n\n  ready() {\n    super.ready();\n\n    // Leaving default role in the native button, makes navigation announcement\n    // being different when using focus navigation (tab) versus using normal\n    // navigation (arrows). The first way announces the label on a button\n    // since the focus is moved programmatically, and the second on a group.\n    this.setAttribute('role', 'button');\n    this.$.button.setAttribute('role', 'presentation');\n\n    this._addActiveListeners();\n\n    // Fix for https://github.com/vaadin/vaadin-button-flow/issues/120\n    window.ShadyDOM && window.ShadyDOM.flush();\n  }\n\n  /**\n   * @protected\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    // `active` state is preserved when the element is disconnected between keydown and keyup events.\n    // reproducible in `<vaadin-date-picker>` when closing on `Cancel` or `Today` click.\n    if (this.hasAttribute('active')) {\n      this.removeAttribute('active');\n    }\n  }\n\n  /** @private */\n  _addActiveListeners() {\n    addListener(this, 'down', () => !this.disabled && this.setAttribute('active', ''));\n    addListener(this, 'up', () => this.removeAttribute('active'));\n    this.addEventListener('keydown', e => !this.disabled && [13, 32].indexOf(e.keyCode) >= 0 && this.setAttribute('active', ''));\n    this.addEventListener('keyup', () => this.removeAttribute('active'));\n    this.addEventListener('blur', () => this.removeAttribute('active'));\n  }\n\n  /**\n   * @protected\n   * @return {Element}\n   */\n  get focusElement() {\n    return this.$.button;\n  }\n}\n\ncustomElements.define(ButtonElement.is, ButtonElement);\n\nexport { ButtonElement };\n"
    },
    {
     "id": 53,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/utils/path.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\n/**\n * Module with utilities for manipulating structured data path strings.\n *\n * @summary Module with utilities for manipulating structured data path strings.\n */\n\n/**\n * Returns true if the given string is a structured data path (has dots).\n *\n * Example:\n *\n * ```\n * isPath('foo.bar.baz') // true\n * isPath('foo')         // false\n * ```\n *\n * @param {string} path Path string\n * @return {boolean} True if the string contained one or more dots\n */\nexport function isPath(path) {\n  return path.indexOf('.') >= 0;\n}\n\n/**\n * Returns the root property name for the given path.\n *\n * Example:\n *\n * ```\n * root('foo.bar.baz') // 'foo'\n * root('foo')         // 'foo'\n * ```\n *\n * @param {string} path Path string\n * @return {string} Root property name\n */\nexport function root(path) {\n  let dotIndex = path.indexOf('.');\n  if (dotIndex === -1) {\n    return path;\n  }\n  return path.slice(0, dotIndex);\n}\n\n/**\n * Given `base` is `foo.bar`, `foo` is an ancestor, `foo.bar` is not\n * Returns true if the given path is an ancestor of the base path.\n *\n * Example:\n *\n * ```\n * isAncestor('foo.bar', 'foo')         // true\n * isAncestor('foo.bar', 'foo.bar')     // false\n * isAncestor('foo.bar', 'foo.bar.baz') // false\n * ```\n *\n * @param {string} base Path string to test against.\n * @param {string} path Path string to test.\n * @return {boolean} True if `path` is an ancestor of `base`.\n */\nexport function isAncestor(base, path) {\n  //     base.startsWith(path + '.');\n  return base.indexOf(path + '.') === 0;\n}\n\n/**\n * Given `base` is `foo.bar`, `foo.bar.baz` is an descendant\n *\n * Example:\n *\n * ```\n * isDescendant('foo.bar', 'foo.bar.baz') // true\n * isDescendant('foo.bar', 'foo.bar')     // false\n * isDescendant('foo.bar', 'foo')         // false\n * ```\n *\n * @param {string} base Path string to test against.\n * @param {string} path Path string to test.\n * @return {boolean} True if `path` is a descendant of `base`.\n */\nexport function isDescendant(base, path) {\n  //     path.startsWith(base + '.');\n  return path.indexOf(base + '.') === 0;\n}\n\n/**\n * Replaces a previous base path with a new base path, preserving the\n * remainder of the path.\n *\n * User must ensure `path` has a prefix of `base`.\n *\n * Example:\n *\n * ```\n * translate('foo.bar', 'zot', 'foo.bar.baz') // 'zot.baz'\n * ```\n *\n * @param {string} base Current base string to remove\n * @param {string} newBase New base string to replace with\n * @param {string} path Path to translate\n * @return {string} Translated string\n */\nexport function translate(base, newBase, path) {\n  return newBase + path.slice(base.length);\n}\n\n/**\n * @param {string} base Path string to test against\n * @param {string} path Path string to test\n * @return {boolean} True if `path` is equal to `base`\n */\nexport function matches(base, path) {\n  return (base === path) ||\n         isAncestor(base, path) ||\n         isDescendant(base, path);\n}\n\n/**\n * Converts array-based paths to flattened path.  String-based paths\n * are returned as-is.\n *\n * Example:\n *\n * ```\n * normalize(['foo.bar', 0, 'baz'])  // 'foo.bar.0.baz'\n * normalize('foo.bar.0.baz')        // 'foo.bar.0.baz'\n * ```\n *\n * @param {string | !Array<string|number>} path Input path\n * @return {string} Flattened path\n */\nexport function normalize(path) {\n  if (Array.isArray(path)) {\n    let parts = [];\n    for (let i=0; i<path.length; i++) {\n      let args = path[i].toString().split('.');\n      for (let j=0; j<args.length; j++) {\n        parts.push(args[j]);\n      }\n    }\n    return parts.join('.');\n  } else {\n    return path;\n  }\n}\n\n/**\n * Splits a path into an array of property names. Accepts either arrays\n * of path parts or strings.\n *\n * Example:\n *\n * ```\n * split(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\n * split('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n * ```\n *\n * @param {string | !Array<string|number>} path Input path\n * @return {!Array<string>} Array of path parts\n * @suppress {checkTypes}\n */\nexport function split(path) {\n  if (Array.isArray(path)) {\n    return normalize(path).split('.');\n  }\n  return path.toString().split('.');\n}\n\n/**\n * Reads a value from a path.  If any sub-property in the path is `undefined`,\n * this method returns `undefined` (will never throw.\n *\n * @param {Object} root Object from which to dereference path from\n * @param {string | !Array<string|number>} path Path to read\n * @param {Object=} info If an object is provided to `info`, the normalized\n *  (flattened) path will be set to `info.path`.\n * @return {*} Value at path, or `undefined` if the path could not be\n *  fully dereferenced.\n */\nexport function get(root, path, info) {\n  let prop = root;\n  let parts = split(path);\n  // Loop over path parts[0..n-1] and dereference\n  for (let i=0; i<parts.length; i++) {\n    if (!prop) {\n      return;\n    }\n    let part = parts[i];\n    prop = prop[part];\n  }\n  if (info) {\n    info.path = parts.join('.');\n  }\n  return prop;\n}\n\n/**\n * Sets a value to a path.  If any sub-property in the path is `undefined`,\n * this method will no-op.\n *\n * @param {Object} root Object from which to dereference path from\n * @param {string | !Array<string|number>} path Path to set\n * @param {*} value Value to set to path\n * @return {string | undefined} The normalized version of the input path\n */\nexport function set(root, path, value) {\n  let prop = root;\n  let parts = split(path);\n  let last = parts[parts.length-1];\n  if (parts.length > 1) {\n    // Loop over path parts[0..n-2] and dereference\n    for (let i=0; i<parts.length-1; i++) {\n      let part = parts[i];\n      prop = prop[part];\n      if (!prop) {\n        return;\n      }\n    }\n    // Set value to object at end of path\n    prop[last] = value;\n  } else {\n    // Simple property set\n    prop[path] = value;\n  }\n  return parts.join('.');\n}\n\n/**\n * Returns true if the given string is a structured data path (has dots).\n *\n * This function is deprecated.  Use `isPath` instead.\n *\n * Example:\n *\n * ```\n * isDeep('foo.bar.baz') // true\n * isDeep('foo')         // false\n * ```\n *\n * @deprecated\n * @param {string} path Path string\n * @return {boolean} True if the string contained one or more dots\n */\nexport const isDeep = isPath;\n"
    },
    {
     "id": 54,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-button@2.4.0/node_modules/@vaadin/vaadin-button/theme/lumo/vaadin-button.js",
     "source": "import './vaadin-button-styles.js';\nimport '../../src/vaadin-button.js';\n"
    },
    {
     "id": 55,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-lumo-styles@1.6.1/node_modules/@vaadin/vaadin-lumo-styles/mixins/menu-overlay.js",
     "source": "import '../spacing.js';\nimport '../style.js';\nimport './overlay.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"lumo-menu-overlay-core\">\n  <template>\n    <style>\n      :host([opening]),\n      :host([closing]) {\n        animation: 0.14s lumo-overlay-dummy-animation;\n      }\n\n      [part=\"overlay\"] {\n        will-change: opacity, transform;\n      }\n\n      :host([opening]) [part=\"overlay\"] {\n        animation: 0.1s lumo-menu-overlay-enter ease-out both;\n      }\n\n      @keyframes lumo-menu-overlay-enter {\n        0% {\n          opacity: 0;\n          transform: translateY(-4px);\n        }\n      }\n\n      :host([closing]) [part=\"overlay\"] {\n        animation: 0.1s lumo-menu-overlay-exit both;\n      }\n\n      @keyframes lumo-menu-overlay-exit {\n        100% {\n          opacity: 0;\n        }\n      }\n    </style>\n  </template>\n</dom-module><dom-module id=\"lumo-menu-overlay\">\n  <template>\n    <style include=\"lumo-overlay lumo-menu-overlay-core\">\n      /* Small viewport (bottom sheet) styles */\n      /* Use direct media queries instead of the state attributes (\\`[phone]\\` and \\`[fullscreen]\\`) provided by the elements */\n      @media (max-width: 420px), (max-height: 420px) {\n        :host {\n          top: 0 !important;\n          right: 0 !important;\n          bottom: var(--vaadin-overlay-viewport-bottom, 0) !important;\n          left: 0 !important;\n          align-items: stretch !important;\n          justify-content: flex-end !important;\n        }\n\n        [part=\"overlay\"] {\n          max-height: 50vh;\n          width: 100vw;\n          border-radius: 0;\n          box-shadow: var(--lumo-box-shadow-xl);\n        }\n\n        /* The content part scrolls instead of the overlay part, because of the gradient fade-out */\n        [part=\"content\"] {\n          padding: 30px var(--lumo-space-m);\n          max-height: inherit;\n          box-sizing: border-box;\n          -webkit-overflow-scrolling: touch;\n          overflow: auto;\n          -webkit-mask-image: linear-gradient(transparent, #000 40px, #000 calc(100% - 40px), transparent);\n          mask-image: linear-gradient(transparent, #000 40px, #000 calc(100% - 40px), transparent);\n        }\n\n        [part=\"backdrop\"] {\n          display: block;\n        }\n\n        /* Animations */\n\n        :host([opening]) [part=\"overlay\"] {\n          animation: 0.2s lumo-mobile-menu-overlay-enter cubic-bezier(.215, .61, .355, 1) both;\n        }\n\n        :host([closing]),\n        :host([closing]) [part=\"backdrop\"] {\n          animation-delay: 0.14s;\n        }\n\n        :host([closing]) [part=\"overlay\"] {\n          animation: 0.14s 0.14s lumo-mobile-menu-overlay-exit cubic-bezier(.55, .055, .675, .19) both;\n        }\n      }\n\n      @keyframes lumo-mobile-menu-overlay-enter {\n        0% {\n          transform: translateY(150%);\n        }\n      }\n\n      @keyframes lumo-mobile-menu-overlay-exit {\n        100% {\n          transform: translateY(150%);\n        }\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n\n/* Split as a separate module because combo box can only use the \"fullscreen\" styles */\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\n;\n"
    },
    {
     "id": 56,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/mixins/element-mixin.js + 2 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/mixins/element-mixin.js",
       "source": "/**\n * @fileoverview\n * @suppress {checkPrototypalTypes}\n * @license Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt The complete set of authors may be found\n * at http://polymer.github.io/AUTHORS.txt The complete set of contributors may\n * be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by\n * Google as part of the polymer project is also subject to an additional IP\n * rights grant found at http://polymer.github.io/PATENTS.txt\n */\nimport '../utils/boot.js';\n\nimport { rootPath, strictTemplatePolicy, allowTemplateFromDomModule, legacyOptimizations, syncInitialRender } from '../utils/settings.js';\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { stylesFromTemplate, stylesFromModuleImports } from '../utils/style-gather.js';\nimport { pathFromUrl, resolveCss, resolveUrl } from '../utils/resolve-url.js';\nimport { DomModule } from '../elements/dom-module.js';\nimport { PropertyEffects } from './property-effects.js';\nimport { PropertiesMixin } from './properties-mixin.js';\nimport { wrap } from '../utils/wrap.js';\n\n/**\n * Current Polymer version in Semver notation.\n * @type {string} Semver notation of the current version of Polymer.\n */\nexport const version = '3.2.0';\n\nconst builtCSS = window.ShadyCSS && window.ShadyCSS['cssBuild'];\n\n/**\n * Element class mixin that provides the core API for Polymer's meta-programming\n * features including template stamping, data-binding, attribute deserialization,\n * and property change observation.\n *\n * Subclassers may provide the following static getters to return metadata\n * used to configure Polymer's features for the class:\n *\n * - `static get is()`: When the template is provided via a `dom-module`,\n *   users should return the `dom-module` id from a static `is` getter.  If\n *   no template is needed or the template is provided directly via the\n *   `template` getter, there is no need to define `is` for the element.\n *\n * - `static get template()`: Users may provide the template directly (as\n *   opposed to via `dom-module`) by implementing a static `template` getter.\n *   The getter must return an `HTMLTemplateElement`.\n *\n * - `static get properties()`: Should return an object describing\n *   property-related metadata used by Polymer features (key: property name\n *   value: object containing property metadata). Valid keys in per-property\n *   metadata include:\n *   - `type` (String|Number|Object|Array|...): Used by\n *     `attributeChangedCallback` to determine how string-based attributes\n *     are deserialized to JavaScript property values.\n *   - `notify` (boolean): Causes a change in the property to fire a\n *     non-bubbling event called `<property>-changed`. Elements that have\n *     enabled two-way binding to the property use this event to observe changes.\n *   - `readOnly` (boolean): Creates a getter for the property, but no setter.\n *     To set a read-only property, use the private setter method\n *     `_setProperty(property, value)`.\n *   - `observer` (string): Observer method name that will be called when\n *     the property changes. The arguments of the method are\n *     `(value, previousValue)`.\n *   - `computed` (string): String describing method and dependent properties\n *     for computing the value of this property (e.g. `'computeFoo(bar, zot)'`).\n *     Computed properties are read-only by default and can only be changed\n *     via the return value of the computing method.\n *\n * - `static get observers()`: Array of strings describing multi-property\n *   observer methods and their dependent properties (e.g.\n *   `'observeABC(a, b, c)'`).\n *\n * The base class provides default implementations for the following standard\n * custom element lifecycle callbacks; users may override these, but should\n * call the super method to ensure\n * - `constructor`: Run when the element is created or upgraded\n * - `connectedCallback`: Run each time the element is connected to the\n *   document\n * - `disconnectedCallback`: Run each time the element is disconnected from\n *   the document\n * - `attributeChangedCallback`: Run each time an attribute in\n *   `observedAttributes` is set or removed (note: this element's default\n *   `observedAttributes` implementation will automatically return an array\n *   of dash-cased attributes based on `properties`)\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin PropertyEffects\n * @appliesMixin PropertiesMixin\n * @property rootPath {string} Set to the value of `rootPath`,\n *   which defaults to the main document path\n * @property importPath {string} Set to the value of the class's static\n *   `importPath` property, which defaults to the path of this element's\n *   `dom-module` (when `is` is used), but can be overridden for other\n *   import strategies.\n * @summary Element class mixin that provides the core API for Polymer's\n * meta-programming features.\n */\nexport const ElementMixin = dedupingMixin(base => {\n  /**\n   * @constructor\n   * @implements {Polymer_PropertyEffects}\n   * @implements {Polymer_PropertiesMixin}\n   * @extends {HTMLElement}\n   * @private\n   */\n  const polymerElementBase = PropertiesMixin(PropertyEffects(base));\n\n  /**\n   * Returns a list of properties with default values.\n   * This list is created as an optimization since it is a subset of\n   * the list returned from `_properties`.\n   * This list is used in `_initializeProperties` to set property defaults.\n   *\n   * @param {PolymerElementConstructor} constructor Element class\n   * @return {PolymerElementProperties} Flattened properties for this class\n   *   that have default values\n   * @private\n   */\n  function propertyDefaults(constructor) {\n    if (!constructor.hasOwnProperty(\n      JSCompiler_renameProperty('__propertyDefaults', constructor))) {\n      constructor.__propertyDefaults = null;\n      let props = constructor._properties;\n      for (let p in props) {\n        let info = props[p];\n        if ('value' in info) {\n          constructor.__propertyDefaults = constructor.__propertyDefaults || {};\n          constructor.__propertyDefaults[p] = info;\n        }\n      }\n    }\n    return constructor.__propertyDefaults;\n  }\n\n  /**\n   * Returns a memoized version of the `observers` array.\n   * @param {PolymerElementConstructor} constructor Element class\n   * @return {Array} Array containing own observers for the given class\n   * @protected\n   */\n  function ownObservers(constructor) {\n    if (!constructor.hasOwnProperty(\n      JSCompiler_renameProperty('__ownObservers', constructor))) {\n      constructor.__ownObservers =\n          constructor.hasOwnProperty(\n              JSCompiler_renameProperty('observers', constructor)) ?\n          /** @type {PolymerElementConstructor} */ (constructor).observers :\n          null;\n    }\n    return constructor.__ownObservers;\n  }\n\n  /**\n   * Creates effects for a property.\n   *\n   * Note, once a property has been set to\n   * `readOnly`, `computed`, `reflectToAttribute`, or `notify`\n   * these values may not be changed. For example, a subclass cannot\n   * alter these settings. However, additional `observers` may be added\n   * by subclasses.\n   *\n   * The info object should contain property metadata as follows:\n   *\n   * * `type`: {function} type to which an attribute matching the property\n   * is deserialized. Note the property is camel-cased from a dash-cased\n   * attribute. For example, 'foo-bar' attribute is deserialized to a\n   * property named 'fooBar'.\n   *\n   * * `readOnly`: {boolean} creates a readOnly property and\n   * makes a private setter for the private of the form '_setFoo' for a\n   * property 'foo',\n   *\n   * * `computed`: {string} creates a computed property. A computed property\n   * is also automatically set to `readOnly: true`. The value is calculated\n   * by running a method and arguments parsed from the given string. For\n   * example 'compute(foo)' will compute a given property when the\n   * 'foo' property changes by executing the 'compute' method. This method\n   * must return the computed value.\n   *\n   * * `reflectToAttribute`: {boolean} If true, the property value is reflected\n   * to an attribute of the same name. Note, the attribute is dash-cased\n   * so a property named 'fooBar' is reflected as 'foo-bar'.\n   *\n   * * `notify`: {boolean} sends a non-bubbling notification event when\n   * the property changes. For example, a property named 'foo' sends an\n   * event named 'foo-changed' with `event.detail` set to the value of\n   * the property.\n   *\n   * * observer: {string} name of a method that runs when the property\n   * changes. The arguments of the method are (value, previousValue).\n   *\n   * Note: Users may want control over modifying property\n   * effects via subclassing. For example, a user might want to make a\n   * reflectToAttribute property not do so in a subclass. We've chosen to\n   * disable this because it leads to additional complication.\n   * For example, a readOnly effect generates a special setter. If a subclass\n   * disables the effect, the setter would fail unexpectedly.\n   * Based on feedback, we may want to try to make effects more malleable\n   * and/or provide an advanced api for manipulating them.\n   *\n   * @param {!PolymerElement} proto Element class prototype to add accessors\n   *   and effects to\n   * @param {string} name Name of the property.\n   * @param {Object} info Info object from which to create property effects.\n   * Supported keys:\n   * @param {Object} allProps Flattened map of all properties defined in this\n   *   element (including inherited properties)\n   * @return {void}\n   * @private\n   */\n  function createPropertyFromConfig(proto, name, info, allProps) {\n    // computed forces readOnly...\n    if (info.computed) {\n      info.readOnly = true;\n    }\n    // Note, since all computed properties are readOnly, this prevents\n    // adding additional computed property effects (which leads to a confusing\n    // setup where multiple triggers for setting a property)\n    // While we do have `hasComputedEffect` this is set on the property's\n    // dependencies rather than itself.\n    if (info.computed) {\n      if (proto._hasReadOnlyEffect(name)) {\n        console.warn(`Cannot redefine computed property '${name}'.`);\n      } else {\n        proto._createComputedProperty(name, info.computed, allProps);\n      }\n    }\n    if (info.readOnly && !proto._hasReadOnlyEffect(name)) {\n      proto._createReadOnlyProperty(name, !info.computed);\n    } else if (info.readOnly === false && proto._hasReadOnlyEffect(name)) {\n      console.warn(`Cannot make readOnly property '${name}' non-readOnly.`);\n    }\n    if (info.reflectToAttribute && !proto._hasReflectEffect(name)) {\n      proto._createReflectedProperty(name);\n    } else if (info.reflectToAttribute === false && proto._hasReflectEffect(name)) {\n      console.warn(`Cannot make reflected property '${name}' non-reflected.`);\n    }\n    if (info.notify && !proto._hasNotifyEffect(name)) {\n      proto._createNotifyingProperty(name);\n    } else if (info.notify === false && proto._hasNotifyEffect(name)) {\n      console.warn(`Cannot make notify property '${name}' non-notify.`);\n    }\n    // always add observer\n    if (info.observer) {\n      proto._createPropertyObserver(name, info.observer, allProps[info.observer]);\n    }\n    // always create the mapping from attribute back to property for deserialization.\n    proto._addPropertyToAttributeMap(name);\n  }\n\n  /**\n   * Process all style elements in the element template. Styles with the\n   * `include` attribute are processed such that any styles in\n   * the associated \"style modules\" are included in the element template.\n   * @param {PolymerElementConstructor} klass Element class\n   * @param {!HTMLTemplateElement} template Template to process\n   * @param {string} is Name of element\n   * @param {string} baseURI Base URI for element\n   * @private\n   */\n  function processElementStyles(klass, template, is, baseURI) {\n    if (!builtCSS) {\n      const templateStyles = template.content.querySelectorAll('style');\n      const stylesWithImports = stylesFromTemplate(template);\n      // insert styles from <link rel=\"import\" type=\"css\"> at the top of the template\n      const linkedStyles = stylesFromModuleImports(is);\n      const firstTemplateChild = template.content.firstElementChild;\n      for (let idx = 0; idx < linkedStyles.length; idx++) {\n        let s = linkedStyles[idx];\n        s.textContent = klass._processStyleText(s.textContent, baseURI);\n        template.content.insertBefore(s, firstTemplateChild);\n      }\n      // keep track of the last \"concrete\" style in the template we have encountered\n      let templateStyleIndex = 0;\n      // ensure all gathered styles are actually in this template.\n      for (let i = 0; i < stylesWithImports.length; i++) {\n        let s = stylesWithImports[i];\n        let templateStyle = templateStyles[templateStyleIndex];\n        // if the style is not in this template, it's been \"included\" and\n        // we put a clone of it in the template before the style that included it\n        if (templateStyle !== s) {\n          s = s.cloneNode(true);\n          templateStyle.parentNode.insertBefore(s, templateStyle);\n        } else {\n          templateStyleIndex++;\n        }\n        s.textContent = klass._processStyleText(s.textContent, baseURI);\n      }\n    }\n    if (window.ShadyCSS) {\n      window.ShadyCSS.prepareTemplate(template, is);\n    }\n  }\n\n  /**\n   * Look up template from dom-module for element\n   *\n   * @param {string} is Element name to look up\n   * @return {?HTMLTemplateElement|undefined} Template found in dom module, or\n   *   undefined if not found\n   * @protected\n   */\n  function getTemplateFromDomModule(is) {\n    let template = null;\n    // Under strictTemplatePolicy in 3.x+, dom-module lookup is only allowed\n    // when opted-in via allowTemplateFromDomModule\n    if (is && (!strictTemplatePolicy || allowTemplateFromDomModule)) {\n      template = /** @type {?HTMLTemplateElement} */ (\n          DomModule.import(is, 'template'));\n      // Under strictTemplatePolicy, require any element with an `is`\n      // specified to have a dom-module\n      if (strictTemplatePolicy && !template) {\n        throw new Error(`strictTemplatePolicy: expecting dom-module or null template for ${is}`);\n      }\n    }\n    return template;\n  }\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @unrestricted\n   * @implements {Polymer_ElementMixin}\n   * @extends {polymerElementBase}\n   */\n  class PolymerElement extends polymerElementBase {\n\n    /**\n     * Current Polymer version in Semver notation.\n     * @type {string} Semver notation of the current version of Polymer.\n     */\n    static get polymerElementVersion() {\n      return version;\n    }\n\n    /**\n     * Override of PropertiesMixin _finalizeClass to create observers and\n     * find the template.\n     * @return {void}\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     */\n    static _finalizeClass() {\n      super._finalizeClass();\n      const observers = ownObservers(this);\n      if (observers) {\n        this.createObservers(observers, this._properties);\n      }\n      this._prepareTemplate();\n    }\n\n    static _prepareTemplate() {\n      // note: create \"working\" template that is finalized at instance time\n      let template = /** @type {PolymerElementConstructor} */ (this).template;\n      if (template) {\n        if (typeof template === 'string') {\n          console.error('template getter must return HTMLTemplateElement');\n          template = null;\n        } else if (!legacyOptimizations) {\n          template = template.cloneNode(true);\n        }\n      }\n\n      this.prototype._template = template;\n    }\n\n    /**\n     * Override of PropertiesChanged createProperties to create accessors\n     * and property effects for all of the properties.\n     * @param {!Object} props .\n     * @return {void}\n     * @protected\n     */\n    static createProperties(props) {\n      for (let p in props) {\n        createPropertyFromConfig(this.prototype, p, props[p], props);\n      }\n    }\n\n    /**\n     * Creates observers for the given `observers` array.\n     * Leverages `PropertyEffects` to create observers.\n     * @param {Object} observers Array of observer descriptors for\n     *   this class\n     * @param {Object} dynamicFns Object containing keys for any properties\n     *   that are functions and should trigger the effect when the function\n     *   reference is changed\n     * @return {void}\n     * @protected\n     */\n    static createObservers(observers, dynamicFns) {\n      const proto = this.prototype;\n      for (let i=0; i < observers.length; i++) {\n        proto._createMethodObserver(observers[i], dynamicFns);\n      }\n    }\n\n    /**\n     * Returns the template that will be stamped into this element's shadow root.\n     *\n     * If a `static get is()` getter is defined, the default implementation\n     * will return the first `<template>` in a `dom-module` whose `id`\n     * matches this element's `is`.\n     *\n     * Users may override this getter to return an arbitrary template\n     * (in which case the `is` getter is unnecessary). The template returned\n     * must be an `HTMLTemplateElement`.\n     *\n     * Note that when subclassing, if the super class overrode the default\n     * implementation and the subclass would like to provide an alternate\n     * template via a `dom-module`, it should override this getter and\n     * return `DomModule.import(this.is, 'template')`.\n     *\n     * If a subclass would like to modify the super class template, it should\n     * clone it rather than modify it in place.  If the getter does expensive\n     * work such as cloning/modifying a template, it should memoize the\n     * template for maximum performance:\n     *\n     *   let memoizedTemplate;\n     *   class MySubClass extends MySuperClass {\n     *     static get template() {\n     *       if (!memoizedTemplate) {\n     *         memoizedTemplate = super.template.cloneNode(true);\n     *         let subContent = document.createElement('div');\n     *         subContent.textContent = 'This came from MySubClass';\n     *         memoizedTemplate.content.appendChild(subContent);\n     *       }\n     *       return memoizedTemplate;\n     *     }\n     *   }\n     *\n     * @return {!HTMLTemplateElement|string} Template to be stamped\n     */\n    static get template() {\n      // Explanation of template-related properties:\n      // - constructor.template (this getter): the template for the class.\n      //     This can come from the prototype (for legacy elements), from a\n      //     dom-module, or from the super class's template (or can be overridden\n      //     altogether by the user)\n      // - constructor._template: memoized version of constructor.template\n      // - prototype._template: working template for the element, which will be\n      //     parsed and modified in place. It is a cloned version of\n      //     constructor.template, saved in _finalizeClass(). Note that before\n      //     this getter is called, for legacy elements this could be from a\n      //     _template field on the info object passed to Polymer(), a behavior,\n      //     or set in registered(); once the static getter runs, a clone of it\n      //     will overwrite it on the prototype as the working template.\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('_template', this))) {\n        this._template =\n          // If user has put template on prototype (e.g. in legacy via registered\n          // callback or info object), prefer that first\n          this.prototype.hasOwnProperty(JSCompiler_renameProperty('_template', this.prototype)) ?\n          this.prototype._template :\n          // Look in dom-module associated with this element's is\n          (getTemplateFromDomModule(/** @type {PolymerElementConstructor}*/ (this).is) ||\n          // Next look for superclass template (call the super impl this\n          // way so that `this` points to the superclass)\n          Object.getPrototypeOf(/** @type {PolymerElementConstructor}*/ (this).prototype).constructor.template);\n      }\n      return this._template;\n    }\n\n    /**\n     * Set the template.\n     *\n     * @param {!HTMLTemplateElement|string} value Template to set.\n     */\n    static set template(value) {\n      this._template = value;\n    }\n\n    /**\n     * Path matching the url from which the element was imported.\n     *\n     * This path is used to resolve url's in template style cssText.\n     * The `importPath` property is also set on element instances and can be\n     * used to create bindings relative to the import path.\n     *\n     * For elements defined in ES modules, users should implement\n     * `static get importMeta() { return import.meta; }`, and the default\n     * implementation of `importPath` will  return `import.meta.url`'s path.\n     * For elements defined in HTML imports, this getter will return the path\n     * to the document containing a `dom-module` element matching this\n     * element's static `is` property.\n     *\n     * Note, this path should contain a trailing `/`.\n     *\n     * @return {string} The import path for this element class\n     * @suppress {missingProperties}\n     */\n    static get importPath() {\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('_importPath', this))) {\n        const meta = this.importMeta;\n        if (meta) {\n          this._importPath = pathFromUrl(meta.url);\n        } else {\n          const module = DomModule.import(/** @type {PolymerElementConstructor} */ (this).is);\n          this._importPath = (module && module.assetpath) ||\n            Object.getPrototypeOf(/** @type {PolymerElementConstructor}*/ (this).prototype).constructor.importPath;\n        }\n      }\n      return this._importPath;\n    }\n\n    constructor() {\n      super();\n      /** @type {HTMLTemplateElement} */\n      this._template;\n      /** @type {string} */\n      this._importPath;\n      /** @type {string} */\n      this.rootPath;\n      /** @type {string} */\n      this.importPath;\n      /** @type {StampedTemplate | HTMLElement | ShadowRoot} */\n      this.root;\n      /** @type {!Object<string, !Element>} */\n      this.$;\n    }\n\n    /**\n     * Overrides the default `PropertyAccessors` to ensure class\n     * metaprogramming related to property accessors and effects has\n     * completed (calls `finalize`).\n     *\n     * It also initializes any property defaults provided via `value` in\n     * `properties` metadata.\n     *\n     * @return {void}\n     * @override\n     * @suppress {invalidCasts,missingProperties} go/missingfnprops\n     */\n    _initializeProperties() {\n      this.constructor.finalize();\n      // note: finalize template when we have access to `localName` to\n      // avoid dependence on `is` for polyfilling styling.\n      this.constructor._finalizeTemplate(/** @type {!HTMLElement} */(this).localName);\n      super._initializeProperties();\n      // set path defaults\n      this.rootPath = rootPath;\n      this.importPath = this.constructor.importPath;\n      // apply property defaults...\n      let p$ = propertyDefaults(this.constructor);\n      if (!p$) {\n        return;\n      }\n      for (let p in p$) {\n        let info = p$[p];\n        // Don't set default value if there is already an own property, which\n        // happens when a `properties` property with default but no effects had\n        // a property set (e.g. bound) by its host before upgrade\n        if (!this.hasOwnProperty(p)) {\n          let value = typeof info.value == 'function' ?\n            info.value.call(this) :\n            info.value;\n          // Set via `_setProperty` if there is an accessor, to enable\n          // initializing readOnly property defaults\n          if (this._hasAccessor(p)) {\n            this._setPendingProperty(p, value, true);\n          } else {\n            this[p] = value;\n          }\n        }\n      }\n    }\n\n    /**\n     * Gather style text for a style element in the template.\n     *\n     * @param {string} cssText Text containing styling to process\n     * @param {string} baseURI Base URI to rebase CSS paths against\n     * @return {string} The processed CSS text\n     * @protected\n     */\n    static _processStyleText(cssText, baseURI) {\n      return resolveCss(cssText, baseURI);\n    }\n\n    /**\n    * Configures an element `proto` to function with a given `template`.\n    * The element name `is` and extends `ext` must be specified for ShadyCSS\n    * style scoping.\n    *\n    * @param {string} is Tag name (or type extension name) for this element\n    * @return {void}\n    * @protected\n    */\n    static _finalizeTemplate(is) {\n      /** @const {HTMLTemplateElement} */\n      const template = this.prototype._template;\n      if (template && !template.__polymerFinalized) {\n        template.__polymerFinalized = true;\n        const importPath = this.importPath;\n        const baseURI = importPath ? resolveUrl(importPath) : '';\n        // e.g. support `include=\"module-name\"`, and ShadyCSS\n        processElementStyles(this, template, is, baseURI);\n        this.prototype._bindTemplate(template);\n      }\n    }\n\n    /**\n     * Provides a default implementation of the standard Custom Elements\n     * `connectedCallback`.\n     *\n     * The default implementation enables the property effects system and\n     * flushes any pending properties, and updates shimmed CSS properties\n     * when using the ShadyCSS scoping/custom properties polyfill.\n     *\n     * @override\n     * @suppress {missingProperties, invalidCasts} Super may or may not\n     *     implement the callback\n     * @return {void}\n     */\n    connectedCallback() {\n      if (window.ShadyCSS && this._template) {\n        window.ShadyCSS.styleElement(/** @type {!HTMLElement} */(this));\n      }\n      super.connectedCallback();\n    }\n\n    /**\n     * Stamps the element template.\n     *\n     * @return {void}\n     * @override\n     */\n    ready() {\n      if (this._template) {\n        this.root = this._stampTemplate(this._template);\n        this.$ = this.root.$;\n      }\n      super.ready();\n    }\n\n    /**\n     * Implements `PropertyEffects`'s `_readyClients` call. Attaches\n     * element dom by calling `_attachDom` with the dom stamped from the\n     * element's template via `_stampTemplate`. Note that this allows\n     * client dom to be attached to the element prior to any observers\n     * running.\n     *\n     * @return {void}\n     * @override\n     */\n    _readyClients() {\n      if (this._template) {\n        this.root = this._attachDom(/** @type {StampedTemplate} */(this.root));\n      }\n      // The super._readyClients here sets the clients initialized flag.\n      // We must wait to do this until after client dom is created/attached\n      // so that this flag can be checked to prevent notifications fired\n      // during this process from being handled before clients are ready.\n      super._readyClients();\n    }\n\n\n    /**\n     * Attaches an element's stamped dom to itself. By default,\n     * this method creates a `shadowRoot` and adds the dom to it.\n     * However, this method may be overridden to allow an element\n     * to put its dom in another location.\n     *\n     * @override\n     * @throws {Error}\n     * @suppress {missingReturn}\n     * @param {StampedTemplate} dom to attach to the element.\n     * @return {ShadowRoot} node to which the dom has been attached.\n     */\n    _attachDom(dom) {\n      const n = wrap(this);\n      if (n.attachShadow) {\n        if (dom) {\n          if (!n.shadowRoot) {\n            n.attachShadow({mode: 'open'});\n          }\n          n.shadowRoot.appendChild(dom);\n          if (syncInitialRender && window.ShadyDOM) {\n            ShadyDOM.flushInitial(n.shadowRoot);\n          }\n          return n.shadowRoot;\n        }\n        return null;\n      } else {\n        throw new Error('ShadowDOM not available. ' +\n          // TODO(sorvell): move to compile-time conditional when supported\n        'PolymerElement can create dom as children instead of in ' +\n        'ShadowDOM by setting `this.root = this;\\` before \\`ready\\`.');\n      }\n    }\n\n    /**\n     * When using the ShadyCSS scoping and custom property shim, causes all\n     * shimmed styles in this element (and its subtree) to be updated\n     * based on current custom property values.\n     *\n     * The optional parameter overrides inline custom property styles with an\n     * object of properties where the keys are CSS properties, and the values\n     * are strings.\n     *\n     * Example: `this.updateStyles({'--color': 'blue'})`\n     *\n     * These properties are retained unless a value of `null` is set.\n     *\n     * Note: This function does not support updating CSS mixins.\n     * You can not dynamically change the value of an `@apply`.\n     *\n     * @override\n     * @param {Object=} properties Bag of custom property key/values to\n     *   apply to this element.\n     * @return {void}\n     * @suppress {invalidCasts}\n     */\n    updateStyles(properties) {\n      if (window.ShadyCSS) {\n        window.ShadyCSS.styleSubtree(/** @type {!HTMLElement} */(this), properties);\n      }\n    }\n\n    /**\n     * Rewrites a given URL relative to a base URL. The base URL defaults to\n     * the original location of the document containing the `dom-module` for\n     * this element. This method will return the same URL before and after\n     * bundling.\n     *\n     * Note that this function performs no resolution for URLs that start\n     * with `/` (absolute URLs) or `#` (hash identifiers).  For general purpose\n     * URL resolution, use `window.URL`.\n     *\n     * @override\n     * @param {string} url URL to resolve.\n     * @param {string=} base Optional base URL to resolve against, defaults\n     * to the element's `importPath`\n     * @return {string} Rewritten URL relative to base\n     */\n    resolveUrl(url, base) {\n      if (!base && this.importPath) {\n        base = resolveUrl(this.importPath);\n      }\n      return resolveUrl(url, base);\n    }\n\n    /**\n     * Overrides `PropertyEffects` to add map of dynamic functions on\n     * template info, for consumption by `PropertyEffects` template binding\n     * code. This map determines which method templates should have accessors\n     * created for them.\n     *\n     * @param {!HTMLTemplateElement} template Template\n     * @param {!TemplateInfo} templateInfo Template metadata for current template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {boolean} .\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     */\n    static _parseTemplateContent(template, templateInfo, nodeInfo) {\n      templateInfo.dynamicFns = templateInfo.dynamicFns || this._properties;\n      return super._parseTemplateContent(template, templateInfo, nodeInfo);\n    }\n\n    /**\n     * Overrides `PropertyEffects` to warn on use of undeclared properties in\n     * template.\n     *\n     * @param {Object} templateInfo Template metadata to add effect to\n     * @param {string} prop Property that should trigger the effect\n     * @param {Object=} effect Effect metadata object\n     * @return {void}\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     */\n    static _addTemplatePropertyEffect(templateInfo, prop, effect) {\n      // Warn if properties are used in template without being declared.\n      // Properties must be listed in `properties` to be included in\n      // `observedAttributes` since CE V1 reads that at registration time, and\n      // since we want to keep template parsing lazy, we can't automatically\n      // add undeclared properties used in templates to `observedAttributes`.\n      // The warning is only enabled in `legacyOptimizations` mode, since\n      // we don't want to spam existing users who might have adopted the\n      // shorthand when attribute deserialization is not important.\n      if (legacyOptimizations && !(prop in this._properties)) {\n        console.warn(`Property '${prop}' used in template but not declared in 'properties'; ` +\n          `attribute will not be observed.`);\n      }\n      return super._addTemplatePropertyEffect(templateInfo, prop, effect);\n    }\n\n  }\n\n  return PolymerElement;\n});\n\n/**\n * When using the ShadyCSS scoping and custom property shim, causes all\n * shimmed `styles` (via `custom-style`) in the document (and its subtree)\n * to be updated based on current custom property values.\n *\n * The optional parameter overrides inline custom property styles with an\n * object of properties where the keys are CSS properties, and the values\n * are strings.\n *\n * Example: `updateStyles({'--color': 'blue'})`\n *\n * These properties are retained unless a value of `null` is set.\n *\n * @param {Object=} props Bag of custom property key/values to\n *   apply to the document.\n * @return {void}\n */\nexport const updateStyles = function(props) {\n  if (window.ShadyCSS) {\n    window.ShadyCSS.styleDocument(props);\n  }\n};\n"
      },
      {
       "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/mixins/properties-mixin.js",
       "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { register, incrementInstanceCount } from '../utils/telemetry.js';\nimport { PropertiesChanged } from './properties-changed.js';\n\n/**\n * Creates a copy of `props` with each property normalized such that\n * upgraded it is an object with at least a type property { type: Type}.\n *\n * @param {Object} props Properties to normalize\n * @return {Object} Copy of input `props` with normalized properties that\n * are in the form {type: Type}\n * @private\n */\nfunction normalizeProperties(props) {\n  const output = {};\n  for (let p in props) {\n    const o = props[p];\n    output[p] = (typeof o === 'function') ? {type: o} : o;\n  }\n  return output;\n}\n\n/**\n * Mixin that provides a minimal starting point to using the PropertiesChanged\n * mixin by providing a mechanism to declare properties in a static\n * getter (e.g. static get properties() { return { foo: String } }). Changes\n * are reported via the `_propertiesChanged` method.\n *\n * This mixin provides no specific support for rendering. Users are expected\n * to create a ShadowRoot and put content into it and update it in whatever\n * way makes sense. This can be done in reaction to properties changing by\n * implementing `_propertiesChanged`.\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin PropertiesChanged\n * @summary Mixin that provides a minimal starting point for using\n * the PropertiesChanged mixin by providing a declarative `properties` object.\n */\nexport const PropertiesMixin = dedupingMixin(superClass => {\n\n /**\n  * @constructor\n  * @implements {Polymer_PropertiesChanged}\n  * @private\n  */\n const base = PropertiesChanged(superClass);\n\n /**\n  * Returns the super class constructor for the given class, if it is an\n  * instance of the PropertiesMixin.\n  *\n  * @param {!PropertiesMixinConstructor} constructor PropertiesMixin constructor\n  * @return {?PropertiesMixinConstructor} Super class constructor\n  */\n function superPropertiesClass(constructor) {\n   const superCtor = Object.getPrototypeOf(constructor);\n\n   // Note, the `PropertiesMixin` class below only refers to the class\n   // generated by this call to the mixin; the instanceof test only works\n   // because the mixin is deduped and guaranteed only to apply once, hence\n   // all constructors in a proto chain will see the same `PropertiesMixin`\n   return (superCtor.prototype instanceof PropertiesMixin) ?\n     /** @type {!PropertiesMixinConstructor} */ (superCtor) : null;\n }\n\n /**\n  * Returns a memoized version of the `properties` object for the\n  * given class. Properties not in object format are converted to at\n  * least {type}.\n  *\n  * @param {PropertiesMixinConstructor} constructor PropertiesMixin constructor\n  * @return {Object} Memoized properties object\n  */\n function ownProperties(constructor) {\n   if (!constructor.hasOwnProperty(JSCompiler_renameProperty('__ownProperties', constructor))) {\n     let props = null;\n\n     if (constructor.hasOwnProperty(JSCompiler_renameProperty('properties', constructor))) {\n       const properties = constructor.properties;\n\n       if (properties) {\n        props = normalizeProperties(properties);\n       }\n     }\n\n     constructor.__ownProperties = props;\n   }\n   return constructor.__ownProperties;\n }\n\n /**\n  * @polymer\n  * @mixinClass\n  * @extends {base}\n  * @implements {Polymer_PropertiesMixin}\n  * @unrestricted\n  */\n class PropertiesMixin extends base {\n\n   /**\n    * Implements standard custom elements getter to observes the attributes\n    * listed in `properties`.\n    * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n    */\n   static get observedAttributes() {\n     if (!this.hasOwnProperty('__observedAttributes')) {\n       register(this.prototype);\n       const props = this._properties;\n       this.__observedAttributes = props ? Object.keys(props).map(p => this.attributeNameForProperty(p)) : [];\n     }\n     return this.__observedAttributes;\n   }\n\n   /**\n    * Finalizes an element definition, including ensuring any super classes\n    * are also finalized. This includes ensuring property\n    * accessors exist on the element prototype. This method calls\n    * `_finalizeClass` to finalize each constructor in the prototype chain.\n    * @return {void}\n    */\n   static finalize() {\n     if (!this.hasOwnProperty(JSCompiler_renameProperty('__finalized', this))) {\n       const superCtor = superPropertiesClass(/** @type {!PropertiesMixinConstructor} */(this));\n       if (superCtor) {\n         superCtor.finalize();\n       }\n       this.__finalized = true;\n       this._finalizeClass();\n     }\n   }\n\n   /**\n    * Finalize an element class. This includes ensuring property\n    * accessors exist on the element prototype. This method is called by\n    * `finalize` and finalizes the class constructor.\n    *\n    * @protected\n    */\n   static _finalizeClass() {\n     const props = ownProperties(/** @type {!PropertiesMixinConstructor} */(this));\n     if (props) {\n       this.createProperties(props);\n     }\n   }\n\n   /**\n    * Returns a memoized version of all properties, including those inherited\n    * from super classes. Properties not in object format are converted to\n    * at least {type}.\n    *\n    * @return {Object} Object containing properties for this class\n    * @protected\n    */\n   static get _properties() {\n     if (!this.hasOwnProperty(\n       JSCompiler_renameProperty('__properties', this))) {\n       const superCtor = superPropertiesClass(/** @type {!PropertiesMixinConstructor} */(this));\n       this.__properties = Object.assign({},\n         superCtor && superCtor._properties,\n         ownProperties(/** @type {PropertiesMixinConstructor} */(this)));\n     }\n     return this.__properties;\n   }\n\n   /**\n    * Overrides `PropertiesChanged` method to return type specified in the\n    * static `properties` object for the given property.\n    * @param {string} name Name of property\n    * @return {*} Type to which to deserialize attribute\n    *\n    * @protected\n    */\n   static typeForProperty(name) {\n     const info = this._properties[name];\n     return info && info.type;\n   }\n\n   /**\n    * Overrides `PropertiesChanged` method and adds a call to\n    * `finalize` which lazily configures the element's property accessors.\n    * @override\n    * @return {void}\n    */\n   _initializeProperties() {\n     incrementInstanceCount();\n     this.constructor.finalize();\n     super._initializeProperties();\n   }\n\n   /**\n    * Called when the element is added to a document.\n    * Calls `_enableProperties` to turn on property system from\n    * `PropertiesChanged`.\n    * @suppress {missingProperties} Super may or may not implement the callback\n    * @return {void}\n    * @override\n    */\n   connectedCallback() {\n     if (super.connectedCallback) {\n       super.connectedCallback();\n     }\n     this._enableProperties();\n   }\n\n   /**\n    * Called when the element is removed from a document\n    * @suppress {missingProperties} Super may or may not implement the callback\n    * @return {void}\n    * @override\n    */\n   disconnectedCallback() {\n     if (super.disconnectedCallback) {\n       super.disconnectedCallback();\n     }\n   }\n\n }\n\n return PropertiesMixin;\n\n});\n"
      },
      {
       "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/utils/telemetry.js",
       "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Total number of Polymer element instances created.\n * @type {number}\n */\nexport let instanceCount = 0;\n\nexport function incrementInstanceCount() {\n  instanceCount++;\n}\n\n/**\n * Array of Polymer element classes that have been finalized.\n * @type {!Array<!PolymerElementConstructor>}\n */\nexport const registrations = [];\n\n/**\n * @param {!PolymerElementConstructor} prototype Element prototype to log\n * @private\n */\nfunction _regLog(prototype) {\n  console.log('[' + /** @type {?} */(prototype).is + ']: registered');\n}\n\n/**\n * Registers a class prototype for telemetry purposes.\n * @param {!PolymerElementConstructor} prototype Element prototype to register\n * @protected\n */\nexport function register(prototype) {\n  registrations.push(prototype);\n}\n\n/**\n * Logs all elements registered with an `is` to the console.\n * @public\n */\nexport function dumpRegistrations() {\n  registrations.forEach(_regLog);\n}"
      }
     ]
    },
    {
     "id": 57,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-item@3.0.0/node_modules/@vaadin/vaadin-item/theme/lumo/vaadin-item.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-item@3.0.0/node_modules/@vaadin/vaadin-item/theme/lumo/vaadin-item.js",
       "source": "import './vaadin-item-styles.js';\nimport '../../src/vaadin-item.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-item@3.0.0/node_modules/@vaadin/vaadin-item/theme/lumo/vaadin-item-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\n\nregisterStyles(\n  'vaadin-item',\n  css`\n    :host {\n      display: flex;\n      align-items: center;\n      box-sizing: border-box;\n      font-family: var(--lumo-font-family);\n      font-size: var(--lumo-font-size-m);\n      line-height: var(--lumo-line-height-xs);\n      padding: 0.5em 1em;\n      min-height: var(--lumo-size-m);\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n      -webkit-tap-highlight-color: transparent;\n    }\n\n    /* Checkmark */\n    :host([tabindex])::before {\n      display: var(--_lumo-item-selected-icon-display, none);\n      content: var(--lumo-icons-checkmark);\n      font-family: lumo-icons;\n      font-size: var(--lumo-icon-size-m);\n      line-height: 1;\n      font-weight: normal;\n      width: 1em;\n      height: 1em;\n      margin: calc((1 - var(--lumo-line-height-xs)) * var(--lumo-font-size-m) / 2) 0;\n      color: var(--lumo-primary-text-color);\n      flex: none;\n      opacity: 0;\n      transition: transform 0.2s cubic-bezier(0.12, 0.32, 0.54, 2), opacity 0.1s;\n    }\n\n    :host([selected])::before {\n      opacity: 1;\n    }\n\n    :host([active]:not([selected]))::before {\n      transform: scale(0.8);\n      opacity: 0;\n      transition-duration: 0s;\n    }\n\n    [part='content'] {\n      flex: auto;\n    }\n\n    /* Disabled */\n    :host([disabled]) {\n      color: var(--lumo-disabled-text-color);\n      cursor: default;\n      pointer-events: none;\n    }\n\n    /* Slotted icons */\n    :host ::slotted(iron-icon) {\n      width: var(--lumo-icon-size-m);\n      height: var(--lumo-icon-size-m);\n    }\n  `,\n  { moduleId: 'lumo-item' }\n);\n"
      }
     ]
    },
    {
     "id": 58,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/utils/resolve-url.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\nlet CSS_URL_RX = /(url\\()([^)]*)(\\))/g;\nlet ABS_URL = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\nlet workingURL;\nlet resolveDoc;\n/**\n * Resolves the given URL against the provided `baseUri'.\n *\n * Note that this function performs no resolution for URLs that start\n * with `/` (absolute URLs) or `#` (hash identifiers).  For general purpose\n * URL resolution, use `window.URL`.\n *\n * @param {string} url Input URL to resolve\n * @param {?string=} baseURI Base URI to resolve the URL against\n * @return {string} resolved URL\n */\nexport function resolveUrl(url, baseURI) {\n  if (url && ABS_URL.test(url)) {\n    return url;\n  }\n  // Lazy feature detection.\n  if (workingURL === undefined) {\n    workingURL = false;\n    try {\n      const u = new URL('b', 'http://a');\n      u.pathname = 'c%20d';\n      workingURL = (u.href === 'http://a/c%20d');\n    } catch (e) {\n      // silently fail\n    }\n  }\n  if (!baseURI) {\n    baseURI = document.baseURI || window.location.href;\n  }\n  if (workingURL) {\n    return (new URL(url, baseURI)).href;\n  }\n  // Fallback to creating an anchor into a disconnected document.\n  if (!resolveDoc) {\n    resolveDoc = document.implementation.createHTMLDocument('temp');\n    resolveDoc.base = resolveDoc.createElement('base');\n    resolveDoc.head.appendChild(resolveDoc.base);\n    resolveDoc.anchor = resolveDoc.createElement('a');\n    resolveDoc.body.appendChild(resolveDoc.anchor);\n  }\n  resolveDoc.base.href = baseURI;\n  resolveDoc.anchor.href = url;\n  return resolveDoc.anchor.href || url;\n\n}\n\n/**\n * Resolves any relative URL's in the given CSS text against the provided\n * `ownerDocument`'s `baseURI`.\n *\n * @param {string} cssText CSS text to process\n * @param {string} baseURI Base URI to resolve the URL against\n * @return {string} Processed CSS text with resolved URL's\n */\nexport function resolveCss(cssText, baseURI) {\n  return cssText.replace(CSS_URL_RX, function(m, pre, url, post) {\n    return pre + '\\'' +\n      resolveUrl(url.replace(/[\"']/g, ''), baseURI) +\n      '\\'' + post;\n  });\n}\n\n/**\n * Returns a path from a given `url`. The path includes the trailing\n * `/` from the url.\n *\n * @param {string} url Input URL to transform\n * @return {string} resolved path\n */\nexport function pathFromUrl(url) {\n  return url.substring(0, url.lastIndexOf('/') + 1);\n}\n"
    },
    {
     "id": 59,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/mixins/mutable-data.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport { dedupingMixin } from '../utils/mixin.js';\n\n// Common implementation for mixin & behavior\nfunction mutablePropertyChange(inst, property, value, old, mutableData) {\n  let isObject;\n  if (mutableData) {\n    isObject = (typeof value === 'object' && value !== null);\n    // Pull `old` for Objects from temp cache, but treat `null` as a primitive\n    if (isObject) {\n      old = inst.__dataTemp[property];\n    }\n  }\n  // Strict equality check, but return false for NaN===NaN\n  let shouldChange = (old !== value && (old === old || value === value));\n  // Objects are stored in temporary cache (cleared at end of\n  // turn), which is used for dirty-checking\n  if (isObject && shouldChange) {\n    inst.__dataTemp[property] = value;\n  }\n  return shouldChange;\n}\n\n/**\n * Element class mixin to skip strict dirty-checking for objects and arrays\n * (always consider them to be \"dirty\"), for use on elements utilizing\n * `PropertyEffects`\n *\n * By default, `PropertyEffects` performs strict dirty checking on\n * objects, which means that any deep modifications to an object or array will\n * not be propagated unless \"immutable\" data patterns are used (i.e. all object\n * references from the root to the mutation were changed).\n *\n * Polymer also provides a proprietary data mutation and path notification API\n * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient\n * mutation and notification of deep changes in an object graph to all elements\n * bound to the same object graph.\n *\n * In cases where neither immutable patterns nor the data mutation API can be\n * used, applying this mixin will cause Polymer to skip dirty checking for\n * objects and arrays (always consider them to be \"dirty\").  This allows a\n * user to make a deep modification to a bound object graph, and then either\n * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`\n * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all\n * elements that wish to be updated based on deep mutations must apply this\n * mixin or otherwise skip strict dirty checking for objects/arrays.\n * Specifically, any elements in the binding tree between the source of a\n * mutation and the consumption of it must apply this mixin or enable the\n * `OptionalMutableData` mixin.\n *\n * In order to make the dirty check strategy configurable, see\n * `OptionalMutableData`.\n *\n * Note, the performance characteristics of propagating large object graphs\n * will be worse as opposed to using strict dirty checking with immutable\n * patterns or Polymer's path notification API.\n *\n * @mixinFunction\n * @polymer\n * @summary Element class mixin to skip strict dirty-checking for objects\n *   and arrays\n */\nexport const MutableData = dedupingMixin(superClass => {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_MutableData}\n   */\n  class MutableData extends superClass {\n    /**\n     * Overrides `PropertyEffects` to provide option for skipping\n     * strict equality checking for Objects and Arrays.\n     *\n     * This method pulls the value to dirty check against from the `__dataTemp`\n     * cache (rather than the normal `__data` cache) for Objects.  Since the temp\n     * cache is cleared at the end of a turn, this implementation allows\n     * side-effects of deep object changes to be processed by re-setting the\n     * same object (using the temp cache as an in-turn backstop to prevent\n     * cycles due to 2-way notification).\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     * @protected\n     */\n    _shouldPropertyChange(property, value, old) {\n      return mutablePropertyChange(this, property, value, old, true);\n    }\n\n  }\n\n  return MutableData;\n\n});\n\n/**\n * Element class mixin to add the optional ability to skip strict\n * dirty-checking for objects and arrays (always consider them to be\n * \"dirty\") by setting a `mutable-data` attribute on an element instance.\n *\n * By default, `PropertyEffects` performs strict dirty checking on\n * objects, which means that any deep modifications to an object or array will\n * not be propagated unless \"immutable\" data patterns are used (i.e. all object\n * references from the root to the mutation were changed).\n *\n * Polymer also provides a proprietary data mutation and path notification API\n * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient\n * mutation and notification of deep changes in an object graph to all elements\n * bound to the same object graph.\n *\n * In cases where neither immutable patterns nor the data mutation API can be\n * used, applying this mixin will allow Polymer to skip dirty checking for\n * objects and arrays (always consider them to be \"dirty\").  This allows a\n * user to make a deep modification to a bound object graph, and then either\n * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`\n * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all\n * elements that wish to be updated based on deep mutations must apply this\n * mixin or otherwise skip strict dirty checking for objects/arrays.\n * Specifically, any elements in the binding tree between the source of a\n * mutation and the consumption of it must enable this mixin or apply the\n * `MutableData` mixin.\n *\n * While this mixin adds the ability to forgo Object/Array dirty checking,\n * the `mutableData` flag defaults to false and must be set on the instance.\n *\n * Note, the performance characteristics of propagating large object graphs\n * will be worse by relying on `mutableData: true` as opposed to using\n * strict dirty checking with immutable patterns or Polymer's path notification\n * API.\n *\n * @mixinFunction\n * @polymer\n * @summary Element class mixin to optionally skip strict dirty-checking\n *   for objects and arrays\n */\nexport const OptionalMutableData = dedupingMixin(superClass => {\n\n  /**\n   * @mixinClass\n   * @polymer\n   * @implements {Polymer_OptionalMutableData}\n   */\n  class OptionalMutableData extends superClass {\n\n    static get properties() {\n      return {\n        /**\n         * Instance-level flag for configuring the dirty-checking strategy\n         * for this element.  When true, Objects and Arrays will skip dirty\n         * checking, otherwise strict equality checking will be used.\n         */\n        mutableData: Boolean\n      };\n    }\n\n    /**\n     * Overrides `PropertyEffects` to provide option for skipping\n     * strict equality checking for Objects and Arrays.\n     *\n     * When `this.mutableData` is true on this instance, this method\n     * pulls the value to dirty check against from the `__dataTemp` cache\n     * (rather than the normal `__data` cache) for Objects.  Since the temp\n     * cache is cleared at the end of a turn, this implementation allows\n     * side-effects of deep object changes to be processed by re-setting the\n     * same object (using the temp cache as an in-turn backstop to prevent\n     * cycles due to 2-way notification).\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     * @protected\n     */\n    _shouldPropertyChange(property, value, old) {\n      return mutablePropertyChange(this, property, value, old, this.mutableData);\n    }\n  }\n\n  return OptionalMutableData;\n\n});\n\n// Export for use by legacy behavior\nMutableData._mutablePropertyChange = mutablePropertyChange;\n"
    },
    {
     "id": 60,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-themable-mixin@1.6.2/node_modules/@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js",
     "source": "/**\n * @polymerMixin\n */\nexport const ThemePropertyMixin = superClass => class VaadinThemePropertyMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * Helper property with theme attribute value facilitating propagation\n       * in shadow DOM.\n       *\n       * Enables the component implementation to propagate the `theme`\n       * attribute value to the subcomponents in Shadow DOM by binding\n       * the subcomponent’s \"theme\" attribute to the `theme` property of\n       * the host.\n       *\n       * **NOTE:** Extending the mixin only provides the property for binding,\n       * and does not make the propagation alone.\n       *\n       * See [Theme Attribute and Subcomponents](https://github.com/vaadin/vaadin-themable-mixin/wiki/5.-Theme-Attribute-and-Subcomponents).\n       * page for more information.\n       *\n       * @protected\n       */\n      theme: {\n        type: String,\n        readOnly: true\n      }\n    };\n  }\n\n  /** @protected */\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n\n    if (name === 'theme') {\n      this._setTheme(newValue);\n    }\n  }\n};\n"
    },
    {
     "id": 61,
     "name": "../node_modules/.pnpm/@polymer+iron-media-query@3.0.1/node_modules/@polymer/iron-media-query/iron-media-query.js",
     "source": "/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\n\n/**\n`iron-media-query` can be used to data bind to a CSS media query.\nThe `query` property is a bare CSS media query.\nThe `query-matches` property is a boolean representing whether the page matches\nthat media query.\n\nExample:\n\n```html\n<iron-media-query query=\"(min-width: 600px)\" query-matches=\"{{queryMatches}}\">\n</iron-media-query>\n```\n\n@group Iron Elements\n@demo demo/index.html\n@hero hero.svg\n@element iron-media-query\n*/\nPolymer({\n\n  is: 'iron-media-query',\n\n  properties: {\n\n    /**\n     * The Boolean return value of the media query.\n     */\n    queryMatches: {type: Boolean, value: false, readOnly: true, notify: true},\n\n    /**\n     * The CSS media query to evaluate.\n     */\n    query: {type: String, observer: 'queryChanged'},\n\n    /**\n     * If true, the query attribute is assumed to be a complete media query\n     * string rather than a single media feature.\n     */\n    full: {type: Boolean, value: false},\n\n    /**\n     * @type {function(MediaQueryList)}\n     */\n    _boundMQHandler: {\n      value: function() {\n        return this.queryHandler.bind(this);\n      }\n    },\n\n    /**\n     * @type {MediaQueryList}\n     */\n    _mq: {value: null}\n  },\n\n  attached: function() {\n    this.style.display = 'none';\n    this.queryChanged();\n  },\n\n  detached: function() {\n    this._remove();\n  },\n\n  _add: function() {\n    if (this._mq) {\n      this._mq.addListener(this._boundMQHandler);\n    }\n  },\n\n  _remove: function() {\n    if (this._mq) {\n      this._mq.removeListener(this._boundMQHandler);\n    }\n    this._mq = null;\n  },\n\n  queryChanged: function() {\n    this._remove();\n    var query = this.query;\n    if (!query) {\n      return;\n    }\n    if (!this.full && query[0] !== '(') {\n      query = '(' + query + ')';\n    }\n    this._mq = window.matchMedia(query);\n    this._add();\n    this.queryHandler(this._mq);\n  },\n\n  queryHandler: function(mq) {\n    this._setQueryMatches(mq.matches);\n  }\n\n});\n"
    },
    {
     "id": 62,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-lumo-styles@1.6.1/node_modules/@vaadin/vaadin-lumo-styles/mixins/required-field.js",
     "source": "import '../color.js';\nimport '../spacing.js';\nimport '../style.js';\nimport '../typography.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"lumo-required-field\">\n  <template>\n    <style>\n      [part=\"label\"] {\n        align-self: flex-start;\n        color: var(--lumo-secondary-text-color);\n        font-weight: 500;\n        font-size: var(--lumo-font-size-s);\n        margin-left: calc(var(--lumo-border-radius-m) / 4);\n        transition: color 0.2s;\n        line-height: 1;\n        padding-bottom: 0.5em;\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        position: relative;\n        max-width: 100%;\n        box-sizing: border-box;\n      }\n\n      :host([has-label])::before {\n        margin-top: calc(var(--lumo-font-size-s) * 1.5);\n      }\n\n      :host([has-label]) {\n        padding-top: var(--lumo-space-m);\n      }\n\n      :host([required]) [part=\"label\"] {\n        padding-right: 1em;\n      }\n\n      [part=\"label\"]::after {\n        content: var(--lumo-required-field-indicator, \"•\");\n        transition: opacity 0.2s;\n        opacity: 0;\n        color: var(--lumo-primary-text-color);\n        position: absolute;\n        right: 0;\n        width: 1em;\n        text-align: center;\n      }\n\n      :host([required]:not([has-value])) [part=\"label\"]::after {\n        opacity: 1;\n      }\n\n      :host([invalid]) [part=\"label\"]::after {\n        color: var(--lumo-error-text-color);\n      }\n\n      [part=\"error-message\"] {\n        margin-left: calc(var(--lumo-border-radius-m) / 4);\n        font-size: var(--lumo-font-size-xs);\n        line-height: var(--lumo-line-height-xs);\n        color: var(--lumo-error-text-color);\n        will-change: max-height;\n        transition: 0.4s max-height;\n        max-height: 5em;\n      }\n\n      /* Margin that doesn’t reserve space when there’s no error message */\n      [part=\"error-message\"]:not(:empty)::before,\n      [part=\"error-message\"]:not(:empty)::after {\n        content: \"\";\n        display: block;\n        height: 0.4em;\n      }\n\n      :host(:not([invalid])) [part=\"error-message\"] {\n        max-height: 0;\n        overflow: hidden;\n      }\n\n      /* RTL specific styles */\n\n      :host([dir=\"rtl\"]) [part=\"label\"] {\n        margin-left: 0;\n        margin-right: calc(var(--lumo-border-radius-m) / 4);\n      }\n\n      :host([required][dir=\"rtl\"]) [part=\"label\"] {\n        padding-left: 1em;\n        padding-right: 0;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"label\"]::after {\n        right: auto;\n        left: 0;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"error-message\"] {\n        margin-left: 0;\n        margin-right: calc(var(--lumo-border-radius-m) / 4);\n      }\n\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
    },
    {
     "id": 65,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-list-box@2.0.0/node_modules/@vaadin/vaadin-list-box/theme/lumo/vaadin-list-box.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-list-box@2.0.0/node_modules/@vaadin/vaadin-list-box/theme/lumo/vaadin-list-box.js",
       "source": "import './vaadin-list-box-styles.js';\nimport '../../src/vaadin-list-box.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-list-box@2.0.0/node_modules/@vaadin/vaadin-list-box/theme/lumo/vaadin-list-box-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\n\nregisterStyles(\n  'vaadin-list-box',\n  css`\n    :host {\n      -webkit-tap-highlight-color: transparent;\n      --_lumo-item-selected-icon-display: var(--_lumo-list-box-item-selected-icon-display, block);\n    }\n\n    /* Normal item */\n    [part='items'] ::slotted(vaadin-item) {\n      -webkit-tap-highlight-color: var(--lumo-primary-color-10pct);\n      cursor: default;\n    }\n\n    [part='items'] ::slotted(vaadin-item) {\n      outline: none;\n      border-radius: var(--lumo-border-radius);\n      padding-left: var(--_lumo-list-box-item-padding-left, calc(var(--lumo-border-radius) / 4));\n      padding-right: calc(var(--lumo-space-l) + var(--lumo-border-radius) / 4);\n    }\n\n    /* Workaround to display checkmark in IE11 when list-box is not used in dropdown-menu */\n    [part='items'] ::slotted(vaadin-item)::before {\n      display: var(--_lumo-item-selected-icon-display);\n    }\n\n    /* Hovered item */\n    /* TODO a workaround until we have \"focus-follows-mouse\". After that, use the hover style for focus-ring as well */\n    [part='items'] ::slotted(vaadin-item:hover:not([disabled])) {\n      background-color: var(--lumo-primary-color-10pct);\n    }\n\n    /* Focused item */\n    [part='items'] ::slotted([focus-ring]:not([disabled])) {\n      box-shadow: inset 0 0 0 2px var(--lumo-primary-color-50pct);\n    }\n\n    @media (pointer: coarse) {\n      [part='items'] ::slotted(vaadin-item:hover:not([disabled])) {\n        background-color: transparent;\n      }\n\n      [part='items'] ::slotted([focus-ring]:not([disabled])) {\n        box-shadow: none;\n      }\n    }\n\n    /* Dividers */\n    [part='items'] ::slotted(hr) {\n      height: 1px;\n      border: 0;\n      padding: 0;\n      margin: var(--lumo-space-s) var(--lumo-border-radius);\n      background-color: var(--lumo-contrast-10pct);\n    }\n\n    /* RTL specific styles */\n    :host([dir='rtl']) [part='items'] ::slotted(vaadin-item) {\n      padding-left: calc(var(--lumo-space-l) + var(--lumo-border-radius) / 4);\n      padding-right: var(--_lumo-list-box-item-padding-left, calc(var(--lumo-border-radius) / 4));\n    }\n  `,\n  { moduleId: 'lumo-list-box' }\n);\n"
      }
     ]
    },
    {
     "id": 66,
     "name": "../node_modules/.pnpm/@webcomponents+shadycss@1.11.0/node_modules/@webcomponents/shadycss/src/style-settings.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport const nativeShadow = !(\n  window['ShadyDOM'] && window['ShadyDOM']['inUse']\n);\nlet nativeCssVariables_;\n\n/**\n * @param {(ShadyCSSOptions | ShadyCSSInterface)=} settings\n */\nfunction calcCssVariables(settings) {\n  if (settings && settings['shimcssproperties']) {\n    nativeCssVariables_ = false;\n  } else {\n    // chrome 49 has semi-working css vars, check if box-shadow works\n    // safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\n    // However, shim css custom properties are only supported with ShadyDOM enabled,\n    // so fall back on native if we do not detect ShadyDOM\n    // Edge 15: custom properties used in ::before and ::after will also be used in the parent element\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12414257/\n    nativeCssVariables_ =\n      nativeShadow ||\n      Boolean(\n        !navigator.userAgent.match(/AppleWebKit\\/601|Edge\\/15/) &&\n          window.CSS &&\n          CSS.supports &&\n          CSS.supports('box-shadow', '0 0 0 var(--foo)')\n      );\n  }\n}\n\n/** @type {string | undefined} */\nexport let cssBuild;\nif (window.ShadyCSS && window.ShadyCSS.cssBuild !== undefined) {\n  cssBuild = window.ShadyCSS.cssBuild;\n}\n\n/** @type {boolean} */\nexport const disableRuntime = Boolean(\n  window.ShadyCSS && window.ShadyCSS.disableRuntime\n);\n\nif (window.ShadyCSS && window.ShadyCSS.nativeCss !== undefined) {\n  nativeCssVariables_ = window.ShadyCSS.nativeCss;\n} else if (window.ShadyCSS) {\n  calcCssVariables(window.ShadyCSS);\n  // reset window variable to let ShadyCSS API take its place\n  window.ShadyCSS = undefined;\n} else {\n  calcCssVariables(window['WebComponents'] && window['WebComponents']['flags']);\n}\n\n// Hack for type error under new type inference which doesn't like that\n// nativeCssVariables is updated in a function and assigns the type\n// `function(): ?` instead of `boolean`.\nexport const nativeCssVariables = /** @type {boolean} */ (nativeCssVariables_);\n"
    },
    {
     "id": 67,
     "name": "../node_modules/.pnpm/@webcomponents+shadycss@1.11.0/node_modules/@webcomponents/shadycss/src/common-regex.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const VAR_ASSIGN = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gi;\nexport const MIXIN_MATCH = /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi;\nexport const VAR_CONSUMED = /(--[\\w-]+)\\s*([:,;)]|$)/gi;\nexport const ANIMATION_MATCH = /(animation\\s*:)|(animation-name\\s*:)/;\nexport const MEDIA_MATCH = /@media\\s(.*)/;\nexport const IS_VAR = /^--/;\nexport const BRACKETED = /\\{[^}]*\\}/g;\nexport const HOST_PREFIX = '(?:^|[^.#[:])';\nexport const HOST_SUFFIX = '($|[.:[\\\\s>+~])';\n"
    },
    {
     "id": 68,
     "name": "../node_modules/.pnpm/@webcomponents+shadycss@1.11.0/node_modules/@webcomponents/shadycss/src/common-utils.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {MIXIN_MATCH, VAR_ASSIGN} from './common-regex.js';\n\n/**\n * @param {Element} element\n * @param {Object=} properties\n */\nexport function updateNativeProperties(element, properties) {\n  // remove previous properties\n  for (let p in properties) {\n    // NOTE: for bc with shim, don't apply null values.\n    if (p === null) {\n      element.style.removeProperty(p);\n    } else {\n      element.style.setProperty(p, properties[p]);\n    }\n  }\n}\n\n/**\n * @param {Element} element\n * @param {string} property\n * @return {string}\n */\nexport function getComputedStyleValue(element, property) {\n  /**\n   * @const {string}\n   */\n  const value = window.getComputedStyle(element).getPropertyValue(property);\n  if (!value) {\n    return '';\n  } else {\n    return value.trim();\n  }\n}\n\n/**\n * return true if `cssText` contains a mixin definition or consumption\n * @param {string} cssText\n * @return {boolean}\n */\nexport function detectMixin(cssText) {\n  const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n  // reset state of the regexes\n  MIXIN_MATCH.lastIndex = 0;\n  VAR_ASSIGN.lastIndex = 0;\n  return has;\n}\n"
    },
    {
     "id": 69,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/utils/case-map.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\nconst caseMap = {};\nconst DASH_TO_CAMEL = /-[a-z]/g;\nconst CAMEL_TO_DASH = /([A-Z])/g;\n\n/**\n * @fileoverview Module with utilities for converting between \"dash-case\" and\n * \"camelCase\" identifiers.\n */\n\n/**\n * Converts \"dash-case\" identifier (e.g. `foo-bar-baz`) to \"camelCase\"\n * (e.g. `fooBarBaz`).\n *\n * @param {string} dash Dash-case identifier\n * @return {string} Camel-case representation of the identifier\n */\nexport function dashToCamelCase(dash) {\n  return caseMap[dash] || (\n    caseMap[dash] = dash.indexOf('-') < 0 ? dash : dash.replace(DASH_TO_CAMEL,\n      (m) => m[1].toUpperCase()\n    )\n  );\n}\n\n/**\n * Converts \"camelCase\" identifier (e.g. `fooBarBaz`) to \"dash-case\"\n * (e.g. `foo-bar-baz`).\n *\n * @param {string} camel Camel-case identifier\n * @return {string} Dash-case representation of the identifier\n */\nexport function camelToDashCase(camel) {\n  return caseMap[camel] || (\n    caseMap[camel] = camel.replace(CAMEL_TO_DASH, '-$1').toLowerCase()\n  );\n}\n"
    },
    {
     "id": 70,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/utils/array-splice.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\nfunction newSplice(index, removed, addedCount) {\n  return {\n    index: index,\n    removed: removed,\n    addedCount: addedCount\n  };\n}\n\nconst EDIT_LEAVE = 0;\nconst EDIT_UPDATE = 1;\nconst EDIT_ADD = 2;\nconst EDIT_DELETE = 3;\n\n// Note: This function is *based* on the computation of the Levenshtein\n// \"edit\" distance. The one change is that \"updates\" are treated as two\n// edits - not one. With Array splices, an update is really a delete\n// followed by an add. By retaining this, we optimize for \"keeping\" the\n// maximum array items in the original array. For example:\n//\n//   'xxxx123' -> '123yyyy'\n//\n// With 1-edit updates, the shortest path would be just to update all seven\n// characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\n// leaves the substring '123' intact.\nfunction calcEditDistances(current, currentStart, currentEnd,\n                            old, oldStart, oldEnd) {\n  // \"Deletion\" columns\n  let rowCount = oldEnd - oldStart + 1;\n  let columnCount = currentEnd - currentStart + 1;\n  let distances = new Array(rowCount);\n\n  // \"Addition\" rows. Initialize null column.\n  for (let i = 0; i < rowCount; i++) {\n    distances[i] = new Array(columnCount);\n    distances[i][0] = i;\n  }\n\n  // Initialize null row\n  for (let j = 0; j < columnCount; j++)\n    distances[0][j] = j;\n\n  for (let i = 1; i < rowCount; i++) {\n    for (let j = 1; j < columnCount; j++) {\n      if (equals(current[currentStart + j - 1], old[oldStart + i - 1]))\n        distances[i][j] = distances[i - 1][j - 1];\n      else {\n        let north = distances[i - 1][j] + 1;\n        let west = distances[i][j - 1] + 1;\n        distances[i][j] = north < west ? north : west;\n      }\n    }\n  }\n\n  return distances;\n}\n\n// This starts at the final weight, and walks \"backward\" by finding\n// the minimum previous weight recursively until the origin of the weight\n// matrix.\nfunction spliceOperationsFromEditDistances(distances) {\n  let i = distances.length - 1;\n  let j = distances[0].length - 1;\n  let current = distances[i][j];\n  let edits = [];\n  while (i > 0 || j > 0) {\n    if (i == 0) {\n      edits.push(EDIT_ADD);\n      j--;\n      continue;\n    }\n    if (j == 0) {\n      edits.push(EDIT_DELETE);\n      i--;\n      continue;\n    }\n    let northWest = distances[i - 1][j - 1];\n    let west = distances[i - 1][j];\n    let north = distances[i][j - 1];\n\n    let min;\n    if (west < north)\n      min = west < northWest ? west : northWest;\n    else\n      min = north < northWest ? north : northWest;\n\n    if (min == northWest) {\n      if (northWest == current) {\n        edits.push(EDIT_LEAVE);\n      } else {\n        edits.push(EDIT_UPDATE);\n        current = northWest;\n      }\n      i--;\n      j--;\n    } else if (min == west) {\n      edits.push(EDIT_DELETE);\n      i--;\n      current = west;\n    } else {\n      edits.push(EDIT_ADD);\n      j--;\n      current = north;\n    }\n  }\n\n  edits.reverse();\n  return edits;\n}\n\n/**\n * Splice Projection functions:\n *\n * A splice map is a representation of how a previous array of items\n * was transformed into a new array of items. Conceptually it is a list of\n * tuples of\n *\n *   <index, removed, addedCount>\n *\n * which are kept in ascending index order of. The tuple represents that at\n * the |index|, |removed| sequence of items were removed, and counting forward\n * from |index|, |addedCount| items were added.\n */\n\n/**\n * Lacking individual splice mutation information, the minimal set of\n * splices can be synthesized given the previous state and final state of an\n * array. The basic approach is to calculate the edit distance matrix and\n * choose the shortest path through it.\n *\n * Complexity: O(l * p)\n *   l: The length of the current array\n *   p: The length of the old array\n *\n * @param {!Array} current The current \"changed\" array for which to\n * calculate splices.\n * @param {number} currentStart Starting index in the `current` array for\n * which splices are calculated.\n * @param {number} currentEnd Ending index in the `current` array for\n * which splices are calculated.\n * @param {!Array} old The original \"unchanged\" array to compare `current`\n * against to determine splices.\n * @param {number} oldStart Starting index in the `old` array for\n * which splices are calculated.\n * @param {number} oldEnd Ending index in the `old` array for\n * which splices are calculated.\n * @return {!Array} Returns an array of splice record objects. Each of these\n * contains: `index` the location where the splice occurred; `removed`\n * the array of removed items from this location; `addedCount` the number\n * of items added at this location.\n */\nfunction calcSplices(current, currentStart, currentEnd,\n                      old, oldStart, oldEnd) {\n  let prefixCount = 0;\n  let suffixCount = 0;\n  let splice;\n\n  let minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n  if (currentStart == 0 && oldStart == 0)\n    prefixCount = sharedPrefix(current, old, minLength);\n\n  if (currentEnd == current.length && oldEnd == old.length)\n    suffixCount = sharedSuffix(current, old, minLength - prefixCount);\n\n  currentStart += prefixCount;\n  oldStart += prefixCount;\n  currentEnd -= suffixCount;\n  oldEnd -= suffixCount;\n\n  if (currentEnd - currentStart == 0 && oldEnd - oldStart == 0)\n    return [];\n\n  if (currentStart == currentEnd) {\n    splice = newSplice(currentStart, [], 0);\n    while (oldStart < oldEnd)\n      splice.removed.push(old[oldStart++]);\n\n    return [ splice ];\n  } else if (oldStart == oldEnd)\n    return [ newSplice(currentStart, [], currentEnd - currentStart) ];\n\n  let ops = spliceOperationsFromEditDistances(\n      calcEditDistances(current, currentStart, currentEnd,\n                             old, oldStart, oldEnd));\n\n  splice = undefined;\n  let splices = [];\n  let index = currentStart;\n  let oldIndex = oldStart;\n  for (let i = 0; i < ops.length; i++) {\n    switch(ops[i]) {\n      case EDIT_LEAVE:\n        if (splice) {\n          splices.push(splice);\n          splice = undefined;\n        }\n\n        index++;\n        oldIndex++;\n        break;\n      case EDIT_UPDATE:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.addedCount++;\n        index++;\n\n        splice.removed.push(old[oldIndex]);\n        oldIndex++;\n        break;\n      case EDIT_ADD:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.addedCount++;\n        index++;\n        break;\n      case EDIT_DELETE:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.removed.push(old[oldIndex]);\n        oldIndex++;\n        break;\n    }\n  }\n\n  if (splice) {\n    splices.push(splice);\n  }\n  return splices;\n}\n\nfunction sharedPrefix(current, old, searchLength) {\n  for (let i = 0; i < searchLength; i++)\n    if (!equals(current[i], old[i]))\n      return i;\n  return searchLength;\n}\n\nfunction sharedSuffix(current, old, searchLength) {\n  let index1 = current.length;\n  let index2 = old.length;\n  let count = 0;\n  while (count < searchLength && equals(current[--index1], old[--index2]))\n    count++;\n\n  return count;\n}\n\n/**\n * Returns an array of splice records indicating the minimum edits required\n * to transform the `previous` array into the `current` array.\n *\n * Splice records are ordered by index and contain the following fields:\n * - `index`: index where edit started\n * - `removed`: array of removed items from this index\n * - `addedCount`: number of items added at this index\n *\n * This function is based on the Levenshtein \"minimum edit distance\"\n * algorithm. Note that updates are treated as removal followed by addition.\n *\n * The worst-case time complexity of this algorithm is `O(l * p)`\n *   l: The length of the current array\n *   p: The length of the previous array\n *\n * However, the worst-case complexity is reduced by an `O(n)` optimization\n * to detect any shared prefix & suffix between the two arrays and only\n * perform the more expensive minimum edit distance calculation over the\n * non-shared portions of the arrays.\n *\n * @function\n * @param {!Array} current The \"changed\" array for which splices will be\n * calculated.\n * @param {!Array} previous The \"unchanged\" original array to compare\n * `current` against to determine the splices.\n * @return {!Array} Returns an array of splice record objects. Each of these\n * contains: `index` the location where the splice occurred; `removed`\n * the array of removed items from this location; `addedCount` the number\n * of items added at this location.\n */\nexport function calculateSplices(current, previous) {\n  return calcSplices(current, 0, current.length, previous, 0,\n                          previous.length);\n}\n\nfunction equals(currentValue, previousValue) {\n  return currentValue === previousValue;\n}\n"
    },
    {
     "id": 71,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/elements/dom-repeat.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport { PolymerElement } from '../../polymer-element.js';\n\nimport { TemplateInstanceBase, templatize, modelForElement } from '../utils/templatize.js'; // eslint-disable-line no-unused-vars\nimport { Debouncer } from '../utils/debounce.js';\nimport { enqueueDebouncer, flush } from '../utils/flush.js';\nimport { OptionalMutableData } from '../mixins/mutable-data.js';\nimport { matches, translate } from '../utils/path.js';\nimport { timeOut, microTask } from '../utils/async.js';\nimport { wrap } from '../utils/wrap.js';\n\n/**\n * @constructor\n * @implements {Polymer_OptionalMutableData}\n * @extends {PolymerElement}\n * @private\n */\nconst domRepeatBase = OptionalMutableData(PolymerElement);\n\n/**\n * The `<dom-repeat>` element will automatically stamp and binds one instance\n * of template content to each object in a user-provided array.\n * `dom-repeat` accepts an `items` property, and one instance of the template\n * is stamped for each item into the DOM at the location of the `dom-repeat`\n * element.  The `item` property will be set on each instance's binding\n * scope, thus templates should bind to sub-properties of `item`.\n *\n * Example:\n *\n * ```html\n * <dom-module id=\"employee-list\">\n *\n *   <template>\n *\n *     <div> Employee list: </div>\n *     <dom-repeat items=\"{{employees}}\">\n *       <template>\n *         <div>First name: <span>{{item.first}}</span></div>\n *         <div>Last name: <span>{{item.last}}</span></div>\n *       </template>\n *     </dom-repeat>\n *\n *   </template>\n *\n * </dom-module>\n * ```\n *\n * With the following custom element definition:\n *\n * ```js\n * class EmployeeList extends PolymerElement {\n *   static get is() { return 'employee-list'; }\n *   static get properties() {\n *     return {\n *       employees: {\n *         value() {\n *           return [\n *             {first: 'Bob', last: 'Smith'},\n *             {first: 'Sally', last: 'Johnson'},\n *             ...\n *           ];\n *         }\n *       }\n *     };\n *   }\n * }\n * ```\n *\n * Notifications for changes to items sub-properties will be forwarded to template\n * instances, which will update via the normal structured data notification system.\n *\n * Mutations to the `items` array itself should be made using the Array\n * mutation API's on the PropertyEffects mixin (`push`, `pop`, `splice`,\n * `shift`, `unshift`), and template instances will be kept in sync with the\n * data in the array.\n *\n * Events caught by event handlers within the `dom-repeat` template will be\n * decorated with a `model` property, which represents the binding scope for\n * each template instance.  The model should be used to manipulate data on the\n * instance, for example `event.model.set('item.checked', true);`.\n *\n * Alternatively, the model for a template instance for an element stamped by\n * a `dom-repeat` can be obtained using the `modelForElement` API on the\n * `dom-repeat` that stamped it, for example\n * `this.$.domRepeat.modelForElement(event.target).set('item.checked', true);`.\n * This may be useful for manipulating instance data of event targets obtained\n * by event handlers on parents of the `dom-repeat` (event delegation).\n *\n * A view-specific filter/sort may be applied to each `dom-repeat` by supplying a\n * `filter` and/or `sort` property.  This may be a string that names a function on\n * the host, or a function may be assigned to the property directly.  The functions\n * should implemented following the standard `Array` filter/sort API.\n *\n * In order to re-run the filter or sort functions based on changes to sub-fields\n * of `items`, the `observe` property may be set as a space-separated list of\n * `item` sub-fields that should cause a re-filter/sort when modified.  If\n * the filter or sort function depends on properties not contained in `items`,\n * the user should observe changes to those properties and call `render` to update\n * the view based on the dependency change.\n *\n * For example, for an `dom-repeat` with a filter of the following:\n *\n * ```js\n * isEngineer(item) {\n *   return item.type == 'engineer' || item.manager.type == 'engineer';\n * }\n * ```\n *\n * Then the `observe` property should be configured as follows:\n *\n * ```html\n * <dom-repeat items=\"{{employees}}\" filter=\"isEngineer\" observe=\"type manager.type\">\n * ```\n *\n * @customElement\n * @polymer\n * @extends {domRepeatBase}\n * @appliesMixin OptionalMutableData\n * @summary Custom element for stamping instance of a template bound to\n *   items in an array.\n */\nexport class DomRepeat extends domRepeatBase {\n\n  // Not needed to find template; can be removed once the analyzer\n  // can find the tag name from customElements.define call\n  static get is() { return 'dom-repeat'; }\n\n  static get template() { return null; }\n\n  static get properties() {\n\n    /**\n     * Fired whenever DOM is added or removed by this template (by\n     * default, rendering occurs lazily).  To force immediate rendering, call\n     * `render`.\n     *\n     * @event dom-change\n     */\n    return {\n\n      /**\n       * An array containing items determining how many instances of the template\n       * to stamp and that that each template instance should bind to.\n       */\n      items: {\n        type: Array\n      },\n\n      /**\n       * The name of the variable to add to the binding scope for the array\n       * element associated with a given template instance.\n       */\n      as: {\n        type: String,\n        value: 'item'\n      },\n\n      /**\n       * The name of the variable to add to the binding scope with the index\n       * of the instance in the sorted and filtered list of rendered items.\n       * Note, for the index in the `this.items` array, use the value of the\n       * `itemsIndexAs` property.\n       */\n      indexAs: {\n        type: String,\n        value: 'index'\n      },\n\n      /**\n       * The name of the variable to add to the binding scope with the index\n       * of the instance in the `this.items` array. Note, for the index of\n       * this instance in the sorted and filtered list of rendered items,\n       * use the value of the `indexAs` property.\n       */\n      itemsIndexAs: {\n        type: String,\n        value: 'itemsIndex'\n      },\n\n      /**\n       * A function that should determine the sort order of the items.  This\n       * property should either be provided as a string, indicating a method\n       * name on the element's host, or else be an actual function.  The\n       * function should match the sort function passed to `Array.sort`.\n       * Using a sort function has no effect on the underlying `items` array.\n       */\n      sort: {\n        type: Function,\n        observer: '__sortChanged'\n      },\n\n      /**\n       * A function that can be used to filter items out of the view.  This\n       * property should either be provided as a string, indicating a method\n       * name on the element's host, or else be an actual function.  The\n       * function should match the sort function passed to `Array.filter`.\n       * Using a filter function has no effect on the underlying `items` array.\n       */\n      filter: {\n        type: Function,\n        observer: '__filterChanged'\n      },\n\n      /**\n       * When using a `filter` or `sort` function, the `observe` property\n       * should be set to a space-separated list of the names of item\n       * sub-fields that should trigger a re-sort or re-filter when changed.\n       * These should generally be fields of `item` that the sort or filter\n       * function depends on.\n       */\n      observe: {\n        type: String,\n        observer: '__observeChanged'\n      },\n\n      /**\n       * When using a `filter` or `sort` function, the `delay` property\n       * determines a debounce time in ms after a change to observed item\n       * properties that must pass before the filter or sort is re-run.\n       * This is useful in rate-limiting shuffling of the view when\n       * item changes may be frequent.\n       */\n      delay: Number,\n\n      /**\n       * Count of currently rendered items after `filter` (if any) has been applied.\n       * If \"chunking mode\" is enabled, `renderedItemCount` is updated each time a\n       * set of template instances is rendered.\n       *\n       */\n      renderedItemCount: {\n        type: Number,\n        notify: true,\n        readOnly: true\n      },\n\n      /**\n       * Defines an initial count of template instances to render after setting\n       * the `items` array, before the next paint, and puts the `dom-repeat`\n       * into \"chunking mode\".  The remaining items will be created and rendered\n       * incrementally at each animation frame therof until all instances have\n       * been rendered.\n       */\n      initialCount: {\n        type: Number,\n        observer: '__initializeChunking'\n      },\n\n      /**\n       * When `initialCount` is used, this property defines a frame rate (in\n       * fps) to target by throttling the number of instances rendered each\n       * frame to not exceed the budget for the target frame rate.  The\n       * framerate is effectively the number of `requestAnimationFrame`s that\n       * it tries to allow to actually fire in a given second. It does this\n       * by measuring the time between `rAF`s and continuously adjusting the\n       * number of items created each `rAF` to maintain the target framerate.\n       * Setting this to a higher number allows lower latency and higher\n       * throughput for event handlers and other tasks, but results in a\n       * longer time for the remaining items to complete rendering.\n       */\n      targetFramerate: {\n        type: Number,\n        value: 20\n      },\n\n      _targetFrameTime: {\n        type: Number,\n        computed: '__computeFrameTime(targetFramerate)'\n      }\n\n    };\n\n  }\n\n  static get observers() {\n    return [ '__itemsChanged(items.*)' ];\n  }\n\n  constructor() {\n    super();\n    this.__instances = [];\n    this.__limit = Infinity;\n    this.__pool = [];\n    this.__renderDebouncer = null;\n    this.__itemsIdxToInstIdx = {};\n    this.__chunkCount = null;\n    this.__lastChunkTime = null;\n    this.__sortFn = null;\n    this.__filterFn = null;\n    this.__observePaths = null;\n    /** @type {?function(new:Polymer.TemplateInstanceBase, *)} */\n    this.__ctor = null;\n    this.__isDetached = true;\n    this.template = null;\n  }\n\n  /**\n   * @override\n   * @return {void}\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__isDetached = true;\n    for (let i=0; i<this.__instances.length; i++) {\n      this.__detachInstance(i);\n    }\n  }\n\n  /**\n   * @override\n   * @return {void}\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.style.display = 'none';\n    // only perform attachment if the element was previously detached.\n    if (this.__isDetached) {\n      this.__isDetached = false;\n      let wrappedParent = wrap(wrap(this).parentNode);\n      for (let i=0; i<this.__instances.length; i++) {\n        this.__attachInstance(i, wrappedParent);\n      }\n    }\n  }\n\n  __ensureTemplatized() {\n    // Templatizing (generating the instance constructor) needs to wait\n    // until ready, since won't have its template content handed back to\n    // it until then\n    if (!this.__ctor) {\n      let template = this.template = /** @type {HTMLTemplateElement} */(this.querySelector('template'));\n      if (!template) {\n        // // Wait until childList changes and template should be there by then\n        let observer = new MutationObserver(() => {\n          if (this.querySelector('template')) {\n            observer.disconnect();\n            this.__render();\n          } else {\n            throw new Error('dom-repeat requires a <template> child');\n          }\n        });\n        observer.observe(this, {childList: true});\n        return false;\n      }\n      // Template instance props that should be excluded from forwarding\n      let instanceProps = {};\n      instanceProps[this.as] = true;\n      instanceProps[this.indexAs] = true;\n      instanceProps[this.itemsIndexAs] = true;\n      this.__ctor = templatize(template, this, {\n        mutableData: this.mutableData,\n        parentModel: true,\n        instanceProps: instanceProps,\n        /**\n         * @this {DomRepeat}\n         * @param {string} prop Property to set\n         * @param {*} value Value to set property to\n         */\n        forwardHostProp: function(prop, value) {\n          let i$ = this.__instances;\n          for (let i=0, inst; (i<i$.length) && (inst=i$[i]); i++) {\n            inst.forwardHostProp(prop, value);\n          }\n        },\n        /**\n         * @this {DomRepeat}\n         * @param {Object} inst Instance to notify\n         * @param {string} prop Property to notify\n         * @param {*} value Value to notify\n         */\n        notifyInstanceProp: function(inst, prop, value) {\n          if (matches(this.as, prop)) {\n            let idx = inst[this.itemsIndexAs];\n            if (prop == this.as) {\n              this.items[idx] = value;\n            }\n            let path = translate(this.as, `${JSCompiler_renameProperty('items', this)}.${idx}`, prop);\n            this.notifyPath(path, value);\n          }\n        }\n      });\n    }\n    return true;\n  }\n\n  __getMethodHost() {\n    // Technically this should be the owner of the outermost template.\n    // In shadow dom, this is always getRootNode().host, but we can\n    // approximate this via cooperation with our dataHost always setting\n    // `_methodHost` as long as there were bindings (or id's) on this\n    // instance causing it to get a dataHost.\n    return this.__dataHost._methodHost || this.__dataHost;\n  }\n\n  __functionFromPropertyValue(functionOrMethodName) {\n    if (typeof functionOrMethodName === 'string') {\n      let methodName = functionOrMethodName;\n      let obj = this.__getMethodHost();\n      return function() { return obj[methodName].apply(obj, arguments); };\n    }\n\n    return functionOrMethodName;\n  }\n\n  __sortChanged(sort) {\n    this.__sortFn = this.__functionFromPropertyValue(sort);\n    if (this.items) { this.__debounceRender(this.__render); }\n  }\n\n  __filterChanged(filter) {\n    this.__filterFn = this.__functionFromPropertyValue(filter);\n    if (this.items) { this.__debounceRender(this.__render); }\n  }\n\n  __computeFrameTime(rate) {\n    return Math.ceil(1000/rate);\n  }\n\n  __initializeChunking() {\n    if (this.initialCount) {\n      this.__limit = this.initialCount;\n      this.__chunkCount = this.initialCount;\n      this.__lastChunkTime = performance.now();\n    }\n  }\n\n  __tryRenderChunk() {\n    // Debounced so that multiple calls through `_render` between animation\n    // frames only queue one new rAF (e.g. array mutation & chunked render)\n    if (this.items && this.__limit < this.items.length) {\n      this.__debounceRender(this.__requestRenderChunk);\n    }\n  }\n\n  __requestRenderChunk() {\n    requestAnimationFrame(()=>this.__renderChunk());\n  }\n\n  __renderChunk() {\n    // Simple auto chunkSize throttling algorithm based on feedback loop:\n    // measure actual time between frames and scale chunk count by ratio\n    // of target/actual frame time\n    let currChunkTime = performance.now();\n    let ratio = this._targetFrameTime / (currChunkTime - this.__lastChunkTime);\n    this.__chunkCount = Math.round(this.__chunkCount * ratio) || 1;\n    this.__limit += this.__chunkCount;\n    this.__lastChunkTime = currChunkTime;\n    this.__debounceRender(this.__render);\n  }\n\n  __observeChanged() {\n    this.__observePaths = this.observe &&\n      this.observe.replace('.*', '.').split(' ');\n  }\n\n  __itemsChanged(change) {\n    if (this.items && !Array.isArray(this.items)) {\n      console.warn('dom-repeat expected array for `items`, found', this.items);\n    }\n    // If path was to an item (e.g. 'items.3' or 'items.3.foo'), forward the\n    // path to that instance synchronously (returns false for non-item paths)\n    if (!this.__handleItemPath(change.path, change.value)) {\n      // Otherwise, the array was reset ('items') or spliced ('items.splices'),\n      // so queue a full refresh\n      this.__initializeChunking();\n      this.__debounceRender(this.__render);\n    }\n  }\n\n  __handleObservedPaths(path) {\n    // Handle cases where path changes should cause a re-sort/filter\n    if (this.__sortFn || this.__filterFn) {\n      if (!path) {\n        // Always re-render if the item itself changed\n        this.__debounceRender(this.__render, this.delay);\n      } else if (this.__observePaths) {\n        // Otherwise, re-render if the path changed matches an observed path\n        let paths = this.__observePaths;\n        for (let i=0; i<paths.length; i++) {\n          if (path.indexOf(paths[i]) === 0) {\n            this.__debounceRender(this.__render, this.delay);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {function(this:DomRepeat)} fn Function to debounce.\n   * @param {number=} delay Delay in ms to debounce by.\n   */\n  __debounceRender(fn, delay = 0) {\n    this.__renderDebouncer = Debouncer.debounce(\n          this.__renderDebouncer\n        , delay > 0 ? timeOut.after(delay) : microTask\n        , fn.bind(this));\n    enqueueDebouncer(this.__renderDebouncer);\n  }\n\n  /**\n   * Forces the element to render its content. Normally rendering is\n   * asynchronous to a provoking change. This is done for efficiency so\n   * that multiple changes trigger only a single render. The render method\n   * should be called if, for example, template rendering is required to\n   * validate application state.\n   * @return {void}\n   */\n  render() {\n    // Queue this repeater, then flush all in order\n    this.__debounceRender(this.__render);\n    flush();\n  }\n\n  __render() {\n    if (!this.__ensureTemplatized()) {\n      // No template found yet\n      return;\n    }\n    this.__applyFullRefresh();\n    // Reset the pool\n    // TODO(kschaaf): Reuse pool across turns and nested templates\n    // Now that objects/arrays are re-evaluated when set, we can safely\n    // reuse pooled instances across turns, however we still need to decide\n    // semantics regarding how long to hold, how many to hold, etc.\n    this.__pool.length = 0;\n    // Set rendered item count\n    this._setRenderedItemCount(this.__instances.length);\n    // Notify users\n    this.dispatchEvent(new CustomEvent('dom-change', {\n      bubbles: true,\n      composed: true\n    }));\n    // Check to see if we need to render more items\n    this.__tryRenderChunk();\n  }\n\n  __applyFullRefresh() {\n    let items = this.items || [];\n    let isntIdxToItemsIdx = new Array(items.length);\n    for (let i=0; i<items.length; i++) {\n      isntIdxToItemsIdx[i] = i;\n    }\n    // Apply user filter\n    if (this.__filterFn) {\n      isntIdxToItemsIdx = isntIdxToItemsIdx.filter((i, idx, array) =>\n        this.__filterFn(items[i], idx, array));\n    }\n    // Apply user sort\n    if (this.__sortFn) {\n      isntIdxToItemsIdx.sort((a, b) => this.__sortFn(items[a], items[b]));\n    }\n    // items->inst map kept for item path forwarding\n    const itemsIdxToInstIdx = this.__itemsIdxToInstIdx = {};\n    let instIdx = 0;\n    // Generate instances and assign items\n    const limit = Math.min(isntIdxToItemsIdx.length, this.__limit);\n    for (; instIdx<limit; instIdx++) {\n      let inst = this.__instances[instIdx];\n      let itemIdx = isntIdxToItemsIdx[instIdx];\n      let item = items[itemIdx];\n      itemsIdxToInstIdx[itemIdx] = instIdx;\n      if (inst) {\n        inst._setPendingProperty(this.as, item);\n        inst._setPendingProperty(this.indexAs, instIdx);\n        inst._setPendingProperty(this.itemsIndexAs, itemIdx);\n        inst._flushProperties();\n      } else {\n        this.__insertInstance(item, instIdx, itemIdx);\n      }\n    }\n    // Remove any extra instances from previous state\n    for (let i=this.__instances.length-1; i>=instIdx; i--) {\n      this.__detachAndRemoveInstance(i);\n    }\n  }\n\n  __detachInstance(idx) {\n    let inst = this.__instances[idx];\n    const wrappedRoot = wrap(inst.root);\n    for (let i=0; i<inst.children.length; i++) {\n      let el = inst.children[i];\n      wrappedRoot.appendChild(el);\n    }\n    return inst;\n  }\n\n  __attachInstance(idx, parent) {\n    let inst = this.__instances[idx];\n    // Note, this is pre-wrapped as an optimization\n    parent.insertBefore(inst.root, this);\n  }\n\n  __detachAndRemoveInstance(idx) {\n    let inst = this.__detachInstance(idx);\n    if (inst) {\n      this.__pool.push(inst);\n    }\n    this.__instances.splice(idx, 1);\n  }\n\n  __stampInstance(item, instIdx, itemIdx) {\n    let model = {};\n    model[this.as] = item;\n    model[this.indexAs] = instIdx;\n    model[this.itemsIndexAs] = itemIdx;\n    return new this.__ctor(model);\n  }\n\n  __insertInstance(item, instIdx, itemIdx) {\n    let inst = this.__pool.pop();\n    if (inst) {\n      // TODO(kschaaf): If the pool is shared across turns, hostProps\n      // need to be re-set to reused instances in addition to item\n      inst._setPendingProperty(this.as, item);\n      inst._setPendingProperty(this.indexAs, instIdx);\n      inst._setPendingProperty(this.itemsIndexAs, itemIdx);\n      inst._flushProperties();\n    } else {\n      inst = this.__stampInstance(item, instIdx, itemIdx);\n    }\n    let beforeRow = this.__instances[instIdx + 1];\n    let beforeNode = beforeRow ? beforeRow.children[0] : this;\n    wrap(wrap(this).parentNode).insertBefore(inst.root, beforeNode);\n    this.__instances[instIdx] = inst;\n    return inst;\n  }\n\n  // Implements extension point from Templatize mixin\n  /**\n   * Shows or hides the template instance top level child elements. For\n   * text nodes, `textContent` is removed while \"hidden\" and replaced when\n   * \"shown.\"\n   * @param {boolean} hidden Set to true to hide the children;\n   * set to false to show them.\n   * @return {void}\n   * @protected\n   */\n  _showHideChildren(hidden) {\n    for (let i=0; i<this.__instances.length; i++) {\n      this.__instances[i]._showHideChildren(hidden);\n    }\n  }\n\n  // Called as a side effect of a host items.<key>.<path> path change,\n  // responsible for notifying item.<path> changes to inst for key\n  __handleItemPath(path, value) {\n    let itemsPath = path.slice(6); // 'items.'.length == 6\n    let dot = itemsPath.indexOf('.');\n    let itemsIdx = dot < 0 ? itemsPath : itemsPath.substring(0, dot);\n    // If path was index into array...\n    if (itemsIdx == parseInt(itemsIdx, 10)) {\n      let itemSubPath = dot < 0 ? '' : itemsPath.substring(dot+1);\n      // If the path is observed, it will trigger a full refresh\n      this.__handleObservedPaths(itemSubPath);\n      // Note, even if a rull refresh is triggered, always do the path\n      // notification because unless mutableData is used for dom-repeat\n      // and all elements in the instance subtree, a full refresh may\n      // not trigger the proper update.\n      let instIdx = this.__itemsIdxToInstIdx[itemsIdx];\n      let inst = this.__instances[instIdx];\n      if (inst) {\n        let itemPath = this.as + (itemSubPath ? '.' + itemSubPath : '');\n        // This is effectively `notifyPath`, but avoids some of the overhead\n        // of the public API\n        inst._setPendingPropertyOrPath(itemPath, value, false, true);\n        inst._flushProperties();\n      }\n      return true;\n    }\n  }\n\n  /**\n   * Returns the item associated with a given element stamped by\n   * this `dom-repeat`.\n   *\n   * Note, to modify sub-properties of the item,\n   * `modelForElement(el).set('item.<sub-prop>', value)`\n   * should be used.\n   *\n   * @param {!HTMLElement} el Element for which to return the item.\n   * @return {*} Item associated with the element.\n   */\n  itemForElement(el) {\n    let instance = this.modelForElement(el);\n    return instance && instance[this.as];\n  }\n\n  /**\n   * Returns the inst index for a given element stamped by this `dom-repeat`.\n   * If `sort` is provided, the index will reflect the sorted order (rather\n   * than the original array order).\n   *\n   * @param {!HTMLElement} el Element for which to return the index.\n   * @return {?number} Row index associated with the element (note this may\n   *   not correspond to the array index if a user `sort` is applied).\n   */\n  indexForElement(el) {\n    let instance = this.modelForElement(el);\n    return instance && instance[this.indexAs];\n  }\n\n  /**\n   * Returns the template \"model\" associated with a given element, which\n   * serves as the binding scope for the template instance the element is\n   * contained in. A template model\n   * should be used to manipulate data associated with this template instance.\n   *\n   * Example:\n   *\n   *   let model = modelForElement(el);\n   *   if (model.index < 10) {\n   *     model.set('item.checked', true);\n   *   }\n   *\n   * @param {!HTMLElement} el Element for which to return a template model.\n   * @return {TemplateInstanceBase} Model representing the binding scope for\n   *   the element.\n   */\n  modelForElement(el) {\n    return modelForElement(this.template, el);\n  }\n\n}\n\ncustomElements.define(DomRepeat.is, DomRepeat);\n"
    },
    {
     "id": 72,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-button@2.4.0/node_modules/@vaadin/vaadin-button/theme/lumo/vaadin-button-styles.js",
     "source": "import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-button\" theme-for=\"vaadin-button\">\n  <template>\n    <style>\n      :host {\n        /* Sizing */\n        --lumo-button-size: var(--lumo-size-m);\n        min-width: calc(var(--lumo-button-size) * 2);\n        height: var(--lumo-button-size);\n        padding: 0 calc(var(--lumo-button-size) / 3 + var(--lumo-border-radius) / 2);\n        margin: var(--lumo-space-xs) 0;\n        box-sizing: border-box;\n        /* Style */\n        font-family: var(--lumo-font-family);\n        font-size: var(--lumo-font-size-m);\n        font-weight: 500;\n        color: var(--_lumo-button-color, var(--lumo-primary-text-color));\n        background-color: var(--_lumo-button-background-color, var(--lumo-contrast-5pct));\n        border-radius: var(--lumo-border-radius);\n        cursor: default;\n        -webkit-tap-highlight-color: transparent;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n      }\n\n      /* Set only for the internal parts so we don’t affect the host vertical alignment */\n      [part=\"label\"],\n      [part=\"prefix\"],\n      [part=\"suffix\"] {\n        line-height: var(--lumo-line-height-xs);\n      }\n\n      [part=\"label\"] {\n        padding: calc(var(--lumo-button-size) / 6) 0;\n      }\n\n      :host([theme~=\"small\"]) {\n        font-size: var(--lumo-font-size-s);\n        --lumo-button-size: var(--lumo-size-s);\n      }\n\n      :host([theme~=\"large\"]) {\n        font-size: var(--lumo-font-size-l);\n        --lumo-button-size: var(--lumo-size-l);\n      }\n\n      /* This needs to be the last selector for it to take priority */\n      :host([disabled][disabled]) {\n        pointer-events: none;\n        color: var(--lumo-disabled-text-color);\n        background-color: var(--lumo-contrast-5pct);\n      }\n\n      /* For interaction states */\n      :host::before,\n      :host::after {\n        content: \"\";\n        /* We rely on the host always being relative */\n        position: absolute;\n        z-index: 1;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        background-color: currentColor;\n        border-radius: inherit;\n        opacity: 0;\n        transition: opacity 0.2s;\n        pointer-events: none;\n      }\n\n      /* Hover */\n\n      :host(:hover)::before {\n        opacity: 0.05;\n      }\n\n      /* Disable hover for touch devices */\n      @media (pointer: coarse) {\n        :host(:not([active]):hover)::before {\n          opacity: 0;\n        }\n      }\n\n      /* Active */\n\n      :host::after {\n        transition: opacity 1.4s, transform 0.1s;\n        filter: blur(8px);\n      }\n\n      :host([active])::before {\n        opacity: 0.1;\n        transition-duration: 0s;\n      }\n\n      :host([active])::after {\n        opacity: 0.1;\n        transition-duration: 0s, 0s;\n        transform: scale(0);\n      }\n\n      /* Keyboard focus */\n\n      :host([focus-ring]) {\n        box-shadow: 0 0 0 2px var(--lumo-primary-color-50pct);\n      }\n\n      /* Types (primary, tertiary, tertiary-inline */\n\n      :host([theme~=\"tertiary\"]),\n      :host([theme~=\"tertiary-inline\"]) {\n        background-color: transparent !important;\n        transition: opacity 0.2s;\n        min-width: 0;\n      }\n\n      :host([theme~=\"tertiary\"])::before,\n      :host([theme~=\"tertiary-inline\"])::before {\n        display: none;\n      }\n\n      :host([theme~=\"tertiary\"]) {\n        padding: 0 calc(var(--lumo-button-size) / 6);\n      }\n\n      @media (hover: hover) {\n        :host([theme*=\"tertiary\"]:not([active]):hover) {\n          opacity: 0.8;\n        }\n      }\n\n      :host([theme~=\"tertiary\"][active]),\n      :host([theme~=\"tertiary-inline\"][active]) {\n        opacity: 0.5;\n        transition-duration: 0s;\n      }\n\n      :host([theme~=\"tertiary-inline\"]) {\n        margin: 0;\n        height: auto;\n        padding: 0;\n        line-height: inherit;\n        font-size: inherit;\n      }\n\n      :host([theme~=\"tertiary-inline\"]) [part=\"label\"] {\n        padding: 0;\n        overflow: visible;\n        line-height: inherit;\n      }\n\n      :host([theme~=\"primary\"]) {\n        background-color: var(--_lumo-button-primary-background-color, var(--lumo-primary-color));\n        color: var(--_lumo-button-primary-color, var(--lumo-primary-contrast-color));\n        font-weight: 600;\n        min-width: calc(var(--lumo-button-size) * 2.5);\n      }\n\n      :host([theme~=\"primary\"][disabled]) {\n        background-color: var(--lumo-primary-color-50pct);\n        color: var(--lumo-primary-contrast-color);\n      }\n\n      :host([theme~=\"primary\"]:hover)::before {\n        opacity: 0.1;\n      }\n\n      :host([theme~=\"primary\"][active])::before {\n        background-color: var(--lumo-shade-20pct);\n      }\n\n      @media (pointer: coarse) {\n        :host([theme~=\"primary\"][active])::before {\n          background-color: var(--lumo-shade-60pct);\n        }\n\n        :host([theme~=\"primary\"]:not([active]):hover)::before {\n          opacity: 0;\n        }\n      }\n\n      :host([theme~=\"primary\"][active])::after {\n        opacity: 0.2;\n      }\n\n      /* Colors (success, error, contrast) */\n\n      :host([theme~=\"success\"]) {\n        color: var(--lumo-success-text-color);\n      }\n\n      :host([theme~=\"success\"][theme~=\"primary\"]) {\n        background-color: var(--lumo-success-color);\n        color: var(--lumo-success-contrast-color);\n      }\n\n      :host([theme~=\"success\"][theme~=\"primary\"][disabled]) {\n        background-color: var(--lumo-success-color-50pct);\n      }\n\n      :host([theme~=\"error\"]) {\n        color: var(--lumo-error-text-color);\n      }\n\n      :host([theme~=\"error\"][theme~=\"primary\"]) {\n        background-color: var(--lumo-error-color);\n        color: var(--lumo-error-contrast-color);\n      }\n\n      :host([theme~=\"error\"][theme~=\"primary\"][disabled]) {\n        background-color: var(--lumo-error-color-50pct);\n      }\n\n      :host([theme~=\"contrast\"]) {\n        color: var(--lumo-contrast);\n      }\n\n      :host([theme~=\"contrast\"][theme~=\"primary\"]) {\n        background-color: var(--lumo-contrast);\n        color: var(--lumo-base-color);\n      }\n\n      :host([theme~=\"contrast\"][theme~=\"primary\"][disabled]) {\n        background-color: var(--lumo-contrast-50pct);\n      }\n\n      /* Icons */\n\n      [part] ::slotted(iron-icon) {\n        display: inline-block;\n        width: var(--lumo-icon-size-m);\n        height: var(--lumo-icon-size-m);\n      }\n\n      /* Vaadin icons are based on a 16x16 grid (unlike Lumo and Material icons with 24x24), so they look too big by default */\n      [part] ::slotted(iron-icon[icon^=\"vaadin:\"]) {\n        padding: 0.25em;\n        box-sizing: border-box !important;\n      }\n\n      [part=\"prefix\"] {\n        margin-left: -0.25em;\n        margin-right: 0.25em;\n      }\n\n      [part=\"suffix\"] {\n        margin-left: 0.25em;\n        margin-right: -0.25em;\n      }\n\n      /* Icon-only */\n\n      :host([theme~=\"icon\"]:not([theme~=\"tertiary-inline\"])) {\n        min-width: var(--lumo-button-size);\n        padding-left: calc(var(--lumo-button-size) / 4);\n        padding-right: calc(var(--lumo-button-size) / 4);\n      }\n\n      :host([theme~=\"icon\"]) [part=\"prefix\"],\n      :host([theme~=\"icon\"]) [part=\"suffix\"] {\n        margin-left: 0;\n        margin-right: 0;\n      }\n\n      /* RTL specific styles */\n\n      :host([dir=\"rtl\"]) [part=\"prefix\"] {\n        margin-left: 0.25em;\n        margin-right: -0.25em;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"suffix\"] {\n        margin-left: -0.25em;\n        margin-right: 0.25em;\n      }\n\n      :host([dir=\"rtl\"][theme~=\"icon\"]) [part=\"prefix\"],\n      :host([dir=\"rtl\"][theme~=\"icon\"]) [part=\"suffix\"] {\n        margin-left: 0;\n        margin-right: 0;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
    },
    {
     "id": 73,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-checkbox@3.0.0/node_modules/@vaadin/vaadin-checkbox/theme/lumo/vaadin-checkbox.js",
     "source": "import './vaadin-checkbox-styles.js';\nimport '../../src/vaadin-checkbox.js';\n"
    },
    {
     "id": 74,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-lumo-styles@1.6.1/node_modules/@vaadin/vaadin-lumo-styles/mixins/overlay.js",
     "source": "import '../color.js';\nimport '../spacing.js';\nimport '../style.js';\nimport '../typography.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"lumo-overlay\">\n  <template>\n    <style>\n      :host {\n        top: var(--lumo-space-m);\n        right: var(--lumo-space-m);\n        bottom: var(--lumo-space-m);\n        left: var(--lumo-space-m);\n        /* Workaround for Edge issue (only on Surface), where an overflowing vaadin-list-box inside vaadin-select-overlay makes the overlay transparent */\n        /* stylelint-disable-next-line */\n        outline: 0px solid transparent;\n      }\n\n      [part=\"overlay\"] {\n        background-color: var(--lumo-base-color);\n        background-image: linear-gradient(var(--lumo-tint-5pct), var(--lumo-tint-5pct));\n        border-radius: var(--lumo-border-radius-m);\n        box-shadow: 0 0 0 1px var(--lumo-shade-5pct), var(--lumo-box-shadow-m);\n        color: var(--lumo-body-text-color);\n        font-family: var(--lumo-font-family);\n        font-size: var(--lumo-font-size-m);\n        font-weight: 400;\n        line-height: var(--lumo-line-height-m);\n        letter-spacing: 0;\n        text-transform: none;\n        -webkit-text-size-adjust: 100%;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n      }\n\n      [part=\"content\"] {\n        padding: var(--lumo-space-xs);\n      }\n\n      [part=\"backdrop\"] {\n        background-color: var(--lumo-shade-20pct);\n        animation: 0.2s lumo-overlay-backdrop-enter both;\n        will-change: opacity;\n      }\n\n      @keyframes lumo-overlay-backdrop-enter {\n        0% {\n          opacity: 0;\n        }\n      }\n\n      :host([closing]) [part=\"backdrop\"] {\n        animation: 0.2s lumo-overlay-backdrop-exit both;\n      }\n\n      @keyframes lumo-overlay-backdrop-exit {\n        100% {\n          opacity: 0;\n        }\n      }\n\n      @keyframes lumo-overlay-dummy-animation {\n        0% { opacity: 1; }\n        100% { opacity: 1; }\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
    },
    {
     "id": 75,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-item@3.0.0/node_modules/@vaadin/vaadin-item/src/vaadin-item.js",
     "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { DirMixin } from '@vaadin/vaadin-element-mixin/vaadin-dir-mixin.js';\nimport { ItemMixin } from './vaadin-item-mixin.js';\n\n/**\n * `<vaadin-item>` is a Web Component providing layout for items in tabs and menus.\n *\n * ```\n *   <vaadin-item>\n *     Item content\n *   </vaadin-item>\n * ```\n *\n * ### Selectable\n *\n * `<vaadin-item>` has the `selected` property and the corresponding state attribute.\n * Currently, the component sets the `selected` to false, when `disabled` property is set to true.\n * But other than that, the `<vaadin-item>` does not switch selection by itself.\n * In general, it is the wrapper component, like `<vaadin-list-box>`, which should update\n * the `selected` property on the items, e. g. on mousedown or when Enter / Spacebar is pressed.\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ---|---\n * `content` | The element that wraps the slot\n *\n * The following state attributes are available for styling:\n *\n * Attribute  | Description | Part name\n * -----------|-------------|------------\n * `disabled` | Set to a disabled item | :host\n * `focused` | Set when the element is focused | :host\n * `focus-ring` | Set when the element is keyboard focused | :host\n * `selected` | Set when the item is selected | :host\n * `active` | Set when mousedown or enter/spacebar pressed | :host\n *\n * @extends HTMLElement\n * @mixes ItemMixin\n * @mixes ThemableMixin\n * @mixes DirMixin\n */\nclass ItemElement extends ItemMixin(ThemableMixin(DirMixin(PolymerElement))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n      </style>\n      <div part=\"content\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-item';\n  }\n\n  static get version() {\n    return '3.0.0';\n  }\n\n  constructor() {\n    super();\n\n    /**\n     * Submittable string value. The default value is the trimmed text content of the element.\n     * @type {string}\n     */\n    this.value;\n  }\n}\n\ncustomElements.define(ItemElement.is, ItemElement);\n\nexport { ItemElement };\n"
    },
    {
     "id": 79,
     "name": "../node_modules/.pnpm/@polymer+iron-icon@3.0.1/node_modules/@polymer/iron-icon/iron-icon.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@polymer+iron-icon@3.0.1/node_modules/@polymer/iron-icon/iron-icon.js",
       "source": "/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\n\nimport {IronMeta} from '@polymer/iron-meta/iron-meta.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\nimport {Base} from '@polymer/polymer/polymer-legacy.js';\n\n/**\n\nThe `iron-icon` element displays an icon. By default an icon renders as a 24px\nsquare.\n\nExample using src:\n\n    <iron-icon src=\"star.png\"></iron-icon>\n\nExample setting size to 32px x 32px:\n\n    <iron-icon class=\"big\" src=\"big_star.png\"></iron-icon>\n\n    <style is=\"custom-style\">\n      .big {\n        --iron-icon-height: 32px;\n        --iron-icon-width: 32px;\n      }\n    </style>\n\nThe iron elements include several sets of icons. To use the default set of\nicons, import `iron-icons.js` and use the `icon` attribute to specify an icon:\n\n    <script type=\"module\">\n      import \"@polymer/iron-icons/iron-icons.js\";\n    </script>\n\n    <iron-icon icon=\"menu\"></iron-icon>\n\nTo use a different built-in set of icons, import the specific\n`iron-icons/<iconset>-icons.js`, and specify the icon as `<iconset>:<icon>`.\nFor example, to use a communication icon, you would use:\n\n    <script type=\"module\">\n      import \"@polymer/iron-icons/communication-icons.js\";\n    </script>\n\n    <iron-icon icon=\"communication:email\"></iron-icon>\n\nYou can also create custom icon sets of bitmap or SVG icons.\n\nExample of using an icon named `cherry` from a custom iconset with the ID\n`fruit`:\n\n    <iron-icon icon=\"fruit:cherry\"></iron-icon>\n\nSee `<iron-iconset>` and `<iron-iconset-svg>` for more information about how to\ncreate a custom iconset.\n\nSee the `iron-icons` demo to see the icons available in the various iconsets.\n\n### Styling\n\nThe following custom properties are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--iron-icon` | Mixin applied to the icon | {}\n`--iron-icon-width` | Width of the icon | `24px`\n`--iron-icon-height` | Height of the icon | `24px`\n`--iron-icon-fill-color` | Fill color of the svg icon | `currentcolor`\n`--iron-icon-stroke-color` | Stroke color of the svg icon | none\n\n@group Iron Elements\n@element iron-icon\n@demo demo/index.html\n@hero hero.svg\n@homepage polymer.github.io\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        @apply --layout-inline;\n        @apply --layout-center-center;\n        position: relative;\n\n        vertical-align: middle;\n\n        fill: var(--iron-icon-fill-color, currentcolor);\n        stroke: var(--iron-icon-stroke-color, none);\n\n        width: var(--iron-icon-width, 24px);\n        height: var(--iron-icon-height, 24px);\n        @apply --iron-icon;\n      }\n\n      :host([hidden]) {\n        display: none;\n      }\n    </style>\n`,\n\n  is: 'iron-icon',\n\n  properties: {\n\n    /**\n     * The name of the icon to use. The name should be of the form:\n     * `iconset_name:icon_name`.\n     */\n    icon: {type: String},\n\n    /**\n     * The name of the theme to used, if one is specified by the\n     * iconset.\n     */\n    theme: {type: String},\n\n    /**\n     * If using iron-icon without an iconset, you can set the src to be\n     * the URL of an individual icon image file. Note that this will take\n     * precedence over a given icon attribute.\n     */\n    src: {type: String},\n\n    /**\n     * @type {!IronMeta}\n     */\n    _meta: {value: Base.create('iron-meta', {type: 'iconset'})}\n\n  },\n\n  observers: [\n    '_updateIcon(_meta, isAttached)',\n    '_updateIcon(theme, isAttached)',\n    '_srcChanged(src, isAttached)',\n    '_iconChanged(icon, isAttached)'\n  ],\n\n  _DEFAULT_ICONSET: 'icons',\n\n  _iconChanged: function(icon) {\n    var parts = (icon || '').split(':');\n    this._iconName = parts.pop();\n    this._iconsetName = parts.pop() || this._DEFAULT_ICONSET;\n    this._updateIcon();\n  },\n\n  _srcChanged: function(src) {\n    this._updateIcon();\n  },\n\n  _usesIconset: function() {\n    return this.icon || !this.src;\n  },\n\n  /** @suppress {visibility} */\n  _updateIcon: function() {\n    if (this._usesIconset()) {\n      if (this._img && this._img.parentNode) {\n        dom(this.root).removeChild(this._img);\n      }\n      if (this._iconName === '') {\n        if (this._iconset) {\n          this._iconset.removeIcon(this);\n        }\n      } else if (this._iconsetName && this._meta) {\n        this._iconset = /** @type {?Polymer.Iconset} */ (\n            this._meta.byKey(this._iconsetName));\n        if (this._iconset) {\n          this._iconset.applyIcon(this, this._iconName, this.theme);\n          this.unlisten(window, 'iron-iconset-added', '_updateIcon');\n        } else {\n          this.listen(window, 'iron-iconset-added', '_updateIcon');\n        }\n      }\n    } else {\n      if (this._iconset) {\n        this._iconset.removeIcon(this);\n      }\n      if (!this._img) {\n        this._img = document.createElement('img');\n        this._img.style.width = '100%';\n        this._img.style.height = '100%';\n        this._img.draggable = false;\n      }\n      this._img.src = this.src;\n      dom(this.root).appendChild(this._img);\n    }\n  }\n});\n"
      },
      {
       "name": "../node_modules/.pnpm/@polymer+iron-flex-layout@3.0.1/node_modules/@polymer/iron-flex-layout/iron-flex-layout.js",
       "source": "/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\nThe `<iron-flex-layout>` component provides simple ways to use\n[CSS flexible box\nlayout](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes),\nalso known as flexbox. Note that this is an old element, that was written\nbefore all modern browsers had non-prefixed flex styles. As such, nowadays you\ndon't really need to use this element anymore, and can use CSS flex styles\ndirectly in your code.\n\nThis component provides two different ways to use flexbox:\n\n1. [Layout\nclasses](https://github.com/PolymerElements/iron-flex-layout/tree/master/iron-flex-layout-classes.html).\nThe layout class stylesheet provides a simple set of class-based flexbox rules,\nthat let you specify layout properties directly in markup. You must include this\nfile in every element that needs to use them.\n\n    Sample use:\n\n    ```\n    <custom-element-demo>\n      <template>\n        <script src=\"../webcomponentsjs/webcomponents-lite.js\"></script>\n        <next-code-block></next-code-block>\n      </template>\n    </custom-element-demo>\n    ```\n\n    ```js\n    import {html} from '@polymer/polymer/lib/utils/html-tag.js';\n    import '@polymer/iron-flex-layout/iron-flex-layout-classes.js';\n\n    const template = html`\n      <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\"></style>\n      <style>\n        .test { width: 100px; }\n      </style>\n      <div class=\"layout horizontal center-center\">\n        <div class=\"test\">horizontal layout center alignment</div>\n      </div>\n    `;\n    document.body.appendChild(template.content);\n    ```\n\n2. [Custom CSS\nmixins](https://github.com/PolymerElements/iron-flex-layout/blob/master/iron-flex-layout.html).\nThe mixin stylesheet includes custom CSS mixins that can be applied inside a CSS\nrule using the `@apply` function.\n\nPlease note that the old [/deep/ layout\nclasses](https://github.com/PolymerElements/iron-flex-layout/tree/master/classes)\nare deprecated, and should not be used. To continue using layout properties\ndirectly in markup, please switch to using the new `dom-module`-based\n[layout\nclasses](https://github.com/PolymerElements/iron-flex-layout/tree/master/iron-flex-layout-classes.html).\nPlease note that the new version does not use `/deep/`, and therefore requires\nyou to import the `dom-modules` in every element that needs to use them.\n\n@group Iron Elements\n@pseudoElement iron-flex-layout\n@demo demo/index.html\n*/\nconst template = html`\n<custom-style>\n  <style is=\"custom-style\">\n    [hidden] {\n      display: none !important;\n    }\n  </style>\n</custom-style>\n<custom-style>\n  <style is=\"custom-style\">\n    html {\n\n      --layout: {\n        display: -ms-flexbox;\n        display: -webkit-flex;\n        display: flex;\n      };\n\n      --layout-inline: {\n        display: -ms-inline-flexbox;\n        display: -webkit-inline-flex;\n        display: inline-flex;\n      };\n\n      --layout-horizontal: {\n        @apply --layout;\n\n        -ms-flex-direction: row;\n        -webkit-flex-direction: row;\n        flex-direction: row;\n      };\n\n      --layout-horizontal-reverse: {\n        @apply --layout;\n\n        -ms-flex-direction: row-reverse;\n        -webkit-flex-direction: row-reverse;\n        flex-direction: row-reverse;\n      };\n\n      --layout-vertical: {\n        @apply --layout;\n\n        -ms-flex-direction: column;\n        -webkit-flex-direction: column;\n        flex-direction: column;\n      };\n\n      --layout-vertical-reverse: {\n        @apply --layout;\n\n        -ms-flex-direction: column-reverse;\n        -webkit-flex-direction: column-reverse;\n        flex-direction: column-reverse;\n      };\n\n      --layout-wrap: {\n        -ms-flex-wrap: wrap;\n        -webkit-flex-wrap: wrap;\n        flex-wrap: wrap;\n      };\n\n      --layout-wrap-reverse: {\n        -ms-flex-wrap: wrap-reverse;\n        -webkit-flex-wrap: wrap-reverse;\n        flex-wrap: wrap-reverse;\n      };\n\n      --layout-flex-auto: {\n        -ms-flex: 1 1 auto;\n        -webkit-flex: 1 1 auto;\n        flex: 1 1 auto;\n      };\n\n      --layout-flex-none: {\n        -ms-flex: none;\n        -webkit-flex: none;\n        flex: none;\n      };\n\n      --layout-flex: {\n        -ms-flex: 1 1 0.000000001px;\n        -webkit-flex: 1;\n        flex: 1;\n        -webkit-flex-basis: 0.000000001px;\n        flex-basis: 0.000000001px;\n      };\n\n      --layout-flex-2: {\n        -ms-flex: 2;\n        -webkit-flex: 2;\n        flex: 2;\n      };\n\n      --layout-flex-3: {\n        -ms-flex: 3;\n        -webkit-flex: 3;\n        flex: 3;\n      };\n\n      --layout-flex-4: {\n        -ms-flex: 4;\n        -webkit-flex: 4;\n        flex: 4;\n      };\n\n      --layout-flex-5: {\n        -ms-flex: 5;\n        -webkit-flex: 5;\n        flex: 5;\n      };\n\n      --layout-flex-6: {\n        -ms-flex: 6;\n        -webkit-flex: 6;\n        flex: 6;\n      };\n\n      --layout-flex-7: {\n        -ms-flex: 7;\n        -webkit-flex: 7;\n        flex: 7;\n      };\n\n      --layout-flex-8: {\n        -ms-flex: 8;\n        -webkit-flex: 8;\n        flex: 8;\n      };\n\n      --layout-flex-9: {\n        -ms-flex: 9;\n        -webkit-flex: 9;\n        flex: 9;\n      };\n\n      --layout-flex-10: {\n        -ms-flex: 10;\n        -webkit-flex: 10;\n        flex: 10;\n      };\n\n      --layout-flex-11: {\n        -ms-flex: 11;\n        -webkit-flex: 11;\n        flex: 11;\n      };\n\n      --layout-flex-12: {\n        -ms-flex: 12;\n        -webkit-flex: 12;\n        flex: 12;\n      };\n\n      /* alignment in cross axis */\n\n      --layout-start: {\n        -ms-flex-align: start;\n        -webkit-align-items: flex-start;\n        align-items: flex-start;\n      };\n\n      --layout-center: {\n        -ms-flex-align: center;\n        -webkit-align-items: center;\n        align-items: center;\n      };\n\n      --layout-end: {\n        -ms-flex-align: end;\n        -webkit-align-items: flex-end;\n        align-items: flex-end;\n      };\n\n      --layout-baseline: {\n        -ms-flex-align: baseline;\n        -webkit-align-items: baseline;\n        align-items: baseline;\n      };\n\n      /* alignment in main axis */\n\n      --layout-start-justified: {\n        -ms-flex-pack: start;\n        -webkit-justify-content: flex-start;\n        justify-content: flex-start;\n      };\n\n      --layout-center-justified: {\n        -ms-flex-pack: center;\n        -webkit-justify-content: center;\n        justify-content: center;\n      };\n\n      --layout-end-justified: {\n        -ms-flex-pack: end;\n        -webkit-justify-content: flex-end;\n        justify-content: flex-end;\n      };\n\n      --layout-around-justified: {\n        -ms-flex-pack: distribute;\n        -webkit-justify-content: space-around;\n        justify-content: space-around;\n      };\n\n      --layout-justified: {\n        -ms-flex-pack: justify;\n        -webkit-justify-content: space-between;\n        justify-content: space-between;\n      };\n\n      --layout-center-center: {\n        @apply --layout-center;\n        @apply --layout-center-justified;\n      };\n\n      /* self alignment */\n\n      --layout-self-start: {\n        -ms-align-self: flex-start;\n        -webkit-align-self: flex-start;\n        align-self: flex-start;\n      };\n\n      --layout-self-center: {\n        -ms-align-self: center;\n        -webkit-align-self: center;\n        align-self: center;\n      };\n\n      --layout-self-end: {\n        -ms-align-self: flex-end;\n        -webkit-align-self: flex-end;\n        align-self: flex-end;\n      };\n\n      --layout-self-stretch: {\n        -ms-align-self: stretch;\n        -webkit-align-self: stretch;\n        align-self: stretch;\n      };\n\n      --layout-self-baseline: {\n        -ms-align-self: baseline;\n        -webkit-align-self: baseline;\n        align-self: baseline;\n      };\n\n      /* multi-line alignment in main axis */\n\n      --layout-start-aligned: {\n        -ms-flex-line-pack: start;  /* IE10 */\n        -ms-align-content: flex-start;\n        -webkit-align-content: flex-start;\n        align-content: flex-start;\n      };\n\n      --layout-end-aligned: {\n        -ms-flex-line-pack: end;  /* IE10 */\n        -ms-align-content: flex-end;\n        -webkit-align-content: flex-end;\n        align-content: flex-end;\n      };\n\n      --layout-center-aligned: {\n        -ms-flex-line-pack: center;  /* IE10 */\n        -ms-align-content: center;\n        -webkit-align-content: center;\n        align-content: center;\n      };\n\n      --layout-between-aligned: {\n        -ms-flex-line-pack: justify;  /* IE10 */\n        -ms-align-content: space-between;\n        -webkit-align-content: space-between;\n        align-content: space-between;\n      };\n\n      --layout-around-aligned: {\n        -ms-flex-line-pack: distribute;  /* IE10 */\n        -ms-align-content: space-around;\n        -webkit-align-content: space-around;\n        align-content: space-around;\n      };\n\n      /*******************************\n                Other Layout\n      *******************************/\n\n      --layout-block: {\n        display: block;\n      };\n\n      --layout-invisible: {\n        visibility: hidden !important;\n      };\n\n      --layout-relative: {\n        position: relative;\n      };\n\n      --layout-fit: {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n      };\n\n      --layout-scroll: {\n        -webkit-overflow-scrolling: touch;\n        overflow: auto;\n      };\n\n      --layout-fullbleed: {\n        margin: 0;\n        height: 100vh;\n      };\n\n      /* fixed position */\n\n      --layout-fixed-top: {\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n      };\n\n      --layout-fixed-right: {\n        position: fixed;\n        top: 0;\n        right: 0;\n        bottom: 0;\n      };\n\n      --layout-fixed-bottom: {\n        position: fixed;\n        right: 0;\n        bottom: 0;\n        left: 0;\n      };\n\n      --layout-fixed-left: {\n        position: fixed;\n        top: 0;\n        bottom: 0;\n        left: 0;\n      };\n\n    }\n  </style>\n</custom-style>`;\n\ntemplate.setAttribute('style', 'display: none;');\ndocument.head.appendChild(template.content);\n\nvar style = document.createElement('style');\nstyle.textContent = '[hidden] { display: none !important; }';\ndocument.head.appendChild(style);\n"
      }
     ]
    },
    {
     "id": 81,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-list-box@2.0.0/node_modules/@vaadin/vaadin-list-box/src/vaadin-list-box.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-list-box@2.0.0/node_modules/@vaadin/vaadin-list-box/src/vaadin-list-box.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { MultiSelectListMixin } from '@vaadin/vaadin-list-mixin/vaadin-multi-select-list-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\n\n/**\n * `<vaadin-list-box>` is a Web Component for creating menus.\n *\n * ```\n *   <vaadin-list-box selected=\"2\">\n *     <vaadin-item>Item 1</vaadin-item>\n *     <vaadin-item>Item 2</vaadin-item>\n *     <vaadin-item>Item 3</vaadin-item>\n *     <vaadin-item>Item 4</vaadin-item>\n *   </vaadin-list-box>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name         | Description\n * ------------------|------------------------\n * `items`           | The items container\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @fires {CustomEvent} items-changed - Fired when the `items` property changes.\n * @fires {CustomEvent} selected-changed - Fired when the `selected` property changes.\n * @fires {CustomEvent} selected-values-changed - Fired when the `selectedValues` property changes.\n *\n * @extends HTMLElement\n * @mixes MultiSelectListMixin\n * @mixes ThemableMixin\n * @mixes ElementMixin\n */\nclass ListBoxElement extends ElementMixin(MultiSelectListMixin(ThemableMixin(PolymerElement))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: flex;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        [part='items'] {\n          height: 100%;\n          width: 100%;\n          overflow-y: auto;\n          -webkit-overflow-scrolling: touch;\n        }\n      </style>\n      <div part=\"items\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-list-box';\n  }\n\n  static get version() {\n    return '2.0.0';\n  }\n\n  static get properties() {\n    return {\n      // We don't need to define this property since super default is vertical,\n      // but we don't want it to be modified, or be shown in the API docs.\n      /** @private */\n      orientation: {\n        readOnly: true\n      }\n    };\n  }\n\n  constructor() {\n    super();\n\n    /**\n     * @type {Element | null}\n     * @protected\n     */\n    this.focused;\n  }\n\n  ready() {\n    super.ready();\n    this.setAttribute('role', 'list');\n\n    setTimeout(this._checkImport.bind(this), 2000);\n  }\n\n  /**\n   * @return {!HTMLElement}\n   * @protected\n   */\n  get _scrollerElement() {\n    return this.shadowRoot.querySelector('[part=\"items\"]');\n  }\n\n  /** @private */\n  _checkImport() {\n    var item = this.querySelector('vaadin-item');\n    if (item && !(item instanceof PolymerElement)) {\n      console.warn(`Make sure you have imported the vaadin-item element.`);\n    }\n  }\n}\n\ncustomElements.define(ListBoxElement.is, ListBoxElement);\n\nexport { ListBoxElement };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-list-mixin@2.5.1/node_modules/@vaadin/vaadin-list-mixin/vaadin-multi-select-list-mixin.js",
       "source": "/**\n@license\nCopyright (c) 2019 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { ListMixin } from './vaadin-list-mixin.js';\n\n/**\n * A mixin for `nav` elements, facilitating multiple selection of childNodes.\n *\n * @polymerMixin\n * @mixes ListMixin\n */\nexport const MultiSelectListMixin = superClass => class VaadinMultiSelectListMixin extends ListMixin(superClass) {\n  static get properties() {\n    return {\n      /**\n       * Specifies that multiple options can be selected at once.\n       */\n      multiple: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        observer: '_multipleChanged'\n      },\n\n      /**\n       * Array of indexes of the items selected in the items array\n       * Note: Not updated when used in single selection mode.\n       * @type {string[] | null | undefined}\n       */\n      selectedValues: {\n        type: Array,\n        notify: true,\n        value: function() {\n          return [];\n        }\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      `_enhanceMultipleItems(items, multiple, selected, selectedValues, selectedValues.*)`\n    ];\n  }\n\n  /** @protected */\n  ready() {\n    // Should be attached before click listener in list-mixin\n    this.addEventListener('click', e => this._onMultipleClick(e));\n\n    super.ready();\n  }\n\n  /** @private */\n  _enhanceMultipleItems(items, multiple, selected, selectedValues) {\n    if (!items || !multiple) {\n      return;\n    }\n\n    if (selectedValues) {\n      const selectedItems = selectedValues.map(selectedId => items[selectedId]);\n      items.forEach(item => item.selected = selectedItems.indexOf(item) !== -1);\n    }\n\n    this._scrollToLastSelectedItem();\n  }\n\n  /** @private */\n  _scrollToLastSelectedItem() {\n    const lastSelectedItem = this.selectedValues.slice(-1)[0];\n    if (lastSelectedItem && !lastSelectedItem.disabled) {\n      this._scrollToItem(lastSelectedItem);\n    }\n  }\n\n  /**\n   * @param {!MouseEvent} event\n   * @protected\n   */\n  _onMultipleClick(event) {\n    const item = this._filterItems(event.composedPath())[0];\n    const idx = item && !item.disabled ? this.items.indexOf(item) : -1;\n    if (idx < 0 || !this.multiple) {\n      return;\n    }\n\n    event.preventDefault();\n    if (this.selectedValues.indexOf(idx) !== -1) {\n      this.selectedValues = this.selectedValues.filter(v => v !== idx);\n    } else {\n      this.selectedValues = this.selectedValues.concat(idx);\n    }\n  }\n\n  /** @private */\n  _multipleChanged(value, oldValue) {\n    // Changing from multiple to single selection, clear selection.\n    if (!value && oldValue) {\n      this.selectedValues = [];\n      this.items.forEach(item => item.selected = false);\n    }\n\n    // Changing from single to multiple selection, add selected to selectedValues.\n    if (value && !oldValue && this.selected !== undefined) {\n      this.push('selectedValues', this.selected);\n      this.selected = undefined;\n    }\n  }\n\n  /**\n   * Fired when the selection is changed.\n   * Not fired in single selection mode.\n   *\n   * @event selected-values-changed\n   * @param {Object} detail\n   * @param {Object} detail.value the array of indexes of the items selected in the items array.\n   */\n};\n"
      }
     ]
    },
    {
     "id": 82,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/mixins/property-effects.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/mixins/property-effects.js",
       "source": "/**\n * @fileoverview\n * @suppress {checkPrototypalTypes}\n * @license Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt The complete set of authors may be found\n * at http://polymer.github.io/AUTHORS.txt The complete set of contributors may\n * be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by\n * Google as part of the polymer project is also subject to an additional IP\n * rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport '../utils/boot.js';\nimport { wrap } from '../utils/wrap.js';\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { root, isAncestor, isDescendant, get, translate, isPath, set, normalize } from '../utils/path.js';\n/* for notify, reflect */\nimport { camelToDashCase, dashToCamelCase } from '../utils/case-map.js';\nimport { PropertyAccessors } from './property-accessors.js';\n/* for annotated effects */\nimport { TemplateStamp } from './template-stamp.js';\nimport { sanitizeDOMValue } from '../utils/settings.js';\n\n// Monotonically increasing unique ID used for de-duping effects triggered\n// from multiple properties in the same turn\nlet dedupeId = 0;\n\n/**\n * Property effect types; effects are stored on the prototype using these keys\n * @enum {string}\n */\nconst TYPES = {\n  COMPUTE: '__computeEffects',\n  REFLECT: '__reflectEffects',\n  NOTIFY: '__notifyEffects',\n  PROPAGATE: '__propagateEffects',\n  OBSERVE: '__observeEffects',\n  READ_ONLY: '__readOnly'\n};\n\n/** @const {!RegExp} */\nconst capitalAttributeRegex = /[A-Z]/;\n\n/**\n * @typedef {{\n * name: (string | undefined),\n * structured: (boolean | undefined),\n * wildcard: (boolean | undefined)\n * }}\n */\nlet DataTrigger; //eslint-disable-line no-unused-vars\n\n/**\n * @typedef {{\n * info: ?,\n * trigger: (!DataTrigger | undefined),\n * fn: (!Function | undefined)\n * }}\n */\nlet DataEffect; //eslint-disable-line no-unused-vars\n\n/**\n * Ensures that the model has an own-property map of effects for the given type.\n * The model may be a prototype or an instance.\n *\n * Property effects are stored as arrays of effects by property in a map,\n * by named type on the model. e.g.\n *\n *   __computeEffects: {\n *     foo: [ ... ],\n *     bar: [ ... ]\n *   }\n *\n * If the model does not yet have an effect map for the type, one is created\n * and returned.  If it does, but it is not an own property (i.e. the\n * prototype had effects), the the map is deeply cloned and the copy is\n * set on the model and returned, ready for new effects to be added.\n *\n * @param {Object} model Prototype or instance\n * @param {string} type Property effect type\n * @return {Object} The own-property map of effects for the given type\n * @private\n */\nfunction ensureOwnEffectMap(model, type) {\n  let effects = model[type];\n  if (!effects) {\n    effects = model[type] = {};\n  } else if (!model.hasOwnProperty(type)) {\n    effects = model[type] = Object.create(model[type]);\n    for (let p in effects) {\n      let protoFx = effects[p];\n      let instFx = effects[p] = Array(protoFx.length);\n      for (let i=0; i<protoFx.length; i++) {\n        instFx[i] = protoFx[i];\n      }\n    }\n  }\n  return effects;\n}\n\n// -- effects ----------------------------------------------\n\n/**\n * Runs all effects of a given type for the given set of property changes\n * on an instance.\n *\n * @param {!Polymer_PropertyEffects} inst The instance with effects to run\n * @param {?Object} effects Object map of property-to-Array of effects\n * @param {?Object} props Bag of current property changes\n * @param {?Object=} oldProps Bag of previous values for changed properties\n * @param {boolean=} hasPaths True with `props` contains one or more paths\n * @param {*=} extraArgs Additional metadata to pass to effect function\n * @return {boolean} True if an effect ran for this property\n * @private\n */\nfunction runEffects(inst, effects, props, oldProps, hasPaths, extraArgs) {\n  if (effects) {\n    let ran = false;\n    let id = dedupeId++;\n    for (let prop in props) {\n      if (runEffectsForProperty(\n              inst, /** @type {!Object} */ (effects), id, prop, props, oldProps,\n              hasPaths, extraArgs)) {\n        ran = true;\n      }\n    }\n    return ran;\n  }\n  return false;\n}\n\n/**\n * Runs a list of effects for a given property.\n *\n * @param {!Polymer_PropertyEffects} inst The instance with effects to run\n * @param {!Object} effects Object map of property-to-Array of effects\n * @param {number} dedupeId Counter used for de-duping effects\n * @param {string} prop Name of changed property\n * @param {*} props Changed properties\n * @param {*} oldProps Old properties\n * @param {boolean=} hasPaths True with `props` contains one or more paths\n * @param {*=} extraArgs Additional metadata to pass to effect function\n * @return {boolean} True if an effect ran for this property\n * @private\n */\nfunction runEffectsForProperty(inst, effects, dedupeId, prop, props, oldProps, hasPaths, extraArgs) {\n  let ran = false;\n  let rootProperty = hasPaths ? root(prop) : prop;\n  let fxs = effects[rootProperty];\n  if (fxs) {\n    for (let i=0, l=fxs.length, fx; (i<l) && (fx=fxs[i]); i++) {\n      if ((!fx.info || fx.info.lastRun !== dedupeId) &&\n          (!hasPaths || pathMatchesTrigger(prop, fx.trigger))) {\n        if (fx.info) {\n          fx.info.lastRun = dedupeId;\n        }\n        fx.fn(inst, prop, props, oldProps, fx.info, hasPaths, extraArgs);\n        ran = true;\n      }\n    }\n  }\n  return ran;\n}\n\n/**\n * Determines whether a property/path that has changed matches the trigger\n * criteria for an effect.  A trigger is a descriptor with the following\n * structure, which matches the descriptors returned from `parseArg`.\n * e.g. for `foo.bar.*`:\n * ```\n * trigger: {\n *   name: 'a.b',\n *   structured: true,\n *   wildcard: true\n * }\n * ```\n * If no trigger is given, the path is deemed to match.\n *\n * @param {string} path Path or property that changed\n * @param {?DataTrigger} trigger Descriptor\n * @return {boolean} Whether the path matched the trigger\n */\nfunction pathMatchesTrigger(path, trigger) {\n  if (trigger) {\n    let triggerPath = /** @type {string} */ (trigger.name);\n    return (triggerPath == path) ||\n        !!(trigger.structured && isAncestor(triggerPath, path)) ||\n        !!(trigger.wildcard && isDescendant(triggerPath, path));\n  } else {\n    return true;\n  }\n}\n\n/**\n * Implements the \"observer\" effect.\n *\n * Calls the method with `info.methodName` on the instance, passing the\n * new and old values.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @return {void}\n * @private\n */\nfunction runObserverEffect(inst, property, props, oldProps, info) {\n  let fn = typeof info.method === \"string\" ? inst[info.method] : info.method;\n  let changedProp = info.property;\n  if (fn) {\n    fn.call(inst, inst.__data[changedProp], oldProps[changedProp]);\n  } else if (!info.dynamicFn) {\n    console.warn('observer method `' + info.method + '` not defined');\n  }\n}\n\n/**\n * Runs \"notify\" effects for a set of changed properties.\n *\n * This method differs from the generic `runEffects` method in that it\n * will dispatch path notification events in the case that the property\n * changed was a path and the root property for that path didn't have a\n * \"notify\" effect.  This is to maintain 1.0 behavior that did not require\n * `notify: true` to ensure object sub-property notifications were\n * sent.\n *\n * @param {!Polymer_PropertyEffects} inst The instance with effects to run\n * @param {Object} notifyProps Bag of properties to notify\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @return {void}\n * @private\n */\nfunction runNotifyEffects(inst, notifyProps, props, oldProps, hasPaths) {\n  // Notify\n  let fxs = inst[TYPES.NOTIFY];\n  let notified;\n  let id = dedupeId++;\n  // Try normal notify effects; if none, fall back to try path notification\n  for (let prop in notifyProps) {\n    if (notifyProps[prop]) {\n      if (fxs && runEffectsForProperty(inst, fxs, id, prop, props, oldProps, hasPaths)) {\n        notified = true;\n      } else if (hasPaths && notifyPath(inst, prop, props)) {\n        notified = true;\n      }\n    }\n  }\n  // Flush host if we actually notified and host was batching\n  // And the host has already initialized clients; this prevents\n  // an issue with a host observing data changes before clients are ready.\n  let host;\n  if (notified && (host = inst.__dataHost) && host._invalidateProperties) {\n    host._invalidateProperties();\n  }\n}\n\n/**\n * Dispatches {property}-changed events with path information in the detail\n * object to indicate a sub-path of the property was changed.\n *\n * @param {!Polymer_PropertyEffects} inst The element from which to fire the\n *     event\n * @param {string} path The path that was changed\n * @param {Object} props Bag of current property changes\n * @return {boolean} Returns true if the path was notified\n * @private\n */\nfunction notifyPath(inst, path, props) {\n  let rootProperty = root(path);\n  if (rootProperty !== path) {\n    let eventName = camelToDashCase(rootProperty) + '-changed';\n    dispatchNotifyEvent(inst, eventName, props[path], path);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Dispatches {property}-changed events to indicate a property (or path)\n * changed.\n *\n * @param {!Polymer_PropertyEffects} inst The element from which to fire the\n *     event\n * @param {string} eventName The name of the event to send\n *     ('{property}-changed')\n * @param {*} value The value of the changed property\n * @param {string | null | undefined} path If a sub-path of this property\n *     changed, the path that changed (optional).\n * @return {void}\n * @private\n * @suppress {invalidCasts}\n */\nfunction dispatchNotifyEvent(inst, eventName, value, path) {\n  let detail = {\n    value: value,\n    queueProperty: true\n  };\n  if (path) {\n    detail.path = path;\n  }\n  wrap(/** @type {!HTMLElement} */(inst)).dispatchEvent(new CustomEvent(eventName, { detail }));\n}\n\n/**\n * Implements the \"notify\" effect.\n *\n * Dispatches a non-bubbling event named `info.eventName` on the instance\n * with a detail object containing the new `value`.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @return {void}\n * @private\n */\nfunction runNotifyEffect(inst, property, props, oldProps, info, hasPaths) {\n  let rootProperty = hasPaths ? root(property) : property;\n  let path = rootProperty != property ? property : null;\n  let value = path ? get(inst, path) : inst.__data[property];\n  if (path && value === undefined) {\n    value = props[property];  // specifically for .splices\n  }\n  dispatchNotifyEvent(inst, info.eventName, value, path);\n}\n\n/**\n * Handler function for 2-way notification events. Receives context\n * information captured in the `addNotifyListener` closure from the\n * `__notifyListeners` metadata.\n *\n * Sets the value of the notified property to the host property or path.  If\n * the event contained path information, translate that path to the host\n * scope's name for that path first.\n *\n * @param {CustomEvent} event Notification event (e.g. '<property>-changed')\n * @param {!Polymer_PropertyEffects} inst Host element instance handling the\n *     notification event\n * @param {string} fromProp Child element property that was bound\n * @param {string} toPath Host property/path that was bound\n * @param {boolean} negate Whether the binding was negated\n * @return {void}\n * @private\n */\nfunction handleNotification(event, inst, fromProp, toPath, negate) {\n  let value;\n  let detail = /** @type {Object} */(event.detail);\n  let fromPath = detail && detail.path;\n  if (fromPath) {\n    toPath = translate(fromProp, toPath, fromPath);\n    value = detail && detail.value;\n  } else {\n    value = event.currentTarget[fromProp];\n  }\n  value = negate ? !value : value;\n  if (!inst[TYPES.READ_ONLY] || !inst[TYPES.READ_ONLY][toPath]) {\n    if (inst._setPendingPropertyOrPath(toPath, value, true, Boolean(fromPath))\n      && (!detail || !detail.queueProperty)) {\n      inst._invalidateProperties();\n    }\n  }\n}\n\n/**\n * Implements the \"reflect\" effect.\n *\n * Sets the attribute named `info.attrName` to the given property value.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @return {void}\n * @private\n */\nfunction runReflectEffect(inst, property, props, oldProps, info) {\n  let value = inst.__data[property];\n  if (sanitizeDOMValue) {\n    value = sanitizeDOMValue(value, info.attrName, 'attribute', /** @type {Node} */(inst));\n  }\n  inst._propertyToAttribute(property, info.attrName, value);\n}\n\n/**\n * Runs \"computed\" effects for a set of changed properties.\n *\n * This method differs from the generic `runEffects` method in that it\n * continues to run computed effects based on the output of each pass until\n * there are no more newly computed properties.  This ensures that all\n * properties that will be computed by the initial set of changes are\n * computed before other effects (binding propagation, observers, and notify)\n * run.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {?Object} changedProps Bag of changed properties\n * @param {?Object} oldProps Bag of previous values for changed properties\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @return {void}\n * @private\n */\nfunction runComputedEffects(inst, changedProps, oldProps, hasPaths) {\n  let computeEffects = inst[TYPES.COMPUTE];\n  if (computeEffects) {\n    let inputProps = changedProps;\n    while (runEffects(inst, computeEffects, inputProps, oldProps, hasPaths)) {\n      Object.assign(/** @type {!Object} */ (oldProps), inst.__dataOld);\n      Object.assign(/** @type {!Object} */ (changedProps), inst.__dataPending);\n      inputProps = inst.__dataPending;\n      inst.__dataPending = null;\n    }\n  }\n}\n\n/**\n * Implements the \"computed property\" effect by running the method with the\n * values of the arguments specified in the `info` object and setting the\n * return value to the computed property specified.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {?Object} props Bag of current property changes\n * @param {?Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @return {void}\n * @private\n */\nfunction runComputedEffect(inst, property, props, oldProps, info) {\n  let result = runMethodEffect(inst, property, props, oldProps, info);\n  let computedProp = info.methodInfo;\n  if (inst.__dataHasAccessor && inst.__dataHasAccessor[computedProp]) {\n    inst._setPendingProperty(computedProp, result, true);\n  } else {\n    inst[computedProp] = result;\n  }\n}\n\n/**\n * Computes path changes based on path links set up using the `linkPaths`\n * API.\n *\n * @param {!Polymer_PropertyEffects} inst The instance whose props are changing\n * @param {string} path Path that has changed\n * @param {*} value Value of changed path\n * @return {void}\n * @private\n */\nfunction computeLinkedPaths(inst, path, value) {\n  let links = inst.__dataLinkedPaths;\n  if (links) {\n    let link;\n    for (let a in links) {\n      let b = links[a];\n      if (isDescendant(a, path)) {\n        link = translate(a, b, path);\n        inst._setPendingPropertyOrPath(link, value, true, true);\n      } else if (isDescendant(b, path)) {\n        link = translate(b, a, path);\n        inst._setPendingPropertyOrPath(link, value, true, true);\n      }\n    }\n  }\n}\n\n// -- bindings ----------------------------------------------\n\n/**\n * Adds binding metadata to the current `nodeInfo`, and binding effects\n * for all part dependencies to `templateInfo`.\n *\n * @param {Function} constructor Class that `_parseTemplate` is currently\n *   running on\n * @param {TemplateInfo} templateInfo Template metadata for current template\n * @param {NodeInfo} nodeInfo Node metadata for current template node\n * @param {string} kind Binding kind, either 'property', 'attribute', or 'text'\n * @param {string} target Target property name\n * @param {!Array<!BindingPart>} parts Array of binding part metadata\n * @param {string=} literal Literal text surrounding binding parts (specified\n *   only for 'property' bindings, since these must be initialized as part\n *   of boot-up)\n * @return {void}\n * @private\n */\nfunction addBinding(constructor, templateInfo, nodeInfo, kind, target, parts, literal) {\n  // Create binding metadata and add to nodeInfo\n  nodeInfo.bindings = nodeInfo.bindings || [];\n  let /** Binding */ binding = { kind, target, parts, literal, isCompound: (parts.length !== 1) };\n  nodeInfo.bindings.push(binding);\n  // Add listener info to binding metadata\n  if (shouldAddListener(binding)) {\n    let {event, negate} = binding.parts[0];\n    binding.listenerEvent = event || (camelToDashCase(target) + '-changed');\n    binding.listenerNegate = negate;\n  }\n  // Add \"propagate\" property effects to templateInfo\n  let index = templateInfo.nodeInfoList.length;\n  for (let i=0; i<binding.parts.length; i++) {\n    let part = binding.parts[i];\n    part.compoundIndex = i;\n    addEffectForBindingPart(constructor, templateInfo, binding, part, index);\n  }\n}\n\n/**\n * Adds property effects to the given `templateInfo` for the given binding\n * part.\n *\n * @param {Function} constructor Class that `_parseTemplate` is currently\n *   running on\n * @param {TemplateInfo} templateInfo Template metadata for current template\n * @param {!Binding} binding Binding metadata\n * @param {!BindingPart} part Binding part metadata\n * @param {number} index Index into `nodeInfoList` for this node\n * @return {void}\n */\nfunction addEffectForBindingPart(constructor, templateInfo, binding, part, index) {\n  if (!part.literal) {\n    if (binding.kind === 'attribute' && binding.target[0] === '-') {\n      console.warn('Cannot set attribute ' + binding.target +\n        ' because \"-\" is not a valid attribute starting character');\n    } else {\n      let dependencies = part.dependencies;\n      let info = { index, binding, part, evaluator: constructor };\n      for (let j=0; j<dependencies.length; j++) {\n        let trigger = dependencies[j];\n        if (typeof trigger == 'string') {\n          trigger = parseArg(trigger);\n          trigger.wildcard = true;\n        }\n        constructor._addTemplatePropertyEffect(templateInfo, trigger.rootProperty, {\n          fn: runBindingEffect,\n          info, trigger\n        });\n      }\n    }\n  }\n}\n\n/**\n * Implements the \"binding\" (property/path binding) effect.\n *\n * Note that binding syntax is overridable via `_parseBindings` and\n * `_evaluateBinding`.  This method will call `_evaluateBinding` for any\n * non-literal parts returned from `_parseBindings`.  However,\n * there is no support for _path_ bindings via custom binding parts,\n * as this is specific to Polymer's path binding syntax.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {string} path Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @param {Array} nodeList List of nodes associated with `nodeInfoList` template\n *   metadata\n * @return {void}\n * @private\n */\nfunction runBindingEffect(inst, path, props, oldProps, info, hasPaths, nodeList) {\n  let node = nodeList[info.index];\n  let binding = info.binding;\n  let part = info.part;\n  // Subpath notification: transform path and set to client\n  // e.g.: foo=\"{{obj.sub}}\", path: 'obj.sub.prop', set 'foo.prop'=obj.sub.prop\n  if (hasPaths && part.source && (path.length > part.source.length) &&\n      (binding.kind == 'property') && !binding.isCompound &&\n      node.__isPropertyEffectsClient &&\n      node.__dataHasAccessor && node.__dataHasAccessor[binding.target]) {\n    let value = props[path];\n    path = translate(part.source, binding.target, path);\n    if (node._setPendingPropertyOrPath(path, value, false, true)) {\n      inst._enqueueClient(node);\n    }\n  } else {\n    let value = info.evaluator._evaluateBinding(inst, part, path, props, oldProps, hasPaths);\n    // Propagate value to child\n    applyBindingValue(inst, node, binding, part, value);\n  }\n}\n\n/**\n * Sets the value for an \"binding\" (binding) effect to a node,\n * either as a property or attribute.\n *\n * @param {!Polymer_PropertyEffects} inst The instance owning the binding effect\n * @param {Node} node Target node for binding\n * @param {!Binding} binding Binding metadata\n * @param {!BindingPart} part Binding part metadata\n * @param {*} value Value to set\n * @return {void}\n * @private\n */\nfunction applyBindingValue(inst, node, binding, part, value) {\n  value = computeBindingValue(node, value, binding, part);\n  if (sanitizeDOMValue) {\n    value = sanitizeDOMValue(value, binding.target, binding.kind, node);\n  }\n  if (binding.kind == 'attribute') {\n    // Attribute binding\n    inst._valueToNodeAttribute(/** @type {Element} */(node), value, binding.target);\n  } else {\n    // Property binding\n    let prop = binding.target;\n    if (node.__isPropertyEffectsClient &&\n        node.__dataHasAccessor && node.__dataHasAccessor[prop]) {\n      if (!node[TYPES.READ_ONLY] || !node[TYPES.READ_ONLY][prop]) {\n        if (node._setPendingProperty(prop, value)) {\n          inst._enqueueClient(node);\n        }\n      }\n    } else  {\n      inst._setUnmanagedPropertyToNode(node, prop, value);\n    }\n  }\n}\n\n/**\n * Transforms an \"binding\" effect value based on compound & negation\n * effect metadata, as well as handling for special-case properties\n *\n * @param {Node} node Node the value will be set to\n * @param {*} value Value to set\n * @param {!Binding} binding Binding metadata\n * @param {!BindingPart} part Binding part metadata\n * @return {*} Transformed value to set\n * @private\n */\nfunction computeBindingValue(node, value, binding, part) {\n  if (binding.isCompound) {\n    let storage = node.__dataCompoundStorage[binding.target];\n    storage[part.compoundIndex] = value;\n    value = storage.join('');\n  }\n  if (binding.kind !== 'attribute') {\n    // Some browsers serialize `undefined` to `\"undefined\"`\n    if (binding.target === 'textContent' ||\n        (binding.target === 'value' &&\n          (node.localName === 'input' || node.localName === 'textarea'))) {\n      value = value == undefined ? '' : value;\n    }\n  }\n  return value;\n}\n\n/**\n * Returns true if a binding's metadata meets all the requirements to allow\n * 2-way binding, and therefore a `<property>-changed` event listener should be\n * added:\n * - used curly braces\n * - is a property (not attribute) binding\n * - is not a textContent binding\n * - is not compound\n *\n * @param {!Binding} binding Binding metadata\n * @return {boolean} True if 2-way listener should be added\n * @private\n */\nfunction shouldAddListener(binding) {\n  return Boolean(binding.target) &&\n         binding.kind != 'attribute' &&\n         binding.kind != 'text' &&\n         !binding.isCompound &&\n         binding.parts[0].mode === '{';\n}\n\n/**\n * Setup compound binding storage structures, notify listeners, and dataHost\n * references onto the bound nodeList.\n *\n * @param {!Polymer_PropertyEffects} inst Instance that bas been previously\n *     bound\n * @param {TemplateInfo} templateInfo Template metadata\n * @return {void}\n * @private\n */\nfunction setupBindings(inst, templateInfo) {\n  // Setup compound storage, dataHost, and notify listeners\n  let {nodeList, nodeInfoList} = templateInfo;\n  if (nodeInfoList.length) {\n    for (let i=0; i < nodeInfoList.length; i++) {\n      let info = nodeInfoList[i];\n      let node = nodeList[i];\n      let bindings = info.bindings;\n      if (bindings) {\n        for (let i=0; i<bindings.length; i++) {\n          let binding = bindings[i];\n          setupCompoundStorage(node, binding);\n          addNotifyListener(node, inst, binding);\n        }\n      }\n      node.__dataHost = inst;\n    }\n  }\n}\n\n/**\n * Initializes `__dataCompoundStorage` local storage on a bound node with\n * initial literal data for compound bindings, and sets the joined\n * literal parts to the bound property.\n *\n * When changes to compound parts occur, they are first set into the compound\n * storage array for that property, and then the array is joined to result in\n * the final value set to the property/attribute.\n *\n * @param {Node} node Bound node to initialize\n * @param {Binding} binding Binding metadata\n * @return {void}\n * @private\n */\nfunction setupCompoundStorage(node, binding) {\n  if (binding.isCompound) {\n    // Create compound storage map\n    let storage = node.__dataCompoundStorage ||\n      (node.__dataCompoundStorage = {});\n    let parts = binding.parts;\n    // Copy literals from parts into storage for this binding\n    let literals = new Array(parts.length);\n    for (let j=0; j<parts.length; j++) {\n      literals[j] = parts[j].literal;\n    }\n    let target = binding.target;\n    storage[target] = literals;\n    // Configure properties with their literal parts\n    if (binding.literal && binding.kind == 'property') {\n      node[target] = binding.literal;\n    }\n  }\n}\n\n/**\n * Adds a 2-way binding notification event listener to the node specified\n *\n * @param {Object} node Child element to add listener to\n * @param {!Polymer_PropertyEffects} inst Host element instance to handle\n *     notification event\n * @param {Binding} binding Binding metadata\n * @return {void}\n * @private\n */\nfunction addNotifyListener(node, inst, binding) {\n  if (binding.listenerEvent) {\n    let part = binding.parts[0];\n    node.addEventListener(binding.listenerEvent, function(e) {\n      handleNotification(e, inst, binding.target, part.source, part.negate);\n    });\n  }\n}\n\n// -- for method-based effects (complexObserver & computed) --------------\n\n/**\n * Adds property effects for each argument in the method signature (and\n * optionally, for the method name if `dynamic` is true) that calls the\n * provided effect function.\n *\n * @param {Element | Object} model Prototype or instance\n * @param {!MethodSignature} sig Method signature metadata\n * @param {string} type Type of property effect to add\n * @param {Function} effectFn Function to run when arguments change\n * @param {*=} methodInfo Effect-specific information to be included in\n *   method effect metadata\n * @param {boolean|Object=} dynamicFn Boolean or object map indicating whether\n *   method names should be included as a dependency to the effect. Note,\n *   defaults to true if the signature is static (sig.static is true).\n * @return {void}\n * @private\n */\nfunction createMethodEffect(model, sig, type, effectFn, methodInfo, dynamicFn) {\n  dynamicFn = sig.static || (dynamicFn &&\n    (typeof dynamicFn !== 'object' || dynamicFn[sig.methodName]));\n  let info = {\n    methodName: sig.methodName,\n    args: sig.args,\n    methodInfo,\n    dynamicFn\n  };\n  for (let i=0, arg; (i<sig.args.length) && (arg=sig.args[i]); i++) {\n    if (!arg.literal) {\n      model._addPropertyEffect(arg.rootProperty, type, {\n        fn: effectFn, info: info, trigger: arg\n      });\n    }\n  }\n  if (dynamicFn) {\n    model._addPropertyEffect(sig.methodName, type, {\n      fn: effectFn, info: info\n    });\n  }\n}\n\n/**\n * Calls a method with arguments marshaled from properties on the instance\n * based on the method signature contained in the effect metadata.\n *\n * Multi-property observers, computed properties, and inline computing\n * functions call this function to invoke the method, then use the return\n * value accordingly.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @return {*} Returns the return value from the method invocation\n * @private\n */\nfunction runMethodEffect(inst, property, props, oldProps, info) {\n  // Instances can optionally have a _methodHost which allows redirecting where\n  // to find methods. Currently used by `templatize`.\n  let context = inst._methodHost || inst;\n  let fn = context[info.methodName];\n  if (fn) {\n    let args = inst._marshalArgs(info.args, property, props);\n    return fn.apply(context, args);\n  } else if (!info.dynamicFn) {\n    console.warn('method `' + info.methodName + '` not defined');\n  }\n}\n\nconst emptyArray = [];\n\n// Regular expressions used for binding\nconst IDENT  = '(?:' + '[a-zA-Z_$][\\\\w.:$\\\\-*]*' + ')';\nconst NUMBER = '(?:' + '[-+]?[0-9]*\\\\.?[0-9]+(?:[eE][-+]?[0-9]+)?' + ')';\nconst SQUOTE_STRING = '(?:' + '\\'(?:[^\\'\\\\\\\\]|\\\\\\\\.)*\\'' + ')';\nconst DQUOTE_STRING = '(?:' + '\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"' + ')';\nconst STRING = '(?:' + SQUOTE_STRING + '|' + DQUOTE_STRING + ')';\nconst ARGUMENT = '(?:(' + IDENT + '|' + NUMBER + '|' +  STRING + ')\\\\s*' + ')';\nconst ARGUMENTS = '(?:' + ARGUMENT + '(?:,\\\\s*' + ARGUMENT + ')*' + ')';\nconst ARGUMENT_LIST = '(?:' + '\\\\(\\\\s*' +\n                              '(?:' + ARGUMENTS + '?' + ')' +\n                            '\\\\)\\\\s*' + ')';\nconst BINDING = '(' + IDENT + '\\\\s*' + ARGUMENT_LIST + '?' + ')'; // Group 3\nconst OPEN_BRACKET = '(\\\\[\\\\[|{{)' + '\\\\s*';\nconst CLOSE_BRACKET = '(?:]]|}})';\nconst NEGATE = '(?:(!)\\\\s*)?'; // Group 2\nconst EXPRESSION = OPEN_BRACKET + NEGATE + BINDING + CLOSE_BRACKET;\nconst bindingRegex = new RegExp(EXPRESSION, \"g\");\n\n/**\n * Create a string from binding parts of all the literal parts\n *\n * @param {!Array<BindingPart>} parts All parts to stringify\n * @return {string} String made from the literal parts\n */\nfunction literalFromParts(parts) {\n  let s = '';\n  for (let i=0; i<parts.length; i++) {\n    let literal = parts[i].literal;\n    s += literal || '';\n  }\n  return s;\n}\n\n/**\n * Parses an expression string for a method signature, and returns a metadata\n * describing the method in terms of `methodName`, `static` (whether all the\n * arguments are literals), and an array of `args`\n *\n * @param {string} expression The expression to parse\n * @return {?MethodSignature} The method metadata object if a method expression was\n *   found, otherwise `undefined`\n * @private\n */\nfunction parseMethod(expression) {\n  // tries to match valid javascript property names\n  let m = expression.match(/([^\\s]+?)\\(([\\s\\S]*)\\)/);\n  if (m) {\n    let methodName = m[1];\n    let sig = { methodName, static: true, args: emptyArray };\n    if (m[2].trim()) {\n      // replace escaped commas with comma entity, split on un-escaped commas\n      let args = m[2].replace(/\\\\,/g, '&comma;').split(',');\n      return parseArgs(args, sig);\n    } else {\n      return sig;\n    }\n  }\n  return null;\n}\n\n/**\n * Parses an array of arguments and sets the `args` property of the supplied\n * signature metadata object. Sets the `static` property to false if any\n * argument is a non-literal.\n *\n * @param {!Array<string>} argList Array of argument names\n * @param {!MethodSignature} sig Method signature metadata object\n * @return {!MethodSignature} The updated signature metadata object\n * @private\n */\nfunction parseArgs(argList, sig) {\n  sig.args = argList.map(function(rawArg) {\n    let arg = parseArg(rawArg);\n    if (!arg.literal) {\n      sig.static = false;\n    }\n    return arg;\n  }, this);\n  return sig;\n}\n\n/**\n * Parses an individual argument, and returns an argument metadata object\n * with the following fields:\n *\n *   {\n *     value: 'prop',        // property/path or literal value\n *     literal: false,       // whether argument is a literal\n *     structured: false,    // whether the property is a path\n *     rootProperty: 'prop', // the root property of the path\n *     wildcard: false       // whether the argument was a wildcard '.*' path\n *   }\n *\n * @param {string} rawArg The string value of the argument\n * @return {!MethodArg} Argument metadata object\n * @private\n */\nfunction parseArg(rawArg) {\n  // clean up whitespace\n  let arg = rawArg.trim()\n    // replace comma entity with comma\n    .replace(/&comma;/g, ',')\n    // repair extra escape sequences; note only commas strictly need\n    // escaping, but we allow any other char to be escaped since its\n    // likely users will do this\n    .replace(/\\\\(.)/g, '\\$1')\n    ;\n  // basic argument descriptor\n  let a = {\n    name: arg,\n    value: '',\n    literal: false\n  };\n  // detect literal value (must be String or Number)\n  let fc = arg[0];\n  if (fc === '-') {\n    fc = arg[1];\n  }\n  if (fc >= '0' && fc <= '9') {\n    fc = '#';\n  }\n  switch(fc) {\n    case \"'\":\n    case '\"':\n      a.value = arg.slice(1, -1);\n      a.literal = true;\n      break;\n    case '#':\n      a.value = Number(arg);\n      a.literal = true;\n      break;\n  }\n  // if not literal, look for structured path\n  if (!a.literal) {\n    a.rootProperty = root(arg);\n    // detect structured path (has dots)\n    a.structured = isPath(arg);\n    if (a.structured) {\n      a.wildcard = (arg.slice(-2) == '.*');\n      if (a.wildcard) {\n        a.name = arg.slice(0, -2);\n      }\n    }\n  }\n  return a;\n}\n\nfunction getArgValue(data, props, path) {\n  let value = get(data, path);\n  // when data is not stored e.g. `splices`, get the value from changedProps\n  // TODO(kschaaf): Note, this can cause a rare issue where the wildcard\n  // info.value could pull a stale value out of changedProps during a reentrant\n  // change that sets the value back to undefined.\n  // https://github.com/Polymer/polymer/issues/5479\n  if (value === undefined) {\n    value = props[path];\n  }\n  return value;\n}\n\n// data api\n\n/**\n * Sends array splice notifications (`.splices` and `.length`)\n *\n * Note: this implementation only accepts normalized paths\n *\n * @param {!Polymer_PropertyEffects} inst Instance to send notifications to\n * @param {Array} array The array the mutations occurred on\n * @param {string} path The path to the array that was mutated\n * @param {Array} splices Array of splice records\n * @return {void}\n * @private\n */\nfunction notifySplices(inst, array, path, splices) {\n  inst.notifyPath(path + '.splices', { indexSplices: splices });\n  inst.notifyPath(path + '.length', array.length);\n}\n\n/**\n * Creates a splice record and sends an array splice notification for\n * the described mutation\n *\n * Note: this implementation only accepts normalized paths\n *\n * @param {!Polymer_PropertyEffects} inst Instance to send notifications to\n * @param {Array} array The array the mutations occurred on\n * @param {string} path The path to the array that was mutated\n * @param {number} index Index at which the array mutation occurred\n * @param {number} addedCount Number of added items\n * @param {Array} removed Array of removed items\n * @return {void}\n * @private\n */\nfunction notifySplice(inst, array, path, index, addedCount, removed) {\n  notifySplices(inst, array, path, [{\n    index: index,\n    addedCount: addedCount,\n    removed: removed,\n    object: array,\n    type: 'splice'\n  }]);\n}\n\n/**\n * Returns an upper-cased version of the string.\n *\n * @param {string} name String to uppercase\n * @return {string} Uppercased string\n * @private\n */\nfunction upper(name) {\n  return name[0].toUpperCase() + name.substring(1);\n}\n\n/**\n * Element class mixin that provides meta-programming for Polymer's template\n * binding and data observation (collectively, \"property effects\") system.\n *\n * This mixin uses provides the following key static methods for adding\n * property effects to an element class:\n * - `addPropertyEffect`\n * - `createPropertyObserver`\n * - `createMethodObserver`\n * - `createNotifyingProperty`\n * - `createReadOnlyProperty`\n * - `createReflectedProperty`\n * - `createComputedProperty`\n * - `bindTemplate`\n *\n * Each method creates one or more property accessors, along with metadata\n * used by this mixin's implementation of `_propertiesChanged` to perform\n * the property effects.\n *\n * Underscored versions of the above methods also exist on the element\n * prototype for adding property effects on instances at runtime.\n *\n * Note that this mixin overrides several `PropertyAccessors` methods, in\n * many cases to maintain guarantees provided by the Polymer 1.x features;\n * notably it changes property accessors to be synchronous by default\n * whereas the default when using `PropertyAccessors` standalone is to be\n * async by default.\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin TemplateStamp\n * @appliesMixin PropertyAccessors\n * @summary Element class mixin that provides meta-programming for Polymer's\n * template binding and data observation system.\n */\nexport const PropertyEffects = dedupingMixin(superClass => {\n\n  /**\n   * @constructor\n   * @implements {Polymer_PropertyAccessors}\n   * @implements {Polymer_TemplateStamp}\n   * @unrestricted\n   * @private\n   */\n  const propertyEffectsBase = TemplateStamp(PropertyAccessors(superClass));\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_PropertyEffects}\n   * @extends {propertyEffectsBase}\n   * @unrestricted\n   */\n  class PropertyEffects extends propertyEffectsBase {\n\n    constructor() {\n      super();\n      /** @type {boolean} */\n      // Used to identify users of this mixin, ala instanceof\n      this.__isPropertyEffectsClient = true;\n      /** @type {number} */\n      // NOTE: used to track re-entrant calls to `_flushProperties`\n      // path changes dirty check against `__dataTemp` only during one \"turn\"\n      // and are cleared when `__dataCounter` returns to 0.\n      this.__dataCounter = 0;\n      /** @type {boolean} */\n      this.__dataClientsReady;\n      /** @type {Array} */\n      this.__dataPendingClients;\n      /** @type {Object} */\n      this.__dataToNotify;\n      /** @type {Object} */\n      this.__dataLinkedPaths;\n      /** @type {boolean} */\n      this.__dataHasPaths;\n      /** @type {Object} */\n      this.__dataCompoundStorage;\n      /** @type {Polymer_PropertyEffects} */\n      this.__dataHost;\n      /** @type {!Object} */\n      this.__dataTemp;\n      /** @type {boolean} */\n      this.__dataClientsInitialized;\n      /** @type {!Object} */\n      this.__data;\n      /** @type {!Object|null} */\n      this.__dataPending;\n      /** @type {!Object} */\n      this.__dataOld;\n      /** @type {Object} */\n      this.__computeEffects;\n      /** @type {Object} */\n      this.__reflectEffects;\n      /** @type {Object} */\n      this.__notifyEffects;\n      /** @type {Object} */\n      this.__propagateEffects;\n      /** @type {Object} */\n      this.__observeEffects;\n      /** @type {Object} */\n      this.__readOnly;\n      /** @type {!TemplateInfo} */\n      this.__templateInfo;\n    }\n\n    get PROPERTY_EFFECT_TYPES() {\n      return TYPES;\n    }\n\n    /**\n     * @override\n     * @return {void}\n     */\n    _initializeProperties() {\n      super._initializeProperties();\n      hostStack.registerHost(this);\n      this.__dataClientsReady = false;\n      this.__dataPendingClients = null;\n      this.__dataToNotify = null;\n      this.__dataLinkedPaths = null;\n      this.__dataHasPaths = false;\n      // May be set on instance prior to upgrade\n      this.__dataCompoundStorage = this.__dataCompoundStorage || null;\n      this.__dataHost = this.__dataHost || null;\n      this.__dataTemp = {};\n      this.__dataClientsInitialized = false;\n    }\n\n    /**\n     * Overrides `PropertyAccessors` implementation to provide a\n     * more efficient implementation of initializing properties from\n     * the prototype on the instance.\n     *\n     * @override\n     * @param {Object} props Properties to initialize on the prototype\n     * @return {void}\n     */\n    _initializeProtoProperties(props) {\n      this.__data = Object.create(props);\n      this.__dataPending = Object.create(props);\n      this.__dataOld = {};\n    }\n\n    /**\n     * Overrides `PropertyAccessors` implementation to avoid setting\n     * `_setProperty`'s `shouldNotify: true`.\n     *\n     * @override\n     * @param {Object} props Properties to initialize on the instance\n     * @return {void}\n     */\n    _initializeInstanceProperties(props) {\n      let readOnly = this[TYPES.READ_ONLY];\n      for (let prop in props) {\n        if (!readOnly || !readOnly[prop]) {\n          this.__dataPending = this.__dataPending || {};\n          this.__dataOld = this.__dataOld || {};\n          this.__data[prop] = this.__dataPending[prop] = props[prop];\n        }\n      }\n    }\n\n    // Prototype setup ----------------------------------------\n\n    /**\n     * Equivalent to static `addPropertyEffect` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} property Property that should trigger the effect\n     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @param {Object=} effect Effect metadata object\n     * @return {void}\n     * @protected\n     */\n    _addPropertyEffect(property, type, effect) {\n      this._createPropertyAccessor(property, type == TYPES.READ_ONLY);\n      // effects are accumulated into arrays per property based on type\n      let effects = ensureOwnEffectMap(this, type)[property];\n      if (!effects) {\n        effects = this[type][property] = [];\n      }\n      effects.push(effect);\n    }\n\n    /**\n     * Removes the given property effect.\n     *\n     * @override\n     * @param {string} property Property the effect was associated with\n     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @param {Object=} effect Effect metadata object to remove\n     * @return {void}\n     */\n    _removePropertyEffect(property, type, effect) {\n      let effects = ensureOwnEffectMap(this, type)[property];\n      let idx = effects.indexOf(effect);\n      if (idx >= 0) {\n        effects.splice(idx, 1);\n      }\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a property effect\n     * of a certain type.\n     *\n     * @override\n     * @param {string} property Property name\n     * @param {string=} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @return {boolean} True if the prototype/instance has an effect of this\n     *     type\n     * @protected\n     */\n    _hasPropertyEffect(property, type) {\n      let effects = this[type];\n      return Boolean(effects && effects[property]);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"read only\"\n     * accessor for the given property.\n     *\n     * @override\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this\n     *     type\n     * @protected\n     */\n    _hasReadOnlyEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.READ_ONLY);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"notify\"\n     * property effect for the given property.\n     *\n     * @override\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this\n     *     type\n     * @protected\n     */\n    _hasNotifyEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.NOTIFY);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"reflect to\n     * attribute\" property effect for the given property.\n     *\n     * @override\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this\n     *     type\n     * @protected\n     */\n    _hasReflectEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.REFLECT);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"computed\"\n     * property effect for the given property.\n     *\n     * @override\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this\n     *     type\n     * @protected\n     */\n    _hasComputedEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.COMPUTE);\n    }\n\n    // Runtime ----------------------------------------\n\n    /**\n     * Sets a pending property or path.  If the root property of the path in\n     * question had no accessor, the path is set, otherwise it is enqueued\n     * via `_setPendingProperty`.\n     *\n     * This function isolates relatively expensive functionality necessary\n     * for the public API (`set`, `setProperties`, `notifyPath`, and property\n     * change listeners via {{...}} bindings), such that it is only done\n     * when paths enter the system, and not at every propagation step.  It\n     * also sets a `__dataHasPaths` flag on the instance which is used to\n     * fast-path slower path-matching code in the property effects host paths.\n     *\n     * `path` can be a path string or array of path parts as accepted by the\n     * public API.\n     *\n     * @override\n     * @param {string | !Array<number|string>} path Path to set\n     * @param {*} value Value to set\n     * @param {boolean=} shouldNotify Set to true if this change should\n     *  cause a property notification event dispatch\n     * @param {boolean=} isPathNotification If the path being set is a path\n     *   notification of an already changed value, as opposed to a request\n     *   to set and notify the change.  In the latter `false` case, a dirty\n     *   check is performed and then the value is set to the path before\n     *   enqueuing the pending property change.\n     * @return {boolean} Returns true if the property/path was enqueued in\n     *   the pending changes bag.\n     * @protected\n     */\n    _setPendingPropertyOrPath(path, value, shouldNotify, isPathNotification) {\n      if (isPathNotification ||\n          root(Array.isArray(path) ? path[0] : path) !== path) {\n        // Dirty check changes being set to a path against the actual object,\n        // since this is the entry point for paths into the system; from here\n        // the only dirty checks are against the `__dataTemp` cache to prevent\n        // duplicate work in the same turn only. Note, if this was a notification\n        // of a change already set to a path (isPathNotification: true),\n        // we always let the change through and skip the `set` since it was\n        // already dirty checked at the point of entry and the underlying\n        // object has already been updated\n        if (!isPathNotification) {\n          let old = get(this, path);\n          path = /** @type {string} */ (set(this, path, value));\n          // Use property-accessor's simpler dirty check\n          if (!path || !super._shouldPropertyChange(path, value, old)) {\n            return false;\n          }\n        }\n        this.__dataHasPaths = true;\n        if (this._setPendingProperty(/**@type{string}*/(path), value, shouldNotify)) {\n          computeLinkedPaths(this, /**@type{string}*/ (path), value);\n          return true;\n        }\n      } else {\n        if (this.__dataHasAccessor && this.__dataHasAccessor[path]) {\n          return this._setPendingProperty(/**@type{string}*/(path), value, shouldNotify);\n        } else {\n          this[path] = value;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * Applies a value to a non-Polymer element/node's property.\n     *\n     * The implementation makes a best-effort at binding interop:\n     * Some native element properties have side-effects when\n     * re-setting the same value (e.g. setting `<input>.value` resets the\n     * cursor position), so we do a dirty-check before setting the value.\n     * However, for better interop with non-Polymer custom elements that\n     * accept objects, we explicitly re-set object changes coming from the\n     * Polymer world (which may include deep object changes without the\n     * top reference changing), erring on the side of providing more\n     * information.\n     *\n     * Users may override this method to provide alternate approaches.\n     *\n     * @override\n     * @param {!Node} node The node to set a property on\n     * @param {string} prop The property to set\n     * @param {*} value The value to set\n     * @return {void}\n     * @protected\n     */\n    _setUnmanagedPropertyToNode(node, prop, value) {\n      // It is a judgment call that resetting primitives is\n      // \"bad\" and resettings objects is also \"good\"; alternatively we could\n      // implement a whitelist of tag & property values that should never\n      // be reset (e.g. <input>.value && <select>.value)\n      if (value !== node[prop] || typeof value == 'object') {\n        node[prop] = value;\n      }\n    }\n\n    /**\n     * Overrides the `PropertiesChanged` implementation to introduce special\n     * dirty check logic depending on the property & value being set:\n     *\n     * 1. Any value set to a path (e.g. 'obj.prop': 42 or 'obj.prop': {...})\n     *    Stored in `__dataTemp`, dirty checked against `__dataTemp`\n     * 2. Object set to simple property (e.g. 'prop': {...})\n     *    Stored in `__dataTemp` and `__data`, dirty checked against\n     *    `__dataTemp` by default implementation of `_shouldPropertyChange`\n     * 3. Primitive value set to simple property (e.g. 'prop': 42)\n     *    Stored in `__data`, dirty checked against `__data`\n     *\n     * The dirty-check is important to prevent cycles due to two-way\n     * notification, but paths and objects are only dirty checked against any\n     * previous value set during this turn via a \"temporary cache\" that is\n     * cleared when the last `_propertiesChanged` exits. This is so:\n     * a. any cached array paths (e.g. 'array.3.prop') may be invalidated\n     *    due to array mutations like shift/unshift/splice; this is fine\n     *    since path changes are dirty-checked at user entry points like `set`\n     * b. dirty-checking for objects only lasts one turn to allow the user\n     *    to mutate the object in-place and re-set it with the same identity\n     *    and have all sub-properties re-propagated in a subsequent turn.\n     *\n     * The temp cache is not necessarily sufficient to prevent invalid array\n     * paths, since a splice can happen during the same turn (with pathological\n     * user code); we could introduce a \"fixup\" for temporarily cached array\n     * paths if needed: https://github.com/Polymer/polymer/issues/4227\n     *\n     * @override\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @param {boolean=} shouldNotify True if property should fire notification\n     *   event (applies only for `notify: true` properties)\n     * @return {boolean} Returns true if the property changed\n     */\n    _setPendingProperty(property, value, shouldNotify) {\n      let propIsPath = this.__dataHasPaths && isPath(property);\n      let prevProps = propIsPath ? this.__dataTemp : this.__data;\n      if (this._shouldPropertyChange(property, value, prevProps[property])) {\n        if (!this.__dataPending) {\n          this.__dataPending = {};\n          this.__dataOld = {};\n        }\n        // Ensure old is captured from the last turn\n        if (!(property in this.__dataOld)) {\n          this.__dataOld[property] = this.__data[property];\n        }\n        // Paths are stored in temporary cache (cleared at end of turn),\n        // which is used for dirty-checking, all others stored in __data\n        if (propIsPath) {\n          this.__dataTemp[property] = value;\n        } else {\n          this.__data[property] = value;\n        }\n        // All changes go into pending property bag, passed to _propertiesChanged\n        this.__dataPending[property] = value;\n        // Track properties that should notify separately\n        if (propIsPath || (this[TYPES.NOTIFY] && this[TYPES.NOTIFY][property])) {\n          this.__dataToNotify = this.__dataToNotify || {};\n          this.__dataToNotify[property] = shouldNotify;\n        }\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Overrides base implementation to ensure all accessors set `shouldNotify`\n     * to true, for per-property notification tracking.\n     *\n     * @override\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @return {void}\n     */\n    _setProperty(property, value) {\n      if (this._setPendingProperty(property, value, true)) {\n        this._invalidateProperties();\n      }\n    }\n\n    /**\n     * Overrides `PropertyAccessor`'s default async queuing of\n     * `_propertiesChanged`: if `__dataReady` is false (has not yet been\n     * manually flushed), the function no-ops; otherwise flushes\n     * `_propertiesChanged` synchronously.\n     *\n     * @override\n     * @return {void}\n     */\n    _invalidateProperties() {\n      if (this.__dataReady) {\n        this._flushProperties();\n      }\n    }\n\n    /**\n     * Enqueues the given client on a list of pending clients, whose\n     * pending property changes can later be flushed via a call to\n     * `_flushClients`.\n     *\n     * @override\n     * @param {Object} client PropertyEffects client to enqueue\n     * @return {void}\n     * @protected\n     */\n    _enqueueClient(client) {\n      this.__dataPendingClients = this.__dataPendingClients || [];\n      if (client !== this) {\n        this.__dataPendingClients.push(client);\n      }\n    }\n\n    /**\n     * Overrides superclass implementation.\n     *\n     * @override\n     * @return {void}\n     * @protected\n     */\n    _flushProperties() {\n      this.__dataCounter++;\n      super._flushProperties();\n      this.__dataCounter--;\n    }\n\n    /**\n     * Flushes any clients previously enqueued via `_enqueueClient`, causing\n     * their `_flushProperties` method to run.\n     *\n     * @override\n     * @return {void}\n     * @protected\n     */\n    _flushClients() {\n      if (!this.__dataClientsReady) {\n        this.__dataClientsReady = true;\n        this._readyClients();\n        // Override point where accessors are turned on; importantly,\n        // this is after clients have fully readied, providing a guarantee\n        // that any property effects occur only after all clients are ready.\n        this.__dataReady = true;\n      } else {\n        this.__enableOrFlushClients();\n      }\n    }\n\n    // NOTE: We ensure clients either enable or flush as appropriate. This\n    // handles two corner cases:\n    // (1) clients flush properly when connected/enabled before the host\n    // enables; e.g.\n    //   (a) Templatize stamps with no properties and does not flush and\n    //   (b) the instance is inserted into dom and\n    //   (c) then the instance flushes.\n    // (2) clients enable properly when not connected/enabled when the host\n    // flushes; e.g.\n    //   (a) a template is runtime stamped and not yet connected/enabled\n    //   (b) a host sets a property, causing stamped dom to flush\n    //   (c) the stamped dom enables.\n    __enableOrFlushClients() {\n      let clients = this.__dataPendingClients;\n      if (clients) {\n        this.__dataPendingClients = null;\n        for (let i=0; i < clients.length; i++) {\n          let client = clients[i];\n          if (!client.__dataEnabled) {\n            client._enableProperties();\n          } else if (client.__dataPending) {\n            client._flushProperties();\n          }\n        }\n      }\n    }\n\n    /**\n     * Perform any initial setup on client dom. Called before the first\n     * `_flushProperties` call on client dom and before any element\n     * observers are called.\n     *\n     * @override\n     * @return {void}\n     * @protected\n     */\n    _readyClients() {\n      this.__enableOrFlushClients();\n    }\n\n    /**\n     * Sets a bag of property changes to this instance, and\n     * synchronously processes all effects of the properties as a batch.\n     *\n     * Property names must be simple properties, not paths.  Batched\n     * path propagation is not supported.\n     *\n     * @override\n     * @param {Object} props Bag of one or more key-value pairs whose key is\n     *   a property and value is the new value to set for that property.\n     * @param {boolean=} setReadOnly When true, any private values set in\n     *   `props` will be set. By default, `setProperties` will not set\n     *   `readOnly: true` root properties.\n     * @return {void}\n     * @public\n     */\n    setProperties(props, setReadOnly) {\n      for (let path in props) {\n        if (setReadOnly || !this[TYPES.READ_ONLY] || !this[TYPES.READ_ONLY][path]) {\n          //TODO(kschaaf): explicitly disallow paths in setProperty?\n          // wildcard observers currently only pass the first changed path\n          // in the `info` object, and you could do some odd things batching\n          // paths, e.g. {'foo.bar': {...}, 'foo': null}\n          this._setPendingPropertyOrPath(path, props[path], true);\n        }\n      }\n      this._invalidateProperties();\n    }\n\n    /**\n     * Overrides `PropertyAccessors` so that property accessor\n     * side effects are not enabled until after client dom is fully ready.\n     * Also calls `_flushClients` callback to ensure client dom is enabled\n     * that was not enabled as a result of flushing properties.\n     *\n     * @override\n     * @return {void}\n     */\n    ready() {\n      // It is important that `super.ready()` is not called here as it\n      // immediately turns on accessors. Instead, we wait until `readyClients`\n      // to enable accessors to provide a guarantee that clients are ready\n      // before processing any accessors side effects.\n      this._flushProperties();\n      // If no data was pending, `_flushProperties` will not `flushClients`\n      // so ensure this is done.\n      if (!this.__dataClientsReady) {\n        this._flushClients();\n      }\n      // Before ready, client notifications do not trigger _flushProperties.\n      // Therefore a flush is necessary here if data has been set.\n      if (this.__dataPending) {\n        this._flushProperties();\n      }\n    }\n\n    /**\n     * Implements `PropertyAccessors`'s properties changed callback.\n     *\n     * Runs each class of effects for the batch of changed properties in\n     * a specific order (compute, propagate, reflect, observe, notify).\n     *\n     * @override\n     * @param {!Object} currentProps Bag of all current accessor values\n     * @param {?Object} changedProps Bag of properties changed since the last\n     *   call to `_propertiesChanged`\n     * @param {?Object} oldProps Bag of previous values for each property\n     *   in `changedProps`\n     * @return {void}\n     */\n    _propertiesChanged(currentProps, changedProps, oldProps) {\n      // ----------------------------\n      // let c = Object.getOwnPropertyNames(changedProps || {});\n      // window.debug && console.group(this.localName + '#' + this.id + ': ' + c);\n      // if (window.debug) { debugger; }\n      // ----------------------------\n      let hasPaths = this.__dataHasPaths;\n      this.__dataHasPaths = false;\n      // Compute properties\n      runComputedEffects(this, changedProps, oldProps, hasPaths);\n      // Clear notify properties prior to possible reentry (propagate, observe),\n      // but after computing effects have a chance to add to them\n      let notifyProps = this.__dataToNotify;\n      this.__dataToNotify = null;\n      // Propagate properties to clients\n      this._propagatePropertyChanges(changedProps, oldProps, hasPaths);\n      // Flush clients\n      this._flushClients();\n      // Reflect properties\n      runEffects(this, this[TYPES.REFLECT], changedProps, oldProps, hasPaths);\n      // Observe properties\n      runEffects(this, this[TYPES.OBSERVE], changedProps, oldProps, hasPaths);\n      // Notify properties to host\n      if (notifyProps) {\n        runNotifyEffects(this, notifyProps, changedProps, oldProps, hasPaths);\n      }\n      // Clear temporary cache at end of turn\n      if (this.__dataCounter == 1) {\n        this.__dataTemp = {};\n      }\n      // ----------------------------\n      // window.debug && console.groupEnd(this.localName + '#' + this.id + ': ' + c);\n      // ----------------------------\n    }\n\n    /**\n     * Called to propagate any property changes to stamped template nodes\n     * managed by this element.\n     *\n     * @override\n     * @param {Object} changedProps Bag of changed properties\n     * @param {Object} oldProps Bag of previous values for changed properties\n     * @param {boolean} hasPaths True with `props` contains one or more paths\n     * @return {void}\n     * @protected\n     */\n    _propagatePropertyChanges(changedProps, oldProps, hasPaths) {\n      if (this[TYPES.PROPAGATE]) {\n        runEffects(this, this[TYPES.PROPAGATE], changedProps, oldProps, hasPaths);\n      }\n      let templateInfo = this.__templateInfo;\n      while (templateInfo) {\n        runEffects(this, templateInfo.propertyEffects, changedProps, oldProps,\n          hasPaths, templateInfo.nodeList);\n        templateInfo = templateInfo.nextTemplateInfo;\n      }\n    }\n\n    /**\n     * Aliases one data path as another, such that path notifications from one\n     * are routed to the other.\n     *\n     * @override\n     * @param {string | !Array<string|number>} to Target path to link.\n     * @param {string | !Array<string|number>} from Source path to link.\n     * @return {void}\n     * @public\n     */\n    linkPaths(to, from) {\n      to = normalize(to);\n      from = normalize(from);\n      this.__dataLinkedPaths = this.__dataLinkedPaths || {};\n      this.__dataLinkedPaths[to] = from;\n    }\n\n    /**\n     * Removes a data path alias previously established with `_linkPaths`.\n     *\n     * Note, the path to unlink should be the target (`to`) used when\n     * linking the paths.\n     *\n     * @override\n     * @param {string | !Array<string|number>} path Target path to unlink.\n     * @return {void}\n     * @public\n     */\n    unlinkPaths(path) {\n      path = normalize(path);\n      if (this.__dataLinkedPaths) {\n        delete this.__dataLinkedPaths[path];\n      }\n    }\n\n    /**\n     * Notify that an array has changed.\n     *\n     * Example:\n     *\n     *     this.items = [ {name: 'Jim'}, {name: 'Todd'}, {name: 'Bill'} ];\n     *     ...\n     *     this.items.splice(1, 1, {name: 'Sam'});\n     *     this.items.push({name: 'Bob'});\n     *     this.notifySplices('items', [\n     *       { index: 1, removed: [{name: 'Todd'}], addedCount: 1,\n     *         object: this.items, type: 'splice' },\n     *       { index: 3, removed: [], addedCount: 1,\n     *         object: this.items, type: 'splice'}\n     *     ]);\n     *\n     * @param {string} path Path that should be notified.\n     * @param {Array} splices Array of splice records indicating ordered\n     *   changes that occurred to the array. Each record should have the\n     *   following fields:\n     *    * index: index at which the change occurred\n     *    * removed: array of items that were removed from this index\n     *    * addedCount: number of new items added at this index\n     *    * object: a reference to the array in question\n     *    * type: the string literal 'splice'\n     *\n     *   Note that splice records _must_ be normalized such that they are\n     *   reported in index order (raw results from `Object.observe` are not\n     *   ordered and must be normalized/merged before notifying).\n     *\n     * @override\n     * @return {void}\n     * @public\n     */\n    notifySplices(path, splices) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get(this, path, info));\n      notifySplices(this, array, info.path, splices);\n    }\n\n    /**\n     * Convenience method for reading a value from a path.\n     *\n     * Note, if any part in the path is undefined, this method returns\n     * `undefined` (this method does not throw when dereferencing undefined\n     * paths).\n     *\n     * @override\n     * @param {(string|!Array<(string|number)>)} path Path to the value\n     *   to read.  The path may be specified as a string (e.g. `foo.bar.baz`)\n     *   or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n     *   bracketed expressions are not supported; string-based path parts\n     *   *must* be separated by dots.  Note that when dereferencing array\n     *   indices, the index may be used as a dotted part directly\n     *   (e.g. `users.12.name` or `['users', 12, 'name']`).\n     * @param {Object=} root Root object from which the path is evaluated.\n     * @return {*} Value at the path, or `undefined` if any part of the path\n     *   is undefined.\n     * @public\n     */\n    get(path, root) {\n      return get(root || this, path);\n    }\n\n    /**\n     * Convenience method for setting a value to a path and notifying any\n     * elements bound to the same path.\n     *\n     * Note, if any part in the path except for the last is undefined,\n     * this method does nothing (this method does not throw when\n     * dereferencing undefined paths).\n     *\n     * @override\n     * @param {(string|!Array<(string|number)>)} path Path to the value\n     *   to write.  The path may be specified as a string (e.g. `'foo.bar.baz'`)\n     *   or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n     *   bracketed expressions are not supported; string-based path parts\n     *   *must* be separated by dots.  Note that when dereferencing array\n     *   indices, the index may be used as a dotted part directly\n     *   (e.g. `'users.12.name'` or `['users', 12, 'name']`).\n     * @param {*} value Value to set at the specified path.\n     * @param {Object=} root Root object from which the path is evaluated.\n     *   When specified, no notification will occur.\n     * @return {void}\n     * @public\n     */\n    set(path, value, root) {\n      if (root) {\n        set(root, path, value);\n      } else {\n        if (!this[TYPES.READ_ONLY] || !this[TYPES.READ_ONLY][/** @type {string} */(path)]) {\n          if (this._setPendingPropertyOrPath(path, value, true)) {\n            this._invalidateProperties();\n          }\n        }\n      }\n    }\n\n    /**\n     * Adds items onto the end of the array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.push`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @override\n     * @param {string | !Array<string|number>} path Path to array.\n     * @param {...*} items Items to push onto array\n     * @return {number} New length of the array.\n     * @public\n     */\n    push(path, ...items) {\n      let info = {path: ''};\n      let array = /** @type {Array}*/(get(this, path, info));\n      let len = array.length;\n      let ret = array.push(...items);\n      if (items.length) {\n        notifySplice(this, array, info.path, len, items.length, []);\n      }\n      return ret;\n    }\n\n    /**\n     * Removes an item from the end of array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.pop`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @override\n     * @param {string | !Array<string|number>} path Path to array.\n     * @return {*} Item that was removed.\n     * @public\n     */\n    pop(path) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get(this, path, info));\n      let hadLength = Boolean(array.length);\n      let ret = array.pop();\n      if (hadLength) {\n        notifySplice(this, array, info.path, array.length, 0, [ret]);\n      }\n      return ret;\n    }\n\n    /**\n     * Starting from the start index specified, removes 0 or more items\n     * from the array and inserts 0 or more new items in their place.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.splice`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @override\n     * @param {string | !Array<string|number>} path Path to array.\n     * @param {number} start Index from which to start removing/inserting.\n     * @param {number=} deleteCount Number of items to remove.\n     * @param {...*} items Items to insert into array.\n     * @return {Array} Array of removed items.\n     * @public\n     */\n    splice(path, start, deleteCount, ...items) {\n      let info = {path : ''};\n      let array = /** @type {Array} */(get(this, path, info));\n      // Normalize fancy native splice handling of crazy start values\n      if (start < 0) {\n        start = array.length - Math.floor(-start);\n      } else if (start) {\n        start = Math.floor(start);\n      }\n      // array.splice does different things based on the number of arguments\n      // you pass in. Therefore, array.splice(0) and array.splice(0, undefined)\n      // do different things. In the former, the whole array is cleared. In the\n      // latter, no items are removed.\n      // This means that we need to detect whether 1. one of the arguments\n      // is actually passed in and then 2. determine how many arguments\n      // we should pass on to the native array.splice\n      //\n      let ret;\n      // Omit any additional arguments if they were not passed in\n      if (arguments.length === 2) {\n        ret = array.splice(start);\n      // Either start was undefined and the others were defined, but in this\n      // case we can safely pass on all arguments\n      //\n      // Note: this includes the case where none of the arguments were passed in,\n      // e.g. this.splice('array'). However, if both start and deleteCount\n      // are undefined, array.splice will not modify the array (as expected)\n      } else {\n        ret = array.splice(start, deleteCount, ...items);\n      }\n      // At the end, check whether any items were passed in (e.g. insertions)\n      // or if the return array contains items (e.g. deletions).\n      // Only notify if items were added or deleted.\n      if (items.length || ret.length) {\n        notifySplice(this, array, info.path, start, items.length, ret);\n      }\n      return ret;\n    }\n\n    /**\n     * Removes an item from the beginning of array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.pop`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @override\n     * @param {string | !Array<string|number>} path Path to array.\n     * @return {*} Item that was removed.\n     * @public\n     */\n    shift(path) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get(this, path, info));\n      let hadLength = Boolean(array.length);\n      let ret = array.shift();\n      if (hadLength) {\n        notifySplice(this, array, info.path, 0, 0, [ret]);\n      }\n      return ret;\n    }\n\n    /**\n     * Adds items onto the beginning of the array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.push`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @override\n     * @param {string | !Array<string|number>} path Path to array.\n     * @param {...*} items Items to insert info array\n     * @return {number} New length of the array.\n     * @public\n     */\n    unshift(path, ...items) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get(this, path, info));\n      let ret = array.unshift(...items);\n      if (items.length) {\n        notifySplice(this, array, info.path, 0, items.length, []);\n      }\n      return ret;\n    }\n\n    /**\n     * Notify that a path has changed.\n     *\n     * Example:\n     *\n     *     this.item.user.name = 'Bob';\n     *     this.notifyPath('item.user.name');\n     *\n     * @override\n     * @param {string} path Path that should be notified.\n     * @param {*=} value Value at the path (optional).\n     * @return {void}\n     * @public\n     */\n    notifyPath(path, value) {\n      /** @type {string} */\n      let propPath;\n      if (arguments.length == 1) {\n        // Get value if not supplied\n        let info = {path: ''};\n        value = get(this, path, info);\n        propPath = info.path;\n      } else if (Array.isArray(path)) {\n        // Normalize path if needed\n        propPath = normalize(path);\n      } else {\n        propPath = /** @type{string} */(path);\n      }\n      if (this._setPendingPropertyOrPath(propPath, value, true, true)) {\n        this._invalidateProperties();\n      }\n    }\n\n    /**\n     * Equivalent to static `createReadOnlyProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} property Property name\n     * @param {boolean=} protectedSetter Creates a custom protected setter\n     *   when `true`.\n     * @return {void}\n     * @protected\n     */\n    _createReadOnlyProperty(property, protectedSetter) {\n      this._addPropertyEffect(property, TYPES.READ_ONLY);\n      if (protectedSetter) {\n        this['_set' + upper(property)] = /** @this {PropertyEffects} */function(value) {\n          this._setProperty(property, value);\n        };\n      }\n    }\n\n    /**\n     * Equivalent to static `createPropertyObserver` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} property Property name\n     * @param {string|function(*,*)} method Function or name of observer method\n     *     to call\n     * @param {boolean=} dynamicFn Whether the method name should be included as\n     *   a dependency to the effect.\n     * @return {void}\n     * @protected\n     */\n    _createPropertyObserver(property, method, dynamicFn) {\n      let info = { property, method, dynamicFn: Boolean(dynamicFn) };\n      this._addPropertyEffect(property, TYPES.OBSERVE, {\n        fn: runObserverEffect, info, trigger: {name: property}\n      });\n      if (dynamicFn) {\n        this._addPropertyEffect(/** @type {string} */(method), TYPES.OBSERVE, {\n          fn: runObserverEffect, info, trigger: {name: method}\n        });\n      }\n    }\n\n    /**\n     * Equivalent to static `createMethodObserver` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n     *   whether method names should be included as a dependency to the effect.\n     * @return {void}\n     * @protected\n     */\n    _createMethodObserver(expression, dynamicFn) {\n      let sig = parseMethod(expression);\n      if (!sig) {\n        throw new Error(\"Malformed observer expression '\" + expression + \"'\");\n      }\n      createMethodEffect(this, sig, TYPES.OBSERVE, runMethodEffect, null, dynamicFn);\n    }\n\n    /**\n     * Equivalent to static `createNotifyingProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} property Property name\n     * @return {void}\n     * @protected\n     */\n    _createNotifyingProperty(property) {\n      this._addPropertyEffect(property, TYPES.NOTIFY, {\n        fn: runNotifyEffect,\n        info: {\n          eventName: camelToDashCase(property) + '-changed',\n          property: property\n        }\n      });\n    }\n\n    /**\n     * Equivalent to static `createReflectedProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} property Property name\n     * @return {void}\n     * @protected\n     * @suppress {missingProperties} go/missingfnprops\n     */\n    _createReflectedProperty(property) {\n      let attr = this.constructor.attributeNameForProperty(property);\n      if (attr[0] === '-') {\n        console.warn('Property ' + property + ' cannot be reflected to attribute ' +\n          attr + ' because \"-\" is not a valid starting attribute name. Use a lowercase first letter for the property instead.');\n      } else {\n        this._addPropertyEffect(property, TYPES.REFLECT, {\n          fn: runReflectEffect,\n          info: {\n            attrName: attr\n          }\n        });\n      }\n    }\n\n    /**\n     * Equivalent to static `createComputedProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} property Name of computed property to set\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n     *   whether method names should be included as a dependency to the effect.\n     * @return {void}\n     * @protected\n     */\n    _createComputedProperty(property, expression, dynamicFn) {\n      let sig = parseMethod(expression);\n      if (!sig) {\n        throw new Error(\"Malformed computed expression '\" + expression + \"'\");\n      }\n      createMethodEffect(this, sig, TYPES.COMPUTE, runComputedEffect, property, dynamicFn);\n    }\n\n    /**\n     * Gather the argument values for a method specified in the provided array\n     * of argument metadata.\n     *\n     * The `path` and `value` arguments are used to fill in wildcard descriptor\n     * when the method is being called as a result of a path notification.\n     *\n     * @param {!Array<!MethodArg>} args Array of argument metadata\n     * @param {string} path Property/path name that triggered the method effect\n     * @param {Object} props Bag of current property changes\n     * @return {Array<*>} Array of argument values\n     * @private\n     */\n    _marshalArgs(args, path, props) {\n      const data = this.__data;\n      const values = [];\n      for (let i=0, l=args.length; i<l; i++) {\n        let {name, structured, wildcard, value, literal} = args[i];\n        if (!literal) {\n          if (wildcard) {\n            const matches = isDescendant(name, path);\n            const pathValue = getArgValue(data, props, matches ? path : name);\n            value = {\n              path: matches ? path : name,\n              value: pathValue,\n              base: matches ? get(data, name) : pathValue\n            };\n          } else {\n            value = structured ? getArgValue(data, props, name) : data[name];\n          }\n        }\n        values[i] = value;\n      }\n      return values;\n    }\n\n    // -- static class methods ------------\n\n    /**\n     * Ensures an accessor exists for the specified property, and adds\n     * to a list of \"property effects\" that will run when the accessor for\n     * the specified property is set.  Effects are grouped by \"type\", which\n     * roughly corresponds to a phase in effect processing.  The effect\n     * metadata should be in the following form:\n     *\n     *     {\n     *       fn: effectFunction, // Reference to function to call to perform effect\n     *       info: { ... }       // Effect metadata passed to function\n     *       trigger: {          // Optional triggering metadata; if not provided\n     *         name: string      // the property is treated as a wildcard\n     *         structured: boolean\n     *         wildcard: boolean\n     *       }\n     *     }\n     *\n     * Effects are called from `_propertiesChanged` in the following order by\n     * type:\n     *\n     * 1. COMPUTE\n     * 2. PROPAGATE\n     * 3. REFLECT\n     * 4. OBSERVE\n     * 5. NOTIFY\n     *\n     * Effect functions are called with the following signature:\n     *\n     *     effectFunction(inst, path, props, oldProps, info, hasPaths)\n     *\n     * @param {string} property Property that should trigger the effect\n     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @param {Object=} effect Effect metadata object\n     * @return {void}\n     * @protected\n     */\n    static addPropertyEffect(property, type, effect) {\n      this.prototype._addPropertyEffect(property, type, effect);\n    }\n\n    /**\n     * Creates a single-property observer for the given property.\n     *\n     * @param {string} property Property name\n     * @param {string|function(*,*)} method Function or name of observer method to call\n     * @param {boolean=} dynamicFn Whether the method name should be included as\n     *   a dependency to the effect.\n     * @return {void}\n     * @protected\n     */\n    static createPropertyObserver(property, method, dynamicFn) {\n      this.prototype._createPropertyObserver(property, method, dynamicFn);\n    }\n\n    /**\n     * Creates a multi-property \"method observer\" based on the provided\n     * expression, which should be a string in the form of a normal JavaScript\n     * function signature: `'methodName(arg1, [..., argn])'`.  Each argument\n     * should correspond to a property or path in the context of this\n     * prototype (or instance), or may be a literal string or number.\n     *\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n     * @return {void}\n     *   whether method names should be included as a dependency to the effect.\n     * @protected\n     */\n    static createMethodObserver(expression, dynamicFn) {\n      this.prototype._createMethodObserver(expression, dynamicFn);\n    }\n\n    /**\n     * Causes the setter for the given property to dispatch `<property>-changed`\n     * events to notify of changes to the property.\n     *\n     * @param {string} property Property name\n     * @return {void}\n     * @protected\n     */\n    static createNotifyingProperty(property) {\n      this.prototype._createNotifyingProperty(property);\n    }\n\n    /**\n     * Creates a read-only accessor for the given property.\n     *\n     * To set the property, use the protected `_setProperty` API.\n     * To create a custom protected setter (e.g. `_setMyProp()` for\n     * property `myProp`), pass `true` for `protectedSetter`.\n     *\n     * Note, if the property will have other property effects, this method\n     * should be called first, before adding other effects.\n     *\n     * @param {string} property Property name\n     * @param {boolean=} protectedSetter Creates a custom protected setter\n     *   when `true`.\n     * @return {void}\n     * @protected\n     */\n    static createReadOnlyProperty(property, protectedSetter) {\n      this.prototype._createReadOnlyProperty(property, protectedSetter);\n    }\n\n    /**\n     * Causes the setter for the given property to reflect the property value\n     * to a (dash-cased) attribute of the same name.\n     *\n     * @param {string} property Property name\n     * @return {void}\n     * @protected\n     */\n    static createReflectedProperty(property) {\n      this.prototype._createReflectedProperty(property);\n    }\n\n    /**\n     * Creates a computed property whose value is set to the result of the\n     * method described by the given `expression` each time one or more\n     * arguments to the method changes.  The expression should be a string\n     * in the form of a normal JavaScript function signature:\n     * `'methodName(arg1, [..., argn])'`\n     *\n     * @param {string} property Name of computed property to set\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating whether\n     *   method names should be included as a dependency to the effect.\n     * @return {void}\n     * @protected\n     */\n    static createComputedProperty(property, expression, dynamicFn) {\n      this.prototype._createComputedProperty(property, expression, dynamicFn);\n    }\n\n    /**\n     * Parses the provided template to ensure binding effects are created\n     * for them, and then ensures property accessors are created for any\n     * dependent properties in the template.  Binding effects for bound\n     * templates are stored in a linked list on the instance so that\n     * templates can be efficiently stamped and unstamped.\n     *\n     * @param {!HTMLTemplateElement} template Template containing binding\n     *   bindings\n     * @return {!TemplateInfo} Template metadata object\n     * @protected\n     */\n    static bindTemplate(template) {\n      return this.prototype._bindTemplate(template);\n    }\n\n    // -- binding ----------------------------------------------\n\n    /**\n     * Equivalent to static `bindTemplate` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * This method may be called on the prototype (for prototypical template\n     * binding, to avoid creating accessors every instance) once per prototype,\n     * and will be called with `runtimeBinding: true` by `_stampTemplate` to\n     * create and link an instance of the template metadata associated with a\n     * particular stamping.\n     *\n     * @override\n     * @param {!HTMLTemplateElement} template Template containing binding\n     *   bindings\n     * @param {boolean=} instanceBinding When false (default), performs\n     *   \"prototypical\" binding of the template and overwrites any previously\n     *   bound template for the class. When true (as passed from\n     *   `_stampTemplate`), the template info is instanced and linked into\n     *   the list of bound templates.\n     * @return {!TemplateInfo} Template metadata object; for `runtimeBinding`,\n     *   this is an instance of the prototypical template info\n     * @protected\n     * @suppress {missingProperties} go/missingfnprops\n     */\n    _bindTemplate(template, instanceBinding) {\n      let templateInfo = this.constructor._parseTemplate(template);\n      let wasPreBound = this.__templateInfo == templateInfo;\n      // Optimization: since this is called twice for proto-bound templates,\n      // don't attempt to recreate accessors if this template was pre-bound\n      if (!wasPreBound) {\n        for (let prop in templateInfo.propertyEffects) {\n          this._createPropertyAccessor(prop);\n        }\n      }\n      if (instanceBinding) {\n        // For instance-time binding, create instance of template metadata\n        // and link into list of templates if necessary\n        templateInfo = /** @type {!TemplateInfo} */(Object.create(templateInfo));\n        templateInfo.wasPreBound = wasPreBound;\n        if (!wasPreBound && this.__templateInfo) {\n          let last = this.__templateInfoLast || this.__templateInfo;\n          this.__templateInfoLast = last.nextTemplateInfo = templateInfo;\n          templateInfo.previousTemplateInfo = last;\n          return templateInfo;\n        }\n      }\n      return this.__templateInfo = templateInfo;\n    }\n\n    /**\n     * Adds a property effect to the given template metadata, which is run\n     * at the \"propagate\" stage of `_propertiesChanged` when the template\n     * has been bound to the element via `_bindTemplate`.\n     *\n     * The `effect` object should match the format in `_addPropertyEffect`.\n     *\n     * @param {Object} templateInfo Template metadata to add effect to\n     * @param {string} prop Property that should trigger the effect\n     * @param {Object=} effect Effect metadata object\n     * @return {void}\n     * @protected\n     */\n    static _addTemplatePropertyEffect(templateInfo, prop, effect) {\n      let hostProps = templateInfo.hostProps = templateInfo.hostProps || {};\n      hostProps[prop] = true;\n      let effects = templateInfo.propertyEffects = templateInfo.propertyEffects || {};\n      let propEffects = effects[prop] = effects[prop] || [];\n      propEffects.push(effect);\n    }\n\n    /**\n     * Stamps the provided template and performs instance-time setup for\n     * Polymer template features, including data bindings, declarative event\n     * listeners, and the `this.$` map of `id`'s to nodes.  A document fragment\n     * is returned containing the stamped DOM, ready for insertion into the\n     * DOM.\n     *\n     * This method may be called more than once; however note that due to\n     * `shadycss` polyfill limitations, only styles from templates prepared\n     * using `ShadyCSS.prepareTemplate` will be correctly polyfilled (scoped\n     * to the shadow root and support CSS custom properties), and note that\n     * `ShadyCSS.prepareTemplate` may only be called once per element. As such,\n     * any styles required by in runtime-stamped templates must be included\n     * in the main element template.\n     *\n     * @param {!HTMLTemplateElement} template Template to stamp\n     * @return {!StampedTemplate} Cloned template content\n     * @override\n     * @protected\n     */\n    _stampTemplate(template) {\n      // Ensures that created dom is `_enqueueClient`'d to this element so\n      // that it can be flushed on next call to `_flushProperties`\n      hostStack.beginHosting(this);\n      let dom = super._stampTemplate(template);\n      hostStack.endHosting(this);\n      let templateInfo = /** @type {!TemplateInfo} */(this._bindTemplate(template, true));\n      // Add template-instance-specific data to instanced templateInfo\n      templateInfo.nodeList = dom.nodeList;\n      // Capture child nodes to allow unstamping of non-prototypical templates\n      if (!templateInfo.wasPreBound) {\n        let nodes = templateInfo.childNodes = [];\n        for (let n=dom.firstChild; n; n=n.nextSibling) {\n          nodes.push(n);\n        }\n      }\n      dom.templateInfo = templateInfo;\n      // Setup compound storage, 2-way listeners, and dataHost for bindings\n      setupBindings(this, templateInfo);\n      // Flush properties into template nodes if already booted\n      if (this.__dataReady) {\n        runEffects(this, templateInfo.propertyEffects, this.__data, null,\n          false, templateInfo.nodeList);\n      }\n      return dom;\n    }\n\n    /**\n     * Removes and unbinds the nodes previously contained in the provided\n     * DocumentFragment returned from `_stampTemplate`.\n     *\n     * @override\n     * @param {!StampedTemplate} dom DocumentFragment previously returned\n     *   from `_stampTemplate` associated with the nodes to be removed\n     * @return {void}\n     * @protected\n     */\n    _removeBoundDom(dom) {\n      // Unlink template info\n      let templateInfo = dom.templateInfo;\n      if (templateInfo.previousTemplateInfo) {\n        templateInfo.previousTemplateInfo.nextTemplateInfo =\n          templateInfo.nextTemplateInfo;\n      }\n      if (templateInfo.nextTemplateInfo) {\n        templateInfo.nextTemplateInfo.previousTemplateInfo =\n          templateInfo.previousTemplateInfo;\n      }\n      if (this.__templateInfoLast == templateInfo) {\n        this.__templateInfoLast = templateInfo.previousTemplateInfo;\n      }\n      templateInfo.previousTemplateInfo = templateInfo.nextTemplateInfo = null;\n      // Remove stamped nodes\n      let nodes = templateInfo.childNodes;\n      for (let i=0; i<nodes.length; i++) {\n        let node = nodes[i];\n        node.parentNode.removeChild(node);\n      }\n    }\n\n    /**\n     * Overrides default `TemplateStamp` implementation to add support for\n     * parsing bindings from `TextNode`'s' `textContent`.  A `bindings`\n     * array is added to `nodeInfo` and populated with binding metadata\n     * with information capturing the binding target, and a `parts` array\n     * with one or more metadata objects capturing the source(s) of the\n     * binding.\n     *\n     * @param {Node} node Node to parse\n     * @param {TemplateInfo} templateInfo Template metadata for current template\n     * @param {NodeInfo} nodeInfo Node metadata for current template node\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     */\n    static _parseTemplateNode(node, templateInfo, nodeInfo) {\n      let noted = super._parseTemplateNode(node, templateInfo, nodeInfo);\n      if (node.nodeType === Node.TEXT_NODE) {\n        let parts = this._parseBindings(node.textContent, templateInfo);\n        if (parts) {\n          // Initialize the textContent with any literal parts\n          // NOTE: default to a space here so the textNode remains; some browsers\n          // (IE) omit an empty textNode following cloneNode/importNode.\n          node.textContent = literalFromParts(parts) || ' ';\n          addBinding(this, templateInfo, nodeInfo, 'text', 'textContent', parts);\n          noted = true;\n        }\n      }\n      return noted;\n    }\n\n    /**\n     * Overrides default `TemplateStamp` implementation to add support for\n     * parsing bindings from attributes.  A `bindings`\n     * array is added to `nodeInfo` and populated with binding metadata\n     * with information capturing the binding target, and a `parts` array\n     * with one or more metadata objects capturing the source(s) of the\n     * binding.\n     *\n     * @param {Element} node Node to parse\n     * @param {TemplateInfo} templateInfo Template metadata for current template\n     * @param {NodeInfo} nodeInfo Node metadata for current template node\n     * @param {string} name Attribute name\n     * @param {string} value Attribute value\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     */\n    static _parseTemplateNodeAttribute(node, templateInfo, nodeInfo, name, value) {\n      let parts = this._parseBindings(value, templateInfo);\n      if (parts) {\n        // Attribute or property\n        let origName = name;\n        let kind = 'property';\n        // The only way we see a capital letter here is if the attr has\n        // a capital letter in it per spec. In this case, to make sure\n        // this binding works, we go ahead and make the binding to the attribute.\n        if (capitalAttributeRegex.test(name)) {\n          kind = 'attribute';\n        } else if (name[name.length-1] == '$') {\n          name = name.slice(0, -1);\n          kind = 'attribute';\n        }\n        // Initialize attribute bindings with any literal parts\n        let literal = literalFromParts(parts);\n        if (literal && kind == 'attribute') {\n          // Ensure a ShadyCSS template scoped style is not removed\n          // when a class$ binding's initial literal value is set.\n          if (name == 'class' && node.hasAttribute('class')) {\n            literal += ' ' + node.getAttribute(name);\n          }\n          node.setAttribute(name, literal);\n        }\n        // Clear attribute before removing, since IE won't allow removing\n        // `value` attribute if it previously had a value (can't\n        // unconditionally set '' before removing since attributes with `$`\n        // can't be set using setAttribute)\n        if (node.localName === 'input' && origName === 'value') {\n          node.setAttribute(origName, '');\n        }\n        // Remove annotation\n        node.removeAttribute(origName);\n        // Case hackery: attributes are lower-case, but bind targets\n        // (properties) are case sensitive. Gambit is to map dash-case to\n        // camel-case: `foo-bar` becomes `fooBar`.\n        // Attribute bindings are excepted.\n        if (kind === 'property') {\n          name = dashToCamelCase(name);\n        }\n        addBinding(this, templateInfo, nodeInfo, kind, name, parts, literal);\n        return true;\n      } else {\n        return super._parseTemplateNodeAttribute(node, templateInfo, nodeInfo, name, value);\n      }\n    }\n\n    /**\n     * Overrides default `TemplateStamp` implementation to add support for\n     * binding the properties that a nested template depends on to the template\n     * as `_host_<property>`.\n     *\n     * @param {Node} node Node to parse\n     * @param {TemplateInfo} templateInfo Template metadata for current template\n     * @param {NodeInfo} nodeInfo Node metadata for current template node\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     */\n    static _parseTemplateNestedTemplate(node, templateInfo, nodeInfo) {\n      let noted = super._parseTemplateNestedTemplate(node, templateInfo, nodeInfo);\n      // Merge host props into outer template and add bindings\n      let hostProps = nodeInfo.templateInfo.hostProps;\n      let mode = '{';\n      for (let source in hostProps) {\n        let parts = [{ mode, source, dependencies: [source] }];\n        addBinding(this, templateInfo, nodeInfo, 'property', '_host_' + source, parts);\n      }\n      return noted;\n    }\n\n    /**\n     * Called to parse text in a template (either attribute values or\n     * textContent) into binding metadata.\n     *\n     * Any overrides of this method should return an array of binding part\n     * metadata  representing one or more bindings found in the provided text\n     * and any \"literal\" text in between.  Any non-literal parts will be passed\n     * to `_evaluateBinding` when any dependencies change.  The only required\n     * fields of each \"part\" in the returned array are as follows:\n     *\n     * - `dependencies` - Array containing trigger metadata for each property\n     *   that should trigger the binding to update\n     * - `literal` - String containing text if the part represents a literal;\n     *   in this case no `dependencies` are needed\n     *\n     * Additional metadata for use by `_evaluateBinding` may be provided in\n     * each part object as needed.\n     *\n     * The default implementation handles the following types of bindings\n     * (one or more may be intermixed with literal strings):\n     * - Property binding: `[[prop]]`\n     * - Path binding: `[[object.prop]]`\n     * - Negated property or path bindings: `[[!prop]]` or `[[!object.prop]]`\n     * - Two-way property or path bindings (supports negation):\n     *   `{{prop}}`, `{{object.prop}}`, `{{!prop}}` or `{{!object.prop}}`\n     * - Inline computed method (supports negation):\n     *   `[[compute(a, 'literal', b)]]`, `[[!compute(a, 'literal', b)]]`\n     *\n     * The default implementation uses a regular expression for best\n     * performance. However, the regular expression uses a white-list of\n     * allowed characters in a data-binding, which causes problems for\n     * data-bindings that do use characters not in this white-list.\n     *\n     * Instead of updating the white-list with all allowed characters,\n     * there is a StrictBindingParser (see lib/mixins/strict-binding-parser)\n     * that uses a state machine instead. This state machine is able to handle\n     * all characters. However, it is slightly less performant, therefore we\n     * extracted it into a separate optional mixin.\n     *\n     * @param {string} text Text to parse from attribute or textContent\n     * @param {Object} templateInfo Current template metadata\n     * @return {Array<!BindingPart>} Array of binding part metadata\n     * @protected\n     */\n    static _parseBindings(text, templateInfo) {\n      let parts = [];\n      let lastIndex = 0;\n      let m;\n      // Example: \"literal1{{prop}}literal2[[!compute(foo,bar)]]final\"\n      // Regex matches:\n      //        Iteration 1:  Iteration 2:\n      // m[1]: '{{'          '[['\n      // m[2]: ''            '!'\n      // m[3]: 'prop'        'compute(foo,bar)'\n      while ((m = bindingRegex.exec(text)) !== null) {\n        // Add literal part\n        if (m.index > lastIndex) {\n          parts.push({literal: text.slice(lastIndex, m.index)});\n        }\n        // Add binding part\n        let mode = m[1][0];\n        let negate = Boolean(m[2]);\n        let source = m[3].trim();\n        let customEvent = false, notifyEvent = '', colon = -1;\n        if (mode == '{' && (colon = source.indexOf('::')) > 0) {\n          notifyEvent = source.substring(colon + 2);\n          source = source.substring(0, colon);\n          customEvent = true;\n        }\n        let signature = parseMethod(source);\n        let dependencies = [];\n        if (signature) {\n          // Inline computed function\n          let {args, methodName} = signature;\n          for (let i=0; i<args.length; i++) {\n            let arg = args[i];\n            if (!arg.literal) {\n              dependencies.push(arg);\n            }\n          }\n          let dynamicFns = templateInfo.dynamicFns;\n          if (dynamicFns && dynamicFns[methodName] || signature.static) {\n            dependencies.push(methodName);\n            signature.dynamicFn = true;\n          }\n        } else {\n          // Property or path\n          dependencies.push(source);\n        }\n        parts.push({\n          source, mode, negate, customEvent, signature, dependencies,\n          event: notifyEvent\n        });\n        lastIndex = bindingRegex.lastIndex;\n      }\n      // Add a final literal part\n      if (lastIndex && lastIndex < text.length) {\n        let literal = text.substring(lastIndex);\n        if (literal) {\n          parts.push({\n            literal: literal\n          });\n        }\n      }\n      if (parts.length) {\n        return parts;\n      } else {\n        return null;\n      }\n    }\n\n    /**\n     * Called to evaluate a previously parsed binding part based on a set of\n     * one or more changed dependencies.\n     *\n     * @param {!Polymer_PropertyEffects} inst Element that should be used as\n     *     scope for binding dependencies\n     * @param {BindingPart} part Binding part metadata\n     * @param {string} path Property/path that triggered this effect\n     * @param {Object} props Bag of current property changes\n     * @param {Object} oldProps Bag of previous values for changed properties\n     * @param {boolean} hasPaths True with `props` contains one or more paths\n     * @return {*} Value the binding part evaluated to\n     * @protected\n     */\n    static _evaluateBinding(inst, part, path, props, oldProps, hasPaths) {\n      let value;\n      if (part.signature) {\n        value = runMethodEffect(inst, path, props, oldProps, part.signature);\n      } else if (path != part.source) {\n        value = get(inst, part.source);\n      } else {\n        if (hasPaths && isPath(path)) {\n          value = get(inst, path);\n        } else {\n          value = inst.__data[path];\n        }\n      }\n      if (part.negate) {\n        value = !value;\n      }\n      return value;\n    }\n\n  }\n\n  return PropertyEffects;\n});\n\n/**\n * Helper api for enqueuing client dom created by a host element.\n *\n * By default elements are flushed via `_flushProperties` when\n * `connectedCallback` is called. Elements attach their client dom to\n * themselves at `ready` time which results from this first flush.\n * This provides an ordering guarantee that the client dom an element\n * creates is flushed before the element itself (i.e. client `ready`\n * fires before host `ready`).\n *\n * However, if `_flushProperties` is called *before* an element is connected,\n * as for example `Templatize` does, this ordering guarantee cannot be\n * satisfied because no elements are connected. (Note: Bound elements that\n * receive data do become enqueued clients and are properly ordered but\n * unbound elements are not.)\n *\n * To maintain the desired \"client before host\" ordering guarantee for this\n * case we rely on the \"host stack. Client nodes registers themselves with\n * the creating host element when created. This ensures that all client dom\n * is readied in the proper order, maintaining the desired guarantee.\n *\n * @private\n */\nclass HostStack {\n  constructor() {\n    this.stack = [];\n  }\n\n  /**\n   * @param {*} inst Instance to add to hostStack\n   * @return {void}\n   */\n  registerHost(inst) {\n    if (this.stack.length) {\n      let host = this.stack[this.stack.length-1];\n      host._enqueueClient(inst);\n    }\n  }\n\n  /**\n   * @param {*} inst Instance to begin hosting\n   * @return {void}\n   */\n  beginHosting(inst) {\n    this.stack.push(inst);\n  }\n\n  /**\n   * @param {*} inst Instance to end hosting\n   * @return {void}\n   */\n  endHosting(inst) {\n    let stackLen = this.stack.length;\n    if (stackLen && this.stack[stackLen-1] == inst) {\n      this.stack.pop();\n    }\n  }\n}\nconst hostStack = new HostStack();\n"
      },
      {
       "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/mixins/template-stamp.js",
       "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { dedupingMixin } from '../utils/mixin.js';\n\nconst walker = document.createTreeWalker(document, NodeFilter.SHOW_ALL,\n    null, false);\n\n// 1.x backwards-compatible auto-wrapper for template type extensions\n// This is a clear layering violation and gives favored-nation status to\n// dom-if and dom-repeat templates.  This is a conceit we're choosing to keep\n// a.) to ease 1.x backwards-compatibility due to loss of `is`, and\n// b.) to maintain if/repeat capability in parser-constrained elements\n//     (e.g. table, select) in lieu of native CE type extensions without\n//     massive new invention in this space (e.g. directive system)\nconst templateExtensions = {\n  'dom-if': true,\n  'dom-repeat': true\n};\nfunction wrapTemplateExtension(node) {\n  let is = node.getAttribute('is');\n  if (is && templateExtensions[is]) {\n    let t = node;\n    t.removeAttribute('is');\n    node = t.ownerDocument.createElement(is);\n    t.parentNode.replaceChild(node, t);\n    node.appendChild(t);\n    while(t.attributes.length) {\n      node.setAttribute(t.attributes[0].name, t.attributes[0].value);\n      t.removeAttribute(t.attributes[0].name);\n    }\n  }\n  return node;\n}\n\nfunction findTemplateNode(root, nodeInfo) {\n  // recursively ascend tree until we hit root\n  let parent = nodeInfo.parentInfo && findTemplateNode(root, nodeInfo.parentInfo);\n  // unwind the stack, returning the indexed node at each level\n  if (parent) {\n    // note: marginally faster than indexing via childNodes\n    // (http://jsperf.com/childnodes-lookup)\n    walker.currentNode = parent;\n    for (let n=walker.firstChild(), i=0; n; n=walker.nextSibling()) {\n      if (nodeInfo.parentIndex === i++) {\n        return n;\n      }\n    }\n  } else {\n    return root;\n  }\n}\n\n// construct `$` map (from id annotations)\nfunction applyIdToMap(inst, map, node, nodeInfo) {\n  if (nodeInfo.id) {\n    map[nodeInfo.id] = node;\n  }\n}\n\n// install event listeners (from event annotations)\nfunction applyEventListener(inst, node, nodeInfo) {\n  if (nodeInfo.events && nodeInfo.events.length) {\n    for (let j=0, e$=nodeInfo.events, e; (j<e$.length) && (e=e$[j]); j++) {\n      inst._addMethodEventListenerToNode(node, e.name, e.value, inst);\n    }\n  }\n}\n\n// push configuration references at configure time\nfunction applyTemplateContent(inst, node, nodeInfo) {\n  if (nodeInfo.templateInfo) {\n    node._templateInfo = nodeInfo.templateInfo;\n  }\n}\n\nfunction createNodeEventHandler(context, eventName, methodName) {\n  // Instances can optionally have a _methodHost which allows redirecting where\n  // to find methods. Currently used by `templatize`.\n  context = context._methodHost || context;\n  let handler = function(e) {\n    if (context[methodName]) {\n      context[methodName](e, e.detail);\n    } else {\n      console.warn('listener method `' + methodName + '` not defined');\n    }\n  };\n  return handler;\n}\n\n/**\n * Element mixin that provides basic template parsing and stamping, including\n * the following template-related features for stamped templates:\n *\n * - Declarative event listeners (`on-eventname=\"listener\"`)\n * - Map of node id's to stamped node instances (`this.$.id`)\n * - Nested template content caching/removal and re-installation (performance\n *   optimization)\n *\n * @mixinFunction\n * @polymer\n * @summary Element class mixin that provides basic template parsing and stamping\n */\nexport const TemplateStamp = dedupingMixin(\n    /**\n     * @template T\n     * @param {function(new:T)} superClass Class to apply mixin to.\n     * @return {function(new:T)} superClass with mixin applied.\n     */\n    (superClass) => {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_TemplateStamp}\n   */\n  class TemplateStamp extends superClass {\n\n    /**\n     * Scans a template to produce template metadata.\n     *\n     * Template-specific metadata are stored in the object returned, and node-\n     * specific metadata are stored in objects in its flattened `nodeInfoList`\n     * array.  Only nodes in the template that were parsed as nodes of\n     * interest contain an object in `nodeInfoList`.  Each `nodeInfo` object\n     * contains an `index` (`childNodes` index in parent) and optionally\n     * `parent`, which points to node info of its parent (including its index).\n     *\n     * The template metadata object returned from this method has the following\n     * structure (many fields optional):\n     *\n     * ```js\n     *   {\n     *     // Flattened list of node metadata (for nodes that generated metadata)\n     *     nodeInfoList: [\n     *       {\n     *         // `id` attribute for any nodes with id's for generating `$` map\n     *         id: {string},\n     *         // `on-event=\"handler\"` metadata\n     *         events: [\n     *           {\n     *             name: {string},   // event name\n     *             value: {string},  // handler method name\n     *           }, ...\n     *         ],\n     *         // Notes when the template contained a `<slot>` for shady DOM\n     *         // optimization purposes\n     *         hasInsertionPoint: {boolean},\n     *         // For nested `<template>`` nodes, nested template metadata\n     *         templateInfo: {object}, // nested template metadata\n     *         // Metadata to allow efficient retrieval of instanced node\n     *         // corresponding to this metadata\n     *         parentInfo: {number},   // reference to parent nodeInfo>\n     *         parentIndex: {number},  // index in parent's `childNodes` collection\n     *         infoIndex: {number},    // index of this `nodeInfo` in `templateInfo.nodeInfoList`\n     *       },\n     *       ...\n     *     ],\n     *     // When true, the template had the `strip-whitespace` attribute\n     *     // or was nested in a template with that setting\n     *     stripWhitespace: {boolean},\n     *     // For nested templates, nested template content is moved into\n     *     // a document fragment stored here; this is an optimization to\n     *     // avoid the cost of nested template cloning\n     *     content: {DocumentFragment}\n     *   }\n     * ```\n     *\n     * This method kicks off a recursive treewalk as follows:\n     *\n     * ```\n     *    _parseTemplate <---------------------+\n     *      _parseTemplateContent              |\n     *        _parseTemplateNode  <------------|--+\n     *          _parseTemplateNestedTemplate --+  |\n     *          _parseTemplateChildNodes ---------+\n     *          _parseTemplateNodeAttributes\n     *            _parseTemplateNodeAttribute\n     *\n     * ```\n     *\n     * These methods may be overridden to add custom metadata about templates\n     * to either `templateInfo` or `nodeInfo`.\n     *\n     * Note that this method may be destructive to the template, in that\n     * e.g. event annotations may be removed after being noted in the\n     * template metadata.\n     *\n     * @param {!HTMLTemplateElement} template Template to parse\n     * @param {TemplateInfo=} outerTemplateInfo Template metadata from the outer\n     *   template, for parsing nested templates\n     * @return {!TemplateInfo} Parsed template metadata\n     */\n    static _parseTemplate(template, outerTemplateInfo) {\n      // since a template may be re-used, memo-ize metadata\n      if (!template._templateInfo) {\n        let templateInfo = template._templateInfo = {};\n        templateInfo.nodeInfoList = [];\n        templateInfo.stripWhiteSpace =\n          (outerTemplateInfo && outerTemplateInfo.stripWhiteSpace) ||\n          template.hasAttribute('strip-whitespace');\n        this._parseTemplateContent(template, templateInfo, {parent: null});\n      }\n      return template._templateInfo;\n    }\n\n    static _parseTemplateContent(template, templateInfo, nodeInfo) {\n      return this._parseTemplateNode(template.content, templateInfo, nodeInfo);\n    }\n\n    /**\n     * Parses template node and adds template and node metadata based on\n     * the current node, and its `childNodes` and `attributes`.\n     *\n     * This method may be overridden to add custom node or template specific\n     * metadata based on this node.\n     *\n     * @param {Node} node Node to parse\n     * @param {!TemplateInfo} templateInfo Template metadata for current template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     */\n    static _parseTemplateNode(node, templateInfo, nodeInfo) {\n      let noted;\n      let element = /** @type {Element} */(node);\n      if (element.localName == 'template' && !element.hasAttribute('preserve-content')) {\n        noted = this._parseTemplateNestedTemplate(element, templateInfo, nodeInfo) || noted;\n      } else if (element.localName === 'slot') {\n        // For ShadyDom optimization, indicating there is an insertion point\n        templateInfo.hasInsertionPoint = true;\n      }\n      walker.currentNode = element;\n      if (walker.firstChild()) {\n        noted = this._parseTemplateChildNodes(element, templateInfo, nodeInfo) || noted;\n      }\n      if (element.hasAttributes && element.hasAttributes()) {\n        noted = this._parseTemplateNodeAttributes(element, templateInfo, nodeInfo) || noted;\n      }\n      return noted;\n    }\n\n    /**\n     * Parses template child nodes for the given root node.\n     *\n     * This method also wraps whitelisted legacy template extensions\n     * (`is=\"dom-if\"` and `is=\"dom-repeat\"`) with their equivalent element\n     * wrappers, collapses text nodes, and strips whitespace from the template\n     * if the `templateInfo.stripWhitespace` setting was provided.\n     *\n     * @param {Node} root Root node whose `childNodes` will be parsed\n     * @param {!TemplateInfo} templateInfo Template metadata for current template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {void}\n     */\n    static _parseTemplateChildNodes(root, templateInfo, nodeInfo) {\n      if (root.localName === 'script' || root.localName === 'style') {\n        return;\n      }\n      walker.currentNode = root;\n      for (let node=walker.firstChild(), parentIndex=0, next; node; node=next) {\n        // Wrap templates\n        if (node.localName == 'template') {\n          node = wrapTemplateExtension(node);\n        }\n        // collapse adjacent textNodes: fixes an IE issue that can cause\n        // text nodes to be inexplicably split =(\n        // note that root.normalize() should work but does not so we do this\n        // manually.\n        walker.currentNode = node;\n        next = walker.nextSibling();\n        if (node.nodeType === Node.TEXT_NODE) {\n          let /** Node */ n = next;\n          while (n && (n.nodeType === Node.TEXT_NODE)) {\n            node.textContent += n.textContent;\n            next = walker.nextSibling();\n            root.removeChild(n);\n            n = next;\n          }\n          // optionally strip whitespace\n          if (templateInfo.stripWhiteSpace && !node.textContent.trim()) {\n            root.removeChild(node);\n            continue;\n          }\n        }\n        let childInfo = { parentIndex, parentInfo: nodeInfo };\n        if (this._parseTemplateNode(node, templateInfo, childInfo)) {\n          childInfo.infoIndex = templateInfo.nodeInfoList.push(/** @type {!NodeInfo} */(childInfo)) - 1;\n        }\n        // Increment if not removed\n        walker.currentNode = node;\n        if (walker.parentNode()) {\n          parentIndex++;\n        }\n      }\n    }\n\n    /**\n     * Parses template content for the given nested `<template>`.\n     *\n     * Nested template info is stored as `templateInfo` in the current node's\n     * `nodeInfo`. `template.content` is removed and stored in `templateInfo`.\n     * It will then be the responsibility of the host to set it back to the\n     * template and for users stamping nested templates to use the\n     * `_contentForTemplate` method to retrieve the content for this template\n     * (an optimization to avoid the cost of cloning nested template content).\n     *\n     * @param {HTMLTemplateElement} node Node to parse (a <template>)\n     * @param {TemplateInfo} outerTemplateInfo Template metadata for current template\n     *   that includes the template `node`\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     */\n    static _parseTemplateNestedTemplate(node, outerTemplateInfo, nodeInfo) {\n      let templateInfo = this._parseTemplate(node, outerTemplateInfo);\n      let content = templateInfo.content =\n        node.content.ownerDocument.createDocumentFragment();\n      content.appendChild(node.content);\n      nodeInfo.templateInfo = templateInfo;\n      return true;\n    }\n\n    /**\n     * Parses template node attributes and adds node metadata to `nodeInfo`\n     * for nodes of interest.\n     *\n     * @param {Element} node Node to parse\n     * @param {TemplateInfo} templateInfo Template metadata for current template\n     * @param {NodeInfo} nodeInfo Node metadata for current template.\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     */\n    static _parseTemplateNodeAttributes(node, templateInfo, nodeInfo) {\n      // Make copy of original attribute list, since the order may change\n      // as attributes are added and removed\n      let noted = false;\n      let attrs = Array.from(node.attributes);\n      for (let i=attrs.length-1, a; (a=attrs[i]); i--) {\n        noted = this._parseTemplateNodeAttribute(node, templateInfo, nodeInfo, a.name, a.value) || noted;\n      }\n      return noted;\n    }\n\n    /**\n     * Parses a single template node attribute and adds node metadata to\n     * `nodeInfo` for attributes of interest.\n     *\n     * This implementation adds metadata for `on-event=\"handler\"` attributes\n     * and `id` attributes.\n     *\n     * @param {Element} node Node to parse\n     * @param {!TemplateInfo} templateInfo Template metadata for current template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @param {string} name Attribute name\n     * @param {string} value Attribute value\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     */\n    static _parseTemplateNodeAttribute(node, templateInfo, nodeInfo, name, value) {\n      // events (on-*)\n      if (name.slice(0, 3) === 'on-') {\n        node.removeAttribute(name);\n        nodeInfo.events = nodeInfo.events || [];\n        nodeInfo.events.push({\n          name: name.slice(3),\n          value\n        });\n        return true;\n      }\n      // static id\n      else if (name === 'id') {\n        nodeInfo.id = value;\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Returns the `content` document fragment for a given template.\n     *\n     * For nested templates, Polymer performs an optimization to cache nested\n     * template content to avoid the cost of cloning deeply nested templates.\n     * This method retrieves the cached content for a given template.\n     *\n     * @param {HTMLTemplateElement} template Template to retrieve `content` for\n     * @return {DocumentFragment} Content fragment\n     */\n    static _contentForTemplate(template) {\n      let templateInfo = /** @type {HTMLTemplateElementWithInfo} */ (template)._templateInfo;\n      return (templateInfo && templateInfo.content) || template.content;\n    }\n\n    /**\n     * Clones the provided template content and returns a document fragment\n     * containing the cloned dom.\n     *\n     * The template is parsed (once and memoized) using this library's\n     * template parsing features, and provides the following value-added\n     * features:\n     * * Adds declarative event listeners for `on-event=\"handler\"` attributes\n     * * Generates an \"id map\" for all nodes with id's under `$` on returned\n     *   document fragment\n     * * Passes template info including `content` back to templates as\n     *   `_templateInfo` (a performance optimization to avoid deep template\n     *   cloning)\n     *\n     * Note that the memoized template parsing process is destructive to the\n     * template: attributes for bindings and declarative event listeners are\n     * removed after being noted in notes, and any nested `<template>.content`\n     * is removed and stored in notes as well.\n     *\n     * @param {!HTMLTemplateElement} template Template to stamp\n     * @return {!StampedTemplate} Cloned template content\n     * @override\n     */\n    _stampTemplate(template) {\n      // Polyfill support: bootstrap the template if it has not already been\n      if (template && !template.content &&\n          window.HTMLTemplateElement && HTMLTemplateElement.decorate) {\n        HTMLTemplateElement.decorate(template);\n      }\n      let templateInfo = this.constructor._parseTemplate(template);\n      let nodeInfo = templateInfo.nodeInfoList;\n      let content = templateInfo.content || template.content;\n      let dom = /** @type {DocumentFragment} */ (document.importNode(content, true));\n      // NOTE: ShadyDom optimization indicating there is an insertion point\n      dom.__noInsertionPoint = !templateInfo.hasInsertionPoint;\n      let nodes = dom.nodeList = new Array(nodeInfo.length);\n      dom.$ = {};\n      for (let i=0, l=nodeInfo.length, info; (i<l) && (info=nodeInfo[i]); i++) {\n        let node = nodes[i] = findTemplateNode(dom, info);\n        applyIdToMap(this, dom.$, node, info);\n        applyTemplateContent(this, node, info);\n        applyEventListener(this, node, info);\n      }\n      dom = /** @type {!StampedTemplate} */(dom); // eslint-disable-line no-self-assign\n      return dom;\n    }\n\n    /**\n     * Adds an event listener by method name for the event provided.\n     *\n     * This method generates a handler function that looks up the method\n     * name at handling time.\n     *\n     * @param {!EventTarget} node Node to add listener on\n     * @param {string} eventName Name of event\n     * @param {string} methodName Name of method\n     * @param {*=} context Context the method will be called on (defaults\n     *   to `node`)\n     * @return {Function} Generated handler function\n     * @override\n     */\n    _addMethodEventListenerToNode(node, eventName, methodName, context) {\n      context = context || node;\n      let handler = createNodeEventHandler(context, eventName, methodName);\n      this._addEventListenerToNode(node, eventName, handler);\n      return handler;\n    }\n\n    /**\n     * Override point for adding custom or simulated event handling.\n     *\n     * @param {!EventTarget} node Node to add event listener to\n     * @param {string} eventName Name of event\n     * @param {function(!Event):void} handler Listener function to add\n     * @return {void}\n     * @override\n     */\n    _addEventListenerToNode(node, eventName, handler) {\n      node.addEventListener(eventName, handler);\n    }\n\n    /**\n     * Override point for adding custom or simulated event handling.\n     *\n     * @param {!EventTarget} node Node to remove event listener from\n     * @param {string} eventName Name of event\n     * @param {function(!Event):void} handler Listener function to remove\n     * @return {void}\n     * @override\n     */\n    _removeEventListenerFromNode(node, eventName, handler) {\n      node.removeEventListener(eventName, handler);\n    }\n\n  }\n\n  return TemplateStamp;\n\n});\n"
      }
     ]
    },
    {
     "id": 83,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/utils/style-gather.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Module with utilities for collection CSS text from `<templates>`, external\n * stylesheets, and `dom-module`s.\n *\n * @summary Module with utilities for collection CSS text from various sources.\n */\n\nimport { DomModule } from '../elements/dom-module.js';\nimport { resolveCss } from './resolve-url.js';\n\nconst MODULE_STYLE_LINK_SELECTOR = 'link[rel=import][type~=css]';\nconst INCLUDE_ATTR = 'include';\nconst SHADY_UNSCOPED_ATTR = 'shady-unscoped';\n\n/**\n * @param {string} moduleId .\n * @return {?DomModule} .\n */\nfunction importModule(moduleId) {\n  return /** @type {?DomModule} */(DomModule.import(moduleId));\n}\n\nfunction styleForImport(importDoc) {\n  // NOTE: polyfill affordance.\n  // under the HTMLImports polyfill, there will be no 'body',\n  // but the import pseudo-doc can be used directly.\n  let container = importDoc.body ? importDoc.body : importDoc;\n  const importCss = resolveCss(container.textContent,\n    importDoc.baseURI);\n  const style = document.createElement('style');\n  style.textContent = importCss;\n  return style;\n}\n\n/** @typedef {{assetpath: string}} */\nlet templateWithAssetPath; // eslint-disable-line no-unused-vars\n\n\n/**\n * Returns a list of <style> elements in a space-separated list of `dom-module`s.\n *\n * @function\n * @param {string} moduleIds List of dom-module id's within which to\n * search for css.\n * @return {!Array<!HTMLStyleElement>} Array of contained <style> elements\n */\nexport function stylesFromModules(moduleIds) {\n const modules = moduleIds.trim().split(/\\s+/);\n const styles = [];\n for (let i=0; i < modules.length; i++) {\n   styles.push(...stylesFromModule(modules[i]));\n }\n return styles;\n}\n\n/**\n * Returns a list of <style> elements in a given `dom-module`.\n * Styles in a `dom-module` can come either from `<style>`s within the\n * first `<template>`, or else from one or more\n * `<link rel=\"import\" type=\"css\">` links outside the template.\n *\n * @param {string} moduleId dom-module id to gather styles from\n * @return {!Array<!HTMLStyleElement>} Array of contained styles.\n */\nexport function stylesFromModule(moduleId) {\n  const m = importModule(moduleId);\n\n  if (!m) {\n    console.warn('Could not find style data in module named', moduleId);\n    return [];\n  }\n\n  if (m._styles === undefined) {\n    const styles = [];\n    // module imports: <link rel=\"import\" type=\"css\">\n    styles.push(..._stylesFromModuleImports(m));\n    // include css from the first template in the module\n    const template = /** @type {?HTMLTemplateElement} */(\n        m.querySelector('template'));\n    if (template) {\n      styles.push(...stylesFromTemplate(template,\n        /** @type {templateWithAssetPath} */(m).assetpath));\n    }\n\n    m._styles = styles;\n  }\n\n  return m._styles;\n}\n\n/**\n * Returns the `<style>` elements within a given template.\n *\n * @param {!HTMLTemplateElement} template Template to gather styles from\n * @param {string=} baseURI baseURI for style content\n * @return {!Array<!HTMLStyleElement>} Array of styles\n */\nexport function stylesFromTemplate(template, baseURI) {\n  if (!template._styles) {\n    const styles = [];\n    // if element is a template, get content from its .content\n    const e$ = template.content.querySelectorAll('style');\n    for (let i=0; i < e$.length; i++) {\n      let e = e$[i];\n      // support style sharing by allowing styles to \"include\"\n      // other dom-modules that contain styling\n      let include = e.getAttribute(INCLUDE_ATTR);\n      if (include) {\n        styles.push(...stylesFromModules(include).filter(function(item, index, self) {\n          return self.indexOf(item) === index;\n        }));\n      }\n      if (baseURI) {\n        e.textContent =\n            resolveCss(e.textContent, /** @type {string} */ (baseURI));\n      }\n      styles.push(e);\n    }\n    template._styles = styles;\n  }\n  return template._styles;\n}\n\n/**\n * Returns a list of <style> elements  from stylesheets loaded via `<link rel=\"import\" type=\"css\">` links within the specified `dom-module`.\n *\n * @param {string} moduleId Id of `dom-module` to gather CSS from\n * @return {!Array<!HTMLStyleElement>} Array of contained styles.\n */\nexport function stylesFromModuleImports(moduleId) {\n let m = importModule(moduleId);\n return m ? _stylesFromModuleImports(m) : [];\n}\n\n/**\n * @param {!HTMLElement} module dom-module element that could contain `<link rel=\"import\" type=\"css\">` styles\n * @return {!Array<!HTMLStyleElement>} Array of contained styles\n */\nfunction _stylesFromModuleImports(module) {\n  const styles = [];\n  const p$ = module.querySelectorAll(MODULE_STYLE_LINK_SELECTOR);\n  for (let i=0; i < p$.length; i++) {\n    let p = p$[i];\n    if (p.import) {\n      const importDoc = p.import;\n      const unscoped = p.hasAttribute(SHADY_UNSCOPED_ATTR);\n      if (unscoped && !importDoc._unscopedStyle) {\n        const style = styleForImport(importDoc);\n        style.setAttribute(SHADY_UNSCOPED_ATTR, '');\n        importDoc._unscopedStyle = style;\n      } else if (!importDoc._style) {\n        importDoc._style = styleForImport(importDoc);\n      }\n      styles.push(unscoped ? importDoc._unscopedStyle : importDoc._style);\n    }\n  }\n  return styles;\n}\n\n/**\n *\n * Returns CSS text of styles in a space-separated list of `dom-module`s.\n * Note: This method is deprecated, use `stylesFromModules` instead.\n *\n * @deprecated\n * @param {string} moduleIds List of dom-module id's within which to\n * search for css.\n * @return {string} Concatenated CSS content from specified `dom-module`s\n */\nexport function cssFromModules(moduleIds) {\n let modules = moduleIds.trim().split(/\\s+/);\n let cssText = '';\n for (let i=0; i < modules.length; i++) {\n   cssText += cssFromModule(modules[i]);\n }\n return cssText;\n}\n\n/**\n * Returns CSS text of styles in a given `dom-module`.  CSS in a `dom-module`\n * can come either from `<style>`s within the first `<template>`, or else\n * from one or more `<link rel=\"import\" type=\"css\">` links outside the\n * template.\n *\n * Any `<styles>` processed are removed from their original location.\n * Note: This method is deprecated, use `styleFromModule` instead.\n *\n * @deprecated\n * @param {string} moduleId dom-module id to gather styles from\n * @return {string} Concatenated CSS content from specified `dom-module`\n */\nexport function cssFromModule(moduleId) {\n  let m = importModule(moduleId);\n  if (m && m._cssText === undefined) {\n    // module imports: <link rel=\"import\" type=\"css\">\n    let cssText = _cssFromModuleImports(m);\n    // include css from the first template in the module\n    let t = /** @type {?HTMLTemplateElement} */(m.querySelector('template'));\n    if (t) {\n      cssText += cssFromTemplate(t,\n        /** @type {templateWithAssetPath} */(m).assetpath);\n    }\n    m._cssText = cssText || null;\n  }\n  if (!m) {\n    console.warn('Could not find style data in module named', moduleId);\n  }\n  return m && m._cssText || '';\n}\n\n/**\n * Returns CSS text of `<styles>` within a given template.\n *\n * Any `<styles>` processed are removed from their original location.\n * Note: This method is deprecated, use `styleFromTemplate` instead.\n *\n * @deprecated\n * @param {!HTMLTemplateElement} template Template to gather styles from\n * @param {string} baseURI Base URI to resolve the URL against\n * @return {string} Concatenated CSS content from specified template\n */\nexport function cssFromTemplate(template, baseURI) {\n  let cssText = '';\n  const e$ = stylesFromTemplate(template, baseURI);\n  // if element is a template, get content from its .content\n  for (let i=0; i < e$.length; i++) {\n    let e = e$[i];\n    if (e.parentNode) {\n      e.parentNode.removeChild(e);\n    }\n    cssText += e.textContent;\n  }\n  return cssText;\n}\n\n/**\n * Returns CSS text from stylesheets loaded via `<link rel=\"import\" type=\"css\">`\n * links within the specified `dom-module`.\n *\n * Note: This method is deprecated, use `stylesFromModuleImports` instead.\n *\n * @deprecated\n *\n * @param {string} moduleId Id of `dom-module` to gather CSS from\n * @return {string} Concatenated CSS content from links in specified `dom-module`\n */\nexport function cssFromModuleImports(moduleId) {\n  let m = importModule(moduleId);\n  return m ? _cssFromModuleImports(m) : '';\n}\n\n/**\n * @deprecated\n * @param {!HTMLElement} module dom-module element that could contain `<link rel=\"import\" type=\"css\">` styles\n * @return {string} Concatenated CSS content from links in the dom-module\n */\nfunction _cssFromModuleImports(module) {\n  let cssText = '';\n  let styles = _stylesFromModuleImports(module);\n  for (let i=0; i < styles.length; i++) {\n    cssText += styles[i].textContent;\n  }\n  return cssText;\n}\n"
    },
    {
     "id": 84,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/mixins/property-accessors.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { camelToDashCase, dashToCamelCase } from '../utils/case-map.js';\nimport { PropertiesChanged } from './properties-changed.js';\n\n// Save map of native properties; this forms a blacklist or properties\n// that won't have their values \"saved\" by `saveAccessorValue`, since\n// reading from an HTMLElement accessor from the context of a prototype throws\nconst nativeProperties = {};\nlet proto = HTMLElement.prototype;\nwhile (proto) {\n  let props = Object.getOwnPropertyNames(proto);\n  for (let i=0; i<props.length; i++) {\n    nativeProperties[props[i]] = true;\n  }\n  proto = Object.getPrototypeOf(proto);\n}\n\n/**\n * Used to save the value of a property that will be overridden with\n * an accessor. If the `model` is a prototype, the values will be saved\n * in `__dataProto`, and it's up to the user (or downstream mixin) to\n * decide how/when to set these values back into the accessors.\n * If `model` is already an instance (it has a `__data` property), then\n * the value will be set as a pending property, meaning the user should\n * call `_invalidateProperties` or `_flushProperties` to take effect\n *\n * @param {Object} model Prototype or instance\n * @param {string} property Name of property\n * @return {void}\n * @private\n */\nfunction saveAccessorValue(model, property) {\n  // Don't read/store value for any native properties since they could throw\n  if (!nativeProperties[property]) {\n    let value = model[property];\n    if (value !== undefined) {\n      if (model.__data) {\n        // Adding accessor to instance; update the property\n        // It is the user's responsibility to call _flushProperties\n        model._setPendingProperty(property, value);\n      } else {\n        // Adding accessor to proto; save proto's value for instance-time use\n        if (!model.__dataProto) {\n          model.__dataProto = {};\n        } else if (!model.hasOwnProperty(JSCompiler_renameProperty('__dataProto', model))) {\n          model.__dataProto = Object.create(model.__dataProto);\n        }\n        model.__dataProto[property] = value;\n      }\n    }\n  }\n}\n\n/**\n * Element class mixin that provides basic meta-programming for creating one\n * or more property accessors (getter/setter pair) that enqueue an async\n * (batched) `_propertiesChanged` callback.\n *\n * For basic usage of this mixin:\n *\n * -   Declare attributes to observe via the standard `static get\n *     observedAttributes()`. Use `dash-case` attribute names to represent\n *     `camelCase` property names.\n * -   Implement the `_propertiesChanged` callback on the class.\n * -   Call `MyClass.createPropertiesForAttributes()` **once** on the class to\n *     generate property accessors for each observed attribute. This must be\n *     called before the first instance is created, for example, by calling it\n *     before calling `customElements.define`. It can also be called lazily from\n *     the element's `constructor`, as long as it's guarded so that the call is\n *     only made once, when the first instance is created.\n * -   Call `this._enableProperties()` in the element's `connectedCallback` to\n *     enable the accessors.\n *\n * Any `observedAttributes` will automatically be\n * deserialized via `attributeChangedCallback` and set to the associated\n * property using `dash-case`-to-`camelCase` convention.\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin PropertiesChanged\n * @summary Element class mixin for reacting to property changes from\n *   generated property accessors.\n */\nexport const PropertyAccessors = dedupingMixin(superClass => {\n\n  /**\n   * @constructor\n   * @implements {Polymer_PropertiesChanged}\n   * @unrestricted\n   * @private\n   */\n   const base = PropertiesChanged(superClass);\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_PropertyAccessors}\n   * @extends {base}\n   * @unrestricted\n   */\n  class PropertyAccessors extends base {\n\n    /**\n     * Generates property accessors for all attributes in the standard\n     * static `observedAttributes` array.\n     *\n     * Attribute names are mapped to property names using the `dash-case` to\n     * `camelCase` convention\n     *\n     * @return {void}\n     */\n    static createPropertiesForAttributes() {\n      let a$ = this.observedAttributes;\n      for (let i=0; i < a$.length; i++) {\n        this.prototype._createPropertyAccessor(dashToCamelCase(a$[i]));\n      }\n    }\n\n    /**\n     * Returns an attribute name that corresponds to the given property.\n     * By default, converts camel to dash case, e.g. `fooBar` to `foo-bar`.\n     * @param {string} property Property to convert\n     * @return {string} Attribute name corresponding to the given property.\n     *\n     * @protected\n     */\n    static attributeNameForProperty(property) {\n      return camelToDashCase(property);\n    }\n\n    /**\n     * Overrides PropertiesChanged implementation to initialize values for\n     * accessors created for values that already existed on the element\n     * prototype.\n     *\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _initializeProperties() {\n      if (this.__dataProto) {\n        this._initializeProtoProperties(this.__dataProto);\n        this.__dataProto = null;\n      }\n      super._initializeProperties();\n    }\n\n    /**\n     * Called at instance time with bag of properties that were overwritten\n     * by accessors on the prototype when accessors were created.\n     *\n     * The default implementation sets these properties back into the\n     * setter at instance time.  This method is provided as an override\n     * point for customizing or providing more efficient initialization.\n     *\n     * @param {Object} props Bag of property values that were overwritten\n     *   when creating property accessors.\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _initializeProtoProperties(props) {\n      for (let p in props) {\n        this._setProperty(p, props[p]);\n      }\n    }\n\n    /**\n     * Ensures the element has the given attribute. If it does not,\n     * assigns the given value to the attribute.\n     *\n     * @suppress {invalidCasts} Closure can't figure out `this` is infact an\n     *     element\n     *\n     * @param {string} attribute Name of attribute to ensure is set.\n     * @param {string} value of the attribute.\n     * @return {void}\n     * @override\n     */\n    _ensureAttribute(attribute, value) {\n      const el = /** @type {!HTMLElement} */(this);\n      if (!el.hasAttribute(attribute)) {\n        this._valueToNodeAttribute(el, value, attribute);\n      }\n    }\n\n    /**\n     * Overrides PropertiesChanged implemention to serialize objects as JSON.\n     *\n     * @param {*} value Property value to serialize.\n     * @return {string | undefined} String serialized from the provided property\n     *     value.\n     * @override\n     */\n    _serializeValue(value) {\n      /* eslint-disable no-fallthrough */\n      switch (typeof value) {\n        case 'object':\n          if (value instanceof Date) {\n            return value.toString();\n          } else if (value) {\n            try {\n              return JSON.stringify(value);\n            } catch(x) {\n              return '';\n            }\n          }\n\n        default:\n          return super._serializeValue(value);\n      }\n    }\n\n    /**\n     * Converts a string to a typed JavaScript value.\n     *\n     * This method is called by Polymer when reading HTML attribute values to\n     * JS properties.  Users may override this method on Polymer element\n     * prototypes to provide deserialization for custom `type`s.  Note,\n     * the `type` argument is the value of the `type` field provided in the\n     * `properties` configuration object for a given property, and is\n     * by convention the constructor for the type to deserialize.\n     *\n     *\n     * @param {?string} value Attribute value to deserialize.\n     * @param {*=} type Type to deserialize the string to.\n     * @return {*} Typed value deserialized from the provided string.\n     * @override\n     */\n    _deserializeValue(value, type) {\n      /**\n       * @type {*}\n       */\n      let outValue;\n      switch (type) {\n        case Object:\n          try {\n            outValue = JSON.parse(/** @type {string} */(value));\n          } catch(x) {\n            // allow non-JSON literals like Strings and Numbers\n            outValue = value;\n          }\n          break;\n        case Array:\n          try {\n            outValue = JSON.parse(/** @type {string} */(value));\n          } catch(x) {\n            outValue = null;\n            console.warn(`Polymer::Attributes: couldn't decode Array as JSON: ${value}`);\n          }\n          break;\n        case Date:\n          outValue = isNaN(value) ? String(value) : Number(value);\n          outValue = new Date(outValue);\n          break;\n        default:\n          outValue = super._deserializeValue(value, type);\n          break;\n      }\n      return outValue;\n    }\n    /* eslint-enable no-fallthrough */\n\n    /**\n     * Overrides PropertiesChanged implementation to save existing prototype\n     * property value so that it can be reset.\n     * @param {string} property Name of the property\n     * @param {boolean=} readOnly When true, no setter is created\n     *\n     * When calling on a prototype, any overwritten values are saved in\n     * `__dataProto`, and it is up to the subclasser to decide how/when\n     * to set those properties back into the accessor.  When calling on an\n     * instance, the overwritten value is set via `_setPendingProperty`,\n     * and the user should call `_invalidateProperties` or `_flushProperties`\n     * for the values to take effect.\n     * @protected\n     * @return {void}\n     * @override\n     */\n    _definePropertyAccessor(property, readOnly) {\n      saveAccessorValue(this, property);\n      super._definePropertyAccessor(property, readOnly);\n    }\n\n    /**\n     * Returns true if this library created an accessor for the given property.\n     *\n     * @param {string} property Property name\n     * @return {boolean} True if an accessor was created\n     * @override\n     */\n    _hasAccessor(property) {\n      return this.__dataHasAccessor && this.__dataHasAccessor[property];\n    }\n\n    /**\n     * Returns true if the specified property has a pending change.\n     *\n     * @param {string} prop Property name\n     * @return {boolean} True if property has a pending change\n     * @protected\n     * @override\n     */\n    _isPropertyPending(prop) {\n      return Boolean(this.__dataPending && (prop in this.__dataPending));\n    }\n\n  }\n\n  return PropertyAccessors;\n\n});\n"
    },
    {
     "id": 85,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/mixins/properties-changed.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { microTask } from '../utils/async.js';\nimport { wrap } from '../utils/wrap.js';\n\n/** @const {!AsyncInterface} */\nconst microtask = microTask;\n\n/**\n * Element class mixin that provides basic meta-programming for creating one\n * or more property accessors (getter/setter pair) that enqueue an async\n * (batched) `_propertiesChanged` callback.\n *\n * For basic usage of this mixin, call `MyClass.createProperties(props)`\n * once at class definition time to create property accessors for properties\n * named in props, implement `_propertiesChanged` to react as desired to\n * property changes, and implement `static get observedAttributes()` and\n * include lowercase versions of any property names that should be set from\n * attributes. Last, call `this._enableProperties()` in the element's\n * `connectedCallback` to enable the accessors.\n *\n * @mixinFunction\n * @polymer\n * @summary Element class mixin for reacting to property changes from\n *   generated property accessors.\n */\nexport const PropertiesChanged = dedupingMixin(\n    /**\n     * @template T\n     * @param {function(new:T)} superClass Class to apply mixin to.\n     * @return {function(new:T)} superClass with mixin applied.\n     */\n    (superClass) => {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_PropertiesChanged}\n   * @unrestricted\n   */\n  class PropertiesChanged extends superClass {\n\n    /**\n     * Creates property accessors for the given property names.\n     * @param {!Object} props Object whose keys are names of accessors.\n     * @return {void}\n     * @protected\n     */\n    static createProperties(props) {\n      const proto = this.prototype;\n      for (let prop in props) {\n        // don't stomp an existing accessor\n        if (!(prop in proto)) {\n          proto._createPropertyAccessor(prop);\n        }\n      }\n    }\n\n    /**\n     * Returns an attribute name that corresponds to the given property.\n     * The attribute name is the lowercased property name. Override to\n     * customize this mapping.\n     * @param {string} property Property to convert\n     * @return {string} Attribute name corresponding to the given property.\n     *\n     * @protected\n     */\n    static attributeNameForProperty(property) {\n      return property.toLowerCase();\n    }\n\n    /**\n     * Override point to provide a type to which to deserialize a value to\n     * a given property.\n     * @param {string} name Name of property\n     *\n     * @protected\n     */\n    static typeForProperty(name) { } //eslint-disable-line no-unused-vars\n\n    /**\n     * Creates a setter/getter pair for the named property with its own\n     * local storage.  The getter returns the value in the local storage,\n     * and the setter calls `_setProperty`, which updates the local storage\n     * for the property and enqueues a `_propertiesChanged` callback.\n     *\n     * This method may be called on a prototype or an instance.  Calling\n     * this method may overwrite a property value that already exists on\n     * the prototype/instance by creating the accessor.\n     *\n     * @param {string} property Name of the property\n     * @param {boolean=} readOnly When true, no setter is created; the\n     *   protected `_setProperty` function must be used to set the property\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _createPropertyAccessor(property, readOnly) {\n      this._addPropertyToAttributeMap(property);\n      if (!this.hasOwnProperty('__dataHasAccessor')) {\n        this.__dataHasAccessor = Object.assign({}, this.__dataHasAccessor);\n      }\n      if (!this.__dataHasAccessor[property]) {\n        this.__dataHasAccessor[property] = true;\n        this._definePropertyAccessor(property, readOnly);\n      }\n    }\n\n    /**\n     * Adds the given `property` to a map matching attribute names\n     * to property names, using `attributeNameForProperty`. This map is\n     * used when deserializing attribute values to properties.\n     *\n     * @param {string} property Name of the property\n     * @override\n     */\n    _addPropertyToAttributeMap(property) {\n      if (!this.hasOwnProperty('__dataAttributes')) {\n        this.__dataAttributes = Object.assign({}, this.__dataAttributes);\n      }\n      if (!this.__dataAttributes[property]) {\n        const attr = this.constructor.attributeNameForProperty(property);\n        this.__dataAttributes[attr] = property;\n      }\n    }\n\n    /**\n     * Defines a property accessor for the given property.\n     * @param {string} property Name of the property\n     * @param {boolean=} readOnly When true, no setter is created\n     * @return {void}\n     * @override\n     */\n     _definePropertyAccessor(property, readOnly) {\n      Object.defineProperty(this, property, {\n        /* eslint-disable valid-jsdoc */\n        /** @this {PropertiesChanged} */\n        get() {\n          return this._getProperty(property);\n        },\n        /** @this {PropertiesChanged} */\n        set: readOnly ? function () {} : function (value) {\n          this._setProperty(property, value);\n        }\n        /* eslint-enable */\n      });\n    }\n\n    constructor() {\n      super();\n      /** @protected {boolean} */\n      this.__dataEnabled = false;\n      this.__dataReady = false;\n      this.__dataInvalid = false;\n      this.__data = {};\n      this.__dataPending = null;\n      this.__dataOld = null;\n      this.__dataInstanceProps = null;\n      this.__serializing = false;\n      this._initializeProperties();\n    }\n\n    /**\n     * Lifecycle callback called when properties are enabled via\n     * `_enableProperties`.\n     *\n     * Users may override this function to implement behavior that is\n     * dependent on the element having its property data initialized, e.g.\n     * from defaults (initialized from `constructor`, `_initializeProperties`),\n     * `attributeChangedCallback`, or values propagated from host e.g. via\n     * bindings.  `super.ready()` must be called to ensure the data system\n     * becomes enabled.\n     *\n     * @return {void}\n     * @public\n     * @override\n     */\n    ready() {\n      this.__dataReady = true;\n      this._flushProperties();\n    }\n\n    /**\n     * Initializes the local storage for property accessors.\n     *\n     * Provided as an override point for performing any setup work prior\n     * to initializing the property accessor system.\n     *\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _initializeProperties() {\n      // Capture instance properties; these will be set into accessors\n      // during first flush. Don't set them here, since we want\n      // these to overwrite defaults/constructor assignments\n      for (let p in this.__dataHasAccessor) {\n        if (this.hasOwnProperty(p)) {\n          this.__dataInstanceProps = this.__dataInstanceProps || {};\n          this.__dataInstanceProps[p] = this[p];\n          delete this[p];\n        }\n      }\n    }\n\n    /**\n     * Called at ready time with bag of instance properties that overwrote\n     * accessors when the element upgraded.\n     *\n     * The default implementation sets these properties back into the\n     * setter at ready time.  This method is provided as an override\n     * point for customizing or providing more efficient initialization.\n     *\n     * @param {Object} props Bag of property values that were overwritten\n     *   when creating property accessors.\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _initializeInstanceProperties(props) {\n      Object.assign(this, props);\n    }\n\n    /**\n     * Updates the local storage for a property (via `_setPendingProperty`)\n     * and enqueues a `_proeprtiesChanged` callback.\n     *\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _setProperty(property, value) {\n      if (this._setPendingProperty(property, value)) {\n        this._invalidateProperties();\n      }\n    }\n\n    /**\n     * Returns the value for the given property.\n     * @param {string} property Name of property\n     * @return {*} Value for the given property\n     * @protected\n     * @override\n     */\n    _getProperty(property) {\n      return this.__data[property];\n    }\n\n    /* eslint-disable no-unused-vars */\n    /**\n     * Updates the local storage for a property, records the previous value,\n     * and adds it to the set of \"pending changes\" that will be passed to the\n     * `_propertiesChanged` callback.  This method does not enqueue the\n     * `_propertiesChanged` callback.\n     *\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @param {boolean=} ext Not used here; affordance for closure\n     * @return {boolean} Returns true if the property changed\n     * @protected\n     * @override\n     */\n    _setPendingProperty(property, value, ext) {\n      let old = this.__data[property];\n      let changed = this._shouldPropertyChange(property, value, old);\n      if (changed) {\n        if (!this.__dataPending) {\n          this.__dataPending = {};\n          this.__dataOld = {};\n        }\n        // Ensure old is captured from the last turn\n        if (this.__dataOld && !(property in this.__dataOld)) {\n          this.__dataOld[property] = old;\n        }\n        this.__data[property] = value;\n        this.__dataPending[property] = value;\n      }\n      return changed;\n    }\n    /* eslint-enable */\n\n    /**\n     * Marks the properties as invalid, and enqueues an async\n     * `_propertiesChanged` callback.\n     *\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _invalidateProperties() {\n      if (!this.__dataInvalid && this.__dataReady) {\n        this.__dataInvalid = true;\n        microtask.run(() => {\n          if (this.__dataInvalid) {\n            this.__dataInvalid = false;\n            this._flushProperties();\n          }\n        });\n      }\n    }\n\n    /**\n     * Call to enable property accessor processing. Before this method is\n     * called accessor values will be set but side effects are\n     * queued. When called, any pending side effects occur immediately.\n     * For elements, generally `connectedCallback` is a normal spot to do so.\n     * It is safe to call this method multiple times as it only turns on\n     * property accessors once.\n     *\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _enableProperties() {\n      if (!this.__dataEnabled) {\n        this.__dataEnabled = true;\n        if (this.__dataInstanceProps) {\n          this._initializeInstanceProperties(this.__dataInstanceProps);\n          this.__dataInstanceProps = null;\n        }\n        this.ready();\n      }\n    }\n\n    /**\n     * Calls the `_propertiesChanged` callback with the current set of\n     * pending changes (and old values recorded when pending changes were\n     * set), and resets the pending set of changes. Generally, this method\n     * should not be called in user code.\n     *\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _flushProperties() {\n      const props = this.__data;\n      const changedProps = this.__dataPending;\n      const old = this.__dataOld;\n      if (this._shouldPropertiesChange(props, changedProps, old)) {\n        this.__dataPending = null;\n        this.__dataOld = null;\n        this._propertiesChanged(props, changedProps, old);\n      }\n    }\n\n    /**\n     * Called in `_flushProperties` to determine if `_propertiesChanged`\n     * should be called. The default implementation returns true if\n     * properties are pending. Override to customize when\n     * `_propertiesChanged` is called.\n     * @param {!Object} currentProps Bag of all current accessor values\n     * @param {?Object} changedProps Bag of properties changed since the last\n     *   call to `_propertiesChanged`\n     * @param {?Object} oldProps Bag of previous values for each property\n     *   in `changedProps`\n     * @return {boolean} true if changedProps is truthy\n     * @override\n     */\n    _shouldPropertiesChange(currentProps, changedProps, oldProps) { // eslint-disable-line no-unused-vars\n      return Boolean(changedProps);\n    }\n\n    /**\n     * Callback called when any properties with accessors created via\n     * `_createPropertyAccessor` have been set.\n     *\n     * @param {!Object} currentProps Bag of all current accessor values\n     * @param {?Object} changedProps Bag of properties changed since the last\n     *   call to `_propertiesChanged`\n     * @param {?Object} oldProps Bag of previous values for each property\n     *   in `changedProps`\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _propertiesChanged(currentProps, changedProps, oldProps) { // eslint-disable-line no-unused-vars\n    }\n\n    /**\n     * Method called to determine whether a property value should be\n     * considered as a change and cause the `_propertiesChanged` callback\n     * to be enqueued.\n     *\n     * The default implementation returns `true` if a strict equality\n     * check fails. The method always returns false for `NaN`.\n     *\n     * Override this method to e.g. provide stricter checking for\n     * Objects/Arrays when using immutable patterns.\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     *   and enqueue a `_proeprtiesChanged` callback\n     * @protected\n     * @override\n     */\n    _shouldPropertyChange(property, value, old) {\n      return (\n        // Strict equality check\n        (old !== value &&\n          // This ensures (old==NaN, value==NaN) always returns false\n          (old === old || value === value))\n      );\n    }\n\n    /**\n     * Implements native Custom Elements `attributeChangedCallback` to\n     * set an attribute value to a property via `_attributeToProperty`.\n     *\n     * @param {string} name Name of attribute that changed\n     * @param {?string} old Old attribute value\n     * @param {?string} value New attribute value\n     * @param {?string=} namespace Attribute namespace.\n     * @return {void}\n     * @suppress {missingProperties} Super may or may not implement the callback\n     * @override\n     */\n    attributeChangedCallback(name, old, value, namespace) {\n      if (old !== value) {\n        this._attributeToProperty(name, value);\n      }\n      if (super.attributeChangedCallback) {\n        super.attributeChangedCallback(name, old, value, namespace);\n      }\n    }\n\n    /**\n     * Deserializes an attribute to its associated property.\n     *\n     * This method calls the `_deserializeValue` method to convert the string to\n     * a typed value.\n     *\n     * @param {string} attribute Name of attribute to deserialize.\n     * @param {?string} value of the attribute.\n     * @param {*=} type type to deserialize to, defaults to the value\n     * returned from `typeForProperty`\n     * @return {void}\n     * @override\n     */\n    _attributeToProperty(attribute, value, type) {\n      if (!this.__serializing) {\n        const map = this.__dataAttributes;\n        const property = map && map[attribute] || attribute;\n        this[property] = this._deserializeValue(value, type ||\n          this.constructor.typeForProperty(property));\n      }\n    }\n\n    /**\n     * Serializes a property to its associated attribute.\n     *\n     * @suppress {invalidCasts} Closure can't figure out `this` is an element.\n     *\n     * @param {string} property Property name to reflect.\n     * @param {string=} attribute Attribute name to reflect to.\n     * @param {*=} value Property value to refect.\n     * @return {void}\n     * @override\n     */\n    _propertyToAttribute(property, attribute, value) {\n      this.__serializing = true;\n      value = (arguments.length < 3) ? this[property] : value;\n      this._valueToNodeAttribute(/** @type {!HTMLElement} */(this), value,\n        attribute || this.constructor.attributeNameForProperty(property));\n      this.__serializing = false;\n    }\n\n    /**\n     * Sets a typed value to an HTML attribute on a node.\n     *\n     * This method calls the `_serializeValue` method to convert the typed\n     * value to a string.  If the `_serializeValue` method returns `undefined`,\n     * the attribute will be removed (this is the default for boolean\n     * type `false`).\n     *\n     * @param {Element} node Element to set attribute to.\n     * @param {*} value Value to serialize.\n     * @param {string} attribute Attribute name to serialize to.\n     * @return {void}\n     * @override\n     */\n    _valueToNodeAttribute(node, value, attribute) {\n      const str = this._serializeValue(value);\n      if (str === undefined) {\n        node.removeAttribute(attribute);\n      } else {\n        if (attribute === 'class' || attribute === 'name' || attribute === 'slot') {\n          node = /** @type {?Element} */(wrap(node));\n        }\n        node.setAttribute(attribute, str);\n      }\n    }\n\n    /**\n     * Converts a typed JavaScript value to a string.\n     *\n     * This method is called when setting JS property values to\n     * HTML attributes.  Users may override this method to provide\n     * serialization for custom types.\n     *\n     * @param {*} value Property value to serialize.\n     * @return {string | undefined} String serialized from the provided\n     * property  value.\n     * @override\n     */\n    _serializeValue(value) {\n      switch (typeof value) {\n        case 'boolean':\n          return value ? '' : undefined;\n        default:\n          return value != null ? value.toString() : undefined;\n      }\n    }\n\n    /**\n     * Converts a string to a typed JavaScript value.\n     *\n     * This method is called when reading HTML attribute values to\n     * JS properties.  Users may override this method to provide\n     * deserialization for custom `type`s. Types for `Boolean`, `String`,\n     * and `Number` convert attributes to the expected types.\n     *\n     * @param {?string} value Value to deserialize.\n     * @param {*=} type Type to deserialize the string to.\n     * @return {*} Typed value deserialized from the provided string.\n     * @override\n     */\n    _deserializeValue(value, type) {\n      switch (type) {\n        case Boolean:\n          return (value !== null);\n        case Number:\n          return Number(value);\n        default:\n          return value;\n      }\n    }\n\n  }\n\n  return PropertiesChanged;\n});\n"
    },
    {
     "id": 86,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/legacy/templatizer-behavior.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport { TemplateInstanceBase, templatize, modelForElement } from '../utils/templatize.js'; // eslint-disable-line no-unused-vars\n\n/**\n * @typedef {{\n *   _templatizerTemplate: HTMLTemplateElement,\n *   _parentModel: boolean,\n *   _instanceProps: Object,\n *   _forwardHostPropV2: Function,\n *   _notifyInstancePropV2: Function,\n *   ctor: TemplateInstanceBase\n * }}\n */\nlet TemplatizerUser; // eslint-disable-line\n\n/**\n * The `Templatizer` behavior adds methods to generate instances of\n * templates that are each managed by an anonymous `PropertyEffects`\n * instance where data-bindings in the stamped template content are bound to\n * accessors on itself.\n *\n * This behavior is provided in Polymer 2.x-3.x as a hybrid-element convenience\n * only.  For non-hybrid usage, the `Templatize` library\n * should be used instead.\n *\n * Example:\n *\n *     import {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\n *     // Get a template from somewhere, e.g. light DOM\n *     let template = this.querySelector('template');\n *     // Prepare the template\n *     this.templatize(template);\n *     // Instance the template with an initial data model\n *     let instance = this.stamp({myProp: 'initial'});\n *     // Insert the instance's DOM somewhere, e.g. light DOM\n *     dom(this).appendChild(instance.root);\n *     // Changing a property on the instance will propagate to bindings\n *     // in the template\n *     instance.myProp = 'new value';\n *\n * Users of `Templatizer` may need to implement the following abstract\n * API's to determine how properties and paths from the host should be\n * forwarded into to instances:\n *\n *     _forwardHostPropV2: function(prop, value)\n *\n * Likewise, users may implement these additional abstract API's to determine\n * how instance-specific properties that change on the instance should be\n * forwarded out to the host, if necessary.\n *\n *     _notifyInstancePropV2: function(inst, prop, value)\n *\n * In order to determine which properties are instance-specific and require\n * custom notification via `_notifyInstanceProp`, define an `_instanceProps`\n * object containing keys for each instance prop, for example:\n *\n *     _instanceProps: {\n *       item: true,\n *       index: true\n *     }\n *\n * Any properties used in the template that are not defined in _instanceProp\n * will be forwarded out to the Templatize `owner` automatically.\n *\n * Users may also implement the following abstract function to show or\n * hide any DOM generated using `stamp`:\n *\n *     _showHideChildren: function(shouldHide)\n *\n * Note that some callbacks are suffixed with `V2` in the Polymer 2.x behavior\n * as the implementations will need to differ from the callbacks required\n * by the 1.x Templatizer API due to changes in the `TemplateInstance` API\n * between versions 1.x and 2.x.\n *\n * @polymerBehavior\n */\nexport const Templatizer = {\n\n  /**\n   * Generates an anonymous `TemplateInstance` class (stored as `this.ctor`)\n   * for the provided template.  This method should be called once per\n   * template to prepare an element for stamping the template, followed\n   * by `stamp` to create new instances of the template.\n   *\n   * @param {!HTMLTemplateElement} template Template to prepare\n   * @param {boolean=} mutableData When `true`, the generated class will skip\n   *   strict dirty-checking for objects and arrays (always consider them to\n   *   be \"dirty\"). Defaults to false.\n   * @return {void}\n   * @this {TemplatizerUser}\n   */\n  templatize(template, mutableData) {\n    this._templatizerTemplate = template;\n    this.ctor = templatize(template, this, {\n      mutableData: Boolean(mutableData),\n      parentModel: this._parentModel,\n      instanceProps: this._instanceProps,\n      forwardHostProp: this._forwardHostPropV2,\n      notifyInstanceProp: this._notifyInstancePropV2\n    });\n  },\n\n  /**\n   * Creates an instance of the template prepared by `templatize`.  The object\n   * returned is an instance of the anonymous class generated by `templatize`\n   * whose `root` property is a document fragment containing newly cloned\n   * template content, and which has property accessors corresponding to\n   * properties referenced in template bindings.\n   *\n   * @param {Object=} model Object containing initial property values to\n   *   populate into the template bindings.\n   * @return {TemplateInstanceBase} Returns the created instance of\n   * the template prepared by `templatize`.\n   * @this {TemplatizerUser}\n   */\n  stamp(model) {\n    return new this.ctor(model);\n  },\n\n  /**\n   * Returns the template \"model\" (`TemplateInstance`) associated with\n   * a given element, which serves as the binding scope for the template\n   * instance the element is contained in.  A template model should be used\n   * to manipulate data associated with this template instance.\n   *\n   * @param {HTMLElement} el Element for which to return a template model.\n   * @return {TemplateInstanceBase} Model representing the binding scope for\n   *   the element.\n   * @this {TemplatizerUser}\n   */\n  modelForElement(el) {\n    return modelForElement(this._templatizerTemplate, el);\n  }\n};\n"
    },
    {
     "id": 87,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/legacy/mutable-data-behavior.js",
     "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport { MutableData } from '../mixins/mutable-data.js';\n\nlet mutablePropertyChange;\n/** @suppress {missingProperties} */\n(() => {\n  mutablePropertyChange = MutableData._mutablePropertyChange;\n})();\n\n/**\n * Legacy element behavior to skip strict dirty-checking for objects and arrays,\n * (always consider them to be \"dirty\") for use on legacy API Polymer elements.\n *\n * By default, `Polymer.PropertyEffects` performs strict dirty checking on\n * objects, which means that any deep modifications to an object or array will\n * not be propagated unless \"immutable\" data patterns are used (i.e. all object\n * references from the root to the mutation were changed).\n *\n * Polymer also provides a proprietary data mutation and path notification API\n * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient\n * mutation and notification of deep changes in an object graph to all elements\n * bound to the same object graph.\n *\n * In cases where neither immutable patterns nor the data mutation API can be\n * used, applying this mixin will cause Polymer to skip dirty checking for\n * objects and arrays (always consider them to be \"dirty\").  This allows a\n * user to make a deep modification to a bound object graph, and then either\n * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`\n * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all\n * elements that wish to be updated based on deep mutations must apply this\n * mixin or otherwise skip strict dirty checking for objects/arrays.\n * Specifically, any elements in the binding tree between the source of a\n * mutation and the consumption of it must apply this behavior or enable the\n * `Polymer.OptionalMutableDataBehavior`.\n *\n * In order to make the dirty check strategy configurable, see\n * `Polymer.OptionalMutableDataBehavior`.\n *\n * Note, the performance characteristics of propagating large object graphs\n * will be worse as opposed to using strict dirty checking with immutable\n * patterns or Polymer's path notification API.\n *\n * @polymerBehavior\n * @summary Behavior to skip strict dirty-checking for objects and\n *   arrays\n */\nexport const MutableDataBehavior = {\n\n  /**\n   * Overrides `Polymer.PropertyEffects` to provide option for skipping\n   * strict equality checking for Objects and Arrays.\n   *\n   * This method pulls the value to dirty check against from the `__dataTemp`\n   * cache (rather than the normal `__data` cache) for Objects.  Since the temp\n   * cache is cleared at the end of a turn, this implementation allows\n   * side-effects of deep object changes to be processed by re-setting the\n   * same object (using the temp cache as an in-turn backstop to prevent\n   * cycles due to 2-way notification).\n   *\n   * @param {string} property Property name\n   * @param {*} value New property value\n   * @param {*} old Previous property value\n   * @return {boolean} Whether the property should be considered a change\n   * @protected\n   */\n  _shouldPropertyChange(property, value, old) {\n    return mutablePropertyChange(this, property, value, old, true);\n  }\n};\n\n/**\n * Legacy element behavior to add the optional ability to skip strict\n * dirty-checking for objects and arrays (always consider them to be\n * \"dirty\") by setting a `mutable-data` attribute on an element instance.\n *\n * By default, `Polymer.PropertyEffects` performs strict dirty checking on\n * objects, which means that any deep modifications to an object or array will\n * not be propagated unless \"immutable\" data patterns are used (i.e. all object\n * references from the root to the mutation were changed).\n *\n * Polymer also provides a proprietary data mutation and path notification API\n * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient\n * mutation and notification of deep changes in an object graph to all elements\n * bound to the same object graph.\n *\n * In cases where neither immutable patterns nor the data mutation API can be\n * used, applying this mixin will allow Polymer to skip dirty checking for\n * objects and arrays (always consider them to be \"dirty\").  This allows a\n * user to make a deep modification to a bound object graph, and then either\n * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`\n * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all\n * elements that wish to be updated based on deep mutations must apply this\n * mixin or otherwise skip strict dirty checking for objects/arrays.\n * Specifically, any elements in the binding tree between the source of a\n * mutation and the consumption of it must enable this behavior or apply the\n * `Polymer.OptionalMutableDataBehavior`.\n *\n * While this behavior adds the ability to forgo Object/Array dirty checking,\n * the `mutableData` flag defaults to false and must be set on the instance.\n *\n * Note, the performance characteristics of propagating large object graphs\n * will be worse by relying on `mutableData: true` as opposed to using\n * strict dirty checking with immutable patterns or Polymer's path notification\n * API.\n *\n * @polymerBehavior\n * @summary Behavior to optionally skip strict dirty-checking for objects and\n *   arrays\n */\nexport const OptionalMutableDataBehavior = {\n\n  properties: {\n    /**\n     * Instance-level flag for configuring the dirty-checking strategy\n     * for this element.  When true, Objects and Arrays will skip dirty\n     * checking, otherwise strict equality checking will be used.\n     */\n    mutableData: Boolean\n  },\n\n  /**\n   * Overrides `Polymer.PropertyEffects` to skip strict equality checking\n   * for Objects and Arrays.\n   *\n   * Pulls the value to dirty check against from the `__dataTemp` cache\n   * (rather than the normal `__data` cache) for Objects.  Since the temp\n   * cache is cleared at the end of a turn, this implementation allows\n   * side-effects of deep object changes to be processed by re-setting the\n   * same object (using the temp cache as an in-turn backstop to prevent\n   * cycles due to 2-way notification).\n   *\n   * @param {string} property Property name\n   * @param {*} value New property value\n   * @param {*} old Previous property value\n   * @return {boolean} Whether the property should be considered a change\n   * @this {this}\n   * @protected\n   */\n  _shouldPropertyChange(property, value, old) {\n    return mutablePropertyChange(this, property, value, old, this.mutableData);\n  }\n};\n"
    },
    {
     "id": 88,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-element-mixin@2.4.2/node_modules/@vaadin/vaadin-element-mixin/vaadin-dir-helper.js",
     "source": "/**\n@license\nCopyright (c) 2020 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/**\n * Helper that provides a set of functions for RTL.\n */\nclass DirHelper {\n  /**\n   * Get the scroll type in the current browser view.\n   *\n   * @return {string} the scroll type. Possible values are `default|reverse|negative`\n   */\n  static detectScrollType() {\n    const dummy = document.createElement('div');\n    dummy.textContent = 'ABCD';\n    dummy.dir = 'rtl';\n    dummy.style.fontSize = '14px';\n    dummy.style.width = '4px';\n    dummy.style.height = '1px';\n    dummy.style.position = 'absolute';\n    dummy.style.top = '-1000px';\n    dummy.style.overflow = 'scroll';\n    document.body.appendChild(dummy);\n\n    let cachedType = 'reverse';\n    if (dummy.scrollLeft > 0) {\n      cachedType = 'default';\n    } else {\n      dummy.scrollLeft = 2;\n      if (dummy.scrollLeft < 2) {\n        cachedType = 'negative';\n      }\n    }\n    document.body.removeChild(dummy);\n    return cachedType;\n  }\n\n  /**\n   * Get the scrollLeft value of the element relative to the direction\n   *\n   * @param {string} scrollType type of the scroll detected with `detectScrollType`\n   * @param {string} direction current direction of the element\n   * @param {Element} element\n   * @return {number} the scrollLeft value.\n  */\n  static getNormalizedScrollLeft(scrollType, direction, element) {\n    const {scrollLeft} = element;\n    if (direction !== 'rtl' || !scrollType) {\n      return scrollLeft;\n    }\n\n    switch (scrollType) {\n      case 'negative':\n        return element.scrollWidth - element.clientWidth + scrollLeft;\n      case 'reverse':\n        return element.scrollWidth - element.clientWidth - scrollLeft;\n    }\n    return scrollLeft;\n  }\n\n  /**\n   * Set the scrollLeft value of the element relative to the direction\n   *\n   * @param {string} scrollType type of the scroll detected with `detectScrollType`\n   * @param {string} direction current direction of the element\n   * @param {Element} element\n   * @param {number} scrollLeft the scrollLeft value to be set\n   */\n  static setNormalizedScrollLeft(scrollType, direction, element, scrollLeft) {\n    if (direction !== 'rtl' || !scrollType) {\n      element.scrollLeft = scrollLeft;\n      return;\n    }\n\n    switch (scrollType) {\n      case 'negative':\n        element.scrollLeft = element.clientWidth - element.scrollWidth + scrollLeft;\n        break;\n      case 'reverse':\n        element.scrollLeft = element.scrollWidth - element.clientWidth - scrollLeft;\n        break;\n      default:\n        element.scrollLeft = scrollLeft;\n        break;\n    }\n  }\n}\n\nexport { DirHelper };\n"
    },
    {
     "id": 89,
     "name": "../node_modules/.pnpm/@polymer+iron-scroll-target-behavior@3.0.1/node_modules/@polymer/iron-scroll-target-behavior/iron-scroll-target-behavior.js",
     "source": "/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\n\n/**\n * `Polymer.IronScrollTargetBehavior` allows an element to respond to scroll\n * events from a designated scroll target.\n *\n * Elements that consume this behavior can override the `_scrollHandler`\n * method to add logic on the scroll event.\n *\n * @demo demo/scrolling-region.html Scrolling Region\n * @demo demo/document.html Document Element\n * @polymerBehavior\n */\nexport const IronScrollTargetBehavior = {\n\n  properties: {\n\n    /**\n     * Specifies the element that will handle the scroll event\n     * on the behalf of the current element. This is typically a reference to an\n     *element, but there are a few more posibilities:\n     *\n     * ### Elements id\n     *\n     *```html\n     * <div id=\"scrollable-element\" style=\"overflow: auto;\">\n     *  <x-element scroll-target=\"scrollable-element\">\n     *    <!-- Content-->\n     *  </x-element>\n     * </div>\n     *```\n     * In this case, the `scrollTarget` will point to the outer div element.\n     *\n     * ### Document scrolling\n     *\n     * For document scrolling, you can use the reserved word `document`:\n     *\n     *```html\n     * <x-element scroll-target=\"document\">\n     *   <!-- Content -->\n     * </x-element>\n     *```\n     *\n     * ### Elements reference\n     *\n     *```js\n     * appHeader.scrollTarget = document.querySelector('#scrollable-element');\n     *```\n     *\n     * @type {HTMLElement}\n     * @default document\n     */\n    scrollTarget: {\n      type: HTMLElement,\n      value: function() {\n        return this._defaultScrollTarget;\n      }\n    }\n  },\n\n  observers: ['_scrollTargetChanged(scrollTarget, isAttached)'],\n\n  /**\n   * True if the event listener should be installed.\n   */\n  _shouldHaveListener: true,\n\n  _scrollTargetChanged: function(scrollTarget, isAttached) {\n    var eventTarget;\n\n    if (this._oldScrollTarget) {\n      this._toggleScrollListener(false, this._oldScrollTarget);\n      this._oldScrollTarget = null;\n    }\n    if (!isAttached) {\n      return;\n    }\n    // Support element id references\n    if (scrollTarget === 'document') {\n      this.scrollTarget = this._doc;\n\n    } else if (typeof scrollTarget === 'string') {\n      var domHost = this.domHost;\n\n      this.scrollTarget = domHost && domHost.$ ?\n          domHost.$[scrollTarget] :\n          dom(this.ownerDocument).querySelector('#' + scrollTarget);\n\n    } else if (this._isValidScrollTarget()) {\n      this._oldScrollTarget = scrollTarget;\n      this._toggleScrollListener(this._shouldHaveListener, scrollTarget);\n    }\n  },\n\n  /**\n   * Runs on every scroll event. Consumer of this behavior may override this\n   * method.\n   *\n   * @protected\n   */\n  _scrollHandler: function scrollHandler() {},\n\n  /**\n   * The default scroll target. Consumers of this behavior may want to customize\n   * the default scroll target.\n   *\n   * @type {Element}\n   */\n  get _defaultScrollTarget() {\n    return this._doc;\n  },\n\n  /**\n   * Shortcut for the document element\n   *\n   * @type {Element}\n   */\n  get _doc() {\n    return this.ownerDocument.documentElement;\n  },\n\n  /**\n   * Gets the number of pixels that the content of an element is scrolled\n   * upward.\n   *\n   * @type {number}\n   */\n  get _scrollTop() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.pageYOffset :\n                                               this.scrollTarget.scrollTop;\n    }\n    return 0;\n  },\n\n  /**\n   * Gets the number of pixels that the content of an element is scrolled to the\n   * left.\n   *\n   * @type {number}\n   */\n  get _scrollLeft() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.pageXOffset :\n                                               this.scrollTarget.scrollLeft;\n    }\n    return 0;\n  },\n\n  /**\n   * Sets the number of pixels that the content of an element is scrolled\n   * upward.\n   *\n   * @type {number}\n   */\n  set _scrollTop(top) {\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(window.pageXOffset, top);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollTop = top;\n    }\n  },\n\n  /**\n   * Sets the number of pixels that the content of an element is scrolled to the\n   * left.\n   *\n   * @type {number}\n   */\n  set _scrollLeft(left) {\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(left, window.pageYOffset);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollLeft = left;\n    }\n  },\n\n  /**\n   * Scrolls the content to a particular place.\n   *\n   * @method scroll\n   * @param {number|!{left: number, top: number}} leftOrOptions The left position or scroll options\n   * @param {number=} top The top position\n   * @return {void}\n   */\n  scroll: function(leftOrOptions, top) {\n    var left;\n\n    if (typeof leftOrOptions === 'object') {\n      left = leftOrOptions.left;\n      top = leftOrOptions.top;\n    } else {\n      left = leftOrOptions;\n    }\n\n    left = left || 0;\n    top = top || 0;\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(left, top);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollLeft = left;\n      this.scrollTarget.scrollTop = top;\n    }\n  },\n\n  /**\n   * Gets the width of the scroll target.\n   *\n   * @type {number}\n   */\n  get _scrollTargetWidth() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.innerWidth :\n                                               this.scrollTarget.offsetWidth;\n    }\n    return 0;\n  },\n\n  /**\n   * Gets the height of the scroll target.\n   *\n   * @type {number}\n   */\n  get _scrollTargetHeight() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.innerHeight :\n                                               this.scrollTarget.offsetHeight;\n    }\n    return 0;\n  },\n\n  /**\n   * Returns true if the scroll target is a valid HTMLElement.\n   *\n   * @return {boolean}\n   */\n  _isValidScrollTarget: function() {\n    return this.scrollTarget instanceof HTMLElement;\n  },\n\n  _toggleScrollListener: function(yes, scrollTarget) {\n    var eventTarget = scrollTarget === this._doc ? window : scrollTarget;\n    if (yes) {\n      if (!this._boundScrollHandler) {\n        this._boundScrollHandler = this._scrollHandler.bind(this);\n        eventTarget.addEventListener('scroll', this._boundScrollHandler);\n      }\n    } else {\n      if (this._boundScrollHandler) {\n        eventTarget.removeEventListener('scroll', this._boundScrollHandler);\n        this._boundScrollHandler = null;\n      }\n    }\n  },\n\n  /**\n   * Enables or disables the scroll event listener.\n   *\n   * @param {boolean} yes True to add the event, False to remove it.\n   */\n  toggleScrollListener: function(yes) {\n    this._shouldHaveListener = yes;\n    this._toggleScrollListener(yes, this.scrollTarget);\n  }\n\n};\n"
    },
    {
     "id": 90,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-active-item-mixin.js",
     "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nexport const ActiveItemMixin = (superClass) =>\n  class ActiveItemMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * The item user has last interacted with. Turns to `null` after user deactivates\n         * the item by re-interacting with the currently active item.\n         * @type {GridItem}\n         */\n        activeItem: {\n          type: Object,\n          notify: true,\n          value: null\n        }\n      };\n    }\n\n    ready() {\n      super.ready();\n\n      this.$.scroller.addEventListener('click', this._onClick.bind(this));\n      this.addEventListener('cell-activate', this._activateItem.bind(this));\n    }\n\n    /** @private */\n    _activateItem(e) {\n      const model = e.detail.model;\n      const clickedItem = model ? model.item : null;\n\n      if (clickedItem) {\n        this.activeItem = !this._itemsEqual(this.activeItem, clickedItem) ? clickedItem : null;\n      }\n    }\n\n    /**\n     * We need to listen to click instead of tap because on mobile safari, the\n     * document.activeElement has not been updated (focus has not been shifted)\n     * yet at the point when tap event is being executed.\n     * @param {!MouseEvent} e\n     * @protected\n     */\n    _onClick(e) {\n      if (e.defaultPrevented) {\n        // Something has handled this click already, e. g., <vaadin-grid-sorter>\n        return;\n      }\n\n      const path = e.composedPath();\n      const cell = path[path.indexOf(this.$.table) - 3];\n      if (!cell || cell.getAttribute('part').indexOf('details-cell') > -1) {\n        return;\n      }\n      const cellContent = cell._content;\n\n      const activeElement = this.getRootNode().activeElement;\n      const cellContentHasFocus = cellContent.contains(activeElement);\n      if (!cellContentHasFocus && !this._isFocusable(e.target)) {\n        this.dispatchEvent(\n          new CustomEvent('cell-activate', {\n            detail: {\n              model: this.__getRowModel(cell.parentElement)\n            }\n          })\n        );\n      }\n    }\n\n    /**\n     * @param {!Element} target\n     * @return {boolean}\n     * @protected\n     */\n    _isFocusable(target) {\n      return isFocusable(target);\n    }\n\n    /**\n     * Fired when the `activeItem` property changes.\n     *\n     * @event active-item-changed\n     */\n\n    /**\n     * Fired when the cell is activated with click or keyboard.\n     *\n     * @event cell-activate\n     */\n  };\n\n/**\n * @param {!Element} target\n * @return {boolean}\n * @protected\n */\nexport const isFocusable = (target) => {\n  if (!target.parentNode) {\n    return false;\n  }\n  const focusables = Array.from(\n    target.parentNode.querySelectorAll(\n      '[tabindex], button, input, select, textarea, object, iframe, label, a[href], area[href]'\n    )\n  ).filter((element) => element.getAttribute('part') !== 'cell body-cell');\n\n  const isFocusableElement = focusables.indexOf(target) !== -1;\n  return !target.disabled && isFocusableElement;\n};\n"
    },
    {
     "id": 91,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-data-provider-mixin.js",
     "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { timeOut } from '@polymer/polymer/lib/utils/async.js';\n\n/**\n * @private\n */\nexport const ItemCache = class ItemCache {\n  /**\n   * @param {!HTMLElement} grid\n   * @param {!ItemCache | undefined} parentCache\n   * @param {!GridItem | undefined} parentItem\n   */\n  constructor(grid, parentCache, parentItem) {\n    /** @type {!HTMLElement} */\n    this.grid = grid;\n    /** @type {!ItemCache | undefined} */\n    this.parentCache = parentCache;\n    /** @type {!GridItem | undefined} */\n    this.parentItem = parentItem;\n    /** @type {object} */\n    this.itemCaches = {};\n    /** @type {object} */\n    this.items = {};\n    /** @type {number} */\n    this.effectiveSize = 0;\n    /** @type {number} */\n    this.size = 0;\n    /** @type {object} */\n    this.pendingRequests = {};\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isLoading() {\n    return Boolean(\n      Object.keys(this.pendingRequests).length ||\n        Object.keys(this.itemCaches).filter((index) => {\n          return this.itemCaches[index].isLoading();\n        })[0]\n    );\n  }\n\n  /**\n   * @param {number} index\n   * @return {!GridItem | undefined}\n   */\n  getItemForIndex(index) {\n    const { cache, scaledIndex } = this.getCacheAndIndex(index);\n    return cache.items[scaledIndex];\n  }\n\n  updateSize() {\n    this.effectiveSize =\n      !this.parentItem || this.grid._isExpanded(this.parentItem)\n        ? this.size +\n          Object.keys(this.itemCaches).reduce((prev, curr) => {\n            const subCache = this.itemCaches[curr];\n            subCache.updateSize();\n            return prev + subCache.effectiveSize;\n          }, 0)\n        : 0;\n  }\n\n  /**\n   * @param {number} scaledIndex\n   */\n  ensureSubCacheForScaledIndex(scaledIndex) {\n    if (!this.itemCaches[scaledIndex]) {\n      const subCache = new ItemCache(this.grid, this, this.items[scaledIndex]);\n      this.itemCaches[scaledIndex] = subCache;\n      this.grid._loadPage(0, subCache);\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @return {{cache: !ItemCache, scaledIndex: number}}\n   */\n  getCacheAndIndex(index) {\n    let thisLevelIndex = index;\n    const keys = Object.keys(this.itemCaches);\n    for (let i = 0; i < keys.length; i++) {\n      const expandedIndex = Number(keys[i]);\n      const subCache = this.itemCaches[expandedIndex];\n      if (thisLevelIndex <= expandedIndex) {\n        return { cache: this, scaledIndex: thisLevelIndex };\n      } else if (thisLevelIndex <= expandedIndex + subCache.effectiveSize) {\n        return subCache.getCacheAndIndex(thisLevelIndex - expandedIndex - 1);\n      }\n      thisLevelIndex -= subCache.effectiveSize;\n    }\n    return { cache: this, scaledIndex: thisLevelIndex };\n  }\n};\n\n/**\n * @polymerMixin\n */\nexport const DataProviderMixin = (superClass) =>\n  class DataProviderMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * Number of items fetched at a time from the dataprovider.\n         * @attr {number} page-size\n         * @type {number}\n         */\n        pageSize: {\n          type: Number,\n          value: 50,\n          observer: '_pageSizeChanged'\n        },\n\n        /**\n         * Function that provides items lazily. Receives arguments `params`, `callback`\n         *\n         * `params.page` Requested page index\n         *\n         * `params.pageSize` Current page size\n         *\n         * `params.filters` Currently applied filters\n         *\n         * `params.sortOrders` Currently applied sorting orders\n         *\n         * `params.parentItem` When tree is used, and sublevel items\n         * are requested, reference to parent item of the requested sublevel.\n         * Otherwise `undefined`.\n         *\n         * `callback(items, size)` Callback function with arguments:\n         *   - `items` Current page of items\n         *   - `size` Total number of items. When tree sublevel items\n         *     are requested, total number of items in the requested sublevel.\n         *     Optional when tree is not used, required for tree.\n         *\n         * @type {GridDataProvider | null | undefined}\n         */\n        dataProvider: {\n          type: Object,\n          notify: true,\n          observer: '_dataProviderChanged'\n        },\n\n        /**\n         * `true` while data is being requested from the data provider.\n         */\n        loading: {\n          type: Boolean,\n          notify: true,\n          readOnly: true,\n          reflectToAttribute: true\n        },\n\n        /**\n         * @type {!ItemCache}\n         * @protected\n         */\n        _cache: {\n          type: Object,\n          value: function () {\n            const cache = new ItemCache(this);\n            return cache;\n          }\n        },\n\n        /**\n         * Path to an item sub-property that identifies the item.\n         * @attr {string} item-id-path\n         */\n        itemIdPath: {\n          type: String,\n          value: null\n        },\n\n        /**\n         * An array that contains the expanded items.\n         * @type {!Array<!GridItem>}\n         */\n        expandedItems: {\n          type: Object,\n          notify: true,\n          value: () => []\n        }\n      };\n    }\n\n    static get observers() {\n      return ['_sizeChanged(size)', '_itemIdPathChanged(itemIdPath)', '_expandedItemsChanged(expandedItems.*)'];\n    }\n\n    /** @private */\n    _sizeChanged(size) {\n      const delta = size - this._cache.size;\n      this._cache.size += delta;\n      this._cache.effectiveSize += delta;\n      this._effectiveSize = this._cache.effectiveSize;\n      this._increasePoolIfNeeded(0);\n      this._debounceIncreasePool && this._debounceIncreasePool.flush();\n    }\n\n    /**\n     * @param {number} index\n     * @param {HTMLElement} el\n     * @protected\n     */\n    _getItem(index, el) {\n      if (index >= this._effectiveSize) {\n        return;\n      }\n\n      el.index = index;\n      const { cache, scaledIndex } = this._cache.getCacheAndIndex(index);\n      const item = cache.items[scaledIndex];\n      if (item) {\n        this._toggleAttribute('loading', false, el);\n        this._updateItem(el, item);\n        if (this._isExpanded(item)) {\n          cache.ensureSubCacheForScaledIndex(scaledIndex);\n        }\n      } else {\n        this._toggleAttribute('loading', true, el);\n        this._loadPage(this._getPageForIndex(scaledIndex), cache);\n      }\n    }\n\n    /** @private */\n    _expandedInstanceChangedCallback(inst, value) {\n      if (inst.item === undefined) {\n        return;\n      }\n      if (value) {\n        this.expandItem(inst.item);\n      } else {\n        this.collapseItem(inst.item);\n      }\n    }\n\n    /**\n     * Returns a value that identifies the item. Uses `itemIdPath` if available.\n     * Can be customized by overriding.\n     * @param {!GridItem} item\n     * @return {!GridItem | !unknown}\n     */\n    getItemId(item) {\n      return this.itemIdPath ? this.get(this.itemIdPath, item) : item;\n    }\n\n    /**\n     * @param {!GridItem} item\n     * @return {boolean}\n     * @protected\n     */\n    _isExpanded(item) {\n      return this.__expandedKeys.has(this.getItemId(item));\n    }\n\n    /** @private */\n    _expandedItemsChanged() {\n      this.__cacheExpandedKeys();\n      this._cache.updateSize();\n      this._effectiveSize = this._cache.effectiveSize;\n      this._assignModels();\n    }\n\n    /** @private */\n    _itemIdPathChanged() {\n      this.__cacheExpandedKeys();\n    }\n\n    /** @private */\n    __cacheExpandedKeys() {\n      if (this.expandedItems) {\n        this.__expandedKeys = new Set();\n        this.expandedItems.forEach((item) => {\n          this.__expandedKeys.add(this.getItemId(item));\n        });\n      }\n    }\n\n    /**\n     * Expands the given item tree.\n     * @param {!GridItem} item\n     */\n    expandItem(item) {\n      if (!this._isExpanded(item)) {\n        this.push('expandedItems', item);\n      }\n    }\n\n    /**\n     * Collapses the given item tree.\n     * @param {!GridItem} item\n     */\n    collapseItem(item) {\n      if (this._isExpanded(item)) {\n        this.splice('expandedItems', this._getItemIndexInArray(item, this.expandedItems), 1);\n      }\n    }\n\n    /**\n     * @param {number} index\n     * @return {number}\n     * @protected\n     */\n    _getIndexLevel(index) {\n      let { cache } = this._cache.getCacheAndIndex(index);\n      let level = 0;\n      while (cache.parentCache) {\n        cache = cache.parentCache;\n        level++;\n      }\n      return level;\n    }\n\n    /**\n     * @return {boolean}\n     * @protected\n     */\n    _canPopulate() {\n      return Boolean(this._hasData && this._columnTree);\n    }\n\n    /**\n     * @param {number} page\n     * @param {ItemCache} cache\n     * @protected\n     */\n    _loadPage(page, cache) {\n      // make sure same page isn't requested multiple times.\n      if (!cache.pendingRequests[page] && this.dataProvider) {\n        this._setLoading(true);\n        cache.pendingRequests[page] = true;\n        const params = {\n          page,\n          pageSize: this.pageSize,\n          sortOrders: this._mapSorters(),\n          filters: this._mapFilters(),\n          parentItem: cache.parentItem\n        };\n        this._debounceIncreasePool && this._debounceIncreasePool.flush();\n        this.dataProvider(params, (items, size) => {\n          if (size !== undefined) {\n            cache.size = size;\n          } else {\n            if (params.parentItem) {\n              cache.size = items.length;\n            }\n          }\n\n          const currentItems = Array.from(this.$.items.children).map((row) => row._item);\n\n          // Populate the cache with new items\n          items.forEach((item, itemsIndex) => {\n            const itemIndex = page * this.pageSize + itemsIndex;\n            cache.items[itemIndex] = item;\n            if (this._isExpanded(item) && currentItems.indexOf(item) > -1) {\n              // Force synchronous data request for expanded item sub-cache\n              cache.ensureSubCacheForScaledIndex(itemIndex);\n            }\n          });\n\n          this._hasData = true;\n\n          delete cache.pendingRequests[page];\n\n          this._debouncerApplyCachedData = Debouncer.debounce(this._debouncerApplyCachedData, timeOut.after(0), () => {\n            this._setLoading(false);\n            this._cache.updateSize();\n            this._effectiveSize = this._cache.effectiveSize;\n\n            Array.from(this.$.items.children)\n              .filter((row) => !row.hidden)\n              .forEach((row) => {\n                const cachedItem = this._cache.getItemForIndex(row.index);\n                if (cachedItem) {\n                  this._getItem(row.index, row);\n                }\n              });\n\n            this._increasePoolIfNeeded(0);\n            this.__scrollToPendingIndex();\n          });\n\n          if (!this._cache.isLoading()) {\n            this._debouncerApplyCachedData.flush();\n          }\n\n          this.__itemsReceived();\n        });\n      }\n    }\n\n    /**\n     * @param {number} index\n     * @return {number}\n     * @private\n     */\n    _getPageForIndex(index) {\n      return Math.floor(index / this.pageSize);\n    }\n\n    /**\n     * Clears the cached pages and reloads data from dataprovider when needed.\n     */\n    clearCache() {\n      this._cache = new ItemCache(this);\n      Array.from(this.$.items.children).forEach((row) => {\n        Array.from(row.children).forEach((cell) => {\n          // Force data system to pick up subproperty changes\n          cell._instance && cell._instance._setPendingProperty('item', {}, false);\n        });\n      });\n      this._cache.size = this.size || 0;\n      this._cache.updateSize();\n      this._hasData = false;\n      this._assignModels();\n\n      if (!this._effectiveSize || !this._initialPoolCreated) {\n        this._loadPage(0, this._cache);\n      }\n    }\n\n    /** @private */\n    _pageSizeChanged(pageSize, oldPageSize) {\n      if (oldPageSize !== undefined && pageSize !== oldPageSize) {\n        this.clearCache();\n      }\n    }\n\n    /** @protected */\n    _checkSize() {\n      if (this.size === undefined && this._effectiveSize === 0) {\n        console.warn(\n          'The <vaadin-grid> needs the total number of items' +\n            ' in order to display rows. Set the total number of items' +\n            ' to the `size` property, or provide the total number of items' +\n            ' in the second argument of the `dataProvider`’s `callback` call.'\n        );\n      }\n    }\n\n    /** @private */\n    _dataProviderChanged(dataProvider, oldDataProvider) {\n      if (oldDataProvider !== undefined) {\n        this.clearCache();\n      }\n\n      if (dataProvider && this.items && this.items.length) {\n        // Fixes possibly invalid cached lastVisibleIndex value in <iron-list>\n        this._scrollToIndex(this._firstVisibleIndex);\n      }\n\n      this._ensureFirstPageLoaded();\n\n      this._debouncerCheckSize = Debouncer.debounce(\n        this._debouncerCheckSize,\n        timeOut.after(2000),\n        this._checkSize.bind(this)\n      );\n\n      this._scrollHandler();\n    }\n\n    /** @protected */\n    _ensureFirstPageLoaded() {\n      if (!this._hasData) {\n        // load data before adding rows to make sure they have content when\n        // rendered for the first time.\n        this._loadPage(0, this._cache);\n      }\n    }\n\n    /**\n     * @param {!GridItem} item1\n     * @param {!GridItem} item2\n     * @return {boolean}\n     * @protected\n     */\n    _itemsEqual(item1, item2) {\n      return this.getItemId(item1) === this.getItemId(item2);\n    }\n\n    /**\n     * @param {!GridItem} item\n     * @param {!Array<!GridItem>} array\n     * @return {number}\n     * @protected\n     */\n    _getItemIndexInArray(item, array) {\n      let result = -1;\n      array.forEach((i, idx) => {\n        if (this._itemsEqual(i, item)) {\n          result = idx;\n        }\n      });\n      return result;\n    }\n\n    scrollToIndex(index) {\n      super.scrollToIndex(index);\n      if (!isNaN(index) && (this._cache.isLoading() || !this.clientHeight)) {\n        this.__pendingScrollToIndex = index;\n      }\n    }\n\n    __scrollToPendingIndex() {\n      if (this.__pendingScrollToIndex && this.$.items.children.length) {\n        const index = this.__pendingScrollToIndex;\n        delete this.__pendingScrollToIndex;\n        this.scrollToIndex(index);\n      }\n    }\n\n    /**\n     * Fired when the `expandedItems` property changes.\n     *\n     * @event expanded-items-changed\n     */\n\n    /**\n     * Fired when the `loading` property changes.\n     *\n     * @event loading-changed\n     */\n  };\n"
    },
    {
     "id": 92,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-templatizer.js",
     "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { templatize } from '@polymer/polymer/lib/utils/templatize.js';\n\n/**\n * `vaadin-grid-templatizer` is a helper element for the `vaadin-grid` that is preparing and\n * stamping instances of cells and columns templates\n *\n * @extends HTMLElement\n * @private\n */\nclass GridTemplatizer extends PolymerElement {\n  static get is() {\n    return 'vaadin-grid-templatizer';\n  }\n\n  static get properties() {\n    return {\n      dataHost: Object,\n\n      template: Object,\n\n      _templateInstances: {\n        type: Array,\n        value: function () {\n          return [];\n        }\n      },\n\n      _parentPathValues: {\n        value: function () {\n          return {};\n        }\n      },\n\n      _grid: Object\n    };\n  }\n\n  static get observers() {\n    return ['_templateInstancesChanged(_templateInstances.*, _parentPathValues.*)'];\n  }\n\n  constructor() {\n    super();\n\n    this._instanceProps = {\n      detailsOpened: true,\n      index: true,\n      item: true,\n      selected: true,\n      expanded: true,\n      level: true\n    };\n  }\n\n  createInstance() {\n    this._ensureTemplatized();\n    const instance = new this._TemplateClass({});\n    this.addInstance(instance);\n\n    return instance;\n  }\n\n  addInstance(instance) {\n    if (this._templateInstances.indexOf(instance) === -1) {\n      this._templateInstances.push(instance);\n      requestAnimationFrame(() => this.notifyPath('_templateInstances.*', this._templateInstances));\n    }\n  }\n\n  removeInstance(instance) {\n    const index = this._templateInstances.indexOf(instance);\n    this.splice('_templateInstances', index, 1);\n  }\n\n  _ensureTemplatized() {\n    if (!this._TemplateClass) {\n      this._TemplateClass = templatize(this.template, this, {\n        instanceProps: this._instanceProps,\n        parentModel: true,\n\n        forwardHostProp: function (prop, value) {\n          this._forwardParentProp(prop, value);\n\n          if (this._templateInstances) {\n            this._templateInstances.forEach((inst) => inst.notifyPath(prop, value));\n          }\n        },\n\n        notifyInstanceProp: function (inst, prop, value) {\n          if (prop === 'index' || prop === 'item') {\n            // We don’t need a change notification for these.\n            return;\n          }\n\n          const originalProp = `__${prop}__`;\n\n          // Notify for only user-action changes, not for scrolling updates. E. g.,\n          // if `detailsOpened` is different from `__detailsOpened__`, which was set during render.\n          if (inst[originalProp] === value) {\n            return;\n          }\n          inst[originalProp] = value;\n\n          const row = Array.from(this._grid.$.items.children).filter((row) =>\n            this._grid._itemsEqual(row._item, inst.item)\n          )[0];\n          if (row) {\n            Array.from(row.children).forEach((cell) => {\n              if (cell._instance) {\n                cell._instance[originalProp] = value;\n                cell._instance.notifyPath(prop, value);\n              }\n            });\n          }\n\n          const itemPrefix = 'item.';\n          if (Array.isArray(this._grid.items) && prop.indexOf(itemPrefix) === 0) {\n            const itemsIndex = this._grid.items.indexOf(inst.item);\n            const path = prop.slice(itemPrefix.length);\n            this._grid.notifyPath(`items.${itemsIndex}.${path}`, value);\n          }\n\n          const gridCallback = `_${prop}InstanceChangedCallback`;\n          if (this._grid && this._grid[gridCallback]) {\n            this._grid[gridCallback](inst, value);\n          }\n        }\n      });\n    }\n  }\n\n  _forwardParentProp(prop, value) {\n    this._parentPathValues[prop] = value;\n    this._templateInstances.forEach((inst) => inst.notifyPath(prop, value));\n  }\n\n  _templateInstancesChanged(t) {\n    let index, count;\n    if (t.path === '_templateInstances') {\n      // Iterate all instances\n      index = 0;\n      count = this._templateInstances.length;\n    } else if (t.path === '_templateInstances.splices') {\n      // Iterate only new instances\n      index = t.value.index;\n      count = t.value.addedCount;\n    } else {\n      return;\n    }\n    Object.keys(this._parentPathValues || {}).forEach((keyName) => {\n      for (let i = index; i < index + count; i++) {\n        this._templateInstances[i].set(keyName, this._parentPathValues[keyName]);\n      }\n    });\n  }\n}\n\ncustomElements.define(GridTemplatizer.is, GridTemplatizer);\n\nexport { GridTemplatizer as Templatizer };\n"
    },
    {
     "id": 93,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/theme/lumo/vaadin-grid-column.js",
     "source": "import '../../src/vaadin-grid-column.js';\n"
    },
    {
     "id": 94,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-checkbox@3.0.0/node_modules/@vaadin/vaadin-checkbox/theme/lumo/vaadin-checkbox-styles.js",
     "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\n\nregisterStyles(\n  'vaadin-checkbox',\n  css`\n    :host {\n      -webkit-tap-highlight-color: transparent;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      user-select: none;\n      cursor: default;\n      outline: none;\n    }\n\n    [part='label']:not([empty]) {\n      margin: 0.1875em 0.875em 0.1875em 0.375em;\n    }\n\n    [part='checkbox'] {\n      width: calc(1em + 2px);\n      height: calc(1em + 2px);\n      margin: 0.1875em;\n      position: relative;\n      border-radius: var(--lumo-border-radius-s);\n      background-color: var(--lumo-contrast-20pct);\n      transition: transform 0.2s cubic-bezier(0.12, 0.32, 0.54, 2), background-color 0.15s;\n      pointer-events: none;\n      line-height: 1.2;\n    }\n\n    :host([indeterminate]) [part='checkbox'],\n    :host([checked]) [part='checkbox'] {\n      background-color: var(--lumo-primary-color);\n    }\n\n    /* Needed to align the checkbox nicely on the baseline */\n    [part='checkbox']::before {\n      content: '\\\\2003';\n    }\n\n    /* Checkmark */\n    [part='checkbox']::after {\n      content: '';\n      display: inline-block;\n      width: 0;\n      height: 0;\n      border: 0 solid var(--lumo-primary-contrast-color);\n      border-width: 0.1875em 0 0 0.1875em;\n      box-sizing: border-box;\n      transform-origin: 0 0;\n      position: absolute;\n      top: 0.8125em;\n      left: 0.5em;\n      transform: scale(0.55) rotate(-135deg);\n      opacity: 0;\n    }\n\n    :host([checked]) [part='checkbox']::after {\n      opacity: 1;\n      width: 0.625em;\n      height: 1.0625em;\n    }\n\n    /* Indeterminate checkmark */\n    :host([indeterminate]) [part='checkbox']::after {\n      transform: none;\n      opacity: 1;\n      top: 45%;\n      height: 10%;\n      left: 22%;\n      right: 22%;\n      width: auto;\n      border: 0;\n      background-color: var(--lumo-primary-contrast-color);\n      transition: opacity 0.25s;\n    }\n\n    /* Focus ring */\n    :host([focus-ring]) [part='checkbox'] {\n      box-shadow: 0 0 0 3px var(--lumo-primary-color-50pct);\n    }\n\n    /* Disabled */\n    :host([disabled]) {\n      pointer-events: none;\n      color: var(--lumo-disabled-text-color);\n    }\n\n    :host([disabled]) [part='label'] ::slotted(*) {\n      color: inherit;\n    }\n\n    :host([disabled]) [part='checkbox'] {\n      background-color: var(--lumo-contrast-10pct);\n    }\n\n    :host([disabled]) [part='checkbox']::after {\n      border-color: var(--lumo-contrast-30pct);\n    }\n\n    :host([indeterminate][disabled]) [part='checkbox']::after {\n      background-color: var(--lumo-contrast-30pct);\n    }\n\n    /* RTL specific styles */\n    :host([dir='rtl']) [part='label']:not([empty]) {\n      margin: 0.1875em 0.375em 0.1875em 0.875em;\n    }\n\n    /* Transition the checkmark if activated with the mouse (disabled for grid select-all this way) */\n    :host(:hover) [part='checkbox']::after {\n      transition: width 0.1s, height 0.25s;\n    }\n\n    /* Used for activation \"halo\" */\n    [part='checkbox']::before {\n      color: transparent;\n      display: inline-block;\n      width: 100%;\n      height: 100%;\n      border-radius: inherit;\n      background-color: inherit;\n      transform: scale(1.4);\n      opacity: 0;\n      transition: transform 0.1s, opacity 0.8s;\n    }\n\n    /* Hover */\n    :host(:not([checked]):not([indeterminate]):not([disabled]):hover) [part='checkbox'] {\n      background-color: var(--lumo-contrast-30pct);\n    }\n\n    /* Disable hover for touch devices */\n    @media (pointer: coarse) {\n      :host(:not([checked]):not([indeterminate]):not([disabled]):hover) [part='checkbox'] {\n        background-color: var(--lumo-contrast-20pct);\n      }\n    }\n\n    /* Active */\n    :host([active]) [part='checkbox'] {\n      transform: scale(0.9);\n      transition-duration: 0.05s;\n    }\n\n    :host([active][checked]) [part='checkbox'] {\n      transform: scale(1.1);\n    }\n\n    :host([active]:not([checked])) [part='checkbox']::before {\n      transition-duration: 0.01s, 0.01s;\n      transform: scale(0);\n      opacity: 0.4;\n    }\n  `,\n  { moduleId: 'lumo-checkbox' }\n);\n"
    },
    {
     "id": 95,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-checkbox@3.0.0/node_modules/@vaadin/vaadin-checkbox/src/vaadin-checkbox.js",
     "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ControlStateMixin } from '@vaadin/vaadin-control-state-mixin/vaadin-control-state-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\n\n/**\n * `<vaadin-checkbox>` is a Web Component for customized checkboxes.\n *\n * ```html\n * <vaadin-checkbox>\n *   Make my profile visible\n * </vaadin-checkbox>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name         | Description\n * ------------------|----------------\n * `checkbox`        | The wrapper element for the native <input type=\"checkbox\">\n * `label`           | The wrapper element in which the component's children, namely the label, is slotted\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|--------------\n * `active`     | Set when the checkbox is pressed down, either with mouse, touch or the keyboard. | `:host`\n * `disabled`   | Set when the checkbox is disabled. | `:host`\n * `focus-ring` | Set when the checkbox is focused using the keyboard. | `:host`\n * `focused`    | Set when the checkbox is focused. | `:host`\n * `indeterminate` | Set when the checkbox is in indeterminate mode. | `:host`\n * `checked` | Set when the checkbox is checked. | `:host`\n * `empty` | Set when there is no label provided. | `label`\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} checked-changed - Fired when the `checked` property changes.\n * @fires {CustomEvent} indeterminate-changed - Fired when the `indeterminate` property changes.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ControlStateMixin\n * @mixes ThemableMixin\n * @mixes GestureEventListeners\n */\nclass CheckboxElement extends ElementMixin(ControlStateMixin(ThemableMixin(GestureEventListeners(PolymerElement)))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        label {\n          display: inline-flex;\n          align-items: baseline;\n          outline: none;\n        }\n\n        [part='checkbox'] {\n          position: relative;\n          display: inline-block;\n          flex: none;\n        }\n\n        input[type='checkbox'] {\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          width: 100%;\n          height: 100%;\n          opacity: 0;\n          cursor: inherit;\n          margin: 0;\n        }\n\n        :host([disabled]) {\n          -webkit-tap-highlight-color: transparent;\n        }\n      </style>\n\n      <label>\n        <span part=\"checkbox\">\n          <input\n            type=\"checkbox\"\n            checked=\"{{checked::change}}\"\n            disabled$=\"[[disabled]]\"\n            indeterminate=\"{{indeterminate::change}}\"\n            role=\"presentation\"\n            tabindex=\"-1\"\n          />\n        </span>\n\n        <span part=\"label\">\n          <slot></slot>\n        </span>\n      </label>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-checkbox';\n  }\n\n  static get version() {\n    return '3.0.0';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * True if the checkbox is checked.\n       * @type {boolean}\n       */\n      checked: {\n        type: Boolean,\n        value: false,\n        notify: true,\n        observer: '_checkedChanged',\n        reflectToAttribute: true\n      },\n\n      /**\n       * Indeterminate state of the checkbox when it's neither checked nor unchecked, but undetermined.\n       * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes\n       * @type {boolean}\n       */\n      indeterminate: {\n        type: Boolean,\n        notify: true,\n        observer: '_indeterminateChanged',\n        reflectToAttribute: true,\n        value: false\n      },\n\n      /**\n       * The value given to the data submitted with the checkbox's name to the server when the control is inside a form.\n       */\n      value: {\n        type: String,\n        value: 'on'\n      },\n\n      /** @private */\n      _nativeCheckbox: {\n        type: Object\n      }\n    };\n  }\n\n  constructor() {\n    super();\n    /**\n     * @type {string}\n     * Name of the element.\n     */\n    this.name;\n  }\n\n  get name() {\n    return this.checked ? this._storedName : '';\n  }\n\n  set name(name) {\n    this._storedName = name;\n  }\n\n  ready() {\n    super.ready();\n\n    this.setAttribute('role', 'checkbox');\n\n    this._nativeCheckbox = this.shadowRoot.querySelector('input[type=\"checkbox\"]');\n\n    this.addEventListener('click', this._handleClick.bind(this));\n\n    this._addActiveListeners();\n\n    const attrName = this.getAttribute('name');\n    if (attrName) {\n      this.name = attrName;\n    }\n\n    this.shadowRoot\n      .querySelector('[part~=\"label\"]')\n      .querySelector('slot')\n      .addEventListener('slotchange', this._updateLabelAttribute.bind(this));\n\n    this._updateLabelAttribute();\n  }\n\n  /** @private */\n  _updateLabelAttribute() {\n    const label = this.shadowRoot.querySelector('[part~=\"label\"]');\n    const assignedNodes = label.firstElementChild.assignedNodes();\n    if (this._isAssignedNodesEmpty(assignedNodes)) {\n      label.setAttribute('empty', '');\n    } else {\n      label.removeAttribute('empty');\n    }\n  }\n\n  /** @private */\n  _isAssignedNodesEmpty(nodes) {\n    // The assigned nodes considered to be empty if there is no slotted content or only one empty text node\n    return (\n      nodes.length === 0 ||\n      (nodes.length == 1 && nodes[0].nodeType == Node.TEXT_NODE && nodes[0].textContent.trim() === '')\n    );\n  }\n\n  /** @private */\n  _checkedChanged(checked) {\n    if (this.indeterminate) {\n      this.setAttribute('aria-checked', 'mixed');\n    } else {\n      this.setAttribute('aria-checked', Boolean(checked));\n    }\n  }\n\n  /** @private */\n  _indeterminateChanged(indeterminate) {\n    if (indeterminate) {\n      this.setAttribute('aria-checked', 'mixed');\n    } else {\n      this.setAttribute('aria-checked', this.checked);\n    }\n  }\n\n  /** @private */\n  _addActiveListeners() {\n    // DOWN\n    this._addEventListenerToNode(this, 'down', (e) => {\n      if (this.__interactionsAllowed(e)) {\n        this.setAttribute('active', '');\n      }\n    });\n\n    // UP\n    this._addEventListenerToNode(this, 'up', () => this.removeAttribute('active'));\n\n    // KEYDOWN\n    this.addEventListener('keydown', (e) => {\n      if (this.__interactionsAllowed(e) && e.keyCode === 32) {\n        e.preventDefault();\n        this.setAttribute('active', '');\n      }\n    });\n\n    // KEYUP\n    this.addEventListener('keyup', (e) => {\n      if (this.__interactionsAllowed(e) && e.keyCode === 32) {\n        e.preventDefault();\n        this._toggleChecked();\n        this.removeAttribute('active');\n\n        if (this.indeterminate) {\n          this.indeterminate = false;\n        }\n      }\n    });\n  }\n\n  /**\n   * @return {!HTMLInputElement}\n   * @protected\n   */\n  get focusElement() {\n    return this.shadowRoot.querySelector('input');\n  }\n\n  /**\n   * True if users' interactions (mouse or keyboard)\n   * should toggle the checkbox\n   */\n  __interactionsAllowed(e) {\n    if (this.disabled) {\n      return false;\n    }\n\n    // https://github.com/vaadin/vaadin-checkbox/issues/63\n    if (e.target.localName === 'a') {\n      return false;\n    }\n\n    return true;\n  }\n\n  /** @private */\n  _handleClick(e) {\n    if (this.__interactionsAllowed(e)) {\n      if (!this.indeterminate) {\n        if (e.composedPath()[0] !== this._nativeCheckbox) {\n          e.preventDefault();\n          this._toggleChecked();\n        }\n      } else {\n        /*\n         * Required for IE 11 and Edge.\n         * See issue here: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7344418/\n         */\n        this.indeterminate = false;\n        e.preventDefault();\n        this._toggleChecked();\n      }\n    }\n  }\n\n  /** @protected */\n  _toggleChecked() {\n    this.checked = !this.checked;\n    this.dispatchEvent(new CustomEvent('change', { composed: false, bubbles: true }));\n  }\n\n  /**\n   * Fired when the user commits a value change.\n   *\n   * @event change\n   */\n}\n\ncustomElements.define(CheckboxElement.is, CheckboxElement);\n\nexport { CheckboxElement };\n"
    },
    {
     "id": 96,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-item@3.0.0/node_modules/@vaadin/vaadin-item/src/vaadin-item-mixin.js",
     "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * A mixin providing `focused`, `focus-ring`, `active`, `disabled` and `selected`.\n *\n * `focused`, `active` and `focus-ring` are set as only as attributes.\n * @polymerMixin\n */\nexport const ItemMixin = (superClass) =>\n  class VaadinItemMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * Used for mixin detection because `instanceof` does not work with mixins.\n         * e.g. in VaadinListMixin it filters items by using the\n         * `element._hasVaadinItemMixin` condition.\n         * @type {boolean}\n         */\n        _hasVaadinItemMixin: {\n          value: true\n        },\n\n        /**\n         * If true, the user cannot interact with this element.\n         * @type {boolean}\n         */\n        disabled: {\n          type: Boolean,\n          value: false,\n          observer: '_disabledChanged',\n          reflectToAttribute: true\n        },\n\n        /**\n         * If true, the item is in selected state.\n         * @type {boolean}\n         */\n        selected: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          observer: '_selectedChanged'\n        },\n\n        /** @private */\n        _value: String\n      };\n    }\n\n    /**\n     * @return {string}\n     */\n    get value() {\n      return this._value !== undefined ? this._value : this.textContent.trim();\n    }\n\n    /**\n     * @param {string} value\n     */\n    set value(value) {\n      this._value = value;\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      const attrValue = this.getAttribute('value');\n      if (attrValue !== null) {\n        this.value = attrValue;\n      }\n\n      this.addEventListener('focus', () => this._setFocused(true), true);\n      this.addEventListener('blur', () => this._setFocused(false), true);\n      this.addEventListener('mousedown', () => {\n        this._setActive((this._mousedown = true));\n        const mouseUpListener = () => {\n          this._setActive((this._mousedown = false));\n          document.removeEventListener('mouseup', mouseUpListener);\n        };\n        document.addEventListener('mouseup', mouseUpListener);\n      });\n      this.addEventListener('keydown', (e) => this._onKeydown(e));\n      this.addEventListener('keyup', (e) => this._onKeyup(e));\n    }\n\n    /** @protected */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n\n      // in Firefox and Safari, blur does not fire on the element when it is removed,\n      // especially between keydown and keyup events, being active at the same time.\n      // reproducible in `<vaadin-select>` when closing overlay on select.\n      if (this.hasAttribute('active')) {\n        this._setFocused(false);\n      }\n    }\n\n    /** @private */\n    _selectedChanged(selected) {\n      this.setAttribute('aria-selected', selected);\n    }\n\n    /** @private */\n    _disabledChanged(disabled) {\n      if (disabled) {\n        this.selected = false;\n        this.setAttribute('aria-disabled', 'true');\n        this.blur();\n      } else {\n        this.removeAttribute('aria-disabled');\n      }\n    }\n\n    /**\n     * @param {boolean} focused\n     * @protected\n     */\n    _setFocused(focused) {\n      if (focused) {\n        this.setAttribute('focused', '');\n        if (!this._mousedown) {\n          this.setAttribute('focus-ring', '');\n        }\n      } else {\n        this.removeAttribute('focused');\n        this.removeAttribute('focus-ring');\n        this._setActive(false);\n      }\n    }\n\n    /**\n     * @param {boolean} active\n     * @protected\n     */\n    _setActive(active) {\n      if (active) {\n        this.setAttribute('active', '');\n      } else {\n        this.removeAttribute('active');\n      }\n    }\n\n    /**\n     * @param {!KeyboardEvent} event\n     * @protected\n     */\n    _onKeydown(event) {\n      if (/^( |SpaceBar|Enter)$/.test(event.key) && !event.defaultPrevented) {\n        event.preventDefault();\n        this._setActive(true);\n      }\n    }\n\n    /**\n     * @param {!KeyboardEvent} event\n     * @protected\n     */\n    _onKeyup() {\n      if (this.hasAttribute('active')) {\n        this._setActive(false);\n        this.click();\n      }\n    }\n  };\n"
    },
    {
     "id": 97,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-list-mixin@2.5.1/node_modules/@vaadin/vaadin-list-mixin/vaadin-list-mixin.js",
     "source": "/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\n\nimport { DirHelper } from '@vaadin/vaadin-element-mixin/vaadin-dir-helper.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { timeOut } from '@polymer/polymer/lib/utils/async.js';\n\n/**\n * A mixin for `nav` elements, facilitating navigation and selection of childNodes.\n *\n * @polymerMixin\n */\nexport const ListMixin = superClass => class VaadinListMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * Used for mixin detection because `instanceof` does not work with mixins.\n       * @type {boolean}\n       */\n      _hasVaadinListMixin: {\n        value: true\n      },\n\n      /**\n       * The index of the item selected in the items array.\n       * Note: Not updated when used in `multiple` selection mode.\n       */\n      selected: {\n        type: Number,\n        reflectToAttribute: true,\n        notify: true\n      },\n\n      /**\n       * Define how items are disposed in the dom.\n       * Possible values are: `horizontal|vertical`.\n       * It also changes navigation keys from left/right to up/down.\n       * @type {!ListOrientation}\n       */\n      orientation: {\n        type: String,\n        reflectToAttribute: true,\n        value: ''\n      },\n\n      /**\n       * The list of items from which a selection can be made.\n       * It is populated from the elements passed to the light DOM,\n       * and updated dynamically when adding or removing items.\n       *\n       * The item elements must implement `Vaadin.ItemMixin`.\n       *\n       * Note: unlike `<vaadin-combo-box>`, this property is read-only,\n       * so if you want to provide items by iterating array of data,\n       * you have to use `dom-repeat` and place it to the light DOM.\n       * @type {!Array<!Element> | undefined}\n       */\n      items: {\n        type: Array,\n        readOnly: true,\n        notify: true\n      },\n\n      /**\n       * The search buffer for the keyboard selection feature.\n       * @private\n       */\n      _searchBuf: {\n        type: String,\n        value: ''\n      }\n    };\n  }\n\n  static get observers() {\n    return ['_enhanceItems(items, orientation, selected, disabled)'];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.addEventListener('keydown', e => this._onKeydown(e));\n    this.addEventListener('click', e => this._onClick(e));\n\n    this._observer = new FlattenedNodesObserver(this, info => {\n      this._setItems(this._filterItems(Array.from(this.children)));\n    });\n  }\n\n  /** @private */\n  _enhanceItems(items, orientation, selected, disabled) {\n    if (!disabled) {\n      if (items) {\n        this.setAttribute('aria-orientation', orientation || 'vertical');\n        this.items.forEach(item => {\n          orientation ? item.setAttribute('orientation', orientation) : item.removeAttribute('orientation');\n          item.updateStyles();\n        });\n\n        this._setFocusable(selected);\n\n        const itemToSelect = items[selected];\n        items.forEach(item => item.selected = item === itemToSelect);\n        if (itemToSelect && !itemToSelect.disabled) {\n          this._scrollToItem(selected);\n        }\n      }\n    }\n  }\n\n  /**\n   * @return {Element}\n   */\n  get focused() {\n    return this.getRootNode().activeElement;\n  }\n\n  /**\n   * @param {!Array<!Element>} array\n   * @return {!Array<!Element>}\n   * @protected\n   */\n  _filterItems(array) {\n    return array.filter(e => e._hasVaadinItemMixin);\n  }\n\n  /**\n   * @param {!MouseEvent} event\n   * @protected\n   */\n  _onClick(event) {\n    if (event.metaKey || event.shiftKey || event.ctrlKey || event.defaultPrevented) {\n      return;\n    }\n\n    const item = this._filterItems(event.composedPath())[0];\n    let idx;\n    if (item && !item.disabled && ((idx = this.items.indexOf(item)) >= 0)) {\n      this.selected = idx;\n    }\n  }\n\n  /**\n   * @param {number} currentIdx\n   * @param {string} key\n   * @return {number}\n   * @protected\n   */\n  _searchKey(currentIdx, key) {\n    this._searchReset = Debouncer.debounce(\n      this._searchReset,\n      timeOut.after(500),\n      () => this._searchBuf = ''\n    );\n    this._searchBuf += key.toLowerCase();\n    const increment = 1;\n    const condition = item => !(item.disabled || this._isItemHidden(item)) &&\n      item.textContent.replace(/[^a-zA-Z0-9]/g, '').toLowerCase().indexOf(this._searchBuf) === 0;\n\n    if (!this.items.some(item => item.textContent.replace(/[^a-zA-Z0-9]/g, '').toLowerCase().indexOf(this._searchBuf) === 0)) {\n      this._searchBuf = key.toLowerCase();\n    }\n\n    const idx = this._searchBuf.length === 1 ? currentIdx + 1 : currentIdx;\n    return this._getAvailableIndex(idx, increment, condition);\n  }\n\n  /**\n   * @return {boolean}\n   * @protected\n   */\n  get _isRTL() {\n    return !this._vertical && this.getAttribute('dir') === 'rtl';\n  }\n\n  /**\n   * @param {!KeyboardEvent} event\n   * @protected\n   */\n  _onKeydown(event) {\n    if (event.metaKey || event.ctrlKey) {\n      return;\n    }\n\n    // IE names for arrows do not include the Arrow prefix\n    const key = event.key.replace(/^Arrow/, '');\n\n    const currentIdx = this.items.indexOf(this.focused);\n\n    if (/[a-zA-Z0-9]/.test(key) && key.length === 1) {\n      const idx = this._searchKey(currentIdx, key);\n      if (idx >= 0) {\n        this._focus(idx);\n      }\n      return;\n    }\n\n    const condition = item => !(item.disabled || this._isItemHidden(item));\n    let idx, increment;\n\n    const dirIncrement = this._isRTL ? -1 : 1;\n\n    if (this._vertical && key === 'Up' || !this._vertical && key === 'Left') {\n      increment = -dirIncrement;\n      idx = currentIdx - dirIncrement;\n    } else if (this._vertical && key === 'Down' || !this._vertical && key === 'Right') {\n      increment = dirIncrement;\n      idx = currentIdx + dirIncrement;\n    } else if (key === 'Home') {\n      increment = 1;\n      idx = 0;\n    } else if (key === 'End') {\n      increment = -1;\n      idx = this.items.length - 1;\n    }\n\n    idx = this._getAvailableIndex(idx, increment, condition);\n    if (idx >= 0) {\n      this._focus(idx);\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {number} idx\n   * @param {number} increment\n   * @param {function(!Element):boolean} condition\n   * @return {number}\n   * @protected\n   */\n  _getAvailableIndex(idx, increment, condition) {\n    const totalItems = this.items.length;\n    for (let i = 0; typeof idx == 'number' && i < totalItems; i++, idx += (increment || 1)) {\n      if (idx < 0) {\n        idx = totalItems - 1;\n      } else if (idx >= totalItems) {\n        idx = 0;\n      }\n\n      const item = this.items[idx];\n\n      if (condition(item)) {\n        return idx;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * @param {!Element} item\n   * @return {boolean}\n   * @protected\n   */\n  _isItemHidden(item) {\n    return getComputedStyle(item).display === 'none';\n  }\n\n  /**\n   * @param {number} idx\n   * @protected\n   */\n  _setFocusable(idx) {\n    idx = this._getAvailableIndex(idx, 1, item => !item.disabled);\n    const item = this.items[idx] || this.items[0];\n    this.items.forEach(e => e.tabIndex = e === item ? 0 : -1);\n  }\n\n  /**\n   * @param {number} idx\n   * @protected\n   */\n  _focus(idx) {\n    const item = this.items[idx];\n    this.items.forEach(e => e.focused = e === item);\n    this._setFocusable(idx);\n    this._scrollToItem(idx);\n    item.focus();\n  }\n\n  focus() {\n    // In initialisation (e.g vaadin-select) observer might not been run yet.\n    this._observer && this._observer.flush();\n    const firstItem = this.querySelector('[tabindex=\"0\"]') || (this.items ? this.items[0] : null);\n    firstItem && firstItem.focus();\n  }\n\n  /**\n   * @return {!HTMLElement}\n   * @protected\n   */\n  get _scrollerElement() {\n    // Returning scroller element of the component\n  }\n\n  /**\n   * Scroll the container to have the next item by the edge of the viewport.\n   * @param {number} idx\n   * @protected\n   */\n  _scrollToItem(idx) {\n    const item = this.items[idx];\n    if (!item) {\n      return;\n    }\n\n    const props = this._vertical ? ['top', 'bottom'] :\n      this._isRTL ? ['right', 'left'] : ['left', 'right'];\n\n    const scrollerRect = this._scrollerElement.getBoundingClientRect();\n    const nextItemRect = (this.items[idx + 1] || item).getBoundingClientRect();\n    const prevItemRect = (this.items[idx - 1] || item).getBoundingClientRect();\n\n    let scrollDistance = 0;\n    if (!this._isRTL && nextItemRect[props[1]] >= scrollerRect[props[1]] ||\n      this._isRTL && nextItemRect[props[1]] <= scrollerRect[props[1]]) {\n      scrollDistance = nextItemRect[props[1]] - scrollerRect[props[1]];\n    } else if (!this._isRTL && prevItemRect[props[0]] <= scrollerRect[props[0]] ||\n      this._isRTL && prevItemRect[props[0]] >= scrollerRect[props[0]]) {\n      scrollDistance = prevItemRect[props[0]] - scrollerRect[props[0]];\n    }\n\n    this._scroll(scrollDistance);\n  }\n\n  /**\n   * @return {boolean}\n   * @protected\n   */\n  get _vertical() {\n    return this.orientation !== 'horizontal';\n  }\n\n  /**\n   * @param {number} pixels\n   * @protected\n   */\n  _scroll(pixels) {\n    if (this._vertical) {\n      this._scrollerElement['scrollTop'] += pixels;\n    } else {\n      const scrollType = DirHelper.detectScrollType();\n      const scrollLeft = DirHelper.getNormalizedScrollLeft(scrollType,\n        this.getAttribute('dir') || 'ltr', this._scrollerElement) + pixels;\n      DirHelper.setNormalizedScrollLeft(scrollType,\n        this.getAttribute('dir') || 'ltr', this._scrollerElement, scrollLeft);\n    }\n  }\n\n  /**\n   * Fired when the selection is changed.\n   * Not fired when used in `multiple` selection mode.\n   *\n   * @event selected-changed\n   * @param {Object} detail\n   * @param {Object} detail.value the index of the item selected in the items array.\n   */\n};\n"
    },
    {
     "id": 98,
     "name": "../node_modules/.pnpm/@polymer+iron-meta@3.0.1/node_modules/@polymer/iron-meta/iron-meta.js",
     "source": "/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\n\nexport class IronMeta {\n  /**\n   * @param {{\n   *   type: (string|null|undefined),\n   *   key: (string|null|undefined),\n   *   value: *,\n   * }=} options\n   */\n  constructor(options) {\n    IronMeta[' '](options);\n\n    /** @type {string} */\n    this.type = (options && options.type) || 'default';\n    /** @type {string|null|undefined} */\n    this.key = options && options.key;\n    if (options && 'value' in options) {\n      /** @type {*} */\n      this.value = options.value;\n    }\n  }\n\n  /** @return {*} */\n  get value() {\n    var type = this.type;\n    var key = this.key;\n\n    if (type && key) {\n      return IronMeta.types[type] && IronMeta.types[type][key];\n    }\n  }\n\n  /** @param {*} value */\n  set value(value) {\n    var type = this.type;\n    var key = this.key;\n\n    if (type && key) {\n      type = IronMeta.types[type] = IronMeta.types[type] || {};\n      if (value == null) {\n        delete type[key];\n      } else {\n        type[key] = value;\n      }\n    }\n  }\n\n  /** @return {!Array<*>} */\n  get list() {\n    var type = this.type;\n\n    if (type) {\n      var items = IronMeta.types[this.type];\n      if (!items) {\n        return [];\n      }\n\n      return Object.keys(items).map(function(key) {\n        return metaDatas[this.type][key];\n      }, this);\n    }\n  }\n\n  /**\n   * @param {string} key\n   * @return {*}\n   */\n  byKey(key) {\n    this.key = key;\n    return this.value;\n  }\n};\n\n// This function is used to convince Closure not to remove constructor calls\n// for instances that are not held anywhere. For example, when\n// `new IronMeta({...})` is used only for the side effect of adding a value.\nIronMeta[' '] = function() {};\n\nIronMeta.types = {};\n\nvar metaDatas = IronMeta.types;\n\n/**\n`iron-meta` is a generic element you can use for sharing information across the\nDOM tree. It uses [monostate pattern](http://c2.com/cgi/wiki?MonostatePattern)\nsuch that any instance of iron-meta has access to the shared information. You\ncan use `iron-meta` to share whatever you want (or create an extension [like\nx-meta] for enhancements).\n\nThe `iron-meta` instances containing your actual data can be loaded in an\nimport, or constructed in any way you see fit. The only requirement is that you\ncreate them before you try to access them.\n\nExamples:\n\nIf I create an instance like this:\n\n    <iron-meta key=\"info\" value=\"foo/bar\"></iron-meta>\n\nNote that value=\"foo/bar\" is the metadata I've defined. I could define more\nattributes or use child nodes to define additional metadata.\n\nNow I can access that element (and it's metadata) from any iron-meta instance\nvia the byKey method, e.g.\n\n    meta.byKey('info');\n\nPure imperative form would be like:\n\n    document.createElement('iron-meta').byKey('info');\n\nOr, in a Polymer element, you can include a meta in your template:\n\n    <iron-meta id=\"meta\"></iron-meta>\n    ...\n    this.$.meta.byKey('info');\n\n@group Iron Elements\n@demo demo/index.html\n@element iron-meta\n*/\nPolymer({\n\n  is: 'iron-meta',\n\n  properties: {\n\n    /**\n     * The type of meta-data.  All meta-data of the same type is stored\n     * together.\n     * @type {string}\n     */\n    type: {\n      type: String,\n      value: 'default',\n    },\n\n    /**\n     * The key used to store `value` under the `type` namespace.\n     * @type {?string}\n     */\n    key: {\n      type: String,\n    },\n\n    /**\n     * The meta-data to store or retrieve.\n     * @type {*}\n     */\n    value: {\n      type: String,\n      notify: true,\n    },\n\n    /**\n     * If true, `value` is set to the iron-meta instance itself.\n     */\n    self: {type: Boolean, observer: '_selfChanged'},\n\n    __meta: {type: Boolean, computed: '__computeMeta(type, key, value)'}\n  },\n\n  hostAttributes: {hidden: true},\n\n  __computeMeta: function(type, key, value) {\n    var meta = new IronMeta({type: type, key: key});\n\n    if (value !== undefined && value !== meta.value) {\n      meta.value = value;\n    } else if (this.value !== meta.value) {\n      this.value = meta.value;\n    }\n\n    return meta;\n  },\n\n  get list() {\n    return this.__meta && this.__meta.list;\n  },\n\n  _selfChanged: function(self) {\n    if (self) {\n      this.value = this;\n    }\n  },\n\n  /**\n   * Retrieves meta data value by key.\n   *\n   * @method byKey\n   * @param {string} key The key of the meta-data to be returned.\n   * @return {*}\n   */\n  byKey: function(key) {\n    return new IronMeta({type: this.type, key: key}).value;\n  }\n});\n"
    },
    {
     "id": 99,
     "name": "../node_modules/.pnpm/@polymer+iron-iconset-svg@3.0.1/node_modules/@polymer/iron-iconset-svg/iron-iconset-svg.js",
     "source": "/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronMeta} from '@polymer/iron-meta/iron-meta.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\n/**\n * The `iron-iconset-svg` element allows users to define their own icon sets\n * that contain svg icons. The svg icon elements should be children of the\n * `iron-iconset-svg` element. Multiple icons should be given distinct id's.\n *\n * Using svg elements to create icons has a few advantages over traditional\n * bitmap graphics like jpg or png. Icons that use svg are vector based so\n * they are resolution independent and should look good on any device. They\n * are stylable via css. Icons can be themed, colorized, and even animated.\n *\n * Example:\n *\n *     <iron-iconset-svg name=\"my-svg-icons\" size=\"24\">\n *       <svg>\n *         <defs>\n *           <g id=\"shape\">\n *             <rect x=\"12\" y=\"0\" width=\"12\" height=\"24\" />\n *             <circle cx=\"12\" cy=\"12\" r=\"12\" />\n *           </g>\n *         </defs>\n *       </svg>\n *     </iron-iconset-svg>\n *\n * This will automatically register the icon set \"my-svg-icons\" to the iconset\n * database.  To use these icons from within another element, make a\n * `iron-iconset` element and call the `byId` method\n * to retrieve a given iconset. To apply a particular icon inside an\n * element use the `applyIcon` method. For example:\n *\n *     iconset.applyIcon(iconNode, 'car');\n *\n * @element iron-iconset-svg\n * @demo demo/index.html\n * @implements {Polymer.Iconset}\n */\nPolymer({\n  is: 'iron-iconset-svg',\n\n  properties: {\n\n    /**\n     * The name of the iconset.\n     */\n    name: {type: String, observer: '_nameChanged'},\n\n    /**\n     * The size of an individual icon. Note that icons must be square.\n     */\n    size: {type: Number, value: 24},\n\n    /**\n     * Set to true to enable mirroring of icons where specified when they are\n     * stamped. Icons that should be mirrored should be decorated with a\n     * `mirror-in-rtl` attribute.\n     *\n     * NOTE: For performance reasons, direction will be resolved once per\n     * document per iconset, so moving icons in and out of RTL subtrees will\n     * not cause their mirrored state to change.\n     */\n    rtlMirroring: {type: Boolean, value: false},\n\n    /**\n     * Set to true to measure RTL based on the dir attribute on the body or\n     * html elements (measured on document.body or document.documentElement as\n     * available).\n     */\n    useGlobalRtlAttribute: {type: Boolean, value: false}\n  },\n\n  created: function() {\n    this._meta = new IronMeta({type: 'iconset', key: null, value: null});\n  },\n\n  attached: function() {\n    this.style.display = 'none';\n  },\n\n  /**\n   * Construct an array of all icon names in this iconset.\n   *\n   * @return {!Array} Array of icon names.\n   */\n  getIconNames: function() {\n    this._icons = this._createIconMap();\n    return Object.keys(this._icons).map(function(n) {\n      return this.name + ':' + n;\n    }, this);\n  },\n\n  /**\n   * Applies an icon to the given element.\n   *\n   * An svg icon is prepended to the element's shadowRoot if it exists,\n   * otherwise to the element itself.\n   *\n   * If RTL mirroring is enabled, and the icon is marked to be mirrored in\n   * RTL, the element will be tested (once and only once ever for each\n   * iconset) to determine the direction of the subtree the element is in.\n   * This direction will apply to all future icon applications, although only\n   * icons marked to be mirrored will be affected.\n   *\n   * @method applyIcon\n   * @param {Element} element Element to which the icon is applied.\n   * @param {string} iconName Name of the icon to apply.\n   * @return {?Element} The svg element which renders the icon.\n   */\n  applyIcon: function(element, iconName) {\n    // Remove old svg element\n    this.removeIcon(element);\n    // install new svg element\n    var svg = this._cloneIcon(\n        iconName, this.rtlMirroring && this._targetIsRTL(element));\n    if (svg) {\n      // insert svg element into shadow root, if it exists\n      var pde = dom(element.root || element);\n      pde.insertBefore(svg, pde.childNodes[0]);\n      return element._svgIcon = svg;\n    }\n    return null;\n  },\n\n  /**\n   * Remove an icon from the given element by undoing the changes effected\n   * by `applyIcon`.\n   *\n   * @param {Element} element The element from which the icon is removed.\n   */\n  removeIcon: function(element) {\n    // Remove old svg element\n    if (element._svgIcon) {\n      dom(element.root || element).removeChild(element._svgIcon);\n      element._svgIcon = null;\n    }\n  },\n\n  /**\n   * Measures and memoizes the direction of the element. Note that this\n   * measurement is only done once and the result is memoized for future\n   * invocations.\n   */\n  _targetIsRTL: function(target) {\n    if (this.__targetIsRTL == null) {\n      if (this.useGlobalRtlAttribute) {\n        var globalElement =\n            (document.body && document.body.hasAttribute('dir')) ?\n            document.body :\n            document.documentElement;\n\n        this.__targetIsRTL = globalElement.getAttribute('dir') === 'rtl';\n      } else {\n        if (target && target.nodeType !== Node.ELEMENT_NODE) {\n          target = target.host;\n        }\n\n        this.__targetIsRTL =\n            target && window.getComputedStyle(target)['direction'] === 'rtl';\n      }\n    }\n\n    return this.__targetIsRTL;\n  },\n\n  /**\n   *\n   * When name is changed, register iconset metadata\n   *\n   */\n  _nameChanged: function() {\n    this._meta.value = null;\n    this._meta.key = this.name;\n    this._meta.value = this;\n\n    this.async(function() {\n      this.fire('iron-iconset-added', this, {node: window});\n    });\n  },\n\n  /**\n   * Create a map of child SVG elements by id.\n   *\n   * @return {!Object} Map of id's to SVG elements.\n   */\n  _createIconMap: function() {\n    // Objects chained to Object.prototype (`{}`) have members. Specifically,\n    // on FF there is a `watch` method that confuses the icon map, so we\n    // need to use a null-based object here.\n    var icons = Object.create(null);\n    dom(this).querySelectorAll('[id]').forEach(function(icon) {\n      icons[icon.id] = icon;\n    });\n    return icons;\n  },\n\n  /**\n   * Produce installable clone of the SVG element matching `id` in this\n   * iconset, or `undefined` if there is no matching element.\n   *\n   * @return {Element} Returns an installable clone of the SVG element\n   * matching `id`.\n   */\n  _cloneIcon: function(id, mirrorAllowed) {\n    // create the icon map on-demand, since the iconset itself has no discrete\n    // signal to know when it's children are fully parsed\n    this._icons = this._icons || this._createIconMap();\n    return this._prepareSvgClone(this._icons[id], this.size, mirrorAllowed);\n  },\n\n  /**\n   * @param {Element} sourceSvg\n   * @param {number} size\n   * @param {Boolean} mirrorAllowed\n   * @return {Element}\n   */\n  _prepareSvgClone: function(sourceSvg, size, mirrorAllowed) {\n    if (sourceSvg) {\n      var content = sourceSvg.cloneNode(true),\n          svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg'),\n          viewBox =\n              content.getAttribute('viewBox') || '0 0 ' + size + ' ' + size,\n          cssText =\n              'pointer-events: none; display: block; width: 100%; height: 100%;';\n\n      if (mirrorAllowed && content.hasAttribute('mirror-in-rtl')) {\n        cssText +=\n            '-webkit-transform:scale(-1,1);transform:scale(-1,1);transform-origin:center;';\n      }\n\n      svg.setAttribute('viewBox', viewBox);\n      svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n      svg.setAttribute('focusable', 'false');\n      // TODO(dfreedm): `pointer-events: none` works around\n      // https://crbug.com/370136\n      // TODO(sjmiles): inline style may not be ideal, but avoids requiring a\n      // shadow-root\n      svg.style.cssText = cssText;\n      svg.appendChild(content).removeAttribute('id');\n      return svg;\n    }\n    return null;\n  }\n\n});\n"
    },
    {
     "id": 100,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-ordered-layout@1.4.0/node_modules/@vaadin/vaadin-ordered-layout/theme/lumo/vaadin-ordered-layout.js",
     "source": "import '@vaadin/vaadin-lumo-styles/spacing.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"lumo-ordered-layout\">\n  <template>\n    <style>\n      :host([theme~=\"margin\"]) {\n        margin: var(--lumo-space-m);\n      }\n\n      :host([theme~=\"padding\"]) {\n        padding: var(--lumo-space-m);\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
    },
    {
     "id": 101,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-text-field@3.0.2/node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-text-field-styles.js",
     "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/required-field.js';\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/field-button.js';\n\nregisterStyles(\n  'vaadin-text-field',\n  css`\n    :host {\n      --lumo-text-field-size: var(--lumo-size-m);\n      color: var(--lumo-body-text-color);\n      font-size: var(--lumo-font-size-m);\n      font-family: var(--lumo-font-family);\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n      -webkit-tap-highlight-color: transparent;\n      padding: var(--lumo-space-xs) 0;\n    }\n\n    :host::before {\n      height: var(--lumo-text-field-size);\n      box-sizing: border-box;\n      display: inline-flex;\n      align-items: center;\n    }\n\n    :host([focused]:not([readonly])) [part='label'] {\n      color: var(--lumo-primary-text-color);\n    }\n\n    :host([has-helper]) [part='helper-text']::before {\n      content: '';\n      display: block;\n      height: 0.4em;\n    }\n\n    [part='helper-text'],\n    [part='helper-text'] ::slotted(*) {\n      display: block;\n      color: var(--lumo-secondary-text-color);\n      font-size: var(--lumo-font-size-xs);\n      line-height: var(--lumo-line-height-xs);\n      margin-left: calc(var(--lumo-border-radius-m) / 4);\n      transition: color 0.2s;\n    }\n\n    [part='value'],\n    [part='input-field'] ::slotted(input),\n    [part='input-field'] ::slotted(textarea),\n    [part='input-field'] ::slotted([part='value']) {\n      cursor: inherit;\n      min-height: var(--lumo-text-field-size);\n      padding: 0 0.25em;\n      --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent, #000 1.25em);\n      -webkit-mask-image: var(--_lumo-text-field-overflow-mask-image);\n      mask-image: var(--_lumo-text-field-overflow-mask-image);\n    }\n\n    [part='value']:focus,\n    :host([focused]) [part='input-field'] ::slotted(input),\n    :host([focused]) [part='input-field'] ::slotted(textarea) {\n      -webkit-mask-image: none;\n      mask-image: none;\n    }\n\n    [part='value']::placeholder {\n      color: inherit;\n      transition: opacity 0.175s 0.1s;\n      opacity: 0.5;\n    }\n\n    [part='input-field'] {\n      border-radius: var(--lumo-border-radius);\n      background-color: var(--lumo-contrast-10pct);\n      padding: 0 calc(0.375em + var(--lumo-border-radius) / 4 - 1px);\n      font-weight: 500;\n      line-height: 1;\n      position: relative;\n      cursor: text;\n      box-sizing: border-box;\n    }\n\n    /* Used for hover and activation effects */\n    [part='input-field']::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      border-radius: inherit;\n      pointer-events: none;\n      background-color: var(--lumo-contrast-50pct);\n      opacity: 0;\n      transition: transform 0.15s, opacity 0.2s;\n      transform-origin: 100% 0;\n    }\n\n    /* Hover */\n\n    :host(:hover:not([readonly]):not([focused])) [part='label'],\n    :host(:hover:not([readonly])) [part='helper-text'],\n    :host(:hover:not([readonly])) [part='helper-text'] ::slotted(*) {\n      color: var(--lumo-body-text-color);\n    }\n\n    :host(:hover:not([readonly]):not([focused])) [part='input-field']::after {\n      opacity: 0.1;\n    }\n\n    /* Touch device adjustment */\n    @media (pointer: coarse) {\n      :host(:hover:not([readonly]):not([focused])) [part='label'] {\n        color: var(--lumo-secondary-text-color);\n      }\n\n      :host(:hover:not([readonly]):not([focused])) [part='input-field']::after {\n        opacity: 0;\n      }\n\n      :host(:active:not([readonly]):not([focused])) [part='input-field']::after {\n        opacity: 0.2;\n      }\n    }\n\n    /* Trigger when not focusing using the keyboard */\n    :host([focused]:not([focus-ring]):not([readonly])) [part='input-field']::after {\n      transform: scaleX(0);\n      transition-duration: 0.15s, 1s;\n    }\n\n    /* Focus-ring */\n\n    :host([focus-ring]) [part='input-field'] {\n      box-shadow: 0 0 0 2px var(--lumo-primary-color-50pct);\n    }\n\n    /* Read-only and disabled */\n    :host([readonly]) [part='value']::placeholder,\n    :host([disabled]) [part='value']::placeholder {\n      opacity: 0;\n    }\n\n    /* Read-only */\n\n    :host([readonly]) [part='input-field'] {\n      color: var(--lumo-secondary-text-color);\n      background-color: transparent;\n      cursor: default;\n    }\n\n    :host([readonly]) [part='input-field']::after {\n      background-color: transparent;\n      opacity: 1;\n      border: 1px dashed var(--lumo-contrast-30pct);\n    }\n\n    /* Disabled style */\n\n    :host([disabled]) {\n      pointer-events: none;\n    }\n\n    :host([disabled]) [part='input-field'] {\n      background-color: var(--lumo-contrast-5pct);\n    }\n\n    :host([disabled]) [part='label'],\n    :host([disabled]) [part='helper-text'],\n    :host([disabled]) [part='value'],\n    :host([disabled]) [part='input-field'] ::slotted(*) {\n      color: var(--lumo-disabled-text-color);\n      -webkit-text-fill-color: var(--lumo-disabled-text-color);\n    }\n\n    /* Invalid style */\n\n    :host([invalid]) [part='input-field'] {\n      background-color: var(--lumo-error-color-10pct);\n    }\n\n    :host([invalid]) [part='input-field']::after {\n      background-color: var(--lumo-error-color-50pct);\n    }\n\n    :host([invalid][focus-ring]) [part='input-field'] {\n      box-shadow: 0 0 0 2px var(--lumo-error-color-50pct);\n    }\n\n    :host([input-prevented]) [part='input-field'] {\n      color: var(--lumo-error-text-color);\n    }\n\n    /* Small theme */\n\n    :host([theme~='small']) {\n      font-size: var(--lumo-font-size-s);\n      --lumo-text-field-size: var(--lumo-size-s);\n    }\n\n    :host([theme~='small'][has-label]) [part='label'] {\n      font-size: var(--lumo-font-size-xs);\n    }\n\n    :host([theme~='small'][has-label]) [part='error-message'] {\n      font-size: var(--lumo-font-size-xxs);\n    }\n\n    /* Text align */\n\n    :host([theme~='align-left']) [part='value'] {\n      text-align: left;\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    :host([theme~='align-center']) [part='value'] {\n      text-align: center;\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    :host([theme~='align-right']) [part='value'] {\n      text-align: right;\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    @-moz-document url-prefix() {\n      /* Firefox is smart enough to align overflowing text to right */\n      :host([theme~='align-right']) [part='value'] {\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to right, transparent 0.25em, #000 1.5em);\n      }\n    }\n\n    @-moz-document url-prefix() {\n      /* Firefox is smart enough to align overflowing text to right */\n      :host([theme~='align-left']) [part='value'] {\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent 0.25em, #000 1.5em);\n      }\n    }\n    /* helper-text position */\n\n    :host([has-helper][theme~='helper-above-field']) [part='helper-text']::before {\n      display: none;\n    }\n\n    :host([has-helper][theme~='helper-above-field']) [part='helper-text']::after {\n      content: '';\n      display: block;\n      height: 0.4em;\n    }\n\n    :host([has-helper][theme~='helper-above-field']) [part='label'] {\n      order: 0;\n      padding-bottom: 0.4em;\n    }\n\n    :host([has-helper][theme~='helper-above-field']) [part='helper-text'] {\n      order: 1;\n    }\n\n    :host([has-helper][theme~='helper-above-field']) [part='input-field'] {\n      order: 2;\n    }\n\n    :host([has-helper][theme~='helper-above-field']) [part='error-message'] {\n      order: 3;\n    }\n\n    /* Slotted content */\n\n    [part='input-field'] ::slotted(:not([part]):not(iron-icon):not(input):not(textarea)) {\n      color: var(--lumo-secondary-text-color);\n      font-weight: 400;\n    }\n\n    /* Slotted icons */\n\n    [part='input-field'] ::slotted(iron-icon) {\n      color: var(--lumo-contrast-60pct);\n      width: var(--lumo-icon-size-m);\n      height: var(--lumo-icon-size-m);\n    }\n\n    /* Vaadin icons are based on a 16x16 grid (unlike Lumo and Material icons with 24x24), so they look too big by default */\n    [part='input-field'] ::slotted(iron-icon[icon^='vaadin:']) {\n      padding: 0.25em;\n      box-sizing: border-box !important;\n    }\n\n    [part='clear-button']::before {\n      content: var(--lumo-icons-cross);\n    }\n\n    /* RTL specific styles */\n\n    :host([dir='rtl']) [part='input-field']::after {\n      transform-origin: 0% 0;\n    }\n\n    :host([dir='rtl']) [part='value'],\n    :host([dir='rtl']) [part='input-field'] ::slotted(input),\n    :host([dir='rtl']) [part='input-field'] ::slotted(textarea) {\n      --_lumo-text-field-overflow-mask-image: linear-gradient(to right, transparent, #000 1.25em);\n    }\n\n    :host([dir='rtl']) [part='value']:focus,\n    :host([focused][dir='rtl']) [part='input-field'] ::slotted(input),\n    :host([focused][dir='rtl']) [part='input-field'] ::slotted(textarea) {\n      -webkit-mask-image: none;\n      mask-image: none;\n    }\n\n    @-moz-document url-prefix() {\n      :host([dir='rtl']) [part='value'],\n      :host([dir='rtl']) [part='input-field'] ::slotted(input),\n      :host([dir='rtl']) [part='input-field'] ::slotted(textarea),\n      :host([dir='rtl']) [part='input-field'] ::slotted([part='value']) {\n        mask-image: var(--_lumo-text-field-overflow-mask-image);\n      }\n    }\n\n    :host([theme~='align-left'][dir='rtl']) [part='value'] {\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    :host([theme~='align-center'][dir='rtl']) [part='value'] {\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    :host([theme~='align-right'][dir='rtl']) [part='value'] {\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    @-moz-document url-prefix() {\n      /* Firefox is smart enough to align overflowing text to right */\n      :host([theme~='align-right'][dir='rtl']) [part='value'] {\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to right, transparent 0.25em, #000 1.5em);\n      }\n    }\n\n    @-moz-document url-prefix() {\n      /* Firefox is smart enough to align overflowing text to right */\n      :host([theme~='align-left'][dir='rtl']) [part='value'] {\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent 0.25em, #000 1.5em);\n      }\n    }\n  `,\n  { moduleId: 'lumo-text-field', include: ['lumo-required-field', 'lumo-field-button'] }\n);\n"
    },
    {
     "id": 102,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-text-field@3.0.2/node_modules/@vaadin/vaadin-text-field/src/vaadin-text-field-mixin.js",
     "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { timeOut, animationFrame } from '@polymer/polymer/lib/utils/async.js';\nimport { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\n\nregisterStyles(\n  '',\n  css`\n    :host {\n      display: inline-flex;\n      outline: none;\n    }\n\n    :host::before {\n      content: '\\\\2003';\n      width: 0;\n      display: inline-block;\n      /* Size and position this element on the same vertical position as the input-field element\n          to make vertical align for the host element work as expected */\n    }\n\n    :host([hidden]) {\n      display: none !important;\n    }\n\n    .vaadin-text-field-container,\n    .vaadin-text-area-container {\n      display: flex;\n      flex-direction: column;\n      min-width: 100%;\n      max-width: 100%;\n      width: var(--vaadin-text-field-default-width, 12em);\n    }\n\n    [part='label']:empty {\n      display: none;\n    }\n\n    [part='input-field'] {\n      display: flex;\n      align-items: center;\n      flex: auto;\n    }\n\n    .vaadin-text-field-container [part='input-field'] {\n      flex-grow: 0;\n    }\n\n    /* Reset the native input styles */\n    [part='value'],\n    [part='input-field'] ::slotted(input),\n    [part='input-field'] ::slotted(textarea) {\n      -webkit-appearance: none;\n      -moz-appearance: none;\n      outline: none;\n      margin: 0;\n      padding: 0;\n      border: 0;\n      border-radius: 0;\n      min-width: 0;\n      font: inherit;\n      font-size: 1em;\n      line-height: normal;\n      color: inherit;\n      background-color: transparent;\n      /* Disable default invalid style in Firefox */\n      box-shadow: none;\n    }\n\n    [part='input-field'] ::slotted(*) {\n      flex: none;\n    }\n\n    [part='value'],\n    [part='input-field'] ::slotted(input),\n    [part='input-field'] ::slotted(textarea),\n    [part='input-field'] ::slotted([part='value']) {\n      flex: auto;\n      white-space: nowrap;\n      overflow: hidden;\n      width: 100%;\n      height: 100%;\n    }\n\n    [part='input-field'] ::slotted(textarea) {\n      resize: none;\n    }\n\n    [part='clear-button'] {\n      display: none;\n      cursor: default;\n    }\n\n    [part='clear-button']::before {\n      content: '✕';\n    }\n\n    :host([clear-button-visible][has-value]:not([disabled]):not([readonly])) [part='clear-button'] {\n      display: block;\n    }\n  `,\n  { moduleId: 'vaadin-text-field-shared-styles' }\n);\n\nconst HOST_PROPS = {\n  default: [\n    'autofocus',\n    'pattern',\n    'autocapitalize',\n    'autocorrect',\n    'maxlength',\n    'minlength',\n    'name',\n    'placeholder',\n    'autocomplete',\n    'title',\n    'disabled',\n    'readonly',\n    'required'\n  ],\n  accessible: ['invalid']\n};\n\nconst PROP_TYPE = {\n  DEFAULT: 'default',\n  ACCESSIBLE: 'accessible'\n};\n\n/**\n * @polymerMixin\n */\nexport const TextFieldMixin = (subclass) =>\n  class VaadinTextFieldMixin extends subclass {\n    static get properties() {\n      return {\n        /**\n         * Whether the value of the control can be automatically completed by the browser.\n         * List of available options at:\n         * https://developer.mozilla.org/en/docs/Web/HTML/Element/input#attr-autocomplete\n         */\n        autocomplete: {\n          type: String\n        },\n\n        /**\n         * This is a property supported by Safari that is used to control whether\n         * autocorrection should be enabled when the user is entering/editing the text.\n         * Possible values are:\n         * on: Enable autocorrection.\n         * off: Disable autocorrection.\n         * @type {!TextFieldAutoCorrect | undefined}\n         */\n        autocorrect: {\n          type: String\n        },\n\n        /**\n         * This is a property supported by Safari and Chrome that is used to control whether\n         * autocapitalization should be enabled when the user is entering/editing the text.\n         * Possible values are:\n         * characters: Characters capitalization.\n         * words: Words capitalization.\n         * sentences: Sentences capitalization.\n         * none: No capitalization.\n         * @type {!TextFieldAutoCapitalize | undefined}\n         */\n        autocapitalize: {\n          type: String\n        },\n\n        /**\n         * Specify that the value should be automatically selected when the field gains focus.\n         * @type {boolean}\n         */\n        autoselect: {\n          type: Boolean,\n          value: false\n        },\n\n        /**\n         * Set to true to display the clear icon which clears the input.\n         * @attr {boolean} clear-button-visible\n         * @type {boolean}\n         */\n        clearButtonVisible: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true\n        },\n\n        /**\n         * Error to show when the input value is invalid.\n         * @attr {string} error-message\n         * @type {string}\n         */\n        errorMessage: {\n          type: String,\n          value: '',\n          observer: '_errorMessageChanged'\n        },\n\n        /**\n         * Object with translated strings used for localization. Has\n         * the following structure and default values:\n         *\n         * ```\n         * {\n         *   // Translation of the clear icon button accessible label\n         *   clear: 'Clear'\n         * }\n         * ```\n         * @type {{clear: string}}\n         */\n        i18n: {\n          type: Object,\n          value: () => {\n            return {\n              clear: 'Clear'\n            };\n          }\n        },\n\n        /**\n         * String used for the label element.\n         * @type {string}\n         */\n        label: {\n          type: String,\n          value: '',\n          observer: '_labelChanged'\n        },\n\n        /**\n         * String used for the helper text.\n         * @attr {string} helper-text\n         * @type {string | null}\n         */\n        helperText: {\n          type: String,\n          value: '',\n          observer: '_helperTextChanged'\n        },\n\n        /**\n         * Maximum number of characters (in Unicode code points) that the user can enter.\n         */\n        maxlength: {\n          type: Number\n        },\n\n        /**\n         * Minimum number of characters (in Unicode code points) that the user can enter.\n         */\n        minlength: {\n          type: Number\n        },\n\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        name: {\n          type: String\n        },\n\n        /**\n         * A hint to the user of what can be entered in the control.\n         */\n        placeholder: {\n          type: String\n        },\n\n        /**\n         * This attribute indicates that the user cannot modify the value of the control.\n         */\n        readonly: {\n          type: Boolean,\n          reflectToAttribute: true\n        },\n\n        /**\n         * Specifies that the user must fill in a value.\n         */\n        required: {\n          type: Boolean,\n          reflectToAttribute: true\n        },\n\n        /**\n         * The initial value of the control.\n         * It can be used for two-way data binding.\n         * @type {string}\n         */\n        value: {\n          type: String,\n          value: '',\n          observer: '_valueChanged',\n          notify: true\n        },\n\n        /**\n         * This property is set to true when the control value is invalid.\n         * @type {boolean}\n         */\n        invalid: {\n          type: Boolean,\n          reflectToAttribute: true,\n          notify: true,\n          value: false\n        },\n\n        /**\n         * When set to true, user is prevented from typing a value that\n         * conflicts with the given `pattern`.\n         * @attr {boolean} prevent-invalid-input\n         */\n        preventInvalidInput: {\n          type: Boolean\n        },\n\n        /**\n         * A pattern matched against individual characters the user inputs.\n         * When set, the field will prevent:\n         * - `keyDown` events if the entered key doesn't match `/^_enabledCharPattern$/`\n         * - `paste` events if the pasted text doesn't match `/^_enabledCharPattern*$/`\n         * - `drop` events if the dropped text doesn't match `/^_enabledCharPattern*$/`\n         *\n         * For example, to enable entering only numbers and minus signs,\n         * `_enabledCharPattern = \"[\\\\d-]\"`\n         * @protected\n         */\n        _enabledCharPattern: String,\n\n        /** @private */\n        _labelId: String,\n\n        /** @private */\n        _helperTextId: String,\n\n        /** @private */\n        _errorId: String,\n\n        /** @private */\n        _inputId: String,\n\n        /** @private */\n        _hasSlottedHelper: Boolean\n      };\n    }\n\n    static get observers() {\n      return [\n        '_hostPropsChanged(' + HOST_PROPS.default.join(', ') + ')',\n        '_hostAccessiblePropsChanged(' + HOST_PROPS.accessible.join(', ') + ')',\n        '_getActiveErrorId(invalid, errorMessage, _errorId, helperText, _helperTextId, _hasSlottedHelper)',\n        '_getActiveLabelId(label, _labelId, _inputId)',\n        '__observeOffsetHeight(errorMessage, invalid, label, helperText)',\n        '__enabledCharPatternChanged(_enabledCharPattern)'\n      ];\n    }\n\n    /**\n     * @return {HTMLElement | undefined}\n     * @protected\n     */\n    get focusElement() {\n      if (!this.shadowRoot) {\n        return undefined;\n      }\n      const slotted = this.querySelector(`${this._slottedTagName}[slot=\"${this._slottedTagName}\"]`);\n      if (slotted) {\n        return slotted;\n      }\n      return this.shadowRoot.querySelector('[part=\"value\"]');\n    }\n\n    /**\n     * @return {HTMLElement | undefined}}\n     * @protected\n     */\n    get inputElement() {\n      return this.focusElement;\n    }\n\n    /**\n     * @return {string}\n     * @protected\n     */\n    get _slottedTagName() {\n      return 'input';\n    }\n\n    /** @protected */\n    _createConstraintsObserver() {\n      // This complex observer needs to be added dynamically here (instead of defining it above in the `get observers()`)\n      // so that it runs after complex observers of inheriting classes. Otherwise e.g. `_stepOrMinChanged()` observer of\n      // vaadin-number-field would run after this and the `min` and `step` properties would not yet be propagated to\n      // the `inputElement` when this runs.\n      this._createMethodObserver('_constraintsChanged(required, minlength, maxlength, pattern)');\n    }\n\n    /** @private */\n    _onInput(e) {\n      if (this.preventInvalidInput) {\n        const input = this.inputElement;\n        if (input.value.length > 0 && !this.checkValidity()) {\n          input.value = this.value || '';\n          // add input-prevented attribute for 200ms\n          this.setAttribute('input-prevented', '');\n          this._inputDebouncer = Debouncer.debounce(this._inputDebouncer, timeOut.after(200), () => {\n            this.removeAttribute('input-prevented');\n          });\n          return;\n        }\n      }\n\n      if (!e.__fromClearButton) {\n        this.__userInput = true;\n      }\n\n      this.value = e.target.value;\n      this.__userInput = false;\n    }\n\n    /**\n     * @param {!Event} e\n     * @protected\n     */\n    _onChange(e) {\n      if (this._valueClearing) {\n        return;\n      }\n\n      // In the Shadow DOM, the `change` event is not leaked into the\n      // ancestor tree, so we must do this manually.\n      const changeEvent = new CustomEvent('change', {\n        detail: {\n          sourceEvent: e\n        },\n        bubbles: e.bubbles,\n        cancelable: e.cancelable\n      });\n      this.dispatchEvent(changeEvent);\n    }\n\n    /**\n     * @param {unknown} newVal\n     * @param {unknown} oldVal\n     * @protected\n     */\n    _valueChanged(newVal, oldVal) {\n      // setting initial value to empty string, skip validation\n      if (newVal === '' && oldVal === undefined) {\n        return;\n      }\n\n      if (newVal !== '' && newVal != null) {\n        this.setAttribute('has-value', '');\n      } else {\n        this.removeAttribute('has-value');\n      }\n\n      if (this.__userInput) {\n        return;\n      } else if (newVal !== undefined) {\n        this.inputElement.value = newVal;\n      } else {\n        this.value = this.inputElement.value = '';\n      }\n\n      if (this.invalid) {\n        this.validate();\n      }\n    }\n\n    /** @private */\n    _labelChanged(label) {\n      this._setOrToggleAttribute('has-label', !!label, this);\n    }\n\n    /** @private */\n    _helperTextChanged(helperText) {\n      this._setOrToggleAttribute('has-helper', !!helperText, this);\n    }\n\n    /** @private */\n    _errorMessageChanged(errorMessage) {\n      this._setOrToggleAttribute('has-error-message', !!errorMessage, this);\n    }\n\n    /** @private */\n    _onHelperSlotChange() {\n      const slottedNodes = this.shadowRoot.querySelector(`[name=\"helper\"]`).assignedNodes({ flatten: true });\n      // Only has slotted helper if not a text node\n      // Text nodes are added by the helperText prop and not the helper slot\n      // The filter is added due to shady DOM triggering this callback on helperText prop change\n      this._hasSlottedHelper = slottedNodes.filter((node) => node.nodeType !== 3).length;\n\n      if (this._hasSlottedHelper) {\n        this.setAttribute('has-helper', 'slotted');\n      } else if (this.helperText === '' || this.helperText === null) {\n        this.removeAttribute('has-helper');\n      }\n    }\n\n    /** @private */\n    _onSlotChange() {\n      const slotted = this.querySelector(`${this._slottedTagName}[slot=\"${this._slottedTagName}\"]`);\n\n      if (this.value) {\n        this.inputElement.value = this.value;\n        this.validate();\n      }\n\n      if (slotted && !this._slottedInput) {\n        this._validateSlottedValue(slotted);\n        this._addInputListeners(slotted);\n        this._slottedInput = slotted;\n      } else if (!slotted && this._slottedInput) {\n        this._removeInputListeners(this._slottedInput);\n        this._slottedInput = undefined;\n      }\n\n      Object.keys(PROP_TYPE)\n        .map((key) => PROP_TYPE[key])\n        .forEach((type) =>\n          this._propagateHostAttributes(\n            HOST_PROPS[type].map((attr) => this[attr]),\n            type\n          )\n        );\n    }\n\n    /** @private */\n    _hostPropsChanged(...attributesValues) {\n      this._propagateHostAttributes(attributesValues, PROP_TYPE.DEFAULT);\n    }\n\n    /** @private */\n    _hostAccessiblePropsChanged(...attributesValues) {\n      this._propagateHostAttributes(attributesValues, PROP_TYPE.ACCESSIBLE);\n    }\n\n    /** @private */\n    _validateSlottedValue(slotted) {\n      if (slotted.value !== this.value) {\n        console.warn('Please define value on the vaadin-text-field component!');\n        slotted.value = '';\n      }\n    }\n\n    /** @private */\n    _propagateHostAttributes(attributesValues, type) {\n      const input = this.inputElement;\n      const attributeNames = HOST_PROPS[type];\n\n      if (type === PROP_TYPE.ACCESSIBLE) {\n        attributeNames.forEach((attr, index) => {\n          this._setOrToggleAttribute(attr, attributesValues[index], input);\n          this._setOrToggleAttribute(`aria-${attr}`, attributesValues[index] ? 'true' : false, input);\n        });\n      } else {\n        attributeNames.forEach((attr, index) => {\n          this._setOrToggleAttribute(attr, attributesValues[index], input);\n        });\n      }\n    }\n\n    /** @private */\n    _setOrToggleAttribute(name, value, node) {\n      if (!name || !node) {\n        return;\n      }\n\n      if (value) {\n        node.setAttribute(name, typeof value === 'boolean' ? '' : value);\n      } else {\n        node.removeAttribute(name);\n      }\n    }\n\n    /**\n     * @param {boolean | undefined} required\n     * @param {number | undefined} minlength\n     * @param {number | undefined} maxlength\n     * @param {string | undefined} maxlength\n     * @protected\n     */\n    _constraintsChanged(required, minlength, maxlength, pattern) {\n      if (!this.invalid) {\n        return;\n      }\n\n      if (!required && !minlength && !maxlength && !pattern) {\n        this.invalid = false;\n      } else {\n        this.validate();\n      }\n    }\n\n    /**\n     * Returns true if the current input value satisfies all constraints (if any)\n     * @return {boolean}\n     */\n    checkValidity() {\n      // Note (Yuriy): `__forceCheckValidity` is used in containing components (i.e. `vaadin-date-picker`) in order\n      // to force the checkValidity instead of returning the previous invalid state.\n      if (this.required || this.pattern || this.maxlength || this.minlength || this.__forceCheckValidity) {\n        return this.inputElement.checkValidity();\n      } else {\n        return !this.invalid;\n      }\n    }\n\n    /** @private */\n    _addInputListeners(node) {\n      node.addEventListener('input', this._boundOnInput);\n      node.addEventListener('change', this._boundOnChange);\n      node.addEventListener('blur', this._boundOnBlur);\n      node.addEventListener('focus', this._boundOnFocus);\n      node.addEventListener('paste', this._boundOnPaste);\n      node.addEventListener('drop', this._boundOnDrop);\n      node.addEventListener('beforeinput', this._boundOnBeforeInput);\n    }\n\n    /** @private */\n    _removeInputListeners(node) {\n      node.removeEventListener('input', this._boundOnInput);\n      node.removeEventListener('change', this._boundOnChange);\n      node.removeEventListener('blur', this._boundOnBlur);\n      node.removeEventListener('focus', this._boundOnFocus);\n      node.removeEventListener('paste', this._boundOnPaste);\n      node.removeEventListener('drop', this._boundOnDrop);\n      node.removeEventListener('beforeinput', this._boundOnBeforeInput);\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this._createConstraintsObserver();\n\n      this._boundOnInput = this._onInput.bind(this);\n      this._boundOnChange = this._onChange.bind(this);\n      this._boundOnBlur = this._onBlur.bind(this);\n      this._boundOnFocus = this._onFocus.bind(this);\n      this._boundOnPaste = this._onPaste.bind(this);\n      this._boundOnDrop = this._onDrop.bind(this);\n      this._boundOnBeforeInput = this._onBeforeInput.bind(this);\n\n      const defaultInput = this.shadowRoot.querySelector('[part=\"value\"]');\n      this._slottedInput = this.querySelector(`${this._slottedTagName}[slot=\"${this._slottedTagName}\"]`);\n      this._addInputListeners(defaultInput);\n      if (this._slottedInput) {\n        this._addInputListeners(this._slottedInput);\n      }\n\n      this.shadowRoot\n        .querySelector('[name=\"input\"], [name=\"textarea\"]')\n        .addEventListener('slotchange', this._onSlotChange.bind(this));\n\n      this._onHelperSlotChange();\n      this.shadowRoot\n        .querySelector('[name=\"helper\"]')\n        .addEventListener('slotchange', this._onHelperSlotChange.bind(this));\n\n      this.$.clearButton.addEventListener('mousedown', () => (this._valueClearing = true));\n      this.$.clearButton.addEventListener('mouseleave', () => (this._valueClearing = false));\n      this.$.clearButton.addEventListener('click', this._onClearButtonClick.bind(this));\n      this.addEventListener('keydown', this._onKeyDown.bind(this));\n\n      var uniqueId = (TextFieldMixin._uniqueId = 1 + TextFieldMixin._uniqueId || 0);\n      this._errorId = `${this.constructor.is}-error-${uniqueId}`;\n      this._labelId = `${this.constructor.is}-label-${uniqueId}`;\n      this._helperTextId = `${this.constructor.is}-helper-${uniqueId}`;\n      this._inputId = `${this.constructor.is}-input-${uniqueId}`;\n\n      // Lumo theme defines a max-height transition for the \"error-message\"\n      // part on invalid state change.\n      this.shadowRoot.querySelector('[part=\"error-message\"]').addEventListener('transitionend', () => {\n        this.__observeOffsetHeight();\n      });\n    }\n\n    /**\n     * Returns true if `value` is valid.\n     *\n     * @return {boolean} True if the value is valid.\n     */\n    validate() {\n      return !(this.invalid = !this.checkValidity());\n    }\n\n    clear() {\n      this.value = '';\n    }\n\n    /** @private */\n    _onBlur() {\n      this.validate();\n    }\n\n    /** @private */\n    _onFocus() {\n      if (this.autoselect) {\n        this.inputElement.select();\n        // iOS 9 workaround: https://stackoverflow.com/a/7436574\n        setTimeout(() => {\n          try {\n            this.inputElement.setSelectionRange(0, 9999);\n          } catch (e) {\n            // The workaround may cause errors on different input types.\n            // Needs to be suppressed. See https://github.com/vaadin/flow/issues/6070\n          }\n        });\n      }\n    }\n\n    /** @private */\n    _onClearButtonClick(e) {\n      e.preventDefault();\n      // NOTE(yuriy): This line won't affect focus on the host. Cannot be properly tested.\n      this.inputElement.focus();\n      this.clear();\n      this._valueClearing = false;\n      const inputEvent = new Event('input', { bubbles: true, composed: true });\n      inputEvent.__fromClearButton = true;\n      const changeEvent = new Event('change', { bubbles: !this._slottedInput });\n      changeEvent.__fromClearButton = true;\n      this.inputElement.dispatchEvent(inputEvent);\n      this.inputElement.dispatchEvent(changeEvent);\n    }\n\n    /**\n     * @param {!KeyboardEvent} e\n     * @protected\n     */\n    _onKeyDown(e) {\n      if (e.keyCode === 27 && this.clearButtonVisible) {\n        const dispatchChange = !!this.value;\n        this.clear();\n        dispatchChange && this.inputElement.dispatchEvent(new Event('change', { bubbles: !this._slottedInput }));\n      }\n\n      if (this._enabledCharPattern && !this.__shouldAcceptKey(e)) {\n        e.preventDefault();\n      }\n    }\n\n    /** @private */\n    __shouldAcceptKey(event) {\n      return (\n        event.metaKey ||\n        event.ctrlKey ||\n        !event.key || // allow typing anything if event.key is not supported\n        event.key.length !== 1 || // allow \"Backspace\", \"ArrowLeft\" etc.\n        this.__enabledCharRegExp.test(event.key)\n      );\n    }\n\n    /** @private */\n    _onPaste(e) {\n      if (this._enabledCharPattern) {\n        const pastedText = (e.clipboardData || window.clipboardData).getData('text');\n        if (!this.__enabledTextRegExp.test(pastedText)) {\n          e.preventDefault();\n        }\n      }\n    }\n\n    /** @private */\n    _onDrop(e) {\n      if (this._enabledCharPattern) {\n        const draggedText = e.dataTransfer.getData('text');\n        if (!this.__enabledTextRegExp.test(draggedText)) {\n          e.preventDefault();\n        }\n      }\n    }\n\n    /** @private */\n    _onBeforeInput(e) {\n      // The `beforeinput` event covers all the cases for `_enabledCharPattern`: keyboard, pasting and dropping,\n      // but it is still experimental technology so we can't rely on it. It's used here just as an additional check,\n      // because it seems to be the only way to detect and prevent specific keys on mobile devices. See issue #429.\n      if (this._enabledCharPattern && e.data && !this.__enabledTextRegExp.test(e.data)) {\n        e.preventDefault();\n      }\n    }\n\n    /** @private */\n    __enabledCharPatternChanged(_enabledCharPattern) {\n      this.__enabledCharRegExp = _enabledCharPattern && new RegExp('^' + _enabledCharPattern + '$');\n      this.__enabledTextRegExp = _enabledCharPattern && new RegExp('^' + _enabledCharPattern + '*$');\n    }\n\n    /** @private */\n    _getActiveErrorId(invalid, errorMessage, errorId, helperText, helperTextId, hasSlottedHelper) {\n      const ids = [];\n      if (helperText || hasSlottedHelper) {\n        ids.push(helperTextId);\n      }\n      if (errorMessage && invalid) {\n        ids.push(errorId);\n      }\n      this._setOrToggleAttribute('aria-describedby', ids.join(' '), this.focusElement);\n    }\n\n    /** @private */\n    _getActiveLabelId(label, _labelId, _inputId) {\n      let ids = _inputId;\n      if (label) {\n        ids = `${_labelId} ${_inputId}`;\n      }\n      this.focusElement.setAttribute('aria-labelledby', ids);\n    }\n\n    /** @private */\n    _getErrorMessageAriaHidden(invalid, errorMessage, errorId) {\n      return (!(errorMessage && invalid ? errorId : undefined)).toString();\n    }\n\n    /** @private */\n    _dispatchIronResizeEventIfNeeded(sizePropertyName, value) {\n      const previousSizePropertyName = '__previous' + sizePropertyName;\n      if (this[previousSizePropertyName] !== undefined && this[previousSizePropertyName] !== value) {\n        this.dispatchEvent(new CustomEvent('iron-resize', { bubbles: true, composed: true }));\n      }\n\n      this[previousSizePropertyName] = value;\n    }\n\n    /** @private */\n    __observeOffsetHeight() {\n      this.__observeOffsetHeightDebouncer = Debouncer.debounce(\n        this.__observeOffsetHeightDebouncer,\n        animationFrame,\n        () => {\n          this._dispatchIronResizeEventIfNeeded('Height', this.offsetHeight);\n        }\n      );\n    }\n\n    // Workaround for https://github.com/Polymer/polymer/issues/5259\n    get __data() {\n      return this.__dataValue || {};\n    }\n\n    set __data(value) {\n      this.__dataValue = value;\n    }\n\n    /**\n     * Fired when the user commits a value change.\n     *\n     * @event change\n     */\n\n    /**\n     * Fired when the value is changed by the user: on every typing keystroke,\n     * and the value is cleared using the clear button.\n     *\n     * @event input\n     */\n\n    /**\n     * Fired when the size of the element changes.\n     *\n     * @event iron-resize\n     */\n  };\n"
    },
    {
     "id": 123,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/vaadin-grid.js + 17 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/vaadin-grid.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { beforeNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { timeOut, animationFrame } from '@polymer/polymer/lib/utils/async.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ScrollerElement } from './vaadin-grid-scroller.js';\nimport { A11yMixin } from './vaadin-grid-a11y-mixin.js';\nimport { ActiveItemMixin } from './vaadin-grid-active-item-mixin.js';\nimport { ArrayDataProviderMixin } from './vaadin-grid-array-data-provider-mixin.js';\nimport { ColumnResizingMixin } from './vaadin-grid-column-resizing-mixin.js';\nimport { DataProviderMixin } from './vaadin-grid-data-provider-mixin.js';\nimport { DynamicColumnsMixin } from './vaadin-grid-dynamic-columns-mixin.js';\nimport { EventContextMixin } from './vaadin-grid-event-context-mixin.js';\nimport { FilterMixin } from './vaadin-grid-filter-mixin.js';\nimport { RowDetailsMixin } from './vaadin-grid-row-details-mixin.js';\nimport { ScrollMixin } from './vaadin-grid-scroll-mixin.js';\nimport { SelectionMixin } from './vaadin-grid-selection-mixin.js';\nimport { SortMixin } from './vaadin-grid-sort-mixin.js';\nimport { StylingMixin } from './vaadin-grid-styling-mixin.js';\nimport { DragAndDropMixin } from './vaadin-grid-drag-and-drop-mixin.js';\nimport { KeyboardNavigationMixin } from './vaadin-grid-keyboard-navigation-mixin.js';\nimport { ColumnReorderingMixin } from './vaadin-grid-column-reordering-mixin.js';\nimport './vaadin-grid-column.js';\nimport './vaadin-grid-styles.js';\n\nconst TOUCH_DEVICE = (() => {\n  try {\n    document.createEvent('TouchEvent');\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();\n\n/**\n * `<vaadin-grid>` is a free, high quality data grid / data table Web Component. The content of the\n * the grid can be populated in two ways: imperatively by using renderer callback function and\n * declaratively by using Polymer's Templates.\n *\n * ### Quick Start\n *\n * Start with an assigning an array to the [`items`](#/elements/vaadin-grid#property-items) property to visualize your data.\n *\n * Use the [`<vaadin-grid-column>`](#/elements/vaadin-grid-column) element to configure the grid columns. Set `path` and `header`\n * shorthand properties for the columns to define what gets rendered in the cells of the column.\n *\n * #### Example:\n * ```html\n * <vaadin-grid>\n *   <vaadin-grid-column path=\"name.first\" header=\"First name\"></vaadin-grid-column>\n *   <vaadin-grid-column path=\"name.last\" header=\"Last name\"></vaadin-grid-column>\n *   <vaadin-grid-column path=\"email\"></vaadin-grid-column>\n * </vaadin-grid>\n * ```\n *\n * For custom content `vaadin-grid-column` element provides you with three types of `renderer` callback functions: `headerRenderer`,\n * `renderer` and `footerRenderer`.\n *\n * Each of those renderer functions provides `root`, `column`, `model` arguments when applicable.\n * Generate DOM content, append it to the `root` element and control the state\n * of the host element by accessing `column`. Before generating new content,\n * users are able to check if there is already content in `root` for reusing it.\n *\n * Renderers are called on initialization of new column cells and each time the\n * related row model is updated. DOM generated during the renderer call can be reused\n * in the next renderer call and will be provided with the `root` argument.\n * On first call it will be empty.\n *\n * #### Example:\n * ```html\n * <vaadin-grid>\n *   <vaadin-grid-column></vaadin-grid-column>\n *   <vaadin-grid-column></vaadin-grid-column>\n *   <vaadin-grid-column></vaadin-grid-column>\n * </vaadin-grid>\n * ```\n * ```js\n * const grid = document.querySelector('vaadin-grid');\n * grid.items = [{'name': 'John', 'surname': 'Lennon', 'role': 'singer'},\n *               {'name': 'Ringo', 'surname': 'Starr', 'role': 'drums'}];\n *\n * const columns = grid.querySelectorAll('vaadin-grid-column');\n *\n * columns[0].headerRenderer = function(root) {\n *   root.textContent = 'Name';\n * };\n * columns[0].renderer = function(root, column, model) {\n *   root.textContent = model.item.name;\n * };\n *\n * columns[1].headerRenderer = function(root) {\n *   root.textContent = 'Surname';\n * };\n * columns[1].renderer = function(root, column, model) {\n *   root.textContent = model.item.surname;\n * };\n *\n * columns[2].headerRenderer = function(root) {\n *   root.textContent = 'Role';\n * };\n * columns[2].renderer = function(root, column, model) {\n *   root.textContent = model.item.role;\n * };\n * ```\n *\n * Alternatively, the content can be provided with Polymer's Templates:\n *\n * #### Example:\n * ```html\n * <vaadin-grid items='[{\"name\": \"John\", \"surname\": \"Lennon\", \"role\": \"singer\"},\n * {\"name\": \"Ringo\", \"surname\": \"Starr\", \"role\": \"drums\"}]'>\n *   <vaadin-grid-column>\n *     <template class=\"header\">Name</template>\n *     <template>[[item.name]]</template>\n *   </vaadin-grid-column>\n *   <vaadin-grid-column>\n *     <template class=\"header\">Surname</template>\n *     <template>[[item.surname]]</template>\n *   </vaadin-grid-column>\n *   <vaadin-grid-column>\n *     <template class=\"header\">Role</template>\n *     <template>[[item.role]]</template>\n *   </vaadin-grid-column>\n * </vaadin-grid>\n * ```\n *\n * The following helper elements can be used for further customization:\n * - [`<vaadin-grid-column-group>`](#/elements/vaadin-grid-column-group)\n * - [`<vaadin-grid-filter>`](#/elements/vaadin-grid-filter)\n * - [`<vaadin-grid-sorter>`](#/elements/vaadin-grid-sorter)\n * - [`<vaadin-grid-selection-column>`](#/elements/vaadin-grid-selection-column)\n * - [`<vaadin-grid-tree-toggle>`](#/elements/vaadin-grid-tree-toggle)\n *\n * __Note that the helper elements must be explicitly imported.__\n * If you want to import everything at once you can use the `all-imports.html` bundle.\n *\n * A column template can be decorated with one the following class names to specify its purpose\n * - `header`: Marks a header template\n * - `footer`: Marks a footer template\n * - `row-details`: Marks a row details template\n *\n * The following built-in template variables can be bound to inside the column templates:\n * - `[[index]]`: Number representing the row index\n * - `[[item]]` and it's sub-properties: Data object (provided by a data provider / items array)\n * - `{{selected}}`: True if the item is selected (can be two-way bound)\n * - `{{detailsOpened}}`: True if the item has row details opened (can be two-way bound)\n * - `{{expanded}}`: True if the item has tree sublevel expanded (can be two-way bound)\n * - `[[level]]`: Number of the tree sublevel of the item, first level-items have 0\n *\n * ### Lazy Loading with Function Data Provider\n *\n * In addition to assigning an array to the items property, you can alternatively\n * provide the `<vaadin-grid>` data through the\n * [`dataProvider`](#/elements/vaadin-grid#property-dataProvider) function property.\n * The `<vaadin-grid>` calls this function lazily, only when it needs more data\n * to be displayed.\n *\n * See the [`dataProvider`](#/elements/vaadin-grid#property-dataProvider) in\n * the API reference below for the detailed data provider arguments description,\n * and the “Assigning Data” page in the demos.\n *\n * __Note that expanding the tree grid's item will trigger a call to the `dataProvider`.__\n *\n * __Also, note that when using function data providers, the total number of items\n * needs to be set manually. The total number of items can be returned\n * in the second argument of the data provider callback:__\n *\n * ```javascript\n * grid.dataProvider = function(params, callback) {\n *   const url = 'https://api.example/data' +\n *       '?page=' + params.page +        // the requested page index\n *       '&per_page=' + params.pageSize; // number of items on the page\n *   const xhr = new XMLHttpRequest();\n *   xhr.onload = function() {\n *     const response = JSON.parse(xhr.responseText);\n *     callback(\n *       response.employees, // requested page of items\n *       response.totalSize  // total number of items\n *     );\n *   };\n *   xhr.open('GET', url, true);\n *   xhr.send();\n * };\n * ```\n *\n * __Alternatively, you can use the `size` property to set the total number of items:__\n *\n * ```javascript\n * grid.size = 200; // The total number of items\n * grid.dataProvider = function(params, callback) {\n *   const url = 'https://api.example/data' +\n *       '?page=' + params.page +        // the requested page index\n *       '&per_page=' + params.pageSize; // number of items on the page\n *   const xhr = new XMLHttpRequest();\n *   xhr.onload = function() {\n *     const response = JSON.parse(xhr.responseText);\n *     callback(response.employees);\n *   };\n *   xhr.open('GET', url, true);\n *   xhr.send();\n * };\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `row` | Row in the internal table\n * `cell` | Cell in the internal table\n * `header-cell` | Header cell in the internal table\n * `body-cell` | Body cell in the internal table\n * `footer-cell` | Footer cell in the internal table\n * `details-cell` | Row details cell in the internal table\n * `resize-handle` | Handle for resizing the columns\n * `reorder-ghost` | Ghost element of the header cell being dragged\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `loading` | Set when the grid is loading data from data provider | :host\n * `interacting` | Keyboard navigation in interaction mode | :host\n * `navigating` | Keyboard navigation in navigation mode | :host\n * `overflow` | Set when rows are overflowing the grid viewport. Possible values: `top`, `bottom`, `left`, `right` | :host\n * `reordering` | Set when the grid's columns are being reordered | :host\n * `dragover` | Set when the grid (not a specific row) is dragged over | :host\n * `dragging-rows` : Set when grid rows are dragged  | :host\n * `reorder-status` | Reflects the status of a cell while columns are being reordered | cell\n * `frozen` | Frozen cell | cell\n * `last-frozen` | Last frozen cell | cell\n * * `first-column` | First visible cell on a row | cell\n * `last-column` | Last visible cell on a row | cell\n * `selected` | Selected row | row\n * `expanded` | Expanded row | row\n * `details-opened` | Row with details open | row\n * `loading` | Row that is waiting for data from data provider | row\n * `odd` | Odd row | row\n * `first` | The first body row | row\n * `dragstart` | Set for one frame when drag of a row is starting. The value is a number when multiple rows are dragged | row\n * `dragover` | Set when the row is dragged over | row\n * `drag-disabled` | Set to a row that isn't available for dragging | row\n * `drop-disabled` | Set to a row that can't be dropped on top of | row\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @fires {CustomEvent} active-item-changed - Fired when the `activeItem` property changes.\n * @fires {CustomEvent} cell-activate - Fired when the cell is activated with click or keyboard.\n * @fires {CustomEvent} column-reorder - Fired when the columns in the grid are reordered.\n * @fires {CustomEvent} column-resize - Fired when the grid column resize is finished.\n * @fires {CustomEvent} expanded-items-changed - Fired when the `expandedItems` property changes.\n * @fires {CustomEvent} grid-dragstart - Fired when starting to drag grid rows.\n * @fires {CustomEvent} grid-dragend - Fired when the dragging of the rows ends.\n * @fires {CustomEvent} grid-drop - Fired when a drop occurs on top of the grid.\n * @fires {CustomEvent} loading-changed - Fired when the `loading` property changes.\n * @fires {CustomEvent} selected-items-changed - Fired when the `selectedItems` property changes.\n *\n * @extends ScrollerElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @mixes A11yMixin\n * @mixes ActiveItemMixin\n * @mixes ArrayDataProviderMixin\n * @mixes ColumnResizingMixin\n * @mixes DataProviderMixin\n * @mixes DynamicColumnsMixin\n * @mixes FilterMixin\n * @mixes RowDetailsMixin\n * @mixes ScrollMixin\n * @mixes SelectionMixin\n * @mixes SortMixin\n * @mixes KeyboardNavigationMixin\n * @mixes ColumnReorderingMixin\n * @mixes EventContextMixin\n * @mixes StylingMixin\n * @mixes DragAndDropMixin\n */\nclass GridElement extends ElementMixin(\n  ThemableMixin(\n    DataProviderMixin(\n      ArrayDataProviderMixin(\n        DynamicColumnsMixin(\n          ActiveItemMixin(\n            ScrollMixin(\n              SelectionMixin(\n                SortMixin(\n                  RowDetailsMixin(\n                    KeyboardNavigationMixin(\n                      A11yMixin(\n                        FilterMixin(\n                          ColumnReorderingMixin(\n                            ColumnResizingMixin(EventContextMixin(DragAndDropMixin(StylingMixin(ScrollerElement))))\n                          )\n                        )\n                      )\n                    )\n                  )\n                )\n              )\n            )\n          )\n        )\n      )\n    )\n  )\n) {\n  static get template() {\n    return html`\n      <div\n        id=\"scroller\"\n        safari$=\"[[_safari]]\"\n        ios$=\"[[_ios]]\"\n        loading$=\"[[loading]]\"\n        column-reordering-allowed$=\"[[columnReorderingAllowed]]\"\n      >\n        <table id=\"table\" role=\"grid\" aria-multiselectable=\"true\" tabindex=\"0\">\n          <caption id=\"sizer\" part=\"row\"></caption>\n          <thead id=\"header\" role=\"rowgroup\"></thead>\n          <tbody id=\"items\" role=\"rowgroup\"></tbody>\n          <tfoot id=\"footer\" role=\"rowgroup\"></tfoot>\n        </table>\n\n        <div part=\"reorder-ghost\"></div>\n      </div>\n\n      <div id=\"focusexit\" tabindex=\"0\"></div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-grid';\n  }\n\n  static get version() {\n    return '6.0.1';\n  }\n\n  static get observers() {\n    return ['_columnTreeChanged(_columnTree, _columnTree.*)'];\n  }\n\n  static get properties() {\n    return {\n      /** @private */\n      _safari: {\n        type: Boolean,\n        value: /^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n      },\n\n      /** @private */\n      _ios: {\n        type: Boolean,\n        value:\n          (/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream) ||\n          (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1)\n      },\n\n      /** @private */\n      _firefox: {\n        type: Boolean,\n        value: navigator.userAgent.toLowerCase().indexOf('firefox') > -1\n      },\n\n      /** @private */\n      _android: {\n        type: Boolean,\n        value: /android/i.test(navigator.userAgent)\n      },\n\n      /** @private */\n      _touchDevice: {\n        type: Boolean,\n        value: TOUCH_DEVICE\n      },\n\n      /**\n       * If true, the grid's height is defined by its rows.\n       *\n       * Effectively, this disables the grid's virtual scrolling so that all the rows are rendered in the DOM at once.\n       * If the grid has a large number of items, using the feature is discouraged to avoid performance issues.\n       * @attr {boolean} height-by-rows\n       * @type {boolean}\n       */\n      heightByRows: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        observer: '_heightByRowsChanged'\n      },\n\n      /** @private */\n      _recalculateColumnWidthOnceLoadingFinished: {\n        type: Boolean,\n        value: true\n      }\n    };\n  }\n\n  constructor() {\n    super();\n    this.addEventListener('animationend', this._onAnimationEnd);\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    this.recalculateColumnWidths();\n  }\n\n  /**\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @protected\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (name === 'dir') {\n      this.__isRTL = newValue === 'rtl';\n      this._updateScrollerMeasurements();\n    }\n  }\n\n  /** @private */\n  __hasRowsWithClientHeight() {\n    return !!Array.from(this.$.items.children).filter((row) => row.clientHeight).length;\n  }\n\n  /** @protected */\n  __itemsReceived() {\n    if (\n      this._recalculateColumnWidthOnceLoadingFinished &&\n      !this._cache.isLoading() &&\n      this.__hasRowsWithClientHeight()\n    ) {\n      this._recalculateColumnWidthOnceLoadingFinished = false;\n      this.recalculateColumnWidths();\n    }\n  }\n\n  /**\n   * @param {!Array<!GridColumnElement>} cols the columns to auto size based on their content width\n   * @private\n   */\n  _recalculateColumnWidths(cols) {\n    // Note: The `cols.forEach()` loops below could be implemented as a single loop but this has been\n    // split for performance reasons to batch these similar actions [write/read] together to avoid\n    // unnecessary layout trashing.\n\n    // [write] Set automatic width for all cells (breaks column alignment)\n    cols.forEach((col) => {\n      col.width = 'auto';\n      col._origFlexGrow = col.flexGrow;\n      col.flexGrow = 0;\n    });\n    // [read] Measure max cell width in each column\n    cols.forEach((col) => {\n      col._currentWidth = 0;\n      // Note: _allCells only contains cells which are currently rendered in DOM\n      col._allCells.forEach((c) => {\n        // Add 1px buffer to the offset width to avoid too narrow columns (sub-pixel rendering)\n        const cellWidth = c.offsetWidth + 1;\n        col._currentWidth = Math.max(col._currentWidth, cellWidth);\n      });\n    });\n    // [write] Set column widths to fit widest measured content\n    cols.forEach((col) => {\n      col.width = `${col._currentWidth}px`;\n      col.flexGrow = col._origFlexGrow;\n      col._currentWidth = undefined;\n      col._origFlexGrow = undefined;\n    });\n  }\n\n  /**\n   * Updates the `width` of all columns which have `autoWidth` set to `true`.\n   */\n  recalculateColumnWidths() {\n    if (!this._columnTree) {\n      return; // No columns\n    }\n    if (this._cache.isLoading()) {\n      this._recalculateColumnWidthOnceLoadingFinished = true;\n    } else {\n      const cols = this._getColumns().filter((col) => !col.hidden && col.autoWidth);\n      this._recalculateColumnWidths(cols);\n    }\n  }\n\n  /** @private */\n  _createScrollerRows(count) {\n    const rows = [];\n    for (let i = 0; i < count; i++) {\n      const row = document.createElement('tr');\n      row.setAttribute('part', 'row');\n      row.setAttribute('role', 'row');\n      if (this._columnTree) {\n        this._updateRow(row, this._columnTree[this._columnTree.length - 1], 'body', false, true);\n      }\n      rows.push(row);\n    }\n\n    if (this._columnTree) {\n      this._columnTree[this._columnTree.length - 1].forEach((c) => c.notifyPath && c.notifyPath('_cells.*', c._cells));\n    }\n\n    beforeNextRender(this, () => {\n      this._updateFirstAndLastColumn();\n      this._resetKeyboardNavigation();\n    });\n    return rows;\n  }\n\n  /** @private */\n  _getRowTarget() {\n    return this.$.items;\n  }\n\n  /** @private */\n  _createCell(tagName) {\n    const contentId = (this._contentIndex = this._contentIndex + 1 || 0);\n    const slotName = 'vaadin-grid-cell-content-' + contentId;\n\n    const cellContent = document.createElement('vaadin-grid-cell-content');\n    cellContent.setAttribute('slot', slotName);\n\n    const cell = document.createElement(tagName);\n    cell.id = slotName.replace('-content-', '-');\n    cell.setAttribute('tabindex', '-1');\n    cell.setAttribute('role', tagName === 'td' ? 'gridcell' : 'columnheader');\n\n    const slot = document.createElement('slot');\n    slot.setAttribute('name', slotName);\n\n    cell.appendChild(slot);\n\n    cell._content = cellContent;\n\n    // With native Shadow DOM, mousedown on slotted element does not focus\n    // focusable slot wrapper, that is why cells are not focused with\n    // mousedown. Workaround: listen for mousedown and focus manually.\n    cellContent.addEventListener('mousedown', () => {\n      if (window.chrome) {\n        // Chrome bug: focusing before mouseup prevents text selection, see http://crbug.com/771903\n        const mouseUpListener = () => {\n          if (!cellContent.contains(this.getRootNode().activeElement)) {\n            cell.focus();\n          }\n          // If focus is in the cell content — respect it, do not change.\n          document.removeEventListener('mouseup', mouseUpListener, true);\n        };\n        document.addEventListener('mouseup', mouseUpListener, true);\n      } else {\n        // Focus on mouseup, on the other hand, removes selection on Safari.\n        // Watch out sync focus removal issue, only async focus works here.\n        setTimeout(() => {\n          if (!cellContent.contains(this.getRootNode().activeElement)) {\n            cell.focus();\n          }\n        });\n      }\n    });\n\n    return cell;\n  }\n\n  /**\n   * @param {!HTMLTableRowElement} row\n   * @param {!Array<!GridColumnElement>} columns\n   * @param {?string} section\n   * @param {boolean} isColumnRow\n   * @param {boolean} noNotify\n   * @protected\n   */\n  _updateRow(row, columns, section, isColumnRow, noNotify) {\n    section = section || 'body';\n\n    const contentsFragment = document.createDocumentFragment();\n\n    Array.from(row.children).forEach((cell) => (cell._vacant = true));\n    row.innerHTML = '';\n    if (row.id !== 'sizer') {\n      row.hidden = true;\n    }\n    columns\n      .filter((column) => !column.hidden)\n      .forEach((column, index, cols) => {\n        let cell;\n\n        if (section === 'body') {\n          // Body\n          column._cells = column._cells || [];\n          cell = column._cells.filter((cell) => cell._vacant)[0];\n          if (!cell) {\n            cell = this._createCell('td');\n            column._cells.push(cell);\n          }\n          cell.setAttribute('part', 'cell body-cell');\n          row.appendChild(cell);\n\n          if (index === cols.length - 1 && (this._rowDetailsTemplate || this.rowDetailsRenderer)) {\n            // Add details cell as last cell to body rows\n            this._detailsCells = this._detailsCells || [];\n            const detailsCell = this._detailsCells.filter((cell) => cell._vacant)[0] || this._createCell('td');\n            if (this._detailsCells.indexOf(detailsCell) === -1) {\n              this._detailsCells.push(detailsCell);\n            }\n            if (!detailsCell._content.parentElement) {\n              contentsFragment.appendChild(detailsCell._content);\n            }\n            this._configureDetailsCell(detailsCell);\n            row.appendChild(detailsCell);\n            this._a11ySetRowDetailsCell(row, detailsCell);\n            detailsCell._vacant = false;\n          }\n\n          if (column.notifyPath && !noNotify) {\n            column.notifyPath('_cells.*', column._cells);\n          }\n        } else {\n          // Header & footer\n          const tagName = section === 'header' ? 'th' : 'td';\n          if (isColumnRow || column.localName === 'vaadin-grid-column-group') {\n            cell = column[`_${section}Cell`] || this._createCell(tagName);\n            cell._column = column;\n            row.appendChild(cell);\n            column[`_${section}Cell`] = cell;\n          } else {\n            column._emptyCells = column._emptyCells || [];\n            cell = column._emptyCells.filter((cell) => cell._vacant)[0] || this._createCell(tagName);\n            cell._column = column;\n            row.appendChild(cell);\n            if (column._emptyCells.indexOf(cell) === -1) {\n              column._emptyCells.push(cell);\n            }\n          }\n          cell.setAttribute('part', `cell ${section}-cell`);\n          this.__updateHeaderFooterRowVisibility(row);\n        }\n\n        if (!cell._content.parentElement) {\n          contentsFragment.appendChild(cell._content);\n        }\n        cell._vacant = false;\n        cell._column = column;\n      });\n\n    // Might be empty if only cache was used\n    this.appendChild(contentsFragment);\n\n    this._frozenCellsChanged();\n    this._updateFirstAndLastColumnForRow(row);\n  }\n\n  /**\n   * @param {HTMLTableRowElement} row\n   * @protected\n   */\n  __updateHeaderFooterRowVisibility(row) {\n    if (!row) {\n      return;\n    }\n\n    const visibleRowCells = Array.from(row.children).filter((cell) => {\n      const column = cell._column;\n      if (column._emptyCells && column._emptyCells.indexOf(cell) > -1) {\n        // The cell is an \"empty cell\"  -> doesn't block hiding the row\n        return false;\n      }\n      if (row.parentElement === this.$.header) {\n        if (column.headerRenderer || column._headerTemplate) {\n          // The cell is the header cell of a column that has a header renderer\n          // or a header template -> row should be visible\n          return true;\n        }\n        if (column.header === null) {\n          // The column header is explicilty set to null -> doesn't block hiding the row\n          return false;\n        }\n        if (column.path || column.header !== undefined) {\n          // The column has an explicit non-null header or a path that generates a header\n          // -> row should be visible\n          return true;\n        }\n      } else {\n        if (column.footerRenderer || column._footerTemplate) {\n          // The cell is the footer cell of a column that has a footer renderer\n          // or a footer template -> row should be visible\n          return true;\n        }\n      }\n    });\n\n    if (row.hidden !== !visibleRowCells.length) {\n      row.hidden = !visibleRowCells.length;\n      this.notifyResize();\n    }\n  }\n\n  /** @private */\n  _updateScrollerItem(row, index) {\n    this._preventScrollerRotatingCellFocus(row, index);\n\n    if (!this._columnTree) {\n      return;\n    }\n\n    this._toggleAttribute('first', index === 0, row);\n    this._toggleAttribute('odd', index % 2, row);\n    this._a11yUpdateRowRowindex(row, index);\n    this._getItem(index, row);\n  }\n\n  /** @private */\n  _columnTreeChanged(columnTree) {\n    this._renderColumnTree(columnTree);\n    this.recalculateColumnWidths();\n  }\n\n  /**\n   * @param {!Array<!GridColumnElement>} columnTree\n   * @protected\n   */\n  _renderColumnTree(columnTree) {\n    Array.from(this.$.items.children).forEach((row) =>\n      this._updateRow(row, columnTree[columnTree.length - 1], null, false, true)\n    );\n\n    while (this.$.header.children.length < columnTree.length) {\n      const headerRow = document.createElement('tr');\n      headerRow.setAttribute('part', 'row');\n      headerRow.setAttribute('role', 'row');\n      this.$.header.appendChild(headerRow);\n\n      const footerRow = document.createElement('tr');\n      footerRow.setAttribute('part', 'row');\n      footerRow.setAttribute('role', 'row');\n      this.$.footer.appendChild(footerRow);\n    }\n    while (this.$.header.children.length > columnTree.length) {\n      this.$.header.removeChild(this.$.header.firstElementChild);\n      this.$.footer.removeChild(this.$.footer.firstElementChild);\n    }\n\n    Array.from(this.$.header.children).forEach((headerRow, index) =>\n      this._updateRow(headerRow, columnTree[index], 'header', index === columnTree.length - 1)\n    );\n\n    Array.from(this.$.footer.children).forEach((footerRow, index) =>\n      this._updateRow(footerRow, columnTree[columnTree.length - 1 - index], 'footer', index === 0)\n    );\n\n    // Sizer rows\n    this._updateRow(this.$.sizer, columnTree[columnTree.length - 1]);\n\n    this._resizeHandler();\n    this._frozenCellsChanged();\n    this._updateFirstAndLastColumn();\n    this._resetKeyboardNavigation();\n    this._a11yUpdateHeaderRows();\n    this._a11yUpdateFooterRows();\n    this.__updateFooterPositioning();\n  }\n\n  __updateFooterPositioning() {\n    if (this._firefox) {\n      // Sticky (or translated) footer in a flexbox host doesn't get included in\n      // the scroll height calculation on FF. This is a workaround for the issue.\n      this.$.items.style.paddingBottom = 0;\n      if (!this.heightByRows) {\n        this.$.items.style.paddingBottom = `${this.$.footer.offsetHeight}px`;\n      }\n    }\n\n    if (this._ios) {\n      const isOldIOS = !window.CSS.supports('position', 'sticky');\n      if (isOldIOS) {\n        // Due to a rendering bug, the sticky header may disappear on an older iOS (10-12) Safari\n        // if the grid is used inside of a flex box. This is a workaround for the issue.\n        this.$.table.style.height = '';\n        this.$.table.style.minHeight = '100%';\n        this.$.table.style.maxHeight = '100%';\n        setTimeout(() => (this.$.table.style.height = `${this.$.scroller.offsetHeight}px`));\n      }\n    }\n  }\n\n  /**\n   * @param {!HTMLElement} row\n   * @param {GridItem} item\n   * @protected\n   */\n  _updateItem(row, item) {\n    row._item = item;\n    const model = this.__getRowModel(row);\n\n    this._toggleAttribute('selected', model.selected, row);\n    this._a11yUpdateRowSelected(row, model.selected);\n    this._a11yUpdateRowLevel(row, model.level);\n    this._toggleAttribute('expanded', model.expanded, row);\n    if (this._rowDetailsTemplate || this.rowDetailsRenderer) {\n      this._toggleDetailsCell(row, item);\n    }\n    this._generateCellClassNames(row, model);\n    this._filterDragAndDrop(row, model);\n\n    Array.from(row.children).forEach((cell) => {\n      if (cell._renderer) {\n        const owner = cell._column || this;\n        cell._renderer.call(owner, cell._content, owner, model);\n      } else if (cell._instance) {\n        cell._instance.__detailsOpened__ = model.detailsOpened;\n        cell._instance.__selected__ = model.selected;\n        cell._instance.__level__ = model.level;\n        cell._instance.__expanded__ = model.expanded;\n        cell._instance.setProperties(model);\n      }\n    });\n\n    this._debouncerUpdateHeights = Debouncer.debounce(this._debouncerUpdateHeights, timeOut.after(1), () => {\n      this._updateMetrics();\n      this._positionItems();\n      this._updateScrollerSize();\n    });\n  }\n\n  /** @private */\n  _resizeHandler() {\n    this._updateDetailsCellHeights();\n    this._accessIronListAPI(super._resizeHandler, true);\n    this._updateScrollerMeasurements();\n    this.__updateFooterPositioning();\n  }\n\n  /** @private */\n  _onAnimationEnd(e) {\n    // ShadyCSS applies scoping suffixes to animation names\n    if (e.animationName.indexOf('vaadin-grid-appear') === 0) {\n      this._render();\n      e.stopPropagation();\n      this.notifyResize();\n      this.__itemsReceived();\n\n      requestAnimationFrame(() => {\n        this.__scrollToPendingIndex();\n        // This needs to be set programmatically in order to avoid an iOS 10 bug (disappearing grid)\n        this.$.table.style.webkitOverflowScrolling = 'touch';\n      });\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {boolean} bool\n   * @param {!Element} node\n   * @protected\n   */\n  _toggleAttribute(name, bool, node) {\n    if (node.hasAttribute(name) === !bool) {\n      if (bool) {\n        node.setAttribute(name, '');\n      } else {\n        node.removeAttribute(name);\n      }\n    }\n  }\n\n  /**\n   * @param {!HTMLTableRowElement} row\n   * @return {!GridItemModel}\n   * @protected\n   */\n  __getRowModel(row) {\n    return {\n      index: row.index,\n      item: row._item,\n      level: this._getIndexLevel(row.index),\n      expanded: this._isExpanded(row._item),\n      selected: this._isSelected(row._item),\n      detailsOpened: !!(this._rowDetailsTemplate || this.rowDetailsRenderer) && this._isDetailsOpened(row._item)\n    };\n  }\n\n  /**\n   * Manually invoke existing renderers for all the columns\n   * (header, footer and body cells) and opened row details.\n   */\n  render() {\n    if (this._columnTree) {\n      // header and footer renderers\n      this._columnTree.forEach((level) => {\n        level.forEach((column) => column._renderHeaderAndFooter());\n      });\n\n      // body and row details renderers\n      this._update();\n    }\n  }\n\n  /**\n   * Updates the computed metrics and positioning of internal grid parts\n   * (row/details cell positioning etc). Needs to be invoked whenever the sizing of grid\n   * content changes asynchronously to ensure consistent appearance (e.g. when a\n   * contained image whose bounds aren't known beforehand finishes loading).\n   */\n  notifyResize() {\n    super.notifyResize();\n  }\n\n  /** @private */\n  _heightByRowsChanged(value, oldValue) {\n    if (value || oldValue) {\n      this.notifyResize();\n    }\n  }\n\n  /** @protected */\n  __forceReflow() {\n    this._debouncerForceReflow = Debouncer.debounce(this._debouncerForceReflow, animationFrame, () => {\n      this.$.scroller.style.overflow = 'hidden';\n      setTimeout(() => (this.$.scroller.style.overflow = ''));\n    });\n  }\n}\n\ncustomElements.define(GridElement.is, GridElement);\n\nexport { GridElement };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-scroller.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { animationFrame } from '@polymer/polymer/lib/utils/async.js';\nimport { flush } from '@polymer/polymer/lib/utils/flush.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { PolymerIronList } from './iron-list.js';\n\n/**\n * This Element is used internally by vaadin-grid.\n *\n * @implements PolymerIronList\n * @extends HTMLElement\n */\nclass ScrollerElement extends PolymerIronList {\n  static get properties() {\n    return {\n      size: {\n        type: Number,\n        notify: true\n      },\n\n      /**\n       * @type {number}\n       * @protected\n       */\n      _vidxOffset: {\n        type: Number,\n        value: 0\n      }\n    };\n  }\n\n  static get observers() {\n    return ['_effectiveSizeChanged(_effectiveSize)'];\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    this._scrollHandler();\n  }\n\n  /**\n   * @param {!HTMLTableRowElement} item\n   * @param {number} index\n   * @protected\n   */\n  _updateScrollerItem() {}\n\n  /** @protected */\n  _afterScroll() {}\n\n  /** @protected */\n  _getRowTarget() {}\n\n  /** @protected */\n  _createScrollerRows() {}\n\n  /** @protected */\n  _canPopulate() {}\n\n  /**\n   * @param {number} index\n   * @protected\n   */\n  scrollToIndex(index) {\n    this._warnPrivateAPIAccess('scrollToIndex');\n\n    this._scrollingToIndex = true;\n    index = Math.min(Math.max(index, 0), this._effectiveSize - 1);\n    this.$.table.scrollTop = (index / this._effectiveSize) * (this.$.table.scrollHeight - this.$.table.offsetHeight);\n    this._scrollHandler();\n\n    if (this._accessIronListAPI(() => this._maxScrollTop) && this._virtualCount < this._effectiveSize) {\n      this._adjustVirtualIndexOffset(1000000);\n    }\n\n    this._accessIronListAPI(() => super.scrollToIndex(index - this._vidxOffset));\n    this._scrollHandler();\n\n    // Ensure scroll position\n    const row = Array.from(this.$.items.children).filter((child) => child.index === index)[0];\n    if (row) {\n      const headerOffset = row.getBoundingClientRect().top - this.$.header.getBoundingClientRect().bottom;\n      if (Math.abs(headerOffset) > 1) {\n        this.$.table.scrollTop += headerOffset;\n        this._scrollHandler();\n      }\n    }\n\n    this._scrollingToIndex = false;\n  }\n\n  /** @private */\n  _effectiveSizeChanged(size) {\n    let fvi; // first visible (adjusted) index\n    let fviOffset = 0;\n    this._iterateItems((pidx, vidx) => {\n      if (vidx === this._firstVisibleIndex) {\n        const row = this._physicalItems[pidx];\n        fvi = row.index;\n        fviOffset = row.getBoundingClientRect().top;\n      }\n    });\n\n    if (this.items && size < this.items.length) {\n      // Size was reduced, scroll to 0 first\n      this._scrollTop = 0;\n    }\n    if (!Array.isArray(this.items)) {\n      const maxVirtualItems = 100000;\n      this.items = { length: Math.min(size, maxVirtualItems) };\n    }\n\n    this._accessIronListAPI(() => super._itemsChanged({ path: 'items' }));\n\n    this._virtualCount = Math.min(this.items.length, size) || 0;\n\n    if (this._scrollTop === 0) {\n      this._accessIronListAPI(() => this._scrollToIndex(Math.min(size - 1, fvi)));\n      this._iterateItems((pidx) => {\n        const row = this._physicalItems[pidx];\n        if (row.index === fvi) {\n          this.$.table.scrollTop += Math.round(row.getBoundingClientRect().top - fviOffset);\n        }\n        // Restore keyboard focus to the right cell\n        if (\n          row.index === this._focusedItemIndex &&\n          this._itemsFocusable &&\n          this.$.items.contains(this.shadowRoot.activeElement)\n        ) {\n          const cellIndex = Array.from(this._itemsFocusable.parentElement.children).indexOf(this._itemsFocusable);\n          row.children[cellIndex].focus();\n        }\n      });\n    }\n    this._assignModels();\n    requestAnimationFrame(() => this._update());\n\n    this.__updateFooterPositioning();\n  }\n\n  /** @protected */\n  _positionItems() {\n    this._adjustScrollPosition();\n\n    let rePosition;\n    if (isNaN(this._physicalTop)) {\n      rePosition = true;\n      this._physicalTop = 0;\n    }\n\n    let y = this._physicalTop;\n    this._iterateItems((pidx) => {\n      this._physicalItems[pidx].style.transform = `translateY(${y}px)`;\n      y += this._physicalSizes[pidx];\n    });\n\n    if (rePosition) {\n      this._scrollToIndex(0);\n    }\n  }\n\n  /**\n   * @param {number} count\n   * @protected\n   */\n  _increasePoolIfNeeded(count) {\n    if ((count === 0 && this._scrollingToIndex) || !this._canPopulate() || !this._effectiveSize) {\n      return;\n    }\n\n    if (!this._initialPoolCreated) {\n      this._initialPoolCreated = true;\n      super._increasePoolIfNeeded(25);\n    } else if (this._optPhysicalSize !== Infinity) {\n      this._debounceIncreasePool = Debouncer.debounce(this._debounceIncreasePool, animationFrame, () => {\n        this._updateMetrics();\n        const remainingPhysicalSize = this._optPhysicalSize - this._physicalSize;\n        let estimatedMissingRowCount = Math.ceil(remainingPhysicalSize / this._physicalAverage);\n\n        if (this._physicalCount + estimatedMissingRowCount > this._effectiveSize) {\n          // Do not increase the physical item count above the this._effectiveSize\n          estimatedMissingRowCount = Math.max(0, this._effectiveSize - this._physicalCount);\n        }\n\n        if (this._physicalSize && estimatedMissingRowCount > 0 && this._optPhysicalSize !== Infinity) {\n          super._increasePoolIfNeeded(estimatedMissingRowCount);\n          // Ensure the rows are in order after increasing pool\n          this.__reorderChildNodes();\n        }\n      });\n    }\n  }\n\n  /** @private */\n  __reorderChildNodes() {\n    const childNodes = Array.from(this.$.items.childNodes);\n    const rowsInOrder = !!childNodes.reduce((inOrder, current, currentIndex, array) => {\n      if (currentIndex === 0 || array[currentIndex - 1].index === current.index - 1) {\n        return inOrder;\n      }\n    }, true);\n\n    if (!rowsInOrder) {\n      childNodes\n        .sort((row1, row2) => {\n          return row1.index - row2.index;\n        })\n        .forEach((row) => this.$.items.appendChild(row));\n    }\n  }\n\n  /** @private */\n  _createPool(size) {\n    const fragment = document.createDocumentFragment();\n    const physicalItems = this._createScrollerRows(size);\n\n    physicalItems.forEach((inst) => fragment.appendChild(inst));\n    this._getRowTarget().appendChild(fragment);\n\n    // Weird hack needed to get Safari to actually distribute slots\n    const content = this.querySelector('[slot]');\n    if (content) {\n      const slot = content.getAttribute('slot');\n      content.setAttribute('slot', 'foo-bar');\n      content.setAttribute('slot', slot);\n    }\n\n    afterNextRender(this, () => this.notifyResize());\n    return physicalItems;\n  }\n\n  /**\n   * Assigns the data models to a given set of items.\n   * @param {!Array<number>=} itemSet\n   * @protected\n   */\n  _assignModels(itemSet) {\n    this._iterateItems((pidx, vidx) => {\n      const el = this._physicalItems[pidx];\n      this._toggleAttribute('hidden', vidx >= this._effectiveSize, el);\n      this._updateScrollerItem(el, vidx + (this._vidxOffset || 0));\n    }, itemSet);\n  }\n\n  /** @protected */\n  _scrollHandler() {\n    const delta = this.$.table.scrollTop - this._scrollPosition;\n    this._accessIronListAPI(super._scrollHandler);\n    const oldOffset = this._vidxOffset;\n    if (this._accessIronListAPI(() => this._maxScrollTop) && this._virtualCount < this._effectiveSize) {\n      this._adjustVirtualIndexOffset(delta);\n    } else {\n      this._vidxOffset = 0;\n    }\n    if (this._vidxOffset !== oldOffset) {\n      this._update();\n    }\n    this._afterScroll();\n  }\n\n  /** @private */\n  _adjustVirtualIndexOffset(delta) {\n    if (Math.abs(delta) > 10000) {\n      if (this._noScale) {\n        this._noScale = false;\n        return;\n      }\n      const scale = this.$.table.scrollTop / (this.$.table.scrollHeight - this.$.table.offsetHeight);\n      const offset = scale * this._effectiveSize;\n      this._vidxOffset = Math.round(offset - scale * this._virtualCount);\n    } else {\n      // Make sure user can always swipe/wheel scroll to the start and end\n      const oldOffset = this._vidxOffset || 0;\n      const threshold = 1000;\n      const maxShift = 100;\n      // At start\n      if (this._scrollTop === 0) {\n        this._vidxOffset = 0;\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(0);\n        }\n      } else if (this.firstVisibleIndex < threshold && this._vidxOffset > 0) {\n        this._vidxOffset -= Math.min(this._vidxOffset, maxShift);\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(this.firstVisibleIndex + (oldOffset - this._vidxOffset));\n        }\n        this._noScale = true;\n      }\n      // At end\n      const maxOffset = this._effectiveSize - this._virtualCount;\n      if (this._scrollTop >= this._maxScrollTop && this._maxScrollTop > 0) {\n        this._vidxOffset = maxOffset;\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(this._virtualCount);\n        }\n      } else if (this.firstVisibleIndex > this._virtualCount - threshold && this._vidxOffset < maxOffset) {\n        this._vidxOffset += Math.min(maxOffset - this._vidxOffset, maxShift);\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(this.firstVisibleIndex - (this._vidxOffset - oldOffset));\n        }\n        this._noScale = true;\n      }\n    }\n  }\n\n  /** @private */\n  _accessIronListAPI(cb) {\n    this._warnPrivateAPIAccessAsyncEnabled = false;\n    const returnValue = cb.apply(this);\n    this._debouncerWarnPrivateAPIAccess = Debouncer.debounce(\n      this._debouncerWarnPrivateAPIAccess,\n      animationFrame,\n      () => (this._warnPrivateAPIAccessAsyncEnabled = true)\n    );\n    return returnValue;\n  }\n\n  /**\n   * Allow iron-list to access its APIs from debounced callbacks without warns\n   * @private\n   */\n  _debounceRender(cb, asyncModule) {\n    super._debounceRender(() => this._accessIronListAPI(cb), asyncModule);\n  }\n\n  /**\n   * Warn when iron-list APIs are being accessed directly\n   * @private\n   */\n  _warnPrivateAPIAccess(apiName) {\n    if (this._warnPrivateAPIAccessAsyncEnabled) {\n      console.warn(`Accessing private API (${apiName})!`);\n    }\n  }\n\n  /** @protected */\n  _render() {\n    this._accessIronListAPI(super._render);\n  }\n\n  /** @protected */\n  _itemsChanged() {\n    /* Ignore */\n  }\n\n  /**\n   * @return {number}\n   * @protected\n   */\n  get _firstVisibleIndex() {\n    return this._accessIronListAPI(() => super.firstVisibleIndex);\n  }\n\n  /**\n   * @return {number}\n   * @protected\n   */\n  get _lastVisibleIndex() {\n    return this._accessIronListAPI(() => super.lastVisibleIndex);\n  }\n\n  /**\n   * @param {number} index\n   * @protected\n   */\n  _scrollToIndex(index) {\n    this._accessIronListAPI(() => this.scrollToIndex(index));\n  }\n\n  /** @private */\n  get firstVisibleIndex() {\n    this._warnPrivateAPIAccess('firstVisibleIndex');\n    return super.firstVisibleIndex;\n  }\n\n  /** @private */\n  set firstVisibleIndex(value) {\n    this._warnPrivateAPIAccess('firstVisibleIndex');\n    super.firstVisibleIndex = value;\n  }\n\n  /** @private */\n  get lastVisibleIndex() {\n    this._warnPrivateAPIAccess('lastVisibleIndex');\n    return super.lastVisibleIndex;\n  }\n\n  /** @private */\n  set lastVisibleIndex(value) {\n    this._warnPrivateAPIAccess('lastVisibleIndex');\n    super.lastVisibleIndex = value;\n  }\n\n  /** @private */\n  updateViewportBoundaries() {\n    this._warnPrivateAPIAccess('updateViewportBoundaries');\n    super.updateViewportBoundaries.apply(this, arguments);\n  }\n\n  /** @protected */\n  _resizeHandler() {\n    super._resizeHandler();\n    flush();\n  }\n}\n\nexport { ScrollerElement };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-a11y-mixin.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nexport const A11yMixin = (superClass) =>\n  class A11yMixin extends superClass {\n    static get observers() {\n      return ['_a11yUpdateGridSize(size, _columnTree, _columnTree.*)'];\n    }\n\n    /** @private */\n    _a11yGetHeaderRowCount(_columnTree) {\n      return _columnTree.filter((level) =>\n        level.some((col) => col._headerTemplate || col.headerRenderer || col.path || col.header)\n      ).length;\n    }\n\n    /** @private */\n    _a11yGetFooterRowCount(_columnTree) {\n      return _columnTree.filter((level) => level.some((col) => col._headerTemplate || col.headerRenderer)).length;\n    }\n\n    /** @private */\n    _a11yUpdateGridSize(size, _columnTree) {\n      if (size === undefined || _columnTree === undefined) {\n        return;\n      }\n\n      const bodyColumns = _columnTree[_columnTree.length - 1];\n      this.$.table.setAttribute(\n        'aria-rowcount',\n        size + this._a11yGetHeaderRowCount(_columnTree) + this._a11yGetFooterRowCount(_columnTree)\n      );\n      this.$.table.setAttribute('aria-colcount', (bodyColumns && bodyColumns.length) || 0);\n\n      this._a11yUpdateHeaderRows();\n      this._a11yUpdateFooterRows();\n    }\n\n    /** @protected */\n    _a11yUpdateHeaderRows() {\n      Array.from(this.$.header.children).forEach((headerRow, index) =>\n        headerRow.setAttribute('aria-rowindex', index + 1)\n      );\n    }\n\n    /** @protected */\n    _a11yUpdateFooterRows() {\n      Array.from(this.$.footer.children).forEach((footerRow, index) =>\n        footerRow.setAttribute('aria-rowindex', this._a11yGetHeaderRowCount(this._columnTree) + this.size + index + 1)\n      );\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {number} index\n     * @protected\n     */\n    _a11yUpdateRowRowindex(row, index) {\n      row.setAttribute('aria-rowindex', index + this._a11yGetHeaderRowCount(this._columnTree) + 1);\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {boolean} selected\n     * @protected\n     */\n    _a11yUpdateRowSelected(row, selected) {\n      // Jaws reads selection only for rows, NVDA only for cells\n      row.setAttribute('aria-selected', Boolean(selected));\n      Array.from(row.children).forEach((cell) => cell.setAttribute('aria-selected', Boolean(selected)));\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {number} level\n     * @protected\n     */\n    _a11yUpdateRowLevel(row, level) {\n      row.setAttribute('aria-level', level + 1);\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {boolean} detailsOpened\n     * @protected\n     */\n    _a11yUpdateRowDetailsOpened(row, detailsOpened) {\n      Array.from(row.children).forEach((cell) => {\n        if (typeof detailsOpened === 'boolean') {\n          cell.setAttribute('aria-expanded', detailsOpened);\n        } else {\n          if (cell.hasAttribute('aria-expanded')) {\n            cell.removeAttribute('aria-expanded');\n          }\n        }\n      });\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {!HTMLElement} detailsCell\n     * @protected\n     */\n    _a11ySetRowDetailsCell(row, detailsCell) {\n      Array.from(row.children).forEach((cell) => {\n        if (cell !== detailsCell) {\n          cell.setAttribute('aria-controls', detailsCell.id);\n        }\n      });\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {number} colspan\n     * @protected\n     */\n    _a11yUpdateCellColspan(cell, colspan) {\n      cell.setAttribute('aria-colspan', Number(colspan));\n    }\n\n    /** @protected */\n    _a11yUpdateSorters() {\n      Array.from(this.querySelectorAll('vaadin-grid-sorter')).forEach((sorter) => {\n        let cellContent = sorter.parentNode;\n        while (cellContent && cellContent.localName !== 'vaadin-grid-cell-content') {\n          cellContent = cellContent.parentNode;\n        }\n        if (cellContent && cellContent.assignedSlot) {\n          const cell = cellContent.assignedSlot.parentNode;\n          cell.setAttribute(\n            'aria-sort',\n            {\n              asc: 'ascending',\n              desc: 'descending'\n            }[String(sorter.direction)] || 'none'\n          );\n        }\n      });\n    }\n  };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-array-data-provider-mixin.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { Base } from '@polymer/polymer/polymer-legacy.js';\n\n/**\n * @polymerMixin\n */\nexport const ArrayDataProviderMixin = (superClass) =>\n  class ArrayDataProviderMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * An array containing the items which will be stamped to the column template\n         * instances.\n         *\n         * @type {Array<!GridItem> | undefined}\n         */\n        items: Array\n      };\n    }\n\n    static get observers() {\n      return ['_itemsChanged(items, items.*, isAttached)'];\n    }\n\n    /** @private */\n    _itemsChanged(items, splices, isAttached) {\n      if (!isAttached) {\n        return;\n      }\n      if (!Array.isArray(items)) {\n        if (items === undefined || items === null) {\n          this.size = 0;\n        }\n        if (this.dataProvider === this._arrayDataProvider) {\n          this.dataProvider = undefined;\n        }\n        return;\n      }\n\n      this.size = items.length;\n      this.dataProvider = this.dataProvider || this._arrayDataProvider;\n      this.clearCache();\n      this._ensureFirstPageLoaded();\n    }\n\n    /**\n     * @param {GridDataProviderParams} opts\n     * @param {GridDataProviderCallback} cb\n     * @protected\n     */\n    _arrayDataProvider(opts, cb) {\n      let items = (Array.isArray(this.items) ? this.items : []).slice(0);\n\n      if (this._filters && this._checkPaths(this._filters, 'filtering', items)) {\n        items = this._filter(items);\n      }\n\n      this.size = items.length;\n\n      if (opts.sortOrders.length && this._checkPaths(this._sorters, 'sorting', items)) {\n        items = items.sort(this._multiSort.bind(this));\n      }\n\n      const start = opts.page * opts.pageSize;\n      const end = start + opts.pageSize;\n      const slice = items.slice(start, end);\n      cb(slice, items.length);\n    }\n\n    /**\n     * Check array of filters/sorters for paths validity, console.warn invalid items\n     * @param {!Array<!GridFilter | !GridSorter>} arrayToCheck The array of filters/sorters to check\n     * @param {string} action The name of action to include in warning (filtering, sorting)\n     * @param {!Array<!GridItem>} items\n     * @protected\n     */\n    _checkPaths(arrayToCheck, action, items) {\n      if (!items.length) {\n        return false;\n      }\n\n      let result = true;\n\n      for (let i in arrayToCheck) {\n        const path = arrayToCheck[i].path;\n\n        // skip simple paths\n        if (!path || path.indexOf('.') === -1) {\n          continue;\n        }\n\n        const parentProperty = path.replace(/\\.[^.]*$/, ''); // a.b.c -> a.b\n        if (Base.get(parentProperty, items[0]) === undefined) {\n          console.warn(`Path \"${path}\" used for ${action} does not exist in all of the items, ${action} is disabled.`);\n          result = false;\n        }\n      }\n\n      return result;\n    }\n\n    /**\n     * @param {unknown} a\n     * @param {unknown} b\n     * @return {number}\n     * @protected\n     */\n    _multiSort(a, b) {\n      return this._sorters\n        .map((sort) => {\n          if (sort.direction === 'asc') {\n            return this._compare(Base.get(sort.path, a), Base.get(sort.path, b));\n          } else if (sort.direction === 'desc') {\n            return this._compare(Base.get(sort.path, b), Base.get(sort.path, a));\n          }\n          return 0;\n        })\n        .reduce((p, n) => {\n          return p ? p : n;\n        }, 0);\n    }\n\n    /**\n     * @param {unknown} value\n     * @return {string}\n     * @protected\n     */\n    _normalizeEmptyValue(value) {\n      if ([undefined, null].indexOf(value) >= 0) {\n        return '';\n      } else if (isNaN(value)) {\n        return value.toString();\n      } else {\n        return value;\n      }\n    }\n\n    /**\n     * @param {unknown} a\n     * @param {unknown} b\n     * @return {number}\n     * @protected\n     */\n    _compare(a, b) {\n      a = this._normalizeEmptyValue(a);\n      b = this._normalizeEmptyValue(b);\n\n      if (a < b) {\n        return -1;\n      }\n      if (a > b) {\n        return 1;\n      }\n      return 0;\n    }\n\n    /**\n     * @param {!Array<!GridItem>} items\n     * @return {!Array<!GridItem>}\n     * @protected\n     */\n    _filter(items) {\n      return items.filter((item) => {\n        return (\n          this._filters.filter((filter) => {\n            const value = this._normalizeEmptyValue(Base.get(filter.path, item));\n            const filterValueLowercase = this._normalizeEmptyValue(filter.value).toString().toLowerCase();\n            return value.toString().toLowerCase().indexOf(filterValueLowercase) === -1;\n          }).length === 0\n        );\n      });\n    }\n  };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-column-resizing-mixin.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners.js';\nimport { addListener } from '@polymer/polymer/lib/utils/gestures.js';\n\n/**\n * @polymerMixin\n */\nexport const ColumnResizingMixin = (superClass) =>\n  class ColumnResizingMixin extends GestureEventListeners(superClass) {\n    ready() {\n      super.ready();\n      const scroller = this.$.scroller;\n      addListener(scroller, 'track', this._onHeaderTrack.bind(this));\n\n      // Disallow scrolling while resizing\n      scroller.addEventListener('touchmove', (e) => scroller.hasAttribute('column-resizing') && e.preventDefault());\n\n      // Disable contextmenu on any resize separator.\n      scroller.addEventListener(\n        'contextmenu',\n        (e) => e.target.getAttribute('part') == 'resize-handle' && e.preventDefault()\n      );\n\n      // Disable native cell focus when resizing\n      scroller.addEventListener(\n        'mousedown',\n        (e) => e.target.getAttribute('part') === 'resize-handle' && e.preventDefault()\n      );\n    }\n\n    /** @private */\n    _onHeaderTrack(e) {\n      const handle = e.target;\n      if (handle.getAttribute('part') === 'resize-handle') {\n        const cell = handle.parentElement;\n        let column = cell._column;\n\n        this._toggleAttribute('column-resizing', true, this.$.scroller);\n\n        // Get the target column to resize\n        while (column.localName === 'vaadin-grid-column-group') {\n          column = Array.prototype.slice\n            .call(column._childColumns, 0)\n            .sort(function (a, b) {\n              return a._order - b._order;\n            })\n            .filter(function (column) {\n              return !column.hidden;\n            })\n            .pop();\n        }\n\n        const columnRowCells = Array.from(this.$.header.querySelectorAll('[part~=\"row\"]:last-child [part~=\"cell\"]'));\n        const targetCell = columnRowCells.filter((cell) => cell._column === column)[0];\n        // Resize the target column\n        if (targetCell.offsetWidth) {\n          const style = window.getComputedStyle(targetCell);\n          const minWidth =\n            10 +\n            parseInt(style.paddingLeft) +\n            parseInt(style.paddingRight) +\n            parseInt(style.borderLeftWidth) +\n            parseInt(style.borderRightWidth) +\n            parseInt(style.marginLeft) +\n            parseInt(style.marginRight);\n          const maxWidth =\n            targetCell.offsetWidth +\n            (this.__isRTL\n              ? targetCell.getBoundingClientRect().left - e.detail.x\n              : e.detail.x - targetCell.getBoundingClientRect().right);\n          column.width = Math.max(minWidth, maxWidth) + 'px';\n          column.flexGrow = 0;\n        }\n        // Fix width and flex-grow for all preceding columns\n        columnRowCells\n          .sort(function (a, b) {\n            return a._column._order - b._column._order;\n          })\n          .forEach(function (cell, index, array) {\n            if (index < array.indexOf(targetCell)) {\n              cell._column.width = cell.offsetWidth + 'px';\n              cell._column.flexGrow = 0;\n            }\n          });\n\n        if (e.detail.state === 'end') {\n          this._toggleAttribute('column-resizing', false, this.$.scroller);\n          this.dispatchEvent(\n            new CustomEvent('column-resize', {\n              detail: { resizedColumn: column }\n            })\n          );\n        }\n\n        // Notify resize\n        this._resizeHandler();\n      }\n    }\n\n    /**\n     * Fired when a column in the grid is resized by the user.\n     *\n     * @event column-resize\n     * @param {Object} detail\n     * @param {Object} detail.resizedColumn the column that was resized\n     */\n  };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-dynamic-columns-mixin.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { timeOut } from '@polymer/polymer/lib/utils/async.js';\n\n/**\n * @polymerMixin\n */\nexport const DynamicColumnsMixin = (superClass) =>\n  class DynamicColumnsMixin extends superClass {\n    /** @protected */\n    ready() {\n      super.ready();\n      this._addNodeObserver();\n    }\n\n    /** @private */\n    _hasColumnGroups(columns) {\n      for (let i = 0; i < columns.length; i++) {\n        if (columns[i].localName === 'vaadin-grid-column-group') {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * @param {!GridColumnGroupElement} el\n     * @return {!Array<!GridColumnElement>}\n     * @protected\n     */\n    _getChildColumns(el) {\n      return FlattenedNodesObserver.getFlattenedNodes(el).filter(this._isColumnElement);\n    }\n\n    /** @private */\n    _flattenColumnGroups(columns) {\n      return columns\n        .map((col) => {\n          if (col.localName === 'vaadin-grid-column-group') {\n            return this._getChildColumns(col);\n          } else {\n            return [col];\n          }\n        })\n        .reduce((prev, curr) => {\n          return prev.concat(curr);\n        }, []);\n    }\n\n    /** @private */\n    _getColumnTree() {\n      const rootColumns = FlattenedNodesObserver.getFlattenedNodes(this).filter(this._isColumnElement);\n      const columnTree = [];\n\n      for (let c = rootColumns; ; ) {\n        columnTree.push(c);\n        if (!this._hasColumnGroups(c)) {\n          break;\n        }\n        c = this._flattenColumnGroups(c);\n      }\n\n      return columnTree;\n    }\n\n    /** @protected */\n    _updateColumnTree() {\n      const columnTree = this._getColumnTree();\n      if (!this._arrayEquals(columnTree, this._columnTree)) {\n        this._columnTree = columnTree;\n      }\n    }\n\n    /** @private */\n    _addNodeObserver() {\n      this._observer = new FlattenedNodesObserver(this, (info) => {\n        const rowDetailsTemplate = info.addedNodes.filter(\n          (n) => n.localName === 'template' && n.classList.contains('row-details')\n        )[0];\n        if (rowDetailsTemplate && this._rowDetailsTemplate !== rowDetailsTemplate) {\n          this._rowDetailsTemplate = rowDetailsTemplate;\n        }\n\n        if (\n          info.addedNodes.filter(this._isColumnElement).length > 0 ||\n          info.removedNodes.filter(this._isColumnElement).length > 0\n        ) {\n          this._updateColumnTree();\n        }\n\n        this._debouncerCheckImports = Debouncer.debounce(\n          this._debouncerCheckImports,\n          timeOut.after(2000),\n          this._checkImports.bind(this)\n        );\n\n        this._ensureFirstPageLoaded();\n      });\n    }\n\n    /** @private */\n    _arrayEquals(arr1, arr2) {\n      if (!arr1 || !arr2 || arr1.length != arr2.length) {\n        return false;\n      }\n\n      for (let i = 0, l = arr1.length; i < l; i++) {\n        // Check if we have nested arrays\n        if (arr1[i] instanceof Array && arr2[i] instanceof Array) {\n          // recurse into the nested arrays\n          if (!this._arrayEquals(arr1[i], arr2[i])) {\n            return false;\n          }\n        } else if (arr1[i] != arr2[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /** @protected */\n    _checkImports() {\n      [\n        'vaadin-grid-column-group',\n        'vaadin-grid-filter',\n        'vaadin-grid-filter-column',\n        'vaadin-grid-tree-toggle',\n        'vaadin-grid-selection-column',\n        'vaadin-grid-sort-column',\n        'vaadin-grid-sorter'\n      ].forEach((elementName) => {\n        const element = this.querySelector(elementName);\n        if (element && !(element instanceof PolymerElement)) {\n          console.warn(`Make sure you have imported the required module for <${elementName}> element.`);\n        }\n      });\n    }\n\n    /** @protected */\n    _updateFirstAndLastColumn() {\n      Array.from(this.shadowRoot.querySelectorAll('tr')).forEach((row) => this._updateFirstAndLastColumnForRow(row));\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @protected\n     */\n    _updateFirstAndLastColumnForRow(row) {\n      Array.from(row.querySelectorAll('[part~=\"cell\"]:not([part~=\"details-cell\"])'))\n        .sort((a, b) => {\n          return a._column._order - b._column._order;\n        })\n        .forEach((cell, cellIndex, children) => {\n          this._toggleAttribute('first-column', cellIndex === 0, cell);\n          this._toggleAttribute('last-column', cellIndex === children.length - 1, cell);\n        });\n    }\n\n    /**\n     * @param {!Node} node\n     * @return {boolean}\n     * @protected\n     */\n    _isColumnElement(node) {\n      return node.nodeType === Node.ELEMENT_NODE && /\\bcolumn\\b/.test(node.localName);\n    }\n  };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-event-context-mixin.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nexport const EventContextMixin = (superClass) =>\n  class EventContextMixin extends superClass {\n    /**\n     * Returns an object with context information about the event target:\n     * - `item`: the data object corresponding to the targeted row (not specified when targeting header or footer)\n     * - `column`: the column element corresponding to the targeted cell (not specified when targeting row details)\n     * - `section`: whether the event targeted the body, header, footer or details of the grid\n     *\n     * These additional properties are included when `item` is specified:\n     * - `index`: the index of the item\n     * - `selected`: the selected state of the item\n     * - `detailsOpened`: whether the row details are open for the item\n     * - `expanded`: the expanded state of the tree toggle\n     * - `level`: the tree hierarchy level\n     *\n     * The returned object is populated only when a grid cell, header, footer or row details is found in `event.composedPath()`.\n     * This means mostly mouse and keyboard events. If such a grid part is not found in the path, an empty object is returned.\n     * This may be the case eg. if the event is fired on the `<vaadin-grid>` element and not any deeper in the DOM, or if\n     * the event targets the empty part of the grid body.\n     *\n     * @param {!Event} event\n     * @return {GridEventContext | object}\n     */\n    getEventContext(event) {\n      const context = {};\n\n      const path = event.composedPath();\n      const cell = path[path.indexOf(this.$.table) - 3];\n\n      if (!cell) {\n        return context;\n      }\n\n      context.section = ['body', 'header', 'footer', 'details'].filter(\n        (section) => cell.getAttribute('part').indexOf(section) > -1\n      )[0];\n\n      if (cell._column) {\n        context.column = cell._column;\n      }\n\n      if (context.section === 'body' || context.section === 'details') {\n        Object.assign(context, this.__getRowModel(cell.parentElement));\n      }\n\n      return context;\n    }\n  };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-filter-mixin.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nexport const FilterMixin = (superClass) =>\n  class FilterMixin extends superClass {\n    static get properties() {\n      return {\n        /** @private */\n        _filters: {\n          type: Array,\n          value: function () {\n            return [];\n          }\n        }\n      };\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n      this.addEventListener('filter-changed', this._filterChanged.bind(this));\n    }\n\n    /** @private */\n    _filterChanged(e) {\n      if (this._filters.indexOf(e.target) === -1) {\n        this._filters.push(e.target);\n      }\n\n      e.stopPropagation();\n\n      if (this.dataProvider) {\n        this.clearCache();\n      }\n    }\n\n    /**\n     * @return {!Array<!GridFilter>}\n     * @protected\n     */\n    _mapFilters() {\n      return this._filters.map((filter) => {\n        return {\n          path: filter.path,\n          value: filter.value\n        };\n      });\n    }\n  };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-row-details-mixin.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { Templatizer } from './vaadin-grid-templatizer.js';\nimport { flush } from '@polymer/polymer/lib/utils/flush.js';\n\n/**\n * @polymerMixin\n */\nexport const RowDetailsMixin = (superClass) =>\n  class RowDetailsMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * An array containing references to items with open row details.\n         * @type {Array<GridItem> | null | undefined}\n         */\n        detailsOpenedItems: {\n          type: Array,\n          value: function () {\n            return [];\n          }\n        },\n\n        /**\n         * @type {HTMLTemplateElement}\n         * @protected\n         */\n        _rowDetailsTemplate: Object,\n\n        /**\n         * Custom function for rendering the content of the row details.\n         * Receives three arguments:\n         *\n         * - `root` The row details content DOM element. Append your content to it.\n         * - `grid` The `<vaadin-grid>` element.\n         * - `model` The object with the properties related with\n         *   the rendered item, contains:\n         *   - `model.index` The index of the item.\n         *   - `model.item` The item.\n         *\n         * @type {GridRowDetailsRenderer | null | undefined}\n         */\n        rowDetailsRenderer: Function,\n\n        /**\n         * @type {!Array<!HTMLElement> | undefined}\n         * @protected\n         */\n        _detailsCells: {\n          type: Array\n        }\n      };\n    }\n\n    static get observers() {\n      return [\n        '_detailsOpenedItemsChanged(detailsOpenedItems.*, _rowDetailsTemplate, rowDetailsRenderer)',\n        '_rowDetailsTemplateOrRendererChanged(_rowDetailsTemplate, rowDetailsRenderer)'\n      ];\n    }\n\n    /** @private */\n    _rowDetailsTemplateOrRendererChanged(rowDetailsTemplate, rowDetailsRenderer) {\n      if (rowDetailsTemplate && rowDetailsRenderer) {\n        throw new Error('You should only use either a renderer or a template for row details');\n      }\n      if (rowDetailsTemplate || rowDetailsRenderer) {\n        if (rowDetailsTemplate && !rowDetailsTemplate.templatizer) {\n          const templatizer = new Templatizer();\n          templatizer._grid = this;\n          templatizer.dataHost = this.dataHost;\n          templatizer.template = rowDetailsTemplate;\n          rowDetailsTemplate.templatizer = templatizer;\n        }\n\n        if (this._columnTree) {\n          // Only update the rows if the column tree has already been initialized\n          Array.from(this.$.items.children).forEach((row) => {\n            if (!row.querySelector('[part~=details-cell]')) {\n              this._updateRow(row, this._columnTree[this._columnTree.length - 1]);\n              this._a11yUpdateRowDetailsOpened(row, false);\n            }\n            // Clear any old template instances\n            delete row.querySelector('[part~=details-cell]')._instance;\n          });\n        }\n\n        if (this.detailsOpenedItems.length) {\n          Array.from(this.$.items.children).forEach(this._toggleDetailsCell, this);\n          this._update();\n        }\n      }\n    }\n\n    /** @private */\n    _detailsOpenedItemsChanged(changeRecord) {\n      if (changeRecord.path === 'detailsOpenedItems.length' || !changeRecord.value) {\n        // Let’s avoid duplicate work of both “.splices” and “.length” updates.\n        return;\n      }\n      Array.from(this.$.items.children).forEach((row) => {\n        this._toggleDetailsCell(row, row._item);\n        this._a11yUpdateRowDetailsOpened(row, this._isDetailsOpened(row._item));\n        this._toggleAttribute('details-opened', this._isDetailsOpened(row._item), row);\n      });\n    }\n\n    /**\n     * @param {!HTMLElement} cell\n     * @protected\n     */\n    _configureDetailsCell(cell) {\n      cell.setAttribute('part', 'cell details-cell');\n      // Freeze the details cell, so that it does not scroll horizontally\n      // with the normal cells. This way it looks less weird.\n      this._toggleAttribute('frozen', true, cell);\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {!GridItem} item\n     * @protected\n     */\n    _toggleDetailsCell(row, item) {\n      const cell = row.querySelector('[part~=\"details-cell\"]');\n      if (!cell) {\n        return;\n      }\n      const detailsHidden = !this._isDetailsOpened(item);\n      const hiddenChanged = !!cell.hidden !== detailsHidden;\n\n      if ((!cell._instance && !cell._renderer) || cell.hidden !== detailsHidden) {\n        cell.hidden = detailsHidden;\n        if (detailsHidden) {\n          row.style.removeProperty('padding-bottom');\n        } else {\n          if (this.rowDetailsRenderer) {\n            cell._renderer = this.rowDetailsRenderer;\n            cell._renderer.call(this, cell._content, this, { index: row.index, item: item });\n          } else if (this._rowDetailsTemplate && !cell._instance) {\n            // Stamp the template\n            cell._instance = this._rowDetailsTemplate.templatizer.createInstance();\n            cell._content.innerHTML = '';\n            cell._content.appendChild(cell._instance.root);\n            this._updateItem(row, item);\n          }\n\n          flush();\n          row.style.setProperty('padding-bottom', `${cell.offsetHeight}px`);\n\n          requestAnimationFrame(() => this.notifyResize());\n        }\n      }\n      if (hiddenChanged) {\n        this._updateMetrics();\n        this._positionItems();\n      }\n    }\n\n    /** @protected */\n    _updateDetailsCellHeights() {\n      Array.from(this.$.items.querySelectorAll('[part~=\"details-cell\"]:not([hidden])')).forEach((cell) => {\n        cell.parentElement.style.setProperty('padding-bottom', `${cell.offsetHeight}px`);\n      });\n    }\n\n    /**\n     * @param {!GridItem} item\n     * @return {boolean}\n     * @protected\n     */\n    _isDetailsOpened(item) {\n      return this.detailsOpenedItems && this._getItemIndexInArray(item, this.detailsOpenedItems) !== -1;\n    }\n\n    /**\n     * Open the details row of a given item.\n     * @param {!GridItem} item\n     */\n    openItemDetails(item) {\n      if (!this._isDetailsOpened(item)) {\n        this.push('detailsOpenedItems', item);\n      }\n    }\n\n    /**\n     * Close the details row of a given item.\n     * @param {!GridItem} item\n     */\n    closeItemDetails(item) {\n      if (this._isDetailsOpened(item)) {\n        this.splice('detailsOpenedItems', this._getItemIndexInArray(item, this.detailsOpenedItems), 1);\n      }\n    }\n\n    /** @private */\n    _detailsOpenedInstanceChangedCallback(instance, value) {\n      if (value) {\n        this.openItemDetails(instance.item);\n      } else {\n        this.closeItemDetails(instance.item);\n      }\n    }\n  };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-scroll-mixin.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { animationFrame, timeOut, microTask } from '@polymer/polymer/lib/utils/async.js';\n\nconst timeouts = {\n  SCROLLING: 500,\n  IGNORE_WHEEL: 500\n};\n\n/**\n * @polymerMixin\n */\nexport const ScrollMixin = (superClass) =>\n  class ScrollMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * Cached array of frozen cells\n         * @private\n         */\n        _frozenCells: {\n          type: Array,\n          value: () => []\n        },\n\n        /** @private */\n        _rowWithFocusedElement: Element,\n\n        /** @private */\n        _deltaYAcc: {\n          type: Number,\n          value: 0\n        },\n\n        /** @private */\n        _useSticky: {\n          type: Boolean,\n          value:\n            window.CSS &&\n            window.CSS.supports &&\n            (window.CSS.supports('position', 'sticky') || window.CSS.supports('position', '-webkit-sticky'))\n        }\n      };\n    }\n\n    static get observers() {\n      return ['_scrollViewportHeightUpdated(_viewportHeight)'];\n    }\n\n    /**\n     * Override (from iron-scroll-target-behavior) to avoid document scroll\n     * @private\n     */\n    set _scrollTop(top) {\n      this.$.table.scrollTop = top;\n    }\n\n    /** @private */\n    get _scrollTop() {\n      return this.$.table.scrollTop;\n    }\n\n    constructor() {\n      super();\n      this._scrollLineHeight = this._getScrollLineHeight();\n    }\n\n    /**\n     * @returns {Number|undefined} - The browser's default font-size in pixels\n     * @private\n     */\n    _getScrollLineHeight() {\n      const el = document.createElement('div');\n      el.style.fontSize = 'initial';\n      el.style.display = 'none';\n      document.body.appendChild(el);\n      const fontSize = window.getComputedStyle(el).fontSize;\n      document.body.removeChild(el);\n      return fontSize ? window.parseInt(fontSize) : undefined;\n    }\n\n    /** @private */\n    _scrollViewportHeightUpdated(_viewportHeight) {\n      this._scrollPageHeight =\n        _viewportHeight - this.$.header.clientHeight - this.$.footer.clientHeight - this._scrollLineHeight;\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      // Preserve accessor to the legacy scrolling functionality\n      this.$.outerscroller = document.createElement('div');\n\n      this.scrollTarget = this.$.table;\n\n      this.addEventListener('wheel', this._onWheel);\n\n      this.$.items.addEventListener('focusin', (e) => {\n        const itemsIndex = e.composedPath().indexOf(this.$.items);\n        this._rowWithFocusedElement = e.composedPath()[itemsIndex - 1];\n      });\n      this.$.items.addEventListener('focusout', () => (this._rowWithFocusedElement = undefined));\n\n      // Reordering the physical rows cancels the user's grab of the scroll bar handle on Safari.\n      // Need to defer reordering until the user lets go of the scroll bar handle.\n      this.scrollTarget.addEventListener('mousedown', () => (this.__mouseDown = true));\n      this.scrollTarget.addEventListener('mouseup', () => {\n        this.__mouseDown = false;\n        if (this.__pendingReorder) {\n          this.__pendingReorder = false;\n          setTimeout(() => this._reorderRows(), timeouts.SCROLLING);\n        }\n      });\n    }\n\n    /**\n     * Scroll to a specific row index in the virtual list. Note that the row index is\n     * not always the same for any particular item. For example, sorting/filtering/expanding\n     * or collapsing hierarchical items can affect the row index related to an item.\n     *\n     * @param {number} index Row index to scroll to\n     */\n    scrollToIndex(index) {\n      this._accessIronListAPI(() => super.scrollToIndex(index));\n    }\n\n    /** @private */\n    _onWheel(e) {\n      if (e.ctrlKey || this._hasScrolledAncestor(e.target, e.deltaX, e.deltaY)) {\n        return;\n      }\n\n      const table = this.$.table;\n\n      let deltaY = e.deltaY;\n      if (e.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        // Scrolling by \"lines of text\" instead of pixels\n        deltaY *= this._scrollLineHeight;\n      } else if (e.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n        // Scrolling by \"pages\" instead of pixels\n        deltaY *= this._scrollPageHeight;\n      }\n\n      if (this._wheelAnimationFrame) {\n        // Skip new wheel events while one is being processed\n        this._deltaYAcc += deltaY;\n        e.preventDefault();\n        return;\n      }\n\n      deltaY += this._deltaYAcc;\n      this._deltaYAcc = 0;\n\n      this._wheelAnimationFrame = true;\n      this._debouncerWheelAnimationFrame = Debouncer.debounce(\n        this._debouncerWheelAnimationFrame,\n        animationFrame,\n        () => (this._wheelAnimationFrame = false)\n      );\n\n      const momentum = Math.abs(e.deltaX) + Math.abs(deltaY);\n\n      if (this._canScroll(table, e.deltaX, deltaY)) {\n        e.preventDefault();\n        table.scrollTop += deltaY;\n        table.scrollLeft += e.deltaX;\n        this._scrollHandler();\n        this._hasResidualMomentum = true;\n\n        this._ignoreNewWheel = true;\n        this._debouncerIgnoreNewWheel = Debouncer.debounce(\n          this._debouncerIgnoreNewWheel,\n          timeOut.after(timeouts.IGNORE_WHEEL),\n          () => (this._ignoreNewWheel = false)\n        );\n      } else if ((this._hasResidualMomentum && momentum <= this._previousMomentum) || this._ignoreNewWheel) {\n        e.preventDefault();\n      } else if (momentum > this._previousMomentum) {\n        this._hasResidualMomentum = false;\n      }\n      this._previousMomentum = momentum;\n    }\n\n    /**\n     * Determines if the element has an ancestor prior to this\n     * cell content that handles the scroll delta\n     * @private\n     */\n    _hasScrolledAncestor(el, deltaX, deltaY) {\n      if (el.localName === 'vaadin-grid-cell-content') {\n        return false;\n      } else if (\n        this._canScroll(el, deltaX, deltaY) &&\n        ['auto', 'scroll'].indexOf(getComputedStyle(el).overflow) !== -1\n      ) {\n        return true;\n      } else if (el !== this && el.parentElement) {\n        return this._hasScrolledAncestor(el.parentElement, deltaX, deltaY);\n      }\n    }\n\n    /**\n     * Determines if the the given scroll deltas can be applied to the element\n     * (fully or partially)\n     * @private\n     */\n    _canScroll(el, deltaX, deltaY) {\n      return (\n        (deltaY > 0 && el.scrollTop < el.scrollHeight - el.offsetHeight) ||\n        (deltaY < 0 && el.scrollTop > 0) ||\n        (deltaX > 0 && el.scrollLeft < el.scrollWidth - el.offsetWidth) ||\n        (deltaX < 0 && el.scrollLeft > 0)\n      );\n    }\n\n    /** @private */\n    _scheduleScrolling() {\n      if (!this._scrollingFrame) {\n        // Defer setting state attributes to avoid Edge hiccups\n        this._scrollingFrame = requestAnimationFrame(() => this._toggleAttribute('scrolling', true, this.$.scroller));\n      }\n      this._debounceScrolling = Debouncer.debounce(this._debounceScrolling, timeOut.after(timeouts.SCROLLING), () => {\n        cancelAnimationFrame(this._scrollingFrame);\n        delete this._scrollingFrame;\n        this._toggleAttribute('scrolling', false, this.$.scroller);\n        this._reorderRows();\n      });\n    }\n\n    /** @private */\n    _afterScroll() {\n      this._translateStationaryElements();\n\n      if (!this.hasAttribute('reordering')) {\n        this._scheduleScrolling();\n      }\n\n      this._updateOverflow();\n    }\n\n    /** @private */\n    _updateOverflow() {\n      // Set overflow styling attributes\n      let overflow = '';\n      const table = this.$.table;\n      if (table.scrollTop < table.scrollHeight - table.clientHeight) {\n        overflow += ' bottom';\n      }\n\n      if (table.scrollTop > 0) {\n        overflow += ' top';\n      }\n\n      if (table.scrollLeft < table.scrollWidth - table.clientWidth) {\n        overflow += ' right';\n      }\n\n      if (table.scrollLeft > 0) {\n        overflow += ' left';\n      }\n\n      this._debounceOverflow = Debouncer.debounce(this._debounceOverflow, animationFrame, () => {\n        const value = overflow.trim();\n        if (value.length > 0 && this.getAttribute('overflow') !== value) {\n          this.setAttribute('overflow', value);\n        } else if (value.length == 0 && this.hasAttribute('overflow')) {\n          this.removeAttribute('overflow');\n        }\n      });\n    }\n\n    /**\n     * Correct order needed for preserving correct tab order between cell contents.\n     * @private\n     */\n    _reorderRows() {\n      if (this.__mouseDown) {\n        this.__pendingReorder = true;\n        return;\n      }\n\n      const body = this.$.items;\n      const items = body.querySelectorAll('tr');\n      if (!items.length) {\n        return;\n      }\n\n      const adjustedVirtualStart = this._virtualStart + this._vidxOffset;\n\n      // Which row to use as a target?\n      const targetRow = this._rowWithFocusedElement || Array.from(items).filter((row) => !row.hidden)[0];\n      if (!targetRow) {\n        // All rows are hidden, don't reorder\n        return;\n      }\n\n      // Where the target row should be?\n      const targetPhysicalIndex = targetRow.index - adjustedVirtualStart;\n\n      // Reodrer the DOM elements to keep the target row at the target physical index\n      const delta = Array.from(items).indexOf(targetRow) - targetPhysicalIndex;\n      if (delta > 0) {\n        for (let i = 0; i < delta; i++) {\n          body.appendChild(items[i]);\n        }\n      } else if (delta < 0) {\n        for (let i = items.length + delta; i < items.length; i++) {\n          body.insertBefore(items[i], items[0]);\n        }\n      }\n\n      // Due to a rendering bug, reordering the rows can make the sticky header disappear on Safari\n      // if the grid is used inside of a flex box. This is a workaround for the issue.\n      if (this._safari) {\n        const { transform } = this.$.header.style;\n        this.$.header.style.transform = '';\n        setTimeout(() => (this.$.header.style.transform = transform));\n      }\n    }\n\n    /** @protected */\n    _frozenCellsChanged() {\n      this._debouncerCacheElements = Debouncer.debounce(this._debouncerCacheElements, microTask, () => {\n        Array.from(this.shadowRoot.querySelectorAll('[part~=\"cell\"]')).forEach(function (cell) {\n          cell.style.transform = '';\n        });\n        this._frozenCells = Array.prototype.slice.call(this.$.table.querySelectorAll('[frozen]'));\n        this._updateScrollerMeasurements();\n        this._translateStationaryElements();\n      });\n      this._updateLastFrozen();\n    }\n\n    /** @protected */\n    _updateScrollerMeasurements() {\n      if (this._frozenCells.length > 0 && this.__isRTL) {\n        this.__scrollerMetrics = {\n          scrollWidth: this.$.table.scrollWidth,\n          clientWidth: this.$.table.clientWidth\n        };\n      }\n    }\n\n    /** @protected */\n    _updateLastFrozen() {\n      if (!this._columnTree) {\n        return;\n      }\n\n      const columnsRow = this._columnTree[this._columnTree.length - 1].slice(0);\n      columnsRow.sort((a, b) => {\n        return a._order - b._order;\n      });\n      const lastFrozen = columnsRow.reduce((prev, col, index) => {\n        col._lastFrozen = false;\n        return col.frozen && !col.hidden ? index : prev;\n      }, undefined);\n      if (lastFrozen !== undefined) {\n        columnsRow[lastFrozen]._lastFrozen = true;\n      }\n    }\n\n    /** @private */\n    _translateStationaryElements() {\n      const scrollLeft = Math.max(0, this._scrollLeft);\n      const scrollTop = Math.max(0, this._scrollTop);\n\n      let leftOffset = 0;\n      let topOffset = 0;\n      let footerOffset = 0;\n      if (!this._useSticky) {\n        leftOffset = scrollLeft;\n        topOffset = scrollTop;\n        footerOffset = this.$.table.clientHeight - this.$.footer.offsetHeight - this.$.footer.offsetTop;\n      }\n\n      this.$.header.style.transform = this._getTranslate(-scrollLeft + leftOffset, topOffset);\n      this.$.footer.style.transform = this._getTranslate(-scrollLeft + leftOffset, topOffset + footerOffset);\n      this.$.items.style.transform = this._getTranslate(-scrollLeft + leftOffset, 0);\n\n      if (this._frozenCells.length > 0) {\n        const x = this.__isRTL\n          ? this.__getNormalizedScrollLeft(this.$.table) +\n            this.__scrollerMetrics.clientWidth -\n            this.__scrollerMetrics.scrollWidth\n          : this._scrollLeft;\n        const frozenCellTransform = this._getTranslate(x, 0);\n\n        for (let i = 0; i < this._frozenCells.length; i++) {\n          this._frozenCells[i].style.transform = frozenCellTransform;\n        }\n      }\n    }\n\n    /** @private */\n    _getTranslate(x, y) {\n      return `translate(${x}px, ${y}px)`;\n    }\n  };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-selection-mixin.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nexport const SelectionMixin = (superClass) =>\n  class SelectionMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * An array that contains the selected items.\n         * @type {Array<GridItem>}\n         */\n        selectedItems: {\n          type: Object,\n          notify: true,\n          value: () => []\n        }\n      };\n    }\n\n    static get observers() {\n      return ['_selectedItemsChanged(selectedItems.*)'];\n    }\n\n    /**\n     * @param {!GridItem} item\n     * @return {boolean}\n     * @protected\n     */\n    _isSelected(item) {\n      return this.selectedItems && this._getItemIndexInArray(item, this.selectedItems) > -1;\n    }\n\n    /**\n     * Selects the given item.\n     *\n     * @method selectItem\n     * @param {!GridItem} item The item object\n     */\n    selectItem(item) {\n      if (!this._isSelected(item)) {\n        this.push('selectedItems', item);\n      }\n    }\n\n    /**\n     * Deselects the given item if it is already selected.\n     *\n     * @method deselect\n     * @param {!GridItem} item The item object\n     */\n    deselectItem(item) {\n      const index = this._getItemIndexInArray(item, this.selectedItems);\n      if (index > -1) {\n        this.splice('selectedItems', index, 1);\n      }\n    }\n\n    /**\n     * Toggles the selected state of the given item.\n     *\n     * @method toggle\n     * @param {!GridItem} item The item object\n     * @protected\n     */\n    _toggleItem(item) {\n      const index = this._getItemIndexInArray(item, this.selectedItems);\n      if (index === -1) {\n        this.selectItem(item);\n      } else {\n        this.deselectItem(item);\n      }\n    }\n\n    /** @private */\n    _selectedItemsChanged(e) {\n      if (this.$.items.children.length && (e.path === 'selectedItems' || e.path === 'selectedItems.splices')) {\n        Array.from(this.$.items.children).forEach((row) => {\n          this._updateItem(row, row._item);\n        });\n      }\n    }\n\n    /** @private */\n    _selectedInstanceChangedCallback(instance, value) {\n      if (value) {\n        this.selectItem(instance.item);\n      } else {\n        this.deselectItem(instance.item);\n      }\n    }\n\n    /**\n     * Fired when the `selectedItems` property changes.\n     *\n     * @event selected-items-changed\n     */\n  };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-sort-mixin.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nexport const SortMixin = (superClass) =>\n  class SortMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * When `true`, all `<vaadin-grid-sorter>` are applied for sorting.\n         * @attr {boolean} multi-sort\n         * @type {boolean}\n         */\n        multiSort: {\n          type: Boolean,\n          value: false\n        },\n\n        /**\n         * @type {!Array<!GridSorter>}\n         * @protected\n         */\n        _sorters: {\n          type: Array,\n          value: function () {\n            return [];\n          }\n        },\n\n        /** @private */\n        _previousSorters: {\n          type: Array,\n          value: function () {\n            return [];\n          }\n        }\n      };\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n      this.addEventListener('sorter-changed', this._onSorterChanged);\n    }\n\n    /** @private */\n    _onSorterChanged(e) {\n      const sorter = e.target;\n\n      this._removeArrayItem(this._sorters, sorter);\n      sorter._order = null;\n\n      if (this.multiSort) {\n        if (sorter.direction) {\n          this._sorters.unshift(sorter);\n        }\n\n        this._sorters.forEach((sorter, index) => (sorter._order = this._sorters.length > 1 ? index : null), this);\n      } else {\n        if (sorter.direction) {\n          this._sorters.forEach((sorter) => {\n            sorter._order = null;\n            sorter.direction = null;\n          });\n          this._sorters = [sorter];\n        }\n      }\n\n      e.stopPropagation();\n\n      if (\n        this.dataProvider &&\n        // No need to clear cache if sorters didn't change\n        JSON.stringify(this._previousSorters) !== JSON.stringify(this._mapSorters())\n      ) {\n        this.clearCache();\n      }\n\n      this._a11yUpdateSorters();\n\n      this._previousSorters = this._mapSorters();\n    }\n\n    /**\n     * @return {!Array<!GridSorter>}\n     * @protected\n     */\n    _mapSorters() {\n      return this._sorters.map((sorter) => {\n        return {\n          path: sorter.path,\n          direction: sorter.direction\n        };\n      });\n    }\n\n    /** @private */\n    _removeArrayItem(array, item) {\n      const index = array.indexOf(item);\n      if (index > -1) {\n        array.splice(index, 1);\n      }\n    }\n  };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-styling-mixin.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nexport const StylingMixin = (superClass) =>\n  class StylingMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * A function that allows generating CSS class names for grid cells\n         * based on their row and column. The return value should be the generated\n         * class name as a string, or multiple class names separated by whitespace\n         * characters.\n         *\n         * Receives two arguments:\n         * - `column` The `<vaadin-grid-column>` element (`undefined` for details-cell).\n         * - `model` The object with the properties related with\n         *   the rendered item, contains:\n         *   - `model.index` The index of the item.\n         *   - `model.item` The item.\n         *   - `model.expanded` Sublevel toggle state.\n         *   - `model.level` Level of the tree represented with a horizontal offset of the toggle button.\n         *   - `model.selected` Selected state.\n         *\n         * @type {GridCellClassNameGenerator | null | undefined}\n         */\n        cellClassNameGenerator: Function\n      };\n    }\n\n    static get observers() {\n      return ['__cellClassNameGeneratorChanged(cellClassNameGenerator)'];\n    }\n\n    __cellClassNameGeneratorChanged() {\n      this.generateCellClassNames();\n    }\n\n    /**\n     * Runs the `cellClassNameGenerator` for the visible cells.\n     * If the generator depends on varying conditions, you need to\n     * call this function manually in order to update the styles when\n     * the conditions change.\n     */\n    generateCellClassNames() {\n      Array.from(this.$.items.children)\n        .filter((row) => !row.hidden)\n        .forEach((row) => this._generateCellClassNames(row, this.__getRowModel(row)));\n    }\n\n    /** @private */\n    _generateCellClassNames(row, model) {\n      Array.from(row.children).forEach((cell) => {\n        if (cell.__generatedClasses) {\n          cell.__generatedClasses.forEach((className) => cell.classList.remove(className));\n        }\n        if (this.cellClassNameGenerator) {\n          const result = this.cellClassNameGenerator(cell._column, model);\n          cell.__generatedClasses = result && result.split(' ').filter((className) => className.length > 0);\n          if (cell.__generatedClasses) {\n            cell.__generatedClasses.forEach((className) => cell.classList.add(className));\n          }\n        }\n      });\n    }\n  };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-drag-and-drop-mixin.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nconst DropMode = {\n  BETWEEN: 'between',\n  ON_TOP: 'on-top',\n  ON_TOP_OR_BETWEEN: 'on-top-or-between',\n  ON_GRID: 'on-grid'\n};\n\nconst DropLocation = {\n  ON_TOP: 'on-top',\n  ABOVE: 'above',\n  BELOW: 'below',\n  EMPTY: 'empty'\n};\n\n/**\n * @polymerMixin\n */\nexport const DragAndDropMixin = (superClass) =>\n  class DragAndDropMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * Defines the locations within the Grid row where an element can be dropped.\n         *\n         * Possible values are:\n         * - `between`: The drop event can happen between Grid rows.\n         * - `on-top`: The drop event can happen on top of Grid rows.\n         * - `on-top-or-between`: The drop event can happen either on top of or between Grid rows.\n         * - `on-grid`: The drop event will not happen on any specific row, it will show the drop target outline around the whole grid.\n         * @attr {between|on-top|on-top-or-between|on-grid} drop-mode\n         * @type {GridDropMode | null | undefined}\n         */\n        dropMode: String,\n\n        /**\n         * Marks the grid's rows to be available for dragging.\n         * @attr {boolean} rows-draggable\n         */\n        rowsDraggable: Boolean,\n\n        /**\n         * A function that filters dragging of specific grid rows. The return value should be false\n         * if dragging of the row should be disabled.\n         *\n         * Receives one argument:\n         * - `model` The object with the properties related with\n         *   the rendered item, contains:\n         *   - `model.index` The index of the item.\n         *   - `model.item` The item.\n         *   - `model.expanded` Sublevel toggle state.\n         *   - `model.level` Level of the tree represented with a horizontal offset of the toggle button.\n         *   - `model.selected` Selected state.\n         *\n         * @type {GridDragAndDropFilter | null | undefined}\n         */\n        dragFilter: Function,\n\n        /**\n         * A function that filters dropping on specific grid rows. The return value should be false\n         * if dropping on the row should be disabled.\n         *\n         * Receives one argument:\n         * - `model` The object with the properties related with\n         *   the rendered item, contains:\n         *   - `model.index` The index of the item.\n         *   - `model.item` The item.\n         *   - `model.expanded` Sublevel toggle state.\n         *   - `model.level` Level of the tree represented with a horizontal offset of the toggle button.\n         *   - `model.selected` Selected state.\n         *\n         * @type {GridDragAndDropFilter | null | undefined}\n         */\n        dropFilter: Function,\n\n        /** @private */\n        __dndAutoScrollThreshold: {\n          value: 50\n        }\n      };\n    }\n\n    static get observers() {\n      return ['_dragDropAccessChanged(rowsDraggable, dropMode, dragFilter, dropFilter)'];\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n      this.$.table.addEventListener('dragstart', this._onDragStart.bind(this));\n      this.$.table.addEventListener('dragend', this._onDragEnd.bind(this));\n      this.$.table.addEventListener('dragover', this._onDragOver.bind(this));\n      this.$.table.addEventListener('dragleave', this._onDragLeave.bind(this));\n      this.$.table.addEventListener('drop', this._onDrop.bind(this));\n      this.$.table.addEventListener('dragenter', (e) => {\n        if (this.dropMode) {\n          e.preventDefault();\n          e.stopPropagation();\n        }\n      });\n    }\n\n    /** @private */\n    _onDragStart(e) {\n      if (this.rowsDraggable) {\n        let row = e.target;\n        if (row.localName === 'vaadin-grid-cell-content') {\n          // The draggable node is the cell content element on browsers that support native shadow\n          row = row.assignedSlot.parentNode.parentNode;\n        }\n        if (row.parentNode !== this.$.items) {\n          return;\n        }\n\n        e.stopPropagation();\n        this._toggleAttribute('dragging-rows', true, this);\n\n        if (this._safari) {\n          // Safari doesn't get proper drag images from transformed\n          // elements so we need to switch to top temporarily\n          const transform = row.style.transform;\n          row.style.top = /translateY\\((.*)\\)/.exec(transform)[1];\n          row.style.transform = 'none';\n          requestAnimationFrame(() => {\n            row.style.top = '';\n            row.style.transform = transform;\n          });\n        }\n\n        const rowRect = row.getBoundingClientRect();\n\n        if (this._ios) {\n          e.dataTransfer.setDragImage(row);\n        } else {\n          e.dataTransfer.setDragImage(row, e.clientX - rowRect.left, e.clientY - rowRect.top);\n        }\n\n        let rows = [row];\n        if (this._isSelected(row._item)) {\n          rows = this.__getViewportRows()\n            .filter((row) => this._isSelected(row._item))\n            .filter((row) => !this.dragFilter || this.dragFilter(this.__getRowModel(row)));\n        }\n\n        // Set the default transfer data\n        e.dataTransfer.setData('text', this.__formatDefaultTransferData(rows));\n\n        row.setAttribute('dragstart', rows.length > 1 ? rows.length : '');\n        this.updateStyles({\n          '--_grid-drag-start-x': `${e.clientX - rowRect.left + 20}px`,\n          '--_grid-drag-start-y': `${e.clientY - rowRect.top + 10}px`\n        });\n\n        requestAnimationFrame(() => {\n          row.removeAttribute('dragstart');\n          this.updateStyles({ '--_grid-drag-start-x': '', '--_grid-drag-start-y': '' });\n        });\n\n        const event = new CustomEvent('grid-dragstart', {\n          detail: {\n            draggedItems: rows.map((row) => row._item),\n            setDragData: (type, data) => e.dataTransfer.setData(type, data),\n            setDraggedItemsCount: (count) => row.setAttribute('dragstart', count)\n          }\n        });\n        event.originalEvent = e;\n        this.dispatchEvent(event);\n      }\n    }\n\n    /** @private */\n    _onDragEnd(e) {\n      this._toggleAttribute('dragging-rows', false, this);\n      e.stopPropagation();\n      const event = new CustomEvent('grid-dragend');\n      event.originalEvent = e;\n      this.dispatchEvent(event);\n    }\n\n    /** @private */\n    _onDragLeave(e) {\n      e.stopPropagation();\n      this._clearDragStyles();\n    }\n\n    /** @private */\n    _onDragOver(e) {\n      if (this.dropMode) {\n        this._dropLocation = undefined;\n        this._dragOverItem = undefined;\n\n        if (this.__dndAutoScroll(e.clientY)) {\n          this._clearDragStyles();\n          return;\n        }\n\n        let row = e.composedPath().filter((node) => node.localName === 'tr')[0];\n\n        if (!this._effectiveSize || this.dropMode === DropMode.ON_GRID) {\n          // The grid is empty or \"on-grid\" drop mode was used, always default to \"empty\"\n          this._dropLocation = DropLocation.EMPTY;\n        } else if (!row || row.parentNode !== this.$.items) {\n          // The dragover didn't occur on a body row but the grid has items\n          if (row) {\n            // The dragover occurred over a header/footer row\n            return;\n          } else if (this.dropMode === DropMode.BETWEEN || this.dropMode === DropMode.ON_TOP_OR_BETWEEN) {\n            // The drop mode allows setting the last row as the drag over item\n            row = Array.from(this.$.items.children)\n              .filter((row) => !row.hidden)\n              .pop();\n            this._dropLocation = DropLocation.BELOW;\n          } else {\n            // Drop mode on-top used but the dragover didn't occur over one of the existing rows\n            return;\n          }\n        } else {\n          // The dragover occurred on a body row, determine the drop location from coordinates\n          const rowRect = row.getBoundingClientRect();\n\n          this._dropLocation = DropLocation.ON_TOP;\n\n          if (this.dropMode === DropMode.BETWEEN) {\n            const dropAbove = e.clientY - rowRect.top < rowRect.bottom - e.clientY;\n            this._dropLocation = dropAbove ? DropLocation.ABOVE : DropLocation.BELOW;\n          } else if (this.dropMode === DropMode.ON_TOP_OR_BETWEEN) {\n            if (e.clientY - rowRect.top < rowRect.height / 3) {\n              this._dropLocation = DropLocation.ABOVE;\n            } else if (e.clientY - rowRect.top > (rowRect.height / 3) * 2) {\n              this._dropLocation = DropLocation.BELOW;\n            }\n          }\n        }\n\n        if (row && row.hasAttribute('drop-disabled')) {\n          this._dropLocation = undefined;\n          return;\n        }\n\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (this._dropLocation === DropLocation.EMPTY) {\n          this._toggleAttribute('dragover', true, this);\n        } else if (row) {\n          this._dragOverItem = row._item;\n          if (row.getAttribute('dragover') !== this._dropLocation) {\n            row.setAttribute('dragover', this._dropLocation);\n          }\n        } else {\n          this._clearDragStyles();\n        }\n      }\n    }\n\n    /** @private */\n    __dndAutoScroll(clientY) {\n      if (this.__dndAutoScrolling) {\n        return true;\n      }\n\n      const headerBottom = this.$.header.getBoundingClientRect().bottom;\n      const footerTop = this.$.footer.getBoundingClientRect().top;\n      const topDiff = headerBottom - clientY + this.__dndAutoScrollThreshold;\n      const bottomDiff = clientY - footerTop + this.__dndAutoScrollThreshold;\n      let scrollTopDelta = 0;\n\n      if (bottomDiff > 0) {\n        scrollTopDelta = bottomDiff * 2;\n      } else if (topDiff > 0) {\n        scrollTopDelta = -topDiff * 2;\n      }\n\n      if (scrollTopDelta) {\n        const scrollTop = this.$.table.scrollTop;\n        this.$.table.scrollTop += scrollTopDelta;\n        const scrollTopChanged = scrollTop !== this.$.table.scrollTop;\n        if (scrollTopChanged) {\n          this.__dndAutoScrolling = true;\n          // Disallow more auto-scrolls within 20ms\n          setTimeout(() => (this.__dndAutoScrolling = false), 20);\n          this._scrollHandler();\n          return true;\n        }\n      }\n    }\n\n    /** @private */\n    __getViewportRows() {\n      const headerBottom = this.$.header.getBoundingClientRect().bottom;\n      const footerTop = this.$.footer.getBoundingClientRect().top;\n      return Array.from(this.$.items.children).filter((row) => {\n        const rowRect = row.getBoundingClientRect();\n        return rowRect.bottom > headerBottom && rowRect.top < footerTop;\n      });\n    }\n\n    /** @protected */\n    _clearDragStyles() {\n      this.removeAttribute('dragover');\n      Array.from(this.$.items.children).forEach((row) => row.removeAttribute('dragover'));\n    }\n\n    /** @private */\n    _onDrop(e) {\n      if (this.dropMode) {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const dragData =\n          e.dataTransfer.types &&\n          Array.from(e.dataTransfer.types).map((type) => {\n            return {\n              type,\n              data: e.dataTransfer.getData(type)\n            };\n          });\n\n        this._clearDragStyles();\n\n        const event = new CustomEvent('grid-drop', {\n          bubbles: e.bubbles,\n          cancelable: e.cancelable,\n          detail: {\n            dropTargetItem: this._dragOverItem,\n            dropLocation: this._dropLocation,\n            dragData\n          }\n        });\n        event.originalEvent = e;\n        this.dispatchEvent(event);\n      }\n    }\n\n    /** @private */\n    __formatDefaultTransferData(rows) {\n      return rows\n        .map((row) => {\n          return Array.from(row.children)\n            .filter((cell) => !cell.hidden && cell.getAttribute('part').indexOf('details-cell') === -1)\n            .sort((a, b) => {\n              return a._column._order > b._column._order ? 1 : -1;\n            })\n            .map((cell) => cell._content.textContent.trim())\n            .filter((content) => content)\n            .join('\\t');\n        })\n        .join('\\n');\n    }\n\n    /** @private */\n    _dragDropAccessChanged() {\n      this.filterDragAndDrop();\n    }\n\n    /**\n     * Runs the `dragFilter` and `dropFilter` hooks for the visible cells.\n     * If the filter depends on varying conditions, you may need to\n     * call this function manually in order to update the draggability when\n     * the conditions change.\n     */\n    filterDragAndDrop() {\n      Array.from(this.$.items.children)\n        .filter((row) => !row.hidden)\n        .forEach((row) => {\n          this._filterDragAndDrop(row, this.__getRowModel(row));\n        });\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {!GridItemModel} model\n     * @protected\n     */\n    _filterDragAndDrop(row, model) {\n      const dragDisabled = !this.rowsDraggable || (this.dragFilter && !this.dragFilter(model));\n      const dropDisabled = !this.dropMode || (this.dropFilter && !this.dropFilter(model));\n\n      const draggableElements = Array.from(row.children).map((cell) => cell._content);\n\n      draggableElements.forEach((e) => {\n        if (dragDisabled) {\n          e.removeAttribute('draggable');\n        } else {\n          e.setAttribute('draggable', true);\n        }\n      });\n\n      this._toggleAttribute('drag-disabled', dragDisabled, row);\n      this._toggleAttribute('drop-disabled', dropDisabled, row);\n    }\n\n    /**\n     * Fired when starting to drag grid rows.\n     *\n     * @event grid-dragstart\n     * @param {Object} originalEvent The native dragstart event\n     * @param {Object} detail\n     * @param {Object} detail.draggedItems the items in the visible viewport that are dragged\n     * @param {Function} detail.setDraggedItemsCount Overrides the default number shown in the drag image on multi row drag.\n     * Parameter is of type number.\n     * @param {Function} detail.setDragData Sets dataTransfer data for the drag operation.\n     * Note that \"text\" is the only data type supported by all the browsers the grid currently supports (including IE11).\n     * The function takes two parameters:\n     * - type:string The type of the data\n     * - data:string The data\n     */\n\n    /**\n     * Fired when the dragging of the rows ends.\n     *\n     * @event grid-dragend\n     * @param {Object} originalEvent The native dragend event\n     */\n\n    /**\n     * Fired when a drop occurs on top of the grid.\n     *\n     * @event grid-drop\n     * @param {Object} originalEvent The native drop event\n     * @param {Object} detail\n     * @param {Object} detail.dropTargetItem The item of the grid row on which the drop occurred.\n     * @param {string} detail.dropLocation The position at which the drop event took place relative to a row.\n     * Depending on the dropMode value, the drop location can be one of the following\n     * - `on-top`: when the drop occurred on top of the row\n     * - `above`: when the drop occurred above the row\n     * - `below`: when the drop occurred below the row\n     * - `empty`: when the drop occurred over the grid, not relative to any specific row\n     * @param {string} detail.dragData An array of items with the payload as a string representation as the\n     * `data` property and the type of the data as `type` property.\n     */\n  };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-keyboard-navigation-mixin.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nexport const KeyboardNavigationMixin = (superClass) =>\n  class KeyboardNavigationMixin extends superClass {\n    static get properties() {\n      return {\n        /** @private */\n        _headerFocusable: {\n          type: Object,\n          observer: '_focusableChanged'\n        },\n\n        /**\n         * @type {!HTMLElement | undefined}\n         * @protected\n         */\n        _itemsFocusable: {\n          type: Object,\n          observer: '_focusableChanged'\n        },\n\n        /** @private */\n        _footerFocusable: {\n          type: Object,\n          observer: '_focusableChanged'\n        },\n\n        /** @private */\n        _navigatingIsHidden: Boolean,\n\n        /**\n         * @type {number}\n         * @protected\n         */\n        _focusedItemIndex: {\n          type: Number,\n          value: 0\n        },\n\n        /** @private */\n        _focusedColumnOrder: Number\n      };\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      if (this._ios || this._android) {\n        // Disable keyboard navigation on mobile devices\n        return;\n      }\n\n      this.addEventListener('keydown', this._onKeyDown);\n      this.addEventListener('keyup', this._onKeyUp);\n\n      this.addEventListener('focusin', this._onFocusIn);\n      this.addEventListener('focusout', this._onFocusOut);\n\n      // When focus goes from cell to another cell, focusin/focusout events do\n      // not escape the grid’s shadowRoot, thus listening inside the shadowRoot.\n      this.$.table.addEventListener('focusin', this._onCellFocusIn.bind(this));\n      this.$.table.addEventListener('focusout', this._onCellFocusOut.bind(this));\n\n      this.addEventListener('mousedown', () => {\n        this._toggleAttribute('navigating', false, this);\n        this._isMousedown = true;\n      });\n      this.addEventListener('mouseup', () => (this._isMousedown = false));\n    }\n\n    /** @private */\n    _focusableChanged(focusable, oldFocusable) {\n      if (oldFocusable) {\n        oldFocusable.setAttribute('tabindex', '-1');\n      }\n      if (focusable) {\n        focusable.setAttribute('tabindex', '0');\n      }\n    }\n\n    /**\n     * @param {!KeyboardEvent} e\n     * @protected\n     */\n    _onKeyDown(e) {\n      const key = e.key;\n\n      let keyGroup;\n      switch (key) {\n        case 'ArrowUp':\n        case 'ArrowDown':\n        case 'ArrowLeft':\n        case 'ArrowRight':\n        case 'PageUp':\n        case 'PageDown':\n        case 'Home':\n        case 'End':\n          keyGroup = 'Navigation';\n          break;\n        case 'Enter':\n        case 'Escape':\n        case 'F2':\n          keyGroup = 'Interaction';\n          break;\n        case 'Tab':\n          keyGroup = 'Tab';\n          break;\n        case ' ':\n          keyGroup = 'Space';\n          break;\n      }\n\n      this._detectInteracting(e);\n      if (this.hasAttribute('interacting') && keyGroup !== 'Interaction') {\n        // When in the interacting mode, only the “Interaction” keys are handled.\n        keyGroup = undefined;\n      }\n\n      if (keyGroup) {\n        this[`_on${keyGroup}KeyDown`](e, key);\n      }\n    }\n\n    /** @private */\n    _ensureScrolledToIndex(index) {\n      const targetRowInDom = Array.from(this.$.items.children).filter((child) => child.index === index)[0];\n      if (!targetRowInDom) {\n        this._scrollToIndex(index);\n      }\n    }\n\n    /** @private */\n    _onNavigationKeyDown(e, key) {\n      this._scrollHandler();\n\n      e.preventDefault();\n\n      function indexOfChildElement(el) {\n        return Array.prototype.indexOf.call(el.parentNode.children, el);\n      }\n\n      const visibleItemsCount = this._lastVisibleIndex - this._firstVisibleIndex - 1;\n\n      let dx = 0,\n        dy = 0;\n      switch (key) {\n        case 'ArrowRight':\n          dx = this.__isRTL ? -1 : 1;\n          break;\n        case 'ArrowLeft':\n          dx = this.__isRTL ? 1 : -1;\n          break;\n        case 'Home':\n          dx = -Infinity;\n          e.ctrlKey && (dy = -Infinity);\n          break;\n        case 'End':\n          dx = Infinity;\n          e.ctrlKey && (dy = Infinity);\n          break;\n        case 'ArrowDown':\n          dy = 1;\n          break;\n        case 'ArrowUp':\n          dy = -1;\n          break;\n        case 'PageDown':\n          dy = visibleItemsCount;\n          break;\n        case 'PageUp':\n          dy = -visibleItemsCount;\n          break;\n      }\n\n      const activeCell = e.composedPath()[0];\n      const columnIndex = indexOfChildElement(activeCell);\n      const isRowDetails = this._elementMatches(activeCell, '[part~=\"details-cell\"]');\n\n      const activeRow = activeCell.parentNode;\n\n      const activeRowGroup = activeRow.parentNode;\n      const maxRowIndex = (activeRowGroup === this.$.items ? this._effectiveSize : activeRowGroup.children.length) - 1;\n\n      // Body rows have index property, otherwise DOM child index of the row is used.\n      const rowIndex =\n        activeRowGroup === this.$.items\n          ? this._focusedItemIndex !== undefined\n            ? this._focusedItemIndex\n            : activeRow.index\n          : indexOfChildElement(activeRow);\n\n      // Index of the destination row\n      let dstRowIndex = Math.max(0, Math.min(rowIndex + dy, maxRowIndex));\n\n      // Row details navigation logic\n      let dstIsRowDetails = false;\n      if (activeRowGroup === this.$.items) {\n        const item = activeRow._item;\n        const dstItem = this._cache.getItemForIndex(dstRowIndex);\n        // Should we navigate to row details?\n        if (isRowDetails) {\n          dstIsRowDetails = dy === 0;\n        } else {\n          dstIsRowDetails =\n            (dy === 1 && this._isDetailsOpened(item)) ||\n            (dy === -1 && dstRowIndex !== rowIndex && this._isDetailsOpened(dstItem));\n        }\n        // Should we navigate between details and regular cells of the same row?\n        if (dstIsRowDetails !== isRowDetails && ((dy === 1 && dstIsRowDetails) || (dy === -1 && !dstIsRowDetails))) {\n          dstRowIndex = rowIndex;\n        }\n      }\n\n      // Header and footer could have hidden rows, e. g., if none of the columns\n      // or groups on the given column tree level define template. Skip them\n      // in vertical keyboard navigation.\n      if (activeRowGroup !== this.$.items) {\n        if (dstRowIndex > rowIndex) {\n          while (dstRowIndex < maxRowIndex && activeRowGroup.children[dstRowIndex].hidden) {\n            dstRowIndex++;\n          }\n        } else if (dstRowIndex < rowIndex) {\n          while (dstRowIndex > 0 && activeRowGroup.children[dstRowIndex].hidden) {\n            dstRowIndex--;\n          }\n        }\n      }\n\n      // _focusedColumnOrder is memoized — this is to ensure predictable\n      // navigation when entering and leaving detail and column group cells.\n      if (this._focusedColumnOrder === undefined) {\n        if (isRowDetails) {\n          this._focusedColumnOrder = 0;\n        } else {\n          this._focusedColumnOrder = this._getColumns(activeRowGroup, rowIndex).filter((c) => !c.hidden)[\n            columnIndex\n          ]._order;\n        }\n      }\n\n      // Find orderedColumnIndex — the index of order closest matching the\n      // original _focusedColumnOrder in the sorted array of orders\n      // of the visible columns on the destination row.\n      const dstColumns = this._getColumns(activeRowGroup, dstRowIndex).filter((c) => !c.hidden);\n      const dstSortedColumnOrders = dstColumns.map((c) => c._order).sort((b, a) => b - a);\n      const maxOrderedColumnIndex = dstSortedColumnOrders.length - 1;\n      const orderedColumnIndex = dstSortedColumnOrders.indexOf(\n        dstSortedColumnOrders\n          .slice(0)\n          .sort((b, a) => Math.abs(b - this._focusedColumnOrder) - Math.abs(a - this._focusedColumnOrder))[0]\n      );\n\n      // Index of the destination column order\n      const dstOrderedColumnIndex =\n        dy === 0 && isRowDetails\n          ? orderedColumnIndex\n          : Math.max(0, Math.min(orderedColumnIndex + dx, maxOrderedColumnIndex));\n\n      if (dstOrderedColumnIndex !== orderedColumnIndex) {\n        // Horizontal movement invalidates stored _focusedColumnOrder\n        this._focusedColumnOrder = undefined;\n      }\n\n      // Ensure correct vertical scroll position, destination row is visible\n      if (activeRowGroup === this.$.items) {\n        this._ensureScrolledToIndex(dstRowIndex);\n      }\n\n      // This has to be set after scrolling, otherwise it can be removed by\n      // `_preventScrollerRotatingCellFocus(row, index)` during scrolling.\n      this._toggleAttribute('navigating', true, this);\n\n      const columnIndexByOrder = dstColumns.reduce((acc, col, i) => ((acc[col._order] = i), acc), {});\n      const dstColumnIndex = columnIndexByOrder[dstSortedColumnOrders[dstOrderedColumnIndex]];\n\n      // For body rows, use index property to find destination row, otherwise use DOM child index\n      const dstRow =\n        activeRowGroup === this.$.items\n          ? Array.from(activeRowGroup.children).filter((el) => el.index === dstRowIndex)[0]\n          : activeRowGroup.children[dstRowIndex];\n      if (!dstRow) {\n        return;\n      }\n\n      // Here we go!\n      const dstCell = dstIsRowDetails\n        ? Array.from(dstRow.children).filter((el) => this._elementMatches(el, '[part~=\"details-cell\"]'))[0]\n        : dstRow.children[dstColumnIndex];\n      this._scrollHorizontallyToCell(dstCell);\n      if (activeRowGroup === this.$.items) {\n        // When scrolling with repeated keydown, sometimes FocusEvent listeners\n        // are too late to update _focusedItemIndex. Ensure next keydown\n        // listener invocation gets updated _focusedItemIndex value.\n        this._focusedItemIndex = dstRowIndex;\n      }\n\n      if (activeRowGroup === this.$.items) {\n        const dstRect = dstCell.getBoundingClientRect();\n        const footerTop = this.$.footer.getBoundingClientRect().top;\n        const headerBottom = this.$.header.getBoundingClientRect().bottom;\n        if (dstRect.bottom > footerTop) {\n          this.$.table.scrollTop += dstRect.bottom - footerTop;\n          this._scrollHandler();\n        } else if (dstRect.top < headerBottom) {\n          this.$.table.scrollTop -= headerBottom - dstRect.top;\n          this._scrollHandler();\n        }\n      }\n\n      dstCell.focus();\n    }\n\n    /** @private */\n    _parseEventPath(path) {\n      const tableIndex = path.indexOf(this.$.table);\n      return {\n        rowGroup: path[tableIndex - 1],\n        row: path[tableIndex - 2],\n        cell: path[tableIndex - 3]\n      };\n    }\n\n    /** @private */\n    _onInteractionKeyDown(e, key) {\n      const localTarget = e.composedPath()[0];\n      const localTargetIsTextInput =\n        localTarget.localName === 'input' &&\n        !/^(button|checkbox|color|file|image|radio|range|reset|submit)$/i.test(localTarget.type);\n\n      let wantInteracting;\n      switch (key) {\n        case 'Enter':\n          wantInteracting = this.hasAttribute('interacting') ? !localTargetIsTextInput : true;\n          break;\n        case 'Escape':\n          wantInteracting = false;\n          break;\n        case 'F2':\n          wantInteracting = !this.hasAttribute('interacting');\n          break;\n      }\n\n      const { cell } = this._parseEventPath(e.composedPath());\n\n      if (this.hasAttribute('interacting') !== wantInteracting) {\n        if (wantInteracting) {\n          const focusTarget = cell._content.querySelector('[focus-target]') || cell._content.firstElementChild;\n          if (focusTarget) {\n            e.preventDefault();\n            focusTarget.focus();\n            this._toggleAttribute('interacting', true, this);\n            this._toggleAttribute('navigating', false, this);\n          }\n        } else {\n          e.preventDefault();\n          this._focusedColumnOrder = undefined;\n          cell.focus();\n          this._toggleAttribute('interacting', false, this);\n          this._toggleAttribute('navigating', true, this);\n        }\n      }\n    }\n\n    /** @private */\n    _predictFocusStepTarget(srcElement, step) {\n      const tabOrder = [\n        this.$.table,\n        this._headerFocusable,\n        this._itemsFocusable,\n        this._footerFocusable,\n        this.$.focusexit\n      ];\n\n      let index = tabOrder.indexOf(srcElement);\n\n      index += step;\n      while (index >= 0 && index <= tabOrder.length - 1 && (!tabOrder[index] || tabOrder[index].parentNode.hidden)) {\n        index += step;\n      }\n\n      return tabOrder[index];\n    }\n\n    /** @private */\n    _onTabKeyDown(e) {\n      const focusTarget = this._predictFocusStepTarget(e.composedPath()[0], e.shiftKey ? -1 : 1);\n\n      if (focusTarget === this.$.table) {\n        // The focus is about to exit the grid to the top.\n        this.$.table.focus();\n      } else if (focusTarget === this.$.focusexit) {\n        // The focus is about to exit the grid to the bottom.\n        this.$.focusexit.focus();\n      } else if (focusTarget === this._itemsFocusable) {\n        let itemsFocusTarget = focusTarget;\n        const targetRow = this._itemsFocusable.parentNode;\n        this._ensureScrolledToIndex(this._focusedItemIndex);\n        if (targetRow.index !== this._focusedItemIndex) {\n          // The target row, which is about to be focused next, has been\n          // assigned with a new index since last focus, probably because of\n          // scrolling. Focus the row for the stored focused item index instead.\n          const columnIndex = Array.from(targetRow.children).indexOf(this._itemsFocusable);\n          const focusedItemRow = Array.from(this.$.items.children).filter(\n            (row) => row.index === this._focusedItemIndex\n          )[0];\n          if (focusedItemRow) {\n            itemsFocusTarget = focusedItemRow.children[columnIndex];\n          }\n        }\n        e.preventDefault();\n        itemsFocusTarget.focus();\n      } else {\n        e.preventDefault();\n        focusTarget.focus();\n      }\n\n      this._toggleAttribute('navigating', true, this);\n    }\n\n    /** @private */\n    _onSpaceKeyDown(e) {\n      e.preventDefault();\n\n      const cell = e.composedPath()[0];\n      if (!cell._content || !cell._content.firstElementChild) {\n        this.dispatchEvent(\n          new CustomEvent('cell-activate', {\n            detail: {\n              model: this.__getRowModel(cell.parentElement)\n            }\n          })\n        );\n      }\n    }\n\n    /** @private */\n    _onKeyUp(e) {\n      if (!/^( |SpaceBar)$/.test(e.key)) {\n        return;\n      }\n\n      e.preventDefault();\n\n      const cell = e.composedPath()[0];\n      if (cell._content && cell._content.firstElementChild) {\n        const wasNavigating = this.hasAttribute('navigating');\n        cell._content.firstElementChild.click();\n        this._toggleAttribute('navigating', wasNavigating, this);\n      }\n    }\n\n    /**\n     * @param {!FocusEvent} e\n     * @protected\n     */\n    _onFocusIn(e) {\n      if (!this._isMousedown) {\n        this._toggleAttribute('navigating', true, this);\n      }\n\n      const rootTarget = e.composedPath()[0];\n\n      if (rootTarget === this.$.table || rootTarget === this.$.focusexit) {\n        // The focus enters the top (bottom) of the grid, meaning that user has\n        // tabbed (shift-tabbed) into the grid. Move the focus to\n        // the first (the last) focusable.\n        this._predictFocusStepTarget(rootTarget, rootTarget === this.$.table ? 1 : -1).focus();\n        this._toggleAttribute('interacting', false, this);\n      } else {\n        this._detectInteracting(e);\n      }\n    }\n\n    /**\n     * @param {!FocusEvent} e\n     * @protected\n     */\n    _onFocusOut(e) {\n      this._toggleAttribute('navigating', false, this);\n      this._detectInteracting(e);\n    }\n\n    /** @private */\n    _onCellFocusIn(e) {\n      this._detectInteracting(e);\n\n      if (e.composedPath().indexOf(this.$.table) === 3) {\n        const cell = e.composedPath()[0];\n        this._activeRowGroup = cell.parentNode.parentNode;\n        if (this._activeRowGroup === this.$.header) {\n          this._headerFocusable = cell;\n        } else if (this._activeRowGroup === this.$.items) {\n          this._itemsFocusable = cell;\n        } else if (this._activeRowGroup === this.$.footer) {\n          this._footerFocusable = cell;\n        }\n        // Inform cell content of the focus (used in <vaadin-grid-sorter>)\n        cell._content.dispatchEvent(new CustomEvent('cell-focusin', { bubbles: false }));\n      }\n\n      this._detectFocusedItemIndex(e);\n    }\n\n    /** @private */\n    _onCellFocusOut(e) {\n      if (e.composedPath().indexOf(this.$.table) === 3) {\n        const cell = e.composedPath()[0];\n        // Inform cell content of the focus (used in <vaadin-grid-sorter>)\n        cell._content.dispatchEvent(new CustomEvent('cell-focusout', { bubbles: false }));\n      }\n    }\n\n    /** @private */\n    _detectInteracting(e) {\n      this._toggleAttribute(\n        'interacting',\n        e.composedPath().some((el) => el.localName === 'vaadin-grid-cell-content'),\n        this\n      );\n    }\n\n    /** @private */\n    _detectFocusedItemIndex(e) {\n      const { rowGroup, row } = this._parseEventPath(e.composedPath());\n      if (rowGroup === this.$.items) {\n        this._focusedItemIndex = row.index;\n      }\n    }\n\n    /**\n     * @param {!HTMLTableRowElement} row\n     * @param {number} index\n     * @protected\n     */\n    _preventScrollerRotatingCellFocus(row, index) {\n      if (\n        row.index === this._focusedItemIndex &&\n        this.hasAttribute('navigating') &&\n        this._activeRowGroup === this.$.items\n      ) {\n        // Focused item has went, hide navigation mode\n        this._navigatingIsHidden = true;\n        this._toggleAttribute('navigating', false, this);\n      }\n      if (index === this._focusedItemIndex && this._navigatingIsHidden) {\n        // Focused item is back, restore navigation mode\n        this._navigatingIsHidden = false;\n        this._toggleAttribute('navigating', true, this);\n      }\n    }\n\n    /**\n     * @param {HTMLTableSectionElement=} rowGroup\n     * @param {number=} rowIndex\n     * @return {!Array<!GridColumnElement>}\n     * @protected\n     */\n    _getColumns(rowGroup, rowIndex) {\n      let columnTreeLevel = this._columnTree.length - 1;\n      if (rowGroup === this.$.header) {\n        columnTreeLevel = rowIndex;\n      } else if (rowGroup === this.$.footer) {\n        columnTreeLevel = this._columnTree.length - 1 - rowIndex;\n      }\n      return this._columnTree[columnTreeLevel];\n    }\n\n    /** @protected */\n    _resetKeyboardNavigation() {\n      if (this.$.header.firstElementChild) {\n        this._headerFocusable = Array.from(this.$.header.firstElementChild.children).filter((el) => !el.hidden)[0];\n      }\n\n      if (this.$.items.firstElementChild) {\n        const firstVisibleIndexRow = this._iterateItems((pidx, vidx) => {\n          if (this._firstVisibleIndex === vidx) {\n            return this.$.items.children[pidx];\n          }\n        });\n        if (firstVisibleIndexRow) {\n          this._itemsFocusable = Array.from(firstVisibleIndexRow.children).filter((el) => !el.hidden)[0];\n        }\n      }\n\n      if (this.$.footer.firstElementChild) {\n        this._footerFocusable = Array.from(this.$.footer.firstElementChild.children).filter((el) => !el.hidden)[0];\n      }\n    }\n\n    /**\n     * @param {!HTMLElement} dstCell\n     * @protected\n     */\n    _scrollHorizontallyToCell(dstCell) {\n      if (dstCell.hasAttribute('frozen') || this._elementMatches(dstCell, '[part~=\"details-cell\"]')) {\n        // These cells are, by design, always visible, no need to scroll.\n        return;\n      }\n\n      const dstCellRect = dstCell.getBoundingClientRect();\n      const dstRow = dstCell.parentNode;\n      const dstCellIndex = Array.from(dstRow.children).indexOf(dstCell);\n      const tableRect = this.$.table.getBoundingClientRect();\n      let leftBoundary = tableRect.left,\n        rightBoundary = tableRect.right;\n      for (let i = dstCellIndex - 1; i >= 0; i--) {\n        const cell = dstRow.children[i];\n        if (cell.hasAttribute('hidden') || this._elementMatches(cell, '[part~=\"details-cell\"]')) {\n          continue;\n        }\n        if (cell.hasAttribute('frozen')) {\n          leftBoundary = cell.getBoundingClientRect().right;\n          break;\n        }\n      }\n      for (let i = dstCellIndex + 1; i < dstRow.children.length; i++) {\n        const cell = dstRow.children[i];\n        if (cell.hasAttribute('hidden') || this._elementMatches(cell, '[part~=\"details-cell\"]')) {\n          continue;\n        }\n        if (cell.hasAttribute('frozen')) {\n          rightBoundary = cell.getBoundingClientRect().left;\n          break;\n        }\n      }\n\n      if (dstCellRect.left < leftBoundary) {\n        this.$.table.scrollLeft += Math.round(dstCellRect.left - leftBoundary);\n      }\n      if (dstCellRect.right > rightBoundary) {\n        this.$.table.scrollLeft += Math.round(dstCellRect.right - rightBoundary);\n      }\n    }\n\n    /** @private */\n    _elementMatches(el, query) {\n      return el.matches ? el.matches(query) : Array.from(el.parentNode.querySelectorAll(query)).indexOf(el) !== -1;\n    }\n  };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-column-reordering-mixin.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners.js';\nimport { addListener } from '@polymer/polymer/lib/utils/gestures.js';\n\n/**\n * @polymerMixin\n */\nexport const ColumnReorderingMixin = (superClass) =>\n  class ColumnReorderingMixin extends GestureEventListeners(superClass) {\n    static get properties() {\n      return {\n        /**\n         * Set to true to allow column reordering.\n         * @attr {boolean} column-reordering-allowed\n         * @type {boolean}\n         */\n        columnReorderingAllowed: {\n          type: Boolean,\n          value: false\n        },\n\n        /** @private */\n        _orderBaseScope: {\n          type: Number,\n          value: 10000000\n        }\n      };\n    }\n\n    static get observers() {\n      return ['_updateOrders(_columnTree, _columnTree.*)'];\n    }\n\n    ready() {\n      super.ready();\n      addListener(this, 'track', this._onTrackEvent);\n      this._reorderGhost = this.shadowRoot.querySelector('[part=\"reorder-ghost\"]');\n\n      this.addEventListener('touchstart', this._onTouchStart.bind(this));\n      this.addEventListener('touchmove', this._onTouchMove.bind(this));\n      this.addEventListener('touchend', this._onTouchEnd.bind(this));\n      this.addEventListener('contextmenu', this._onContextMenu.bind(this));\n    }\n\n    /** @private */\n    _onContextMenu(e) {\n      if (this.hasAttribute('reordering')) {\n        e.preventDefault();\n      }\n    }\n\n    /** @private */\n    _onTouchStart(e) {\n      // Touch event, delay activation by 100ms\n      this._startTouchReorderTimeout = setTimeout(() => {\n        this._onTrackStart({\n          detail: {\n            x: e.touches[0].clientX,\n            y: e.touches[0].clientY\n          }\n        });\n      }, 100);\n    }\n\n    /** @private */\n    _onTouchMove(e) {\n      if (this._draggedColumn) {\n        e.preventDefault();\n      }\n      clearTimeout(this._startTouchReorderTimeout);\n    }\n\n    /** @private */\n    _onTouchEnd() {\n      clearTimeout(this._startTouchReorderTimeout);\n      this._onTrackEnd();\n    }\n\n    /** @private */\n    _onTrackEvent(e) {\n      if (e.detail.state === 'start') {\n        const path = e.composedPath();\n        const headerCell = path[path.indexOf(this.$.header) - 2];\n        if (!headerCell || !headerCell._content) {\n          // Not a header column\n          return;\n        }\n\n        if (headerCell._content.contains(this.getRootNode().activeElement)) {\n          // Something was focused inside the cell\n          return;\n        }\n\n        if (this.$.scroller.hasAttribute('column-resizing')) {\n          // Resizing is in progress\n          return;\n        }\n\n        if (!this._touchDevice) {\n          // Not a touch device\n          this._onTrackStart(e);\n        }\n      } else if (e.detail.state === 'track') {\n        this._onTrack(e);\n      } else if (e.detail.state === 'end') {\n        this._onTrackEnd(e);\n      }\n    }\n\n    /** @private */\n    _onTrackStart(e) {\n      if (!this.columnReorderingAllowed) {\n        return;\n      }\n\n      // Cancel reordering if there are draggable nodes on the event path\n      const path = e.composedPath && e.composedPath();\n      if (path && path.filter((node) => node.hasAttribute && node.hasAttribute('draggable'))[0]) {\n        return;\n      }\n\n      const headerCell = this._cellFromPoint(e.detail.x, e.detail.y);\n      if (!headerCell || headerCell.getAttribute('part').indexOf('header-cell') === -1) {\n        return;\n      }\n\n      this._toggleAttribute('reordering', true, this);\n      this._draggedColumn = headerCell._column;\n      while (this._draggedColumn.parentElement.childElementCount === 1) {\n        // This is the only column in the group, drag the whole group instead\n        this._draggedColumn = this._draggedColumn.parentElement;\n      }\n      this._setSiblingsReorderStatus(this._draggedColumn, 'allowed');\n      this._draggedColumn._reorderStatus = 'dragging';\n\n      this._updateGhost(headerCell);\n      this._reorderGhost.style.visibility = 'visible';\n      this._updateGhostPosition(e.detail.x, this._touchDevice ? e.detail.y - 50 : e.detail.y);\n      this._autoScroller();\n    }\n\n    /** @private */\n    _onTrack(e) {\n      if (!this._draggedColumn) {\n        // Reordering didn’t start. Skip this event.\n        return;\n      }\n\n      const targetCell = this._cellFromPoint(e.detail.x, e.detail.y);\n      if (!targetCell) {\n        return;\n      }\n\n      const targetColumn = this._getTargetColumn(targetCell, this._draggedColumn);\n      if (\n        this._isSwapAllowed(this._draggedColumn, targetColumn) &&\n        this._isSwappableByPosition(targetColumn, e.detail.x)\n      ) {\n        this._swapColumnOrders(this._draggedColumn, targetColumn);\n      }\n\n      this._updateGhostPosition(e.detail.x, this._touchDevice ? e.detail.y - 50 : e.detail.y);\n      this._lastDragClientX = e.detail.x;\n    }\n\n    /** @private */\n    _onTrackEnd() {\n      if (!this._draggedColumn) {\n        // Reordering didn’t start. Skip this event.\n        return;\n      }\n\n      this._toggleAttribute('reordering', false, this);\n      this._draggedColumn._reorderStatus = '';\n      this._setSiblingsReorderStatus(this._draggedColumn, '');\n      this._draggedColumn = null;\n      this._lastDragClientX = null;\n      this._reorderGhost.style.visibility = 'hidden';\n\n      this.dispatchEvent(\n        new CustomEvent('column-reorder', {\n          detail: {\n            columns: this._getColumnsInOrder()\n          }\n        })\n      );\n    }\n\n    /**\n     * @return {!Array<!GridColumnElement>}\n     * @protected\n     */\n    _getColumnsInOrder() {\n      return this._columnTree\n        .slice(0)\n        .pop()\n        .filter((c) => !c.hidden)\n        .sort((b, a) => b._order - a._order);\n    }\n\n    /**\n     * @param {number} x\n     * @param {number} y\n     * @return {HTMLElement | undefined}\n     * @protected\n     */\n    _cellFromPoint(x, y) {\n      x = x || 0;\n      y = y || 0;\n      if (!this._draggedColumn) {\n        this._toggleAttribute('no-content-pointer-events', true, this.$.scroller);\n      }\n      const cell = this.shadowRoot.elementFromPoint(x, y);\n      this._toggleAttribute('no-content-pointer-events', false, this.$.scroller);\n\n      // Make sure the element is actually a cell\n      if (cell && cell._column) {\n        return cell;\n      }\n    }\n\n    /**\n     * @param {number} eventClientX\n     * @param {number} eventClientY\n     * @protected\n     */\n    _updateGhostPosition(eventClientX, eventClientY) {\n      const ghostRect = this._reorderGhost.getBoundingClientRect();\n      // // This is where we want to position the ghost\n      const targetLeft = eventClientX - ghostRect.width / 2;\n      const targetTop = eventClientY - ghostRect.height / 2;\n      // Current position\n      const _left = parseInt(this._reorderGhost._left || 0);\n      const _top = parseInt(this._reorderGhost._top || 0);\n      // Reposition the ghost\n      this._reorderGhost._left = _left - (ghostRect.left - targetLeft);\n      this._reorderGhost._top = _top - (ghostRect.top - targetTop);\n      this._reorderGhost.style.transform = `translate(${this._reorderGhost._left}px, ${this._reorderGhost._top}px)`;\n    }\n\n    /**\n     * @param {!HTMLElement} cell\n     * @return {!HTMLElement}\n     * @protected\n     */\n    _updateGhost(cell) {\n      const ghost = this._reorderGhost;\n      ghost.textContent = cell._content.innerText;\n      const style = window.getComputedStyle(cell);\n      [\n        'boxSizing',\n        'display',\n        'width',\n        'height',\n        'background',\n        'alignItems',\n        'padding',\n        'border',\n        'flex-direction',\n        'overflow'\n      ].forEach((propertyName) => (ghost.style[propertyName] = style[propertyName]));\n      return ghost;\n    }\n\n    /** @private */\n    _updateOrders(columnTree, splices) {\n      if (columnTree === undefined || splices === undefined) {\n        return;\n      }\n\n      // Reset all column orders\n      columnTree[0].forEach((column) => (column._order = 0));\n      // Set order numbers to top-level columns\n      columnTree[0].forEach((column, index) => (column._order = (index + 1) * this._orderBaseScope));\n    }\n\n    /**\n     * @param {!GridColumnElement} column\n     * @param {string} status\n     * @protected\n     */\n    _setSiblingsReorderStatus(column, status) {\n      Array.from(column.parentNode.children)\n        .filter((child) => /column/.test(child.localName) && this._isSwapAllowed(child, column))\n        .forEach((sibling) => (sibling._reorderStatus = status));\n    }\n\n    /** @protected */\n    _autoScroller() {\n      if (this._lastDragClientX) {\n        const rightDiff = this._lastDragClientX - this.getBoundingClientRect().right + 50;\n        const leftDiff = this.getBoundingClientRect().left - this._lastDragClientX + 50;\n\n        if (rightDiff > 0) {\n          this.$.table.scrollLeft += rightDiff / 10;\n        } else if (leftDiff > 0) {\n          this.$.table.scrollLeft -= leftDiff / 10;\n        }\n        this._scrollHandler();\n      }\n\n      if (this._draggedColumn) {\n        this.async(this._autoScroller, 10);\n      }\n    }\n\n    /**\n     * @param {GridColumnElement | undefined} column1\n     * @param {GridColumnElement | undefined} column2\n     * @return {boolean | undefined}\n     * @protected\n     */\n    _isSwapAllowed(column1, column2) {\n      if (column1 && column2) {\n        const differentColumns = column1 !== column2;\n        const sameParent = column1.parentElement === column2.parentElement;\n        const sameFrozen = column1.frozen === column2.frozen;\n        return differentColumns && sameParent && sameFrozen;\n      }\n    }\n\n    /**\n     * @param {!GridColumnElement} targetColumn\n     * @param {number} clientX\n     * @return {boolean}\n     * @protected\n     */\n    _isSwappableByPosition(targetColumn, clientX) {\n      const targetCell = Array.from(this.$.header.querySelectorAll('tr:not([hidden]) [part~=\"cell\"]')).filter((cell) =>\n        targetColumn.contains(cell._column)\n      )[0];\n      const sourceCellRect = this.$.header\n        .querySelector('tr:not([hidden]) [reorder-status=dragging]')\n        .getBoundingClientRect();\n      const targetRect = targetCell.getBoundingClientRect();\n      if (targetRect.left > sourceCellRect.left) {\n        return clientX > targetRect.right - sourceCellRect.width;\n      } else {\n        return clientX < targetRect.left + sourceCellRect.width;\n      }\n    }\n\n    /**\n     * @param {!GridColumnElement} column1\n     * @param {!GridColumnElement} column2\n     * @protected\n     */\n    _swapColumnOrders(column1, column2) {\n      const _order = column1._order;\n      column1._order = column2._order;\n      column2._order = _order;\n      this._updateLastFrozen();\n      this._updateFirstAndLastColumn();\n    }\n\n    /**\n     * @param {HTMLElement | undefined} targetCell\n     * @param {GridColumnElement} draggedColumn\n     * @return {GridColumnElement | undefined}\n     * @protected\n     */\n    _getTargetColumn(targetCell, draggedColumn) {\n      if (targetCell && draggedColumn) {\n        let candidate = targetCell._column;\n        while (candidate.parentElement !== draggedColumn.parentElement && candidate !== this) {\n          candidate = candidate.parentElement;\n        }\n        if (candidate.parentElement === draggedColumn.parentElement) {\n          return candidate;\n        } else {\n          return targetCell._column;\n        }\n      }\n    }\n\n    /**\n     * Fired when the columns in the grid are reordered.\n     *\n     * @event column-reorder\n     * @param {Object} detail\n     * @param {Object} detail.columns the columns in the new order\n     */\n  };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-styles.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\n\nregisterStyles(\n  'vaadin-grid',\n  css`\n    @keyframes vaadin-grid-appear {\n      to {\n        opacity: 1;\n      }\n    }\n\n    :host {\n      display: block;\n      animation: 1ms vaadin-grid-appear;\n      height: 400px;\n      flex: 1 1 auto;\n      align-self: stretch;\n      position: relative;\n    }\n\n    :host([hidden]) {\n      display: none !important;\n    }\n\n    #scroller {\n      display: block;\n      transform: translateY(0);\n      width: auto;\n      height: auto;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n    }\n\n    :host([height-by-rows]) {\n      height: auto;\n      align-self: flex-start;\n      flex-grow: 0;\n      width: 100%;\n    }\n\n    :host([height-by-rows]) #scroller {\n      width: 100%;\n      height: 100%;\n      position: relative;\n    }\n\n    #table {\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n      height: 100%;\n      overflow: auto;\n      position: relative;\n      outline: none;\n      /* Workaround for a Desktop Safari bug: new stacking context here prevents the scrollbar from getting hidden */\n      z-index: 0;\n    }\n\n    #header,\n    #footer {\n      display: block;\n      position: -webkit-sticky;\n      position: sticky;\n      left: 0;\n      overflow: visible;\n      width: 100%;\n      z-index: 1;\n    }\n\n    #header {\n      top: 0;\n    }\n\n    th {\n      text-align: inherit;\n    }\n\n    /* Safari doesn't work with \"inherit\" */\n    [safari] th {\n      text-align: initial;\n    }\n\n    #footer {\n      bottom: 0;\n    }\n\n    #items {\n      flex-grow: 1;\n      flex-shrink: 0;\n      display: block;\n      position: -webkit-sticky;\n      position: sticky;\n      width: 100%;\n      left: 0;\n      overflow: visible;\n    }\n\n    [part~='row'] {\n      display: flex;\n      width: 100%;\n      box-sizing: border-box;\n      margin: 0;\n    }\n\n    [part~='row'][loading] [part~='body-cell'] ::slotted(vaadin-grid-cell-content) {\n      opacity: 0;\n    }\n\n    #items [part~='row'] {\n      position: absolute;\n    }\n\n    #items [part~='row']:empty {\n      height: 1em;\n    }\n\n    [part~='cell']:not([part~='details-cell']) {\n      flex-shrink: 0;\n      flex-grow: 1;\n      box-sizing: border-box;\n      display: flex;\n      width: 100%;\n      position: relative;\n      align-items: center;\n      padding: 0;\n      white-space: nowrap;\n    }\n\n    [part~='details-cell'] {\n      position: absolute;\n      bottom: 0;\n      width: 100%;\n      box-sizing: border-box;\n      padding: 0;\n    }\n\n    [part~='cell'] ::slotted(vaadin-grid-cell-content) {\n      display: block;\n      width: 100%;\n      box-sizing: border-box;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    [hidden] {\n      display: none !important;\n    }\n\n    [frozen] {\n      z-index: 2;\n      will-change: transform;\n    }\n\n    [no-scrollbars][safari] #table,\n    [no-scrollbars][firefox] #table {\n      overflow: hidden;\n    }\n\n    /* Reordering styles */\n    :host([reordering]) [part~='cell'] ::slotted(vaadin-grid-cell-content),\n    :host([reordering]) [part~='resize-handle'],\n    #scroller[no-content-pointer-events] [part~='cell'] ::slotted(vaadin-grid-cell-content) {\n      pointer-events: none;\n    }\n\n    [part~='reorder-ghost'] {\n      visibility: hidden;\n      position: fixed;\n      pointer-events: none;\n      opacity: 0.5;\n\n      /* Prevent overflowing the grid in Firefox */\n      top: 0;\n      left: 0;\n    }\n\n    :host([reordering]) {\n      -moz-user-select: none;\n      -webkit-user-select: none;\n      user-select: none;\n    }\n\n    /* Resizing styles */\n    [part~='resize-handle'] {\n      position: absolute;\n      top: 0;\n      right: 0;\n      height: 100%;\n      cursor: col-resize;\n      z-index: 1;\n    }\n\n    [part~='resize-handle']::before {\n      position: absolute;\n      content: '';\n      height: 100%;\n      width: 35px;\n      transform: translateX(-50%);\n    }\n\n    [last-column] [part~='resize-handle']::before,\n    [last-frozen] [part~='resize-handle']::before {\n      width: 18px;\n      transform: none;\n      right: 0;\n    }\n\n    #scroller[column-resizing] {\n      -ms-user-select: none;\n      -moz-user-select: none;\n      -webkit-user-select: none;\n      user-select: none;\n    }\n\n    /* Sizer styles */\n    #sizer {\n      display: flex;\n      position: absolute;\n      visibility: hidden;\n    }\n\n    #sizer [part~='details-cell'] {\n      display: none !important;\n    }\n\n    #sizer [part~='cell'][hidden] {\n      display: none !important;\n    }\n\n    #sizer [part~='cell'] {\n      display: block;\n      flex-shrink: 0;\n      line-height: 0;\n      height: 0 !important;\n      min-height: 0 !important;\n      max-height: 0 !important;\n      padding: 0 !important;\n      border: none !important;\n    }\n\n    #sizer [part~='cell']::before {\n      content: '-';\n    }\n\n    #sizer [part~='cell'] ::slotted(vaadin-grid-cell-content) {\n      display: none !important;\n    }\n\n    /* RTL specific styles */\n\n    :host([dir='rtl']) #items,\n    :host([dir='rtl']) #header,\n    :host([dir='rtl']) #footer {\n      left: auto;\n    }\n\n    :host([dir='rtl']) [part~='reorder-ghost'] {\n      left: auto;\n      right: 0;\n    }\n\n    :host([dir='rtl']) [part~='resize-handle'] {\n      left: 0;\n      right: auto;\n    }\n\n    :host([dir='rtl']) [part~='resize-handle']::before {\n      transform: translateX(50%);\n    }\n\n    :host([dir='rtl']) [last-column] [part~='resize-handle']::before,\n    :host([dir='rtl']) [last-frozen] [part~='resize-handle']::before {\n      left: 0;\n      right: auto;\n    }\n  `,\n  { moduleId: 'vaadin-grid-styles' }\n);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/iron-list.js",
       "source": "/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n\nThis is a fork of <iron-list> for <vaadin-grid>'s internal purposes only!\nTo update:\n1. Get the most recent code from https://github.com/PolymerElements/iron-list/\n2. Remove `is: 'iron-list'` and `_template` to avoid collisions with actual <iron-list>\n3. Change \"Polymer({\" to \"export const PolymerIronList = Class({\" to expose the class\n4. Optional: Remove all properties and functions not needed by <vaadin-grid>\n5. Profit!\n\n*/\nimport { IronResizableBehavior } from '@polymer/iron-resizable-behavior/iron-resizable-behavior.js';\nimport { IronScrollTargetBehavior } from '@polymer/iron-scroll-target-behavior/iron-scroll-target-behavior.js';\nimport { animationFrame, idlePeriod, microTask } from '@polymer/polymer/lib/utils/async.js';\nimport { Class } from '@polymer/polymer/lib/legacy/class.js';\nimport { flush } from '@polymer/polymer/lib/utils/flush.js';\nimport { Debouncer, enqueueDebouncer } from '@polymer/polymer/lib/utils/debounce.js';\nconst IOS = navigator.userAgent.match(/iP(?:hone|ad;(?: U;)? CPU) OS (\\d+)/);\nconst IOS_TOUCH_SCROLLING = IOS && IOS[1] >= 8;\nconst DEFAULT_PHYSICAL_COUNT = 3;\n\n/**\n * @private\n */\nexport const PolymerIronList = Class({\n  behaviors: [IronResizableBehavior, IronScrollTargetBehavior],\n\n  /**\n   * The ratio of hidden tiles that should remain in the scroll direction.\n   * Recommended value ~0.5, so it will distribute tiles evenly in both directions.\n   */\n  _ratio: 0.5,\n\n  /**\n   * The padding-top value for the list.\n   */\n  _scrollerPaddingTop: 0,\n\n  /**\n   * This value is the same as `scrollTop`.\n   */\n  _scrollPosition: 0,\n\n  /**\n   * The sum of the heights of all the tiles in the DOM.\n   */\n  _physicalSize: 0,\n\n  /**\n   * The average `offsetHeight` of the tiles observed till now.\n   */\n  _physicalAverage: 0,\n\n  /**\n   * The number of tiles which `offsetHeight` > 0 observed until now.\n   */\n  _physicalAverageCount: 0,\n\n  /**\n   * The Y position of the item rendered in the `_physicalStart`\n   * tile relative to the scrolling list.\n   */\n  _physicalTop: 0,\n\n  /**\n   * The number of items in the list.\n   */\n  _virtualCount: 0,\n\n  /**\n   * The estimated scroll height based on `_physicalAverage`\n   */\n  _estScrollHeight: 0,\n\n  /**\n   * The scroll height of the dom node\n   */\n  _scrollHeight: 0,\n\n  /**\n   * The height of the list. This is referred as the viewport in the context of list.\n   */\n  _viewportHeight: 0,\n\n  /**\n   * The width of the list. This is referred as the viewport in the context of list.\n   */\n  _viewportWidth: 0,\n\n  /**\n   * An array of DOM nodes that are currently in the tree\n   * @type {?Array<!TemplateInstanceBase>}\n   */\n  _physicalItems: null,\n\n  /**\n   * An array of heights for each item in `_physicalItems`\n   * @type {?Array<number>}\n   */\n  _physicalSizes: null,\n\n  /**\n   * A cached value for the first visible index.\n   * See `firstVisibleIndex`\n   * @type {?number}\n   */\n  _firstVisibleIndexVal: null,\n\n  /**\n   * A cached value for the last visible index.\n   * See `lastVisibleIndex`\n   * @type {?number}\n   */\n  _lastVisibleIndexVal: null,\n\n  /**\n   * The max number of pages to render. One page is equivalent to the height of the list.\n   */\n  _maxPages: 2,\n\n  /**\n   * The virtual index of the focused item.\n   */\n  _focusedVirtualIndex: -1,\n\n  /**\n   * The cost of stamping a template in ms.\n   */\n  _templateCost: 0,\n\n  /**\n   * The bottom of the physical content.\n   */\n  get _physicalBottom() {\n    return this._physicalTop + this._physicalSize;\n  },\n\n  /**\n   * The bottom of the scroll.\n   */\n  get _scrollBottom() {\n    return this._scrollPosition + this._viewportHeight;\n  },\n\n  /**\n   * The n-th item rendered in the last physical item.\n   */\n  get _virtualEnd() {\n    return this._virtualStart + this._physicalCount - 1;\n  },\n\n  /**\n   * The height of the physical content that isn't on the screen.\n   */\n  get _hiddenContentSize() {\n    return this._physicalSize - this._viewportHeight;\n  },\n\n  /**\n   * The maximum scroll top value.\n   */\n  get _maxScrollTop() {\n    return this._estScrollHeight - this._viewportHeight + this._scrollOffset;\n  },\n\n  /**\n   * The largest n-th value for an item such that it can be rendered in `_physicalStart`.\n   */\n  get _maxVirtualStart() {\n    return Math.max(0, this._virtualCount - this._physicalCount);\n  },\n\n  set _virtualStart(val) {\n    val = this._clamp(val, 0, this._maxVirtualStart);\n    this._virtualStartVal = val;\n  },\n\n  get _virtualStart() {\n    return this._virtualStartVal || 0;\n  },\n\n  /**\n   * The k-th tile that is at the top of the scrolling list.\n   */\n  set _physicalStart(val) {\n    val = val % this._physicalCount;\n    if (val < 0) {\n      val = this._physicalCount + val;\n    }\n    this._physicalStartVal = val;\n  },\n\n  get _physicalStart() {\n    return this._physicalStartVal || 0;\n  },\n\n  /**\n   * The k-th tile that is at the bottom of the scrolling list.\n   */\n  get _physicalEnd() {\n    return (this._physicalStart + this._physicalCount - 1) % this._physicalCount;\n  },\n\n  set _physicalCount(val) {\n    this._physicalCountVal = val;\n  },\n\n  get _physicalCount() {\n    return this._physicalCountVal || 0;\n  },\n\n  /**\n   * An optimal physical size such that we will have enough physical items\n   * to fill up the viewport and recycle when the user scrolls.\n   *\n   * This default value assumes that we will at least have the equivalent\n   * to a viewport of physical items above and below the user's viewport.\n   */\n  get _optPhysicalSize() {\n    return this._viewportHeight === 0 ? Infinity : this._viewportHeight * this._maxPages;\n  },\n\n  /**\n   * True if the current list is visible.\n   */\n  get _isVisible() {\n    return Boolean(this.offsetWidth || this.offsetHeight);\n  },\n\n  /**\n   * Gets the index of the first visible item in the viewport.\n   *\n   * @type {number}\n   */\n  get firstVisibleIndex() {\n    let idx = this._firstVisibleIndexVal;\n    if (idx == null) {\n      let physicalOffset = this._physicalTop + this._scrollOffset;\n\n      idx =\n        this._iterateItems(function (pidx, vidx) {\n          physicalOffset += this._physicalSizes[pidx];\n\n          if (physicalOffset > this._scrollPosition) {\n            return vidx;\n          }\n        }) || 0;\n      this._firstVisibleIndexVal = idx;\n    }\n    return idx;\n  },\n\n  /**\n   * Gets the index of the last visible item in the viewport.\n   *\n   * @type {number}\n   */\n  get lastVisibleIndex() {\n    let idx = this._lastVisibleIndexVal;\n    if (idx == null) {\n      let physicalOffset = this._physicalTop + this._scrollOffset;\n      this._iterateItems(function (pidx, vidx) {\n        if (physicalOffset < this._scrollBottom) {\n          idx = vidx;\n        }\n        physicalOffset += this._physicalSizes[pidx];\n      });\n      this._lastVisibleIndexVal = idx;\n    }\n    return idx;\n  },\n\n  get _scrollOffset() {\n    return this._scrollerPaddingTop;\n  },\n\n  attached: function () {\n    this._debounce('_render', this._render, animationFrame);\n    // `iron-resize` is fired when the list is attached if the event is added\n    // before attached causing unnecessary work.\n    this.listen(this, 'iron-resize', '_resizeHandler');\n  },\n\n  detached: function () {\n    this.unlisten(this, 'iron-resize', '_resizeHandler');\n  },\n\n  /**\n   * Invoke this method if you dynamically update the viewport's\n   * size or CSS padding.\n   *\n   * @method updateViewportBoundaries\n   */\n  updateViewportBoundaries: function () {\n    const styles = window.getComputedStyle(this);\n    this._scrollerPaddingTop = this.scrollTarget === this ? 0 : parseInt(styles['padding-top'], 10);\n    this._isRTL = Boolean(styles.direction === 'rtl');\n    this._viewportWidth = this.$.items.offsetWidth;\n    this._viewportHeight = this._scrollTargetHeight;\n  },\n\n  /**\n   * Recycles the physical items when needed.\n   */\n  _scrollHandler: function () {\n    const scrollTop = Math.max(0, Math.min(this._maxScrollTop, this._scrollTop));\n    let delta = scrollTop - this._scrollPosition;\n    const isScrollingDown = delta >= 0;\n    // Track the current scroll position.\n    this._scrollPosition = scrollTop;\n    // Clear indexes for first and last visible indexes.\n    this._firstVisibleIndexVal = null;\n    this._lastVisibleIndexVal = null;\n    // Random access.\n    if (Math.abs(delta) > this._physicalSize && this._physicalSize > 0) {\n      delta = delta - this._scrollOffset;\n      const idxAdjustment = Math.round(delta / this._physicalAverage);\n      this._virtualStart = this._virtualStart + idxAdjustment;\n      this._physicalStart = this._physicalStart + idxAdjustment;\n      // Estimate new physical offset.\n      this._physicalTop = Math.floor(this._virtualStart) * this._physicalAverage;\n      this._update();\n    } else if (this._physicalCount > 0) {\n      const { physicalTop, indexes } = this._getReusables(isScrollingDown);\n      if (isScrollingDown) {\n        this._physicalTop = physicalTop;\n        this._virtualStart = this._virtualStart + indexes.length;\n        this._physicalStart = this._physicalStart + indexes.length;\n      } else {\n        this._virtualStart = this._virtualStart - indexes.length;\n        this._physicalStart = this._physicalStart - indexes.length;\n      }\n      this._update(indexes, isScrollingDown ? null : indexes);\n      this._debounce('_increasePoolIfNeeded', this._increasePoolIfNeeded.bind(this, 0), microTask);\n    }\n  },\n\n  /**\n   * Returns an object that contains the indexes of the physical items\n   * that might be reused and the physicalTop.\n   *\n   * @param {boolean} fromTop If the potential reusable items are above the scrolling region.\n   */\n  _getReusables: function (fromTop) {\n    let ith, offsetContent, physicalItemHeight;\n    const idxs = [];\n    const protectedOffsetContent = this._hiddenContentSize * this._ratio;\n    const virtualStart = this._virtualStart;\n    const virtualEnd = this._virtualEnd;\n    const physicalCount = this._physicalCount;\n    let top = this._physicalTop + this._scrollOffset;\n    const bottom = this._physicalBottom + this._scrollOffset;\n    const scrollTop = this._scrollTop;\n    const scrollBottom = this._scrollBottom;\n\n    if (fromTop) {\n      ith = this._physicalStart;\n      offsetContent = scrollTop - top;\n    } else {\n      ith = this._physicalEnd;\n      offsetContent = bottom - scrollBottom;\n    }\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      physicalItemHeight = this._physicalSizes[ith];\n      offsetContent = offsetContent - physicalItemHeight;\n      if (idxs.length >= physicalCount || offsetContent <= protectedOffsetContent) {\n        break;\n      }\n      if (fromTop) {\n        // Check that index is within the valid range.\n        if (virtualEnd + idxs.length + 1 >= this._virtualCount) {\n          break;\n        }\n        // Check that the index is not visible.\n        if (top + physicalItemHeight >= scrollTop - this._scrollOffset) {\n          break;\n        }\n        idxs.push(ith);\n        top = top + physicalItemHeight;\n        ith = (ith + 1) % physicalCount;\n      } else {\n        // Check that index is within the valid range.\n        if (virtualStart - idxs.length <= 0) {\n          break;\n        }\n        // Check that the index is not visible.\n        if (top + this._physicalSize - physicalItemHeight <= scrollBottom) {\n          break;\n        }\n        idxs.push(ith);\n        top = top - physicalItemHeight;\n        ith = ith === 0 ? physicalCount - 1 : ith - 1;\n      }\n    }\n    return { indexes: idxs, physicalTop: top - this._scrollOffset };\n  },\n\n  /**\n   * Update the list of items, starting from the `_virtualStart` item.\n   * @param {!Array<number>=} itemSet\n   * @param {!Array<number>=} movingUp\n   */\n  _update: function (itemSet, movingUp) {\n    if ((itemSet && itemSet.length === 0) || this._physicalCount === 0) {\n      return;\n    }\n    this._assignModels(itemSet);\n    this._updateMetrics(itemSet);\n    // Adjust offset after measuring.\n    if (movingUp) {\n      while (movingUp.length) {\n        const idx = movingUp.pop();\n        this._physicalTop -= this._physicalSizes[idx];\n      }\n    }\n    this._positionItems();\n    this._updateScrollerSize();\n  },\n\n  _isClientFull: function () {\n    return (\n      this._scrollBottom != 0 &&\n      this._physicalBottom - 1 >= this._scrollBottom &&\n      this._physicalTop <= this._scrollPosition\n    );\n  },\n\n  /**\n   * Increases the pool size.\n   */\n  _increasePoolIfNeeded: function (count) {\n    const nextPhysicalCount = this._clamp(\n      this._physicalCount + count,\n      DEFAULT_PHYSICAL_COUNT,\n      this._virtualCount - this._virtualStart\n    );\n    const delta = nextPhysicalCount - this._physicalCount;\n    let nextIncrease = Math.round(this._physicalCount * 0.5);\n\n    if (delta < 0) {\n      return;\n    }\n    if (delta > 0) {\n      const ts = window.performance.now();\n      // Concat arrays in place.\n      [].push.apply(this._physicalItems, this._createPool(delta));\n      // Push 0s into physicalSizes. Can't use Array.fill because IE11 doesn't support it.\n      for (let i = 0; i < delta; i++) {\n        this._physicalSizes.push(0);\n      }\n      this._physicalCount = this._physicalCount + delta;\n      // Update the physical start if it needs to preserve the model of the focused item.\n      // In this situation, the focused item is currently rendered and its model would\n      // have changed after increasing the pool if the physical start remained unchanged.\n      if (\n        this._physicalStart > this._physicalEnd &&\n        this._isIndexRendered(this._focusedVirtualIndex) &&\n        this._getPhysicalIndex(this._focusedVirtualIndex) < this._physicalEnd\n      ) {\n        this._physicalStart = this._physicalStart + delta;\n      }\n      this._update();\n      this._templateCost = (window.performance.now() - ts) / delta;\n      nextIncrease = Math.round(this._physicalCount * 0.5);\n    }\n    // The upper bounds is not fixed when dealing with a grid that doesn't\n    // fill it's last row with the exact number of items per row.\n    if (this._virtualEnd >= this._virtualCount - 1 || nextIncrease === 0) {\n      // Do nothing.\n    } else if (!this._isClientFull()) {\n      this._debounce('_increasePoolIfNeeded', this._increasePoolIfNeeded.bind(this, nextIncrease), microTask);\n    } else if (this._physicalSize < this._optPhysicalSize) {\n      // Yield and increase the pool during idle time until the physical size is optimal.\n      this._debounce(\n        '_increasePoolIfNeeded',\n        this._increasePoolIfNeeded.bind(this, this._clamp(Math.round(50 / this._templateCost), 1, nextIncrease)),\n        idlePeriod\n      );\n    }\n  },\n\n  /**\n   * Renders the a new list.\n   */\n  _render: function () {\n    if (!this.isAttached || !this._isVisible) {\n      return;\n    }\n    if (this._physicalCount !== 0) {\n      const { physicalTop, indexes } = this._getReusables(true);\n      this._physicalTop = physicalTop;\n      this._virtualStart = this._virtualStart + indexes.length;\n      this._physicalStart = this._physicalStart + indexes.length;\n      this._update(indexes);\n      this._update();\n      this._increasePoolIfNeeded(0);\n    } else if (this._virtualCount > 0) {\n      // Initial render\n      this.updateViewportBoundaries();\n      this._increasePoolIfNeeded(DEFAULT_PHYSICAL_COUNT);\n    }\n  },\n\n  /**\n   * Called when the items have changed. That is, reassignments\n   * to `items`, splices or updates to a single item.\n   */\n  _itemsChanged: function (change) {\n    if (change.path === 'items') {\n      this._virtualStart = 0;\n      this._physicalTop = 0;\n      this._virtualCount = this.items ? this.items.length : 0;\n      this._physicalIndexForKey = {};\n      this._firstVisibleIndexVal = null;\n      this._lastVisibleIndexVal = null;\n      this._physicalCount = this._physicalCount || 0;\n      this._physicalItems = this._physicalItems || [];\n      this._physicalSizes = this._physicalSizes || [];\n      this._physicalStart = 0;\n      if (this._scrollTop > this._scrollOffset) {\n        this._resetScrollPosition(0);\n      }\n      this._debounce('_render', this._render, animationFrame);\n    }\n  },\n\n  /**\n   * Executes a provided function per every physical index in `itemSet`\n   * `itemSet` default value is equivalent to the entire set of physical indexes.\n   *\n   * @param {!function(number, number)} fn\n   * @param {!Array<number>=} itemSet\n   */\n  _iterateItems: function (fn, itemSet) {\n    let pidx, vidx, rtn, i;\n\n    if (arguments.length === 2 && itemSet) {\n      for (i = 0; i < itemSet.length; i++) {\n        pidx = itemSet[i];\n        vidx = this._computeVidx(pidx);\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n    } else {\n      pidx = this._physicalStart;\n      vidx = this._virtualStart;\n      for (; pidx < this._physicalCount; pidx++, vidx++) {\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n      for (pidx = 0; pidx < this._physicalStart; pidx++, vidx++) {\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n    }\n  },\n\n  /**\n   * Returns the virtual index for a given physical index\n   *\n   * @param {number} pidx Physical index\n   * @return {number}\n   */\n  _computeVidx: function (pidx) {\n    if (pidx >= this._physicalStart) {\n      return this._virtualStart + (pidx - this._physicalStart);\n    }\n    return this._virtualStart + (this._physicalCount - this._physicalStart) + pidx;\n  },\n\n  /**\n   * Updates the height for a given set of items.\n   *\n   * @param {!Array<number>=} itemSet\n   */\n  _updateMetrics: function (itemSet) {\n    // Make sure we distributed all the physical items\n    // so we can measure them.\n    flush();\n\n    let newPhysicalSize = 0;\n    let oldPhysicalSize = 0;\n    const prevAvgCount = this._physicalAverageCount;\n    const prevPhysicalAvg = this._physicalAverage;\n\n    this._iterateItems(function (pidx) {\n      oldPhysicalSize += this._physicalSizes[pidx];\n      this._physicalSizes[pidx] = this._physicalItems[pidx].offsetHeight;\n      newPhysicalSize += this._physicalSizes[pidx];\n      this._physicalAverageCount += this._physicalSizes[pidx] ? 1 : 0;\n    }, itemSet);\n\n    this._physicalSize = this._physicalSize + newPhysicalSize - oldPhysicalSize;\n\n    // Update the average if it measured something.\n    if (this._physicalAverageCount !== prevAvgCount) {\n      this._physicalAverage = Math.round(\n        (prevPhysicalAvg * prevAvgCount + newPhysicalSize) / this._physicalAverageCount\n      );\n    }\n  },\n\n  /**\n   * Updates the position of the physical items.\n   */\n  _positionItems: function () {\n    this._adjustScrollPosition();\n\n    let y = this._physicalTop;\n\n    this._iterateItems(function (pidx) {\n      this.translate3d(0, y + 'px', 0, this._physicalItems[pidx]);\n      y += this._physicalSizes[pidx];\n    });\n  },\n\n  /**\n   * Adjusts the scroll position when it was overestimated.\n   */\n  _adjustScrollPosition: function () {\n    const deltaHeight =\n      this._virtualStart === 0 ? this._physicalTop : Math.min(this._scrollPosition + this._physicalTop, 0);\n    // Note: the delta can be positive or negative.\n    if (deltaHeight !== 0) {\n      this._physicalTop = this._physicalTop - deltaHeight;\n      const scrollTop = this._scrollTop;\n      // juking scroll position during interial scrolling on iOS is no bueno\n      if (!IOS_TOUCH_SCROLLING && scrollTop > 0) {\n        this._resetScrollPosition(scrollTop - deltaHeight);\n      }\n    }\n  },\n\n  /**\n   * Sets the position of the scroll.\n   */\n  _resetScrollPosition: function (pos) {\n    if (this.scrollTarget && pos >= 0) {\n      this._scrollTop = pos;\n      this._scrollPosition = this._scrollTop;\n    }\n  },\n\n  /**\n   * Sets the scroll height, that's the height of the content,\n   *\n   * @param {boolean=} forceUpdate If true, updates the height no matter what.\n   */\n  _updateScrollerSize: function (forceUpdate) {\n    this._estScrollHeight =\n      this._physicalBottom +\n      Math.max(this._virtualCount - this._physicalCount - this._virtualStart, 0) * this._physicalAverage;\n    forceUpdate = forceUpdate || this._scrollHeight === 0;\n    forceUpdate = forceUpdate || this._scrollPosition >= this._estScrollHeight - this._physicalSize;\n    // Amortize height adjustment, so it won't trigger large repaints too often.\n    if (forceUpdate || Math.abs(this._estScrollHeight - this._scrollHeight) >= this._viewportHeight) {\n      this.$.items.style.height = this._estScrollHeight + 'px';\n      this._scrollHeight = this._estScrollHeight;\n    }\n  },\n\n  /**\n   * Scroll to a specific index in the virtual list regardless\n   * of the physical items in the DOM tree.\n   *\n   * @method scrollToIndex\n   * @param {number} idx The index of the item\n   */\n  scrollToIndex: function (idx) {\n    if (typeof idx !== 'number' || idx < 0 || idx > this.items.length - 1) {\n      return;\n    }\n    flush();\n    // Items should have been rendered prior scrolling to an index.\n    if (this._physicalCount === 0) {\n      return;\n    }\n    idx = this._clamp(idx, 0, this._virtualCount - 1);\n    // Update the virtual start only when needed.\n    if (!this._isIndexRendered(idx) || idx >= this._maxVirtualStart) {\n      this._virtualStart = idx - 1;\n    }\n    this._assignModels();\n    this._updateMetrics();\n    // Estimate new physical offset.\n    this._physicalTop = Math.floor(this._virtualStart) * this._physicalAverage;\n\n    let currentTopItem = this._physicalStart;\n    let currentVirtualItem = this._virtualStart;\n    let targetOffsetTop = 0;\n    const hiddenContentSize = this._hiddenContentSize;\n    // scroll to the item as much as we can.\n    while (currentVirtualItem < idx && targetOffsetTop <= hiddenContentSize) {\n      targetOffsetTop = targetOffsetTop + this._physicalSizes[currentTopItem];\n      currentTopItem = (currentTopItem + 1) % this._physicalCount;\n      currentVirtualItem++;\n    }\n    this._updateScrollerSize(true);\n    this._positionItems();\n    this._resetScrollPosition(this._physicalTop + this._scrollOffset + targetOffsetTop);\n    this._increasePoolIfNeeded(0);\n    // clear cached visible index.\n    this._firstVisibleIndexVal = null;\n    this._lastVisibleIndexVal = null;\n  },\n\n  /**\n   * Reset the physical average and the average count.\n   */\n  _resetAverage: function () {\n    this._physicalAverage = 0;\n    this._physicalAverageCount = 0;\n  },\n\n  /**\n   * A handler for the `iron-resize` event triggered by `IronResizableBehavior`\n   * when the element is resized.\n   */\n  _resizeHandler: function () {\n    this._debounce(\n      '_render',\n      function () {\n        // clear cached visible index.\n        this._firstVisibleIndexVal = null;\n        this._lastVisibleIndexVal = null;\n        // Skip the resize event on touch devices when the address bar slides up.\n        this.updateViewportBoundaries();\n        if (this._isVisible) {\n          // Reinstall the scroll event listener.\n          this.toggleScrollListener(true);\n          this._resetAverage();\n          this._render();\n        } else {\n          // Uninstall the scroll event listener.\n          this.toggleScrollListener(false);\n        }\n      },\n      animationFrame\n    );\n  },\n\n  _isIndexRendered: function (idx) {\n    return idx >= this._virtualStart && idx <= this._virtualEnd;\n  },\n\n  _getPhysicalIndex: function (vidx) {\n    return (this._physicalStart + (vidx - this._virtualStart)) % this._physicalCount;\n  },\n\n  _clamp: function (v, min, max) {\n    return Math.min(max, Math.max(min, v));\n  },\n\n  _debounce: function (name, cb, asyncModule) {\n    this._debouncers = this._debouncers || {};\n    this._debouncers[name] = Debouncer.debounce(this._debouncers[name], asyncModule, cb.bind(this));\n    enqueueDebouncer(this._debouncers[name]);\n  }\n});\n"
      }
     ]
    },
    {
     "id": 124,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/legacy/legacy-element-mixin.js + 9 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/legacy/legacy-element-mixin.js",
       "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '@webcomponents/shadycss/entrypoints/apply-shim.js';\nimport { ElementMixin } from '../mixins/element-mixin.js';\nimport { GestureEventListeners } from '../mixins/gesture-event-listeners.js';\nimport { DirMixin } from '../mixins/dir-mixin.js';\nimport { dedupingMixin } from '../utils/mixin.js';\nimport '../utils/render-status.js';\nimport '../utils/unresolved.js';\nimport { dom, matchesSelector } from './polymer.dom.js';\nimport { setTouchAction } from '../utils/gestures.js';\nimport { Debouncer } from '../utils/debounce.js';\nimport { timeOut, microTask } from '../utils/async.js';\nimport { get } from '../utils/path.js';\nimport { wrap } from '../utils/wrap.js';\n\nlet styleInterface = window.ShadyCSS;\n\n/**\n * Element class mixin that provides Polymer's \"legacy\" API intended to be\n * backward-compatible to the greatest extent possible with the API\n * found on the Polymer 1.x `Polymer.Base` prototype applied to all elements\n * defined using the `Polymer({...})` function.\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin ElementMixin\n * @appliesMixin GestureEventListeners\n * @property isAttached {boolean} Set to `true` in this element's\n *   `connectedCallback` and `false` in `disconnectedCallback`\n * @summary Element class mixin that provides Polymer's \"legacy\" API\n */\nexport const LegacyElementMixin = dedupingMixin((base) => {\n  /**\n   * @constructor\n   * @implements {Polymer_ElementMixin}\n   * @implements {Polymer_GestureEventListeners}\n   * @implements {Polymer_DirMixin}\n   * @extends {HTMLElement}\n   * @private\n   */\n  const legacyElementBase = DirMixin(GestureEventListeners(ElementMixin(base)));\n\n  /**\n   * Map of simple names to touch action names\n   * @dict\n   */\n  const DIRECTION_MAP = {\n    'x': 'pan-x',\n    'y': 'pan-y',\n    'none': 'none',\n    'all': 'auto'\n  };\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @extends {legacyElementBase}\n   * @implements {Polymer_LegacyElementMixin}\n   * @unrestricted\n   */\n  class LegacyElement extends legacyElementBase {\n\n    constructor() {\n      super();\n      /** @type {boolean} */\n      this.isAttached;\n      /** @type {?WeakMap<!Element, !Object<string, !Function>>} */\n      this.__boundListeners;\n      /** @type {?Object<string, ?Function>} */\n      this._debouncers;\n    }\n\n    /**\n     * Forwards `importMeta` from the prototype (i.e. from the info object\n     * passed to `Polymer({...})`) to the static API.\n     *\n     * @return {!Object} The `import.meta` object set on the prototype\n     * @suppress {missingProperties} `this` is always in the instance in\n     *  closure for some reason even in a static method, rather than the class\n     */\n    static get importMeta() {\n      return this.prototype.importMeta;\n    }\n\n    /**\n     * Legacy callback called during the `constructor`, for overriding\n     * by the user.\n     * @override\n     * @return {void}\n     */\n    created() {}\n\n    /**\n     * Provides an implementation of `connectedCallback`\n     * which adds Polymer legacy API's `attached` method.\n     * @return {void}\n     * @override\n     */\n    connectedCallback() {\n      super.connectedCallback();\n      this.isAttached = true;\n      this.attached();\n    }\n\n    /**\n     * Legacy callback called during `connectedCallback`, for overriding\n     * by the user.\n     * @override\n     * @return {void}\n     */\n    attached() {}\n\n    /**\n     * Provides an implementation of `disconnectedCallback`\n     * which adds Polymer legacy API's `detached` method.\n     * @return {void}\n     * @override\n     */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n      this.isAttached = false;\n      this.detached();\n    }\n\n    /**\n     * Legacy callback called during `disconnectedCallback`, for overriding\n     * by the user.\n     * @override\n     * @return {void}\n     */\n    detached() {}\n\n    /**\n     * Provides an override implementation of `attributeChangedCallback`\n     * which adds the Polymer legacy API's `attributeChanged` method.\n     * @param {string} name Name of attribute.\n     * @param {?string} old Old value of attribute.\n     * @param {?string} value Current value of attribute.\n     * @param {?string} namespace Attribute namespace.\n     * @return {void}\n     * @override\n     */\n    attributeChangedCallback(name, old, value, namespace) {\n      if (old !== value) {\n        super.attributeChangedCallback(name, old, value, namespace);\n        this.attributeChanged(name, old, value);\n      }\n    }\n\n    /**\n     * Legacy callback called during `attributeChangedChallback`, for overriding\n     * by the user.\n     * @param {string} name Name of attribute.\n     * @param {?string} old Old value of attribute.\n     * @param {?string} value Current value of attribute.\n     * @return {void}\n     * @override\n     */\n    attributeChanged(name, old, value) {} // eslint-disable-line no-unused-vars\n\n    /**\n     * Overrides the default `Polymer.PropertyEffects` implementation to\n     * add support for class initialization via the `_registered` callback.\n     * This is called only when the first instance of the element is created.\n     *\n     * @return {void}\n     * @override\n     * @suppress {invalidCasts}\n     */\n    _initializeProperties() {\n      let proto = Object.getPrototypeOf(this);\n      if (!proto.hasOwnProperty('__hasRegisterFinished')) {\n        this._registered();\n        // backstop in case the `_registered` implementation does not set this\n        proto.__hasRegisterFinished = true;\n      }\n      super._initializeProperties();\n      this.root = /** @type {HTMLElement} */(this);\n      this.created();\n      // Ensure listeners are applied immediately so that they are\n      // added before declarative event listeners. This allows an element to\n      // decorate itself via an event prior to any declarative listeners\n      // seeing the event. Note, this ensures compatibility with 1.x ordering.\n      this._applyListeners();\n    }\n\n    /**\n     * Called automatically when an element is initializing.\n     * Users may override this method to perform class registration time\n     * work. The implementation should ensure the work is performed\n     * only once for the class.\n     * @protected\n     * @return {void}\n     * @override\n     */\n    _registered() {}\n\n    /**\n     * Overrides the default `Polymer.PropertyEffects` implementation to\n     * add support for installing `hostAttributes` and `listeners`.\n     *\n     * @return {void}\n     * @override\n     */\n    ready() {\n      this._ensureAttributes();\n      super.ready();\n    }\n\n    /**\n     * Ensures an element has required attributes. Called when the element\n     * is being readied via `ready`. Users should override to set the\n     * element's required attributes. The implementation should be sure\n     * to check and not override existing attributes added by\n     * the user of the element. Typically, setting attributes should be left\n     * to the element user and not done here; reasonable exceptions include\n     * setting aria roles and focusability.\n     * @protected\n     * @return {void}\n     * @override\n     */\n    _ensureAttributes() {}\n\n    /**\n     * Adds element event listeners. Called when the element\n     * is being readied via `ready`. Users should override to\n     * add any required element event listeners.\n     * In performance critical elements, the work done here should be kept\n     * to a minimum since it is done before the element is rendered. In\n     * these elements, consider adding listeners asynchronously so as not to\n     * block render.\n     * @protected\n     * @return {void}\n     * @override\n     */\n    _applyListeners() {}\n\n    /**\n     * Converts a typed JavaScript value to a string.\n     *\n     * Note this method is provided as backward-compatible legacy API\n     * only.  It is not directly called by any Polymer features. To customize\n     * how properties are serialized to attributes for attribute bindings and\n     * `reflectToAttribute: true` properties as well as this method, override\n     * the `_serializeValue` method provided by `Polymer.PropertyAccessors`.\n     *\n     * @param {*} value Value to deserialize\n     * @return {string | undefined} Serialized value\n     * @override\n     */\n    serialize(value) {\n      return this._serializeValue(value);\n    }\n\n    /**\n     * Converts a string to a typed JavaScript value.\n     *\n     * Note this method is provided as backward-compatible legacy API\n     * only.  It is not directly called by any Polymer features.  To customize\n     * how attributes are deserialized to properties for in\n     * `attributeChangedCallback`, override `_deserializeValue` method\n     * provided by `Polymer.PropertyAccessors`.\n     *\n     * @param {string} value String to deserialize\n     * @param {*} type Type to deserialize the string to\n     * @return {*} Returns the deserialized value in the `type` given.\n     * @override\n     */\n    deserialize(value, type) {\n      return this._deserializeValue(value, type);\n    }\n\n    /**\n     * Serializes a property to its associated attribute.\n     *\n     * Note this method is provided as backward-compatible legacy API\n     * only.  It is not directly called by any Polymer features.\n     *\n     * @param {string} property Property name to reflect.\n     * @param {string=} attribute Attribute name to reflect.\n     * @param {*=} value Property value to reflect.\n     * @return {void}\n     * @override\n     */\n    reflectPropertyToAttribute(property, attribute, value) {\n      this._propertyToAttribute(property, attribute, value);\n    }\n\n    /**\n     * Sets a typed value to an HTML attribute on a node.\n     *\n     * Note this method is provided as backward-compatible legacy API\n     * only.  It is not directly called by any Polymer features.\n     *\n     * @param {*} value Value to serialize.\n     * @param {string} attribute Attribute name to serialize to.\n     * @param {Element} node Element to set attribute to.\n     * @return {void}\n     * @override\n     */\n    serializeValueToAttribute(value, attribute, node) {\n      this._valueToNodeAttribute(/** @type {Element} */ (node || this), value, attribute);\n    }\n\n    /**\n     * Copies own properties (including accessor descriptors) from a source\n     * object to a target object.\n     *\n     * @param {Object} prototype Target object to copy properties to.\n     * @param {Object} api Source object to copy properties from.\n     * @return {Object} prototype object that was passed as first argument.\n     * @override\n     */\n    extend(prototype, api) {\n      if (!(prototype && api)) {\n        return prototype || api;\n      }\n      let n$ = Object.getOwnPropertyNames(api);\n      for (let i=0, n; (i<n$.length) && (n=n$[i]); i++) {\n        let pd = Object.getOwnPropertyDescriptor(api, n);\n        if (pd) {\n          Object.defineProperty(prototype, n, pd);\n        }\n      }\n      return prototype;\n    }\n\n    /**\n     * Copies props from a source object to a target object.\n     *\n     * Note, this method uses a simple `for...in` strategy for enumerating\n     * properties.  To ensure only `ownProperties` are copied from source\n     * to target and that accessor implementations are copied, use `extend`.\n     *\n     * @param {!Object} target Target object to copy properties to.\n     * @param {!Object} source Source object to copy properties from.\n     * @return {!Object} Target object that was passed as first argument.\n     * @override\n     */\n    mixin(target, source) {\n      for (let i in source) {\n        target[i] = source[i];\n      }\n      return target;\n    }\n\n    /**\n     * Sets the prototype of an object.\n     *\n     * Note this method is provided as backward-compatible legacy API\n     * only.  It is not directly called by any Polymer features.\n     * @param {Object} object The object on which to set the prototype.\n     * @param {Object} prototype The prototype that will be set on the given\n     * `object`.\n     * @return {Object} Returns the given `object` with its prototype set\n     * to the given `prototype` object.\n     * @override\n     */\n    chainObject(object, prototype) {\n      if (object && prototype && object !== prototype) {\n        object.__proto__ = prototype;\n      }\n      return object;\n    }\n\n    /* **** Begin Template **** */\n\n    /**\n     * Calls `importNode` on the `content` of the `template` specified and\n     * returns a document fragment containing the imported content.\n     *\n     * @param {HTMLTemplateElement} template HTML template element to instance.\n     * @return {!DocumentFragment} Document fragment containing the imported\n     *   template content.\n     * @override\n     * @suppress {missingProperties} go/missingfnprops\n     */\n    instanceTemplate(template) {\n      let content = this.constructor._contentForTemplate(template);\n      let dom = /** @type {!DocumentFragment} */\n        (document.importNode(content, true));\n      return dom;\n    }\n\n    /* **** Begin Events **** */\n\n\n\n    /**\n     * Dispatches a custom event with an optional detail value.\n     *\n     * @param {string} type Name of event type.\n     * @param {*=} detail Detail value containing event-specific\n     *   payload.\n     * @param {{ bubbles: (boolean|undefined), cancelable: (boolean|undefined),\n     *     composed: (boolean|undefined) }=}\n     *  options Object specifying options.  These may include:\n     *  `bubbles` (boolean, defaults to `true`),\n     *  `cancelable` (boolean, defaults to false), and\n     *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n     * @return {!Event} The new event that was fired.\n     * @override\n     */\n    fire(type, detail, options) {\n      options = options || {};\n      detail = (detail === null || detail === undefined) ? {} : detail;\n      let event = new Event(type, {\n        bubbles: options.bubbles === undefined ? true : options.bubbles,\n        cancelable: Boolean(options.cancelable),\n        composed: options.composed === undefined ? true: options.composed\n      });\n      event.detail = detail;\n      let node = options.node || this;\n      wrap(node).dispatchEvent(event);\n      return event;\n    }\n\n    /**\n     * Convenience method to add an event listener on a given element,\n     * late bound to a named method on this element.\n     *\n     * @param {?EventTarget} node Element to add event listener to.\n     * @param {string} eventName Name of event to listen for.\n     * @param {string} methodName Name of handler method on `this` to call.\n     * @return {void}\n     * @override\n     */\n    listen(node, eventName, methodName) {\n      node = /** @type {!EventTarget} */ (node || this);\n      let hbl = this.__boundListeners ||\n        (this.__boundListeners = new WeakMap());\n      let bl = hbl.get(node);\n      if (!bl) {\n        bl = {};\n        hbl.set(node, bl);\n      }\n      let key = eventName + methodName;\n      if (!bl[key]) {\n        bl[key] = this._addMethodEventListenerToNode(\n            /** @type {!Node} */ (node), eventName, methodName, this);\n      }\n    }\n\n    /**\n     * Convenience method to remove an event listener from a given element,\n     * late bound to a named method on this element.\n     *\n     * @param {?EventTarget} node Element to remove event listener from.\n     * @param {string} eventName Name of event to stop listening to.\n     * @param {string} methodName Name of handler method on `this` to not call\n     anymore.\n     * @return {void}\n     * @override\n     */\n    unlisten(node, eventName, methodName) {\n      node = /** @type {!EventTarget} */ (node || this);\n      let bl = this.__boundListeners &&\n          this.__boundListeners.get(/** @type {!Element} */ (node));\n      let key = eventName + methodName;\n      let handler = bl && bl[key];\n      if (handler) {\n        this._removeEventListenerFromNode(\n            /** @type {!Node} */ (node), eventName, handler);\n        bl[key] = /** @type {?} */ (null);\n      }\n    }\n\n    /**\n     * Override scrolling behavior to all direction, one direction, or none.\n     *\n     * Valid scroll directions:\n     *   - 'all': scroll in any direction\n     *   - 'x': scroll only in the 'x' direction\n     *   - 'y': scroll only in the 'y' direction\n     *   - 'none': disable scrolling for this node\n     *\n     * @param {string=} direction Direction to allow scrolling\n     * Defaults to `all`.\n     * @param {Element=} node Element to apply scroll direction setting.\n     * Defaults to `this`.\n     * @return {void}\n     * @override\n     */\n    setScrollDirection(direction, node) {\n      setTouchAction(\n          /** @type {!Element} */ (node || this),\n          DIRECTION_MAP[direction] || 'auto');\n    }\n    /* **** End Events **** */\n\n    /**\n     * Convenience method to run `querySelector` on this local DOM scope.\n     *\n     * This function calls `Polymer.dom(this.root).querySelector(slctr)`.\n     *\n     * @param {string} slctr Selector to run on this local DOM scope\n     * @return {Element} Element found by the selector, or null if not found.\n     * @override\n     */\n    $$(slctr) {\n      // Note, no need to `wrap` this because root is always patched\n      return this.root.querySelector(slctr);\n    }\n\n    /**\n     * Return the element whose local dom within which this element\n     * is contained. This is a shorthand for\n     * `this.getRootNode().host`.\n     * @this {Element}\n     */\n    get domHost() {\n      let root = wrap(this).getRootNode();\n      return (root instanceof DocumentFragment) ? /** @type {ShadowRoot} */ (root).host : root;\n    }\n\n    /**\n     * Force this element to distribute its children to its local dom.\n     * This should not be necessary as of Polymer 2.0.2 and is provided only\n     * for backwards compatibility.\n     * @return {void}\n     * @override\n     */\n    distributeContent() {\n      const thisEl = /** @type {Element} */ (this);\n      const domApi = /** @type {PolymerDomApi} */(dom(thisEl));\n      if (window.ShadyDOM && domApi.shadowRoot) {\n        ShadyDOM.flush();\n      }\n    }\n\n    /**\n     * Returns a list of nodes that are the effective childNodes. The effective\n     * childNodes list is the same as the element's childNodes except that\n     * any `<content>` elements are replaced with the list of nodes distributed\n     * to the `<content>`, the result of its `getDistributedNodes` method.\n     * @return {!Array<!Node>} List of effective child nodes.\n     * @suppress {invalidCasts} LegacyElementMixin must be applied to an\n     *     HTMLElement\n     * @override\n     */\n    getEffectiveChildNodes() {\n      const thisEl = /** @type {Element} */ (this);\n      const domApi = /** @type {PolymerDomApi} */ (dom(thisEl));\n      return domApi.getEffectiveChildNodes();\n    }\n\n    /**\n     * Returns a list of nodes distributed within this element that match\n     * `selector`. These can be dom children or elements distributed to\n     * children that are insertion points.\n     * @param {string} selector Selector to run.\n     * @return {!Array<!Node>} List of distributed elements that match selector.\n     * @suppress {invalidCasts} LegacyElementMixin must be applied to an\n     * HTMLElement\n     * @override\n     */\n    queryDistributedElements(selector) {\n      const thisEl = /** @type {Element} */ (this);\n      const domApi = /** @type {PolymerDomApi} */ (dom(thisEl));\n      return domApi.queryDistributedElements(selector);\n    }\n\n    /**\n     * Returns a list of elements that are the effective children. The effective\n     * children list is the same as the element's children except that\n     * any `<content>` elements are replaced with the list of elements\n     * distributed to the `<content>`.\n     *\n     * @return {!Array<!Node>} List of effective children.\n     * @override\n     */\n    getEffectiveChildren() {\n      let list = this.getEffectiveChildNodes();\n      return list.filter(function(/** @type {!Node} */ n) {\n        return (n.nodeType === Node.ELEMENT_NODE);\n      });\n    }\n\n    /**\n     * Returns a string of text content that is the concatenation of the\n     * text content's of the element's effective childNodes (the elements\n     * returned by <a href=\"#getEffectiveChildNodes>getEffectiveChildNodes</a>.\n     *\n     * @return {string} List of effective children.\n     * @override\n     */\n    getEffectiveTextContent() {\n      let cn = this.getEffectiveChildNodes();\n      let tc = [];\n      for (let i=0, c; (c = cn[i]); i++) {\n        if (c.nodeType !== Node.COMMENT_NODE) {\n          tc.push(c.textContent);\n        }\n      }\n      return tc.join('');\n    }\n\n    /**\n     * Returns the first effective childNode within this element that\n     * match `selector`. These can be dom child nodes or elements distributed\n     * to children that are insertion points.\n     * @param {string} selector Selector to run.\n     * @return {Node} First effective child node that matches selector.\n     * @override\n     */\n    queryEffectiveChildren(selector) {\n      let e$ = this.queryDistributedElements(selector);\n      return e$ && e$[0];\n    }\n\n    /**\n     * Returns a list of effective childNodes within this element that\n     * match `selector`. These can be dom child nodes or elements distributed\n     * to children that are insertion points.\n     * @param {string} selector Selector to run.\n     * @return {!Array<!Node>} List of effective child nodes that match\n     *     selector.\n     * @override\n     */\n    queryAllEffectiveChildren(selector) {\n      return this.queryDistributedElements(selector);\n    }\n\n    /**\n     * Returns a list of nodes distributed to this element's `<slot>`.\n     *\n     * If this element contains more than one `<slot>` in its local DOM,\n     * an optional selector may be passed to choose the desired content.\n     *\n     * @param {string=} slctr CSS selector to choose the desired\n     *   `<slot>`.  Defaults to `content`.\n     * @return {!Array<!Node>} List of distributed nodes for the `<slot>`.\n     * @override\n     */\n    getContentChildNodes(slctr) {\n      // Note, no need to `wrap` this because root is always\n      let content = this.root.querySelector(slctr || 'slot');\n      return content ?\n          /** @type {PolymerDomApi} */ (dom(content)).getDistributedNodes() :\n          [];\n    }\n\n    /**\n     * Returns a list of element children distributed to this element's\n     * `<slot>`.\n     *\n     * If this element contains more than one `<slot>` in its\n     * local DOM, an optional selector may be passed to choose the desired\n     * content.  This method differs from `getContentChildNodes` in that only\n     * elements are returned.\n     *\n     * @param {string=} slctr CSS selector to choose the desired\n     *   `<content>`.  Defaults to `content`.\n     * @return {!Array<!HTMLElement>} List of distributed nodes for the\n     *   `<slot>`.\n     * @suppress {invalidCasts}\n     * @override\n     */\n    getContentChildren(slctr) {\n      let children = /** @type {!Array<!HTMLElement>} */(this.getContentChildNodes(slctr).filter(function(n) {\n        return (n.nodeType === Node.ELEMENT_NODE);\n      }));\n      return children;\n    }\n\n    /**\n     * Checks whether an element is in this element's light DOM tree.\n     *\n     * @param {?Node} node The element to be checked.\n     * @return {boolean} true if node is in this element's light DOM tree.\n     * @suppress {invalidCasts} LegacyElementMixin must be applied to an\n     * HTMLElement\n     * @override\n     */\n    isLightDescendant(node) {\n      const thisNode = /** @type {Node} */ (this);\n      return thisNode !== node && wrap(thisNode).contains(node) &&\n        wrap(thisNode).getRootNode() === wrap(node).getRootNode();\n    }\n\n    /**\n     * Checks whether an element is in this element's local DOM tree.\n     *\n     * @param {!Element} node The element to be checked.\n     * @return {boolean} true if node is in this element's local DOM tree.\n     * @override\n     */\n    isLocalDescendant(node) {\n      return this.root === wrap(node).getRootNode();\n    }\n\n    /**\n     * No-op for backwards compatibility. This should now be handled by\n     * ShadyCss library.\n     * @param  {*} container Unused\n     * @param  {*} shouldObserve Unused\n     * @return {void}\n     * @override\n     */\n    scopeSubtree(container, shouldObserve) { // eslint-disable-line no-unused-vars\n    }\n\n    /**\n     * Returns the computed style value for the given property.\n     * @param {string} property The css property name.\n     * @return {string} Returns the computed css property value for the given\n     * `property`.\n     * @suppress {invalidCasts} LegacyElementMixin must be applied to an\n     *     HTMLElement\n     * @override\n     */\n    getComputedStyleValue(property) {\n      return styleInterface.getComputedStyleValue(/** @type {!Element} */(this), property);\n    }\n\n    // debounce\n\n    /**\n     * Call `debounce` to collapse multiple requests for a named task into\n     * one invocation which is made after the wait time has elapsed with\n     * no new request.  If no wait time is given, the callback will be called\n     * at microtask timing (guaranteed before paint).\n     *\n     *     debouncedClickAction(e) {\n     *       // will not call `processClick` more than once per 100ms\n     *       this.debounce('click', function() {\n     *        this.processClick();\n     *       } 100);\n     *     }\n     *\n     * @param {string} jobName String to identify the debounce job.\n     * @param {function():void} callback Function that is called (with `this`\n     *   context) when the wait time elapses.\n     * @param {number=} wait Optional wait time in milliseconds (ms) after the\n     *   last signal that must elapse before invoking `callback`\n     * @return {!Object} Returns a debouncer object on which exists the\n     * following methods: `isActive()` returns true if the debouncer is\n     * active; `cancel()` cancels the debouncer if it is active;\n     * `flush()` immediately invokes the debounced callback if the debouncer\n     * is active.\n     * @override\n     */\n    debounce(jobName, callback, wait) {\n      this._debouncers = this._debouncers || {};\n      return this._debouncers[jobName] = Debouncer.debounce(\n            this._debouncers[jobName]\n          , wait > 0 ? timeOut.after(wait) : microTask\n          , callback.bind(this));\n    }\n\n    /**\n     * Returns whether a named debouncer is active.\n     *\n     * @param {string} jobName The name of the debouncer started with `debounce`\n     * @return {boolean} Whether the debouncer is active (has not yet fired).\n     * @override\n     */\n    isDebouncerActive(jobName) {\n      this._debouncers = this._debouncers || {};\n      let debouncer = this._debouncers[jobName];\n      return !!(debouncer && debouncer.isActive());\n    }\n\n    /**\n     * Immediately calls the debouncer `callback` and inactivates it.\n     *\n     * @param {string} jobName The name of the debouncer started with `debounce`\n     * @return {void}\n     * @override\n     */\n    flushDebouncer(jobName) {\n      this._debouncers = this._debouncers || {};\n      let debouncer = this._debouncers[jobName];\n      if (debouncer) {\n        debouncer.flush();\n      }\n    }\n\n    /**\n     * Cancels an active debouncer.  The `callback` will not be called.\n     *\n     * @param {string} jobName The name of the debouncer started with `debounce`\n     * @return {void}\n     * @override\n     */\n    cancelDebouncer(jobName) {\n      this._debouncers = this._debouncers || {};\n      let debouncer = this._debouncers[jobName];\n      if (debouncer) {\n        debouncer.cancel();\n      }\n    }\n\n    /**\n     * Runs a callback function asynchronously.\n     *\n     * By default (if no waitTime is specified), async callbacks are run at\n     * microtask timing, which will occur before paint.\n     *\n     * @param {!Function} callback The callback function to run, bound to\n     *     `this`.\n     * @param {number=} waitTime Time to wait before calling the\n     *   `callback`.  If unspecified or 0, the callback will be run at microtask\n     *   timing (before paint).\n     * @return {number} Handle that may be used to cancel the async job.\n     * @override\n     */\n    async(callback, waitTime) {\n      return waitTime > 0 ? timeOut.run(callback.bind(this), waitTime) :\n          ~microTask.run(callback.bind(this));\n    }\n\n    /**\n     * Cancels an async operation started with `async`.\n     *\n     * @param {number} handle Handle returned from original `async` call to\n     *   cancel.\n     * @return {void}\n     * @override\n     */\n    cancelAsync(handle) {\n      handle < 0 ? microTask.cancel(~handle) :\n          timeOut.cancel(handle);\n    }\n\n    // other\n\n    /**\n     * Convenience method for creating an element and configuring it.\n     *\n     * @param {string} tag HTML element tag to create.\n     * @param {Object=} props Object of properties to configure on the\n     *    instance.\n     * @return {!Element} Newly created and configured element.\n     * @override\n     */\n    create(tag, props) {\n      let elt = document.createElement(tag);\n      if (props) {\n        if (elt.setProperties) {\n          elt.setProperties(props);\n        } else {\n          for (let n in props) {\n            elt[n] = props[n];\n          }\n        }\n      }\n      return elt;\n    }\n\n    /**\n     * Polyfill for Element.prototype.matches, which is sometimes still\n     * prefixed.\n     *\n     * @param {string} selector Selector to test.\n     * @param {!Element=} node Element to test the selector against.\n     * @return {boolean} Whether the element matches the selector.\n     * @override\n     */\n    elementMatches(selector, node) {\n      return matchesSelector( (node || this), selector);\n    }\n\n    /**\n     * Toggles an HTML attribute on or off.\n     *\n     * @param {string} name HTML attribute name\n     * @param {boolean=} bool Boolean to force the attribute on or off.\n     *    When unspecified, the state of the attribute will be reversed.\n     * @return {boolean} true if the attribute now exists\n     * @override\n     */\n    toggleAttribute(name, bool) {\n      let node = /** @type {Element} */(this);\n      if (arguments.length === 3) {\n        node = /** @type {Element} */(arguments[2]);\n      }\n      if (arguments.length == 1) {\n        bool = !node.hasAttribute(name);\n      }\n      if (bool) {\n        wrap(node).setAttribute(name, '');\n        return true;\n      } else {\n        wrap(node).removeAttribute(name);\n        return false;\n      }\n    }\n\n\n    /**\n     * Toggles a CSS class on or off.\n     *\n     * @param {string} name CSS class name\n     * @param {boolean=} bool Boolean to force the class on or off.\n     *    When unspecified, the state of the class will be reversed.\n     * @param {Element=} node Node to target.  Defaults to `this`.\n     * @return {void}\n     * @override\n     */\n    toggleClass(name, bool, node) {\n      node = /** @type {Element} */ (node || this);\n      if (arguments.length == 1) {\n        bool = !node.classList.contains(name);\n      }\n      if (bool) {\n        node.classList.add(name);\n      } else {\n        node.classList.remove(name);\n      }\n    }\n\n    /**\n     * Cross-platform helper for setting an element's CSS `transform` property.\n     *\n     * @param {string} transformText Transform setting.\n     * @param {Element=} node Element to apply the transform to.\n     * Defaults to `this`\n     * @return {void}\n     * @override\n     */\n    transform(transformText, node) {\n      node = /** @type {Element} */ (node || this);\n      node.style.webkitTransform = transformText;\n      node.style.transform = transformText;\n    }\n\n    /**\n     * Cross-platform helper for setting an element's CSS `translate3d`\n     * property.\n     *\n     * @param {number} x X offset.\n     * @param {number} y Y offset.\n     * @param {number} z Z offset.\n     * @param {Element=} node Element to apply the transform to.\n     * Defaults to `this`.\n     * @return {void}\n     * @override\n     */\n    translate3d(x, y, z, node) {\n      node = /** @type {Element} */ (node || this);\n      this.transform('translate3d(' + x + ',' + y + ',' + z + ')', node);\n    }\n\n    /**\n     * Removes an item from an array, if it exists.\n     *\n     * If the array is specified by path, a change notification is\n     * generated, so that observers, data bindings and computed\n     * properties watching that path can update.\n     *\n     * If the array is passed directly, **no change\n     * notification is generated**.\n     *\n     * @param {string | !Array<number|string>} arrayOrPath Path to array from\n     *     which to remove the item\n     *   (or the array itself).\n     * @param {*} item Item to remove.\n     * @return {Array} Array containing item removed.\n     * @override\n     */\n    arrayDelete(arrayOrPath, item) {\n      let index;\n      if (Array.isArray(arrayOrPath)) {\n        index = arrayOrPath.indexOf(item);\n        if (index >= 0) {\n          return arrayOrPath.splice(index, 1);\n        }\n      } else {\n        let arr = get(this, arrayOrPath);\n        index = arr.indexOf(item);\n        if (index >= 0) {\n          return this.splice(arrayOrPath, index, 1);\n        }\n      }\n      return null;\n    }\n\n    // logging\n\n    /**\n     * Facades `console.log`/`warn`/`error` as override point.\n     *\n     * @param {string} level One of 'log', 'warn', 'error'\n     * @param {Array} args Array of strings or objects to log\n     * @return {void}\n     * @override\n     */\n    _logger(level, args) {\n      // accept ['foo', 'bar'] and [['foo', 'bar']]\n      if (Array.isArray(args) && args.length === 1 && Array.isArray(args[0])) {\n        args = args[0];\n      }\n      switch(level) {\n        case 'log':\n        case 'warn':\n        case 'error':\n          console[level](...args);\n      }\n    }\n\n    /**\n     * Facades `console.log` as an override point.\n     *\n     * @param {...*} args Array of strings or objects to log\n     * @return {void}\n     * @override\n     */\n    _log(...args) {\n      this._logger('log', args);\n    }\n\n    /**\n     * Facades `console.warn` as an override point.\n     *\n     * @param {...*} args Array of strings or objects to log\n     * @return {void}\n     * @override\n     */\n    _warn(...args) {\n      this._logger('warn', args);\n    }\n\n    /**\n     * Facades `console.error` as an override point.\n     *\n     * @param {...*} args Array of strings or objects to log\n     * @return {void}\n     * @override\n     */\n    _error(...args) {\n      this._logger('error', args);\n    }\n\n    /**\n     * Formats a message using the element type an a method name.\n     *\n     * @param {string} methodName Method name to associate with message\n     * @param {...*} args Array of strings or objects to log\n     * @return {Array} Array with formatting information for `console`\n     *   logging.\n     * @override\n     */\n    _logf(methodName, ...args) {\n      return ['[%s::%s]', this.is, methodName, ...args];\n    }\n\n  }\n\n  LegacyElement.prototype.is = '';\n\n  return LegacyElement;\n});\n"
      },
      {
       "name": "../node_modules/.pnpm/@webcomponents+shadycss@1.11.0/node_modules/@webcomponents/shadycss/entrypoints/apply-shim.js",
       "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport ApplyShim from '../src/apply-shim.js';\nimport templateMap from '../src/template-map.js';\n// prettier-ignore\nimport {getIsExtends, toCssText, elementHasBuiltCss} from '../src/style-util.js';\nimport * as ApplyShimUtils from '../src/apply-shim-utils.js';\n// prettier-ignore\nimport {getComputedStyleValue, updateNativeProperties} from '../src/common-utils.js';\nimport {CustomStyleInterfaceInterface} from '../src/custom-style-interface.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\n// prettier-ignore\nimport {nativeCssVariables, nativeShadow, cssBuild, disableRuntime} from '../src/style-settings.js';\n\n/** @const {ApplyShim} */\nconst applyShim = new ApplyShim();\n\nclass ApplyShimInterface {\n  constructor() {\n    /** @type {?CustomStyleInterfaceInterface} */\n    this.customStyleInterface = null;\n    applyShim['invalidCallback'] = ApplyShimUtils.invalidate;\n  }\n  ensure() {\n    if (this.customStyleInterface) {\n      return;\n    }\n    if (window.ShadyCSS.CustomStyleInterface) {\n      this.customStyleInterface = /** @type {!CustomStyleInterfaceInterface} */ (window\n        .ShadyCSS.CustomStyleInterface);\n      this.customStyleInterface['transformCallback'] = (style) => {\n        applyShim.transformCustomStyle(style);\n      };\n      this.customStyleInterface['validateCallback'] = () => {\n        requestAnimationFrame(() => {\n          if (this.customStyleInterface['enqueued']) {\n            this.flushCustomStyles();\n          }\n        });\n      };\n    }\n  }\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   */\n  prepareTemplate(template, elementName) {\n    this.ensure();\n    if (elementHasBuiltCss(template)) {\n      return;\n    }\n    templateMap[elementName] = template;\n    let ast = applyShim.transformTemplate(template, elementName);\n    // save original style ast to use for revalidating instances\n    template['_styleAst'] = ast;\n  }\n  flushCustomStyles() {\n    this.ensure();\n    if (!this.customStyleInterface) {\n      return;\n    }\n    let styles = this.customStyleInterface['processStyles']();\n    if (!this.customStyleInterface['enqueued']) {\n      return;\n    }\n    for (let i = 0; i < styles.length; i++) {\n      let cs = styles[i];\n      let style = this.customStyleInterface['getStyleForCustomStyle'](cs);\n      if (style) {\n        applyShim.transformCustomStyle(style);\n      }\n    }\n    this.customStyleInterface['enqueued'] = false;\n  }\n  /**\n   * @param {HTMLElement} element\n   * @param {Object=} properties\n   */\n  styleSubtree(element, properties) {\n    this.ensure();\n    if (properties) {\n      updateNativeProperties(element, properties);\n    }\n    if (element.shadowRoot) {\n      this.styleElement(element);\n      let shadowChildren =\n        /** @type {!ParentNode} */ (element.shadowRoot).children ||\n        element.shadowRoot.childNodes;\n      for (let i = 0; i < shadowChildren.length; i++) {\n        this.styleSubtree(/** @type {HTMLElement} */ (shadowChildren[i]));\n      }\n    } else {\n      let children = element.children || element.childNodes;\n      for (let i = 0; i < children.length; i++) {\n        this.styleSubtree(/** @type {HTMLElement} */ (children[i]));\n      }\n    }\n  }\n  /**\n   * @param {HTMLElement} element\n   */\n  styleElement(element) {\n    this.ensure();\n    let {is} = getIsExtends(element);\n    let template = templateMap[is];\n    if (template && elementHasBuiltCss(template)) {\n      return;\n    }\n    if (template && !ApplyShimUtils.templateIsValid(template)) {\n      // only revalidate template once\n      if (!ApplyShimUtils.templateIsValidating(template)) {\n        this.prepareTemplate(template, is);\n        ApplyShimUtils.startValidatingTemplate(template);\n      }\n      // update this element instance\n      let root = element.shadowRoot;\n      if (root) {\n        let style = /** @type {HTMLStyleElement} */ (root.querySelector(\n          'style'\n        ));\n        if (style) {\n          // reuse the template's style ast, it has all the original css text\n          style['__cssRules'] = template['_styleAst'];\n          style.textContent = toCssText(template['_styleAst']);\n        }\n      }\n    }\n  }\n  /**\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    this.ensure();\n    this.styleSubtree(document.body, properties);\n  }\n}\n\nif (!window.ShadyCSS || !window.ShadyCSS.ScopingShim) {\n  const applyShimInterface = new ApplyShimInterface();\n  let CustomStyleInterface =\n    window.ShadyCSS && window.ShadyCSS.CustomStyleInterface;\n\n  /** @suppress {duplicate} */\n  window.ShadyCSS = {\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     * @param {string=} elementExtends\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    prepareTemplate(template, elementName, elementExtends) {\n      applyShimInterface.flushCustomStyles();\n      applyShimInterface.prepareTemplate(template, elementName);\n    },\n\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     * @param {string=} elementExtends\n     */\n    prepareTemplateStyles(template, elementName, elementExtends) {\n      window.ShadyCSS.prepareTemplate(template, elementName, elementExtends);\n    },\n\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     */\n    prepareTemplateDom(template, elementName) {}, // eslint-disable-line @typescript-eslint/no-unused-vars\n\n    /**\n     * @param {!HTMLElement} element\n     * @param {Object=} properties\n     */\n    styleSubtree(element, properties) {\n      applyShimInterface.flushCustomStyles();\n      applyShimInterface.styleSubtree(element, properties);\n    },\n\n    /**\n     * @param {!HTMLElement} element\n     */\n    styleElement(element) {\n      applyShimInterface.flushCustomStyles();\n      applyShimInterface.styleElement(element);\n    },\n\n    /**\n     * @param {Object=} properties\n     */\n    styleDocument(properties) {\n      applyShimInterface.flushCustomStyles();\n      applyShimInterface.styleDocument(properties);\n    },\n\n    /**\n     * @param {Element} element\n     * @param {string} property\n     * @return {string}\n     */\n    getComputedStyleValue(element, property) {\n      return getComputedStyleValue(element, property);\n    },\n\n    flushCustomStyles() {\n      applyShimInterface.flushCustomStyles();\n    },\n\n    nativeCss: nativeCssVariables,\n    nativeShadow: nativeShadow,\n    cssBuild: cssBuild,\n    disableRuntime: disableRuntime,\n  };\n\n  if (CustomStyleInterface) {\n    window.ShadyCSS.CustomStyleInterface = CustomStyleInterface;\n  }\n}\n\nwindow.ShadyCSS.ApplyShim = applyShim;\n"
      },
      {
       "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/mixins/dir-mixin.js",
       "source": "/**\n * @fileoverview\n * @suppress {checkPrototypalTypes}\n * @license Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt The complete set of authors may be found\n * at http://polymer.github.io/AUTHORS.txt The complete set of contributors may\n * be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by\n * Google as part of the polymer project is also subject to an additional IP\n * rights grant found at http://polymer.github.io/PATENTS.txt\n */\nimport { PropertyAccessors } from './property-accessors.js';\n\nimport { dedupingMixin } from '../utils/mixin.js';\n\nconst HOST_DIR = /:host\\(:dir\\((ltr|rtl)\\)\\)/g;\nconst HOST_DIR_REPLACMENT = ':host([dir=\"$1\"])';\n\nconst EL_DIR = /([\\s\\w-#\\.\\[\\]\\*]*):dir\\((ltr|rtl)\\)/g;\nconst EL_DIR_REPLACMENT = ':host([dir=\"$2\"]) $1';\n\nconst DIR_CHECK = /:dir\\((?:ltr|rtl)\\)/;\n\nconst SHIM_SHADOW = Boolean(window['ShadyDOM'] && window['ShadyDOM']['inUse']);\n\n/**\n * @type {!Array<!Polymer_DirMixin>}\n */\nconst DIR_INSTANCES = [];\n\n/** @type {?MutationObserver} */\nlet observer = null;\n\nlet DOCUMENT_DIR = '';\n\nfunction getRTL() {\n  DOCUMENT_DIR = document.documentElement.getAttribute('dir');\n}\n\n/**\n * @param {!Polymer_DirMixin} instance Instance to set RTL status on\n */\nfunction setRTL(instance) {\n  if (!instance.__autoDirOptOut) {\n    const el = /** @type {!HTMLElement} */(instance);\n    el.setAttribute('dir', DOCUMENT_DIR);\n  }\n}\n\nfunction updateDirection() {\n  getRTL();\n  DOCUMENT_DIR = document.documentElement.getAttribute('dir');\n  for (let i = 0; i < DIR_INSTANCES.length; i++) {\n    setRTL(DIR_INSTANCES[i]);\n  }\n}\n\nfunction takeRecords() {\n  if (observer && observer.takeRecords().length) {\n    updateDirection();\n  }\n}\n\n/**\n * Element class mixin that allows elements to use the `:dir` CSS Selector to\n * have text direction specific styling.\n *\n * With this mixin, any stylesheet provided in the template will transform\n * `:dir` into `:host([dir])` and sync direction with the page via the\n * element's `dir` attribute.\n *\n * Elements can opt out of the global page text direction by setting the `dir`\n * attribute directly in `ready()` or in HTML.\n *\n * Caveats:\n * - Applications must set `<html dir=\"ltr\">` or `<html dir=\"rtl\">` to sync\n *   direction\n * - Automatic left-to-right or right-to-left styling is sync'd with the\n *   `<html>` element only.\n * - Changing `dir` at runtime is supported.\n * - Opting out of the global direction styling is permanent\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin PropertyAccessors\n */\nexport const DirMixin = dedupingMixin((base) => {\n\n  if (!SHIM_SHADOW) {\n    if (!observer) {\n      getRTL();\n      observer = new MutationObserver(updateDirection);\n      observer.observe(document.documentElement, {attributes: true, attributeFilter: ['dir']});\n    }\n  }\n\n  /**\n   * @constructor\n   * @implements {Polymer_PropertyAccessors}\n   * @private\n   */\n  const elementBase = PropertyAccessors(base);\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_DirMixin}\n   */\n  class Dir extends elementBase {\n\n    /**\n     * @param {string} cssText .\n     * @param {string} baseURI .\n     * @return {string} .\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     */\n    static _processStyleText(cssText, baseURI) {\n      cssText = super._processStyleText(cssText, baseURI);\n      if (!SHIM_SHADOW && DIR_CHECK.test(cssText)) {\n        cssText = this._replaceDirInCssText(cssText);\n        this.__activateDir = true;\n      }\n      return cssText;\n    }\n\n    /**\n     * Replace `:dir` in the given CSS text\n     *\n     * @param {string} text CSS text to replace DIR\n     * @return {string} Modified CSS\n     */\n    static _replaceDirInCssText(text) {\n      let replacedText = text;\n      replacedText = replacedText.replace(HOST_DIR, HOST_DIR_REPLACMENT);\n      replacedText = replacedText.replace(EL_DIR, EL_DIR_REPLACMENT);\n      return replacedText;\n    }\n\n    constructor() {\n      super();\n      /** @type {boolean} */\n      this.__autoDirOptOut = false;\n    }\n\n    /**\n     * @override\n     * @suppress {invalidCasts} Closure doesn't understand that `this` is an\n     *     HTMLElement\n     * @return {void}\n     */\n    ready() {\n      super.ready();\n      this.__autoDirOptOut = /** @type {!HTMLElement} */(this).hasAttribute('dir');\n    }\n\n    /**\n     * @override\n     * @suppress {missingProperties} If it exists on elementBase, it can be\n     *   super'd\n     * @return {void}\n     */\n    connectedCallback() {\n      if (elementBase.prototype.connectedCallback) {\n        super.connectedCallback();\n      }\n      if (this.constructor.__activateDir) {\n        takeRecords();\n        DIR_INSTANCES.push(this);\n        setRTL(this);\n      }\n    }\n\n    /**\n     * @override\n     * @suppress {missingProperties} If it exists on elementBase, it can be\n     *   super'd\n     * @return {void}\n     */\n    disconnectedCallback() {\n      if (elementBase.prototype.disconnectedCallback) {\n        super.disconnectedCallback();\n      }\n      if (this.constructor.__activateDir) {\n        const idx = DIR_INSTANCES.indexOf(this);\n        if (idx > -1) {\n          DIR_INSTANCES.splice(idx, 1);\n        }\n      }\n    }\n  }\n\n  Dir.__activateDir = false;\n\n  return Dir;\n});\n"
      },
      {
       "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/utils/unresolved.js",
       "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nfunction resolve() {\n  document.body.removeAttribute('unresolved');\n}\n\nif (document.readyState === 'interactive' || document.readyState === 'complete') {\n  resolve();\n} else {\n  window.addEventListener('DOMContentLoaded', resolve);\n}\n\nexport {};\n"
      },
      {
       "name": "../node_modules/.pnpm/@webcomponents+shadycss@1.11.0/node_modules/@webcomponents/shadycss/src/style-util.js",
       "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables, cssBuild} from './style-settings.js';\nimport {parse, stringify, types, StyleNode} from './css-parse.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport {MEDIA_MATCH} from './common-regex.js';\n// prettier-ignore\nimport {processUnscopedStyle, isUnscopedStyle} from './unscoped-style-handler.js';\n\n/**\n * @param {string|StyleNode} rules\n * @param {function(StyleNode)=} callback\n * @return {string}\n */\nexport function toCssText(rules, callback) {\n  if (!rules) {\n    return '';\n  }\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @return {StyleNode}\n */\nexport function rulesForStyle(style) {\n  if (!style['__cssRules'] && style.textContent) {\n    style['__cssRules'] = parse(style.textContent);\n  }\n  return style['__cssRules'] || null;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\n/**\n * @param {StyleNode} rule\n * @return {boolean}\n */\nexport function isKeyframesSelector(rule) {\n  return (\n    Boolean(rule['parent']) && rule['parent']['type'] === types.KEYFRAMES_RULE\n  );\n}\n\n/**\n * @param {StyleNode} node\n * @param {Function=} styleRuleCallback\n * @param {Function=} keyframesRuleCallback\n * @param {boolean=} onlyActiveRules\n */\nexport function forEachRule(\n  node,\n  styleRuleCallback,\n  keyframesRuleCallback,\n  onlyActiveRules\n) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  let type = node['type'];\n  if (onlyActiveRules) {\n    if (type === types.MEDIA_RULE) {\n      let matchMedia = node['selector'].match(MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback && type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node['rules'];\n  if (r$ && !skipRules) {\n    for (let i = 0, l = r$.length, r; i < l && (r = r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @param {Node} target\n * @param {Node} contextNode\n * @return {HTMLStyleElement}\n */\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  applyStyle(style, target, contextNode);\n  return style;\n}\n\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @return {!HTMLStyleElement}\n */\nexport function createScopeStyle(cssText, moniker) {\n  let style = /** @type {HTMLStyleElement} */ (document.createElement('style'));\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\n/**\n * Track the position of the last added style for placing placeholders\n * @type {Node}\n */\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\n/**\n * @param {string} moniker\n * @return {!Comment}\n */\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(\n    ' Shady DOM styles for ' + moniker + ' '\n  );\n  let after = lastHeadApplyNode ? lastHeadApplyNode['nextSibling'] : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @param {?Node} target\n * @param {?Node} contextNode\n */\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) || target.firstChild;\n  target.insertBefore(style, after);\n  if (!lastHeadApplyNode) {\n    lastHeadApplyNode = style;\n  } else {\n    // only update lastHeadApplyNode if the new style is inserted after the old lastHeadApplyNode\n    let position = style.compareDocumentPosition(lastHeadApplyNode);\n    if (position === Node.DOCUMENT_POSITION_PRECEDING) {\n      lastHeadApplyNode = style;\n    }\n  }\n}\n\n/**\n * @param {string} buildType\n * @return {boolean}\n */\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n/**\n * Walk from text[start] matching parens and\n * returns position of the outer end paren\n * @param {string} text\n * @param {number} start\n * @return {number}\n */\nexport function findMatchingParen(text, start) {\n  let level = 0;\n  for (let i = start, l = text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * @param {string} str\n * @param {function(string, string, string, string)} callback\n */\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\n/**\n * @param {Element} element\n * @param {string} value\n */\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (nativeShadow) {\n    element.setAttribute('class', value);\n  } else {\n    window['ShadyDOM']['nativeMethods']['setAttribute'].call(\n      element,\n      'class',\n      value\n    );\n  }\n}\n\n/**\n * @type {function(*):*}\n */\nexport const wrap =\n  (window['ShadyDOM'] && window['ShadyDOM']['wrap']) || ((node) => node);\n\n/**\n * @param {Element | {is: string, extends: string}} element\n * @return {{is: string, typeExtension: string}}\n */\nexport function getIsExtends(element) {\n  let localName = element['localName'];\n  let is = '',\n    typeExtension = '';\n  /*\n  NOTE: technically, this can be wrong for certain svg elements\n  with `-` in the name like `<font-face>`\n  */\n  if (localName) {\n    if (localName.indexOf('-') > -1) {\n      is = localName;\n    } else {\n      typeExtension = localName;\n      is = (element.getAttribute && element.getAttribute('is')) || '';\n    }\n  } else {\n    is = /** @type {?} */ (element).is;\n    typeExtension = /** @type {?} */ (element).extends;\n  }\n  return {is, typeExtension};\n}\n\n/**\n * @param {Element|DocumentFragment} element\n * @return {string}\n */\nexport function gatherStyleText(element) {\n  /** @type {!Array<string>} */\n  const styleTextParts = [];\n  const styles = /** @type {!NodeList<!HTMLStyleElement>} */ (element.querySelectorAll(\n    'style'\n  ));\n  for (let i = 0; i < styles.length; i++) {\n    const style = styles[i];\n    if (isUnscopedStyle(style)) {\n      if (!nativeShadow) {\n        processUnscopedStyle(style);\n        style.parentNode.removeChild(style);\n      }\n    } else {\n      styleTextParts.push(style.textContent);\n      style.parentNode.removeChild(style);\n    }\n  }\n  return styleTextParts.join('').trim();\n}\n\n/**\n * Split a selector separated by commas into an array in a smart way\n * @param {string} selector\n * @return {!Array<string>}\n */\nexport function splitSelectorList(selector) {\n  const parts = [];\n  let part = '';\n  for (let i = 0; i >= 0 && i < selector.length; i++) {\n    // A selector with parentheses will be one complete part\n    if (selector[i] === '(') {\n      // find the matching paren\n      const end = findMatchingParen(selector, i);\n      // push the paren block into the part\n      part += selector.slice(i, end + 1);\n      // move the index to after the paren block\n      i = end;\n    } else if (selector[i] === ',') {\n      parts.push(part);\n      part = '';\n    } else {\n      part += selector[i];\n    }\n  }\n  // catch any pieces after the last comma\n  if (part) {\n    parts.push(part);\n  }\n  return parts;\n}\n\nconst CSS_BUILD_ATTR = 'css-build';\n\n/**\n * Return the polymer-css-build \"build type\" applied to this element\n *\n * @param {!HTMLElement} element\n * @return {string} Can be \"\", \"shady\", or \"shadow\"\n */\nexport function getCssBuild(element) {\n  if (cssBuild !== undefined) {\n    return /** @type {string} */ (cssBuild);\n  }\n  if (element.__cssBuild === undefined) {\n    // try attribute first, as it is the common case\n    const attrValue = element.getAttribute(CSS_BUILD_ATTR);\n    if (attrValue) {\n      element.__cssBuild = attrValue;\n    } else {\n      const buildComment = getBuildComment(element);\n      if (buildComment !== '') {\n        // remove build comment so it is not needlessly copied into every element instance\n        removeBuildComment(element);\n      }\n      element.__cssBuild = buildComment;\n    }\n  }\n  return element.__cssBuild || '';\n}\n\n/**\n * Check if the given element, either a <template> or <style>, has been processed\n * by polymer-css-build.\n *\n * If so, then we can make a number of optimizations:\n * - polymer-css-build will decompose mixins into individual CSS Custom Properties,\n * so the ApplyShim can be skipped entirely.\n * - Under native ShadowDOM, the style text can just be copied into each instance\n * without modification\n * - If the build is \"shady\" and ShadyDOM is in use, the styling does not need\n * scoping beyond the shimming of CSS Custom Properties\n *\n * @param {!HTMLElement} element\n * @return {boolean}\n */\nexport function elementHasBuiltCss(element) {\n  return getCssBuild(element) !== '';\n}\n\n/**\n * For templates made with tagged template literals, polymer-css-build will\n * insert a comment of the form `<!--css-build:shadow-->`\n *\n * @param {!HTMLElement} element\n * @return {string}\n */\nexport function getBuildComment(element) {\n  const buildComment =\n    element.localName === 'template'\n      ? /** @type {!HTMLTemplateElement} */ (element).content.firstChild\n      : element.firstChild;\n  if (buildComment instanceof Comment) {\n    const commentParts = buildComment.textContent.trim().split(':');\n    if (commentParts[0] === CSS_BUILD_ATTR) {\n      return commentParts[1];\n    }\n  }\n  return '';\n}\n\n/**\n * Check if the css build status is optimal, and do no unneeded work.\n *\n * @param {string=} cssBuild CSS build status\n * @return {boolean} css build is optimal or not\n */\nexport function isOptimalCssBuild(cssBuild = '') {\n  // CSS custom property shim always requires work\n  if (cssBuild === '' || !nativeCssVariables) {\n    return false;\n  }\n  return nativeShadow ? cssBuild === 'shadow' : cssBuild === 'shady';\n}\n\n/**\n * @param {!HTMLElement} element\n */\nfunction removeBuildComment(element) {\n  const buildComment =\n    element.localName === 'template'\n      ? /** @type {!HTMLTemplateElement} */ (element).content.firstChild\n      : element.firstChild;\n  buildComment.parentNode.removeChild(buildComment);\n}\n"
      },
      {
       "name": "../node_modules/.pnpm/@webcomponents+shadycss@1.11.0/node_modules/@webcomponents/shadycss/src/apply-shim.js",
       "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/*\n * The apply shim simulates the behavior of `@apply` proposed at\n * https://tabatkins.github.io/specs/css-apply-rule/.\n * The approach is to convert a property like this:\n *\n *    --foo: {color: red; background: blue;}\n *\n * to this:\n *\n *    --foo_-_color: red;\n *    --foo_-_background: blue;\n *\n * Then where `@apply --foo` is used, that is converted to:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background);\n *\n * This approach generally works but there are some issues and limitations.\n * Consider, for example, that somewhere *between* where `--foo` is set and used,\n * another element sets it to:\n *\n *    --foo: { border: 2px solid red; }\n *\n * We must now ensure that the color and background from the previous setting\n * do not apply. This is accomplished by changing the property set to this:\n *\n *    --foo_-_border: 2px solid red;\n *    --foo_-_color: initial;\n *    --foo_-_background: initial;\n *\n * This works but introduces one new issue.\n * Consider this setup at the point where the `@apply` is used:\n *\n *    background: orange;\n *    `@apply` --foo;\n *\n * In this case the background will be unset (initial) rather than the desired\n * `orange`. We address this by altering the property set to use a fallback\n * value like this:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background, orange);\n *    border: var(--foo_-_border);\n *\n * Note that the default is retained in the property set and the `background` is\n * the desired `orange`. This leads us to a limitation.\n *\n * Limitation 1:\n\n * Only properties in the rule where the `@apply`\n * is used are considered as default values.\n * If another rule matches the element and sets `background` with\n * less specificity than the rule in which `@apply` appears,\n * the `background` will not be set.\n *\n * Limitation 2:\n *\n * When using Polymer's `updateStyles` api, new properties may not be set for\n * `@apply` properties.\n\n*/\n\n'use strict';\n\n// prettier-ignore\nimport {forEachRule, processVariableAndFallback, rulesForStyle, toCssText, gatherStyleText} from './style-util.js';\nimport {MIXIN_MATCH, VAR_ASSIGN} from './common-regex.js';\nimport {detectMixin} from './common-utils.js';\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst APPLY_NAME_CLEAN = /;\\s*/m;\nconst INITIAL_INHERIT = /^\\s*(initial)|(inherit)\\s*$/;\nconst IMPORTANT = /\\s*!important/;\n\n// separator used between mixin-name and mixin-property-name when producing properties\n// NOTE: plain '-' may cause collisions in user styles\nconst MIXIN_VAR_SEP = '_-_';\n\n/**\n * @typedef {!Object<string, string>}\n */\nlet PropertyEntry; // eslint-disable-line @typescript-eslint/no-unused-vars\n\n/**\n * @typedef {!Object<string, boolean>}\n */\nlet DependantsEntry; // eslint-disable-line @typescript-eslint/no-unused-vars\n\n/** @typedef {{\n *    properties: PropertyEntry,\n *    dependants: DependantsEntry\n * }}\n */\nlet MixinMapEntry; // eslint-disable-line @typescript-eslint/no-unused-vars\n\n// map of mixin to property names\n// --foo: {border: 2px} -> {properties: {(--foo, ['border'])}, dependants: {'element-name': proto}}\nclass MixinMap {\n  constructor() {\n    /** @type {!Object<string, !MixinMapEntry>} */\n    this._map = {};\n  }\n  /**\n   * @param {string} name\n   * @param {!PropertyEntry} props\n   */\n  set(name, props) {\n    name = name.trim();\n    this._map[name] = {\n      properties: props,\n      dependants: {},\n    };\n  }\n  /**\n   * @param {string} name\n   * @return {MixinMapEntry}\n   */\n  get(name) {\n    name = name.trim();\n    return this._map[name] || null;\n  }\n}\n\n/**\n * Callback for when an element is marked invalid\n * @type {?function(string)}\n */\nlet invalidCallback = null;\n\n/** @unrestricted */\nclass ApplyShim {\n  constructor() {\n    /** @type {?string} */\n    this._currentElement = null;\n    /** @type {HTMLMetaElement} */\n    this._measureElement = null;\n    this._map = new MixinMap();\n  }\n  /**\n   * return true if `cssText` contains a mixin definition or consumption\n   * @param {string} cssText\n   * @return {boolean}\n   */\n  detectMixin(cssText) {\n    return detectMixin(cssText);\n  }\n\n  /**\n   * Gather styles into one style for easier processing\n   * @param {!HTMLTemplateElement} template\n   * @return {HTMLStyleElement}\n   */\n  gatherStyles(template) {\n    const styleText = gatherStyleText(template.content);\n    if (styleText) {\n      const style = /** @type {!HTMLStyleElement} */ (document.createElement(\n        'style'\n      ));\n      style.textContent = styleText;\n      template.content.insertBefore(style, template.content.firstChild);\n      return style;\n    }\n    return null;\n  }\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @return {StyleNode}\n   */\n  transformTemplate(template, elementName) {\n    if (template._gatheredStyle === undefined) {\n      template._gatheredStyle = this.gatherStyles(template);\n    }\n    /** @type {HTMLStyleElement} */\n    const style = template._gatheredStyle;\n    return style ? this.transformStyle(style, elementName) : null;\n  }\n  /**\n   * @param {!HTMLStyleElement} style\n   * @param {string} elementName\n   * @return {StyleNode}\n   */\n  transformStyle(style, elementName = '') {\n    let ast = rulesForStyle(style);\n    this.transformRules(ast, elementName);\n    style.textContent = toCssText(ast);\n    return ast;\n  }\n  /**\n   * @param {!HTMLStyleElement} style\n   * @return {StyleNode}\n   */\n  transformCustomStyle(style) {\n    let ast = rulesForStyle(style);\n    forEachRule(ast, (rule) => {\n      if (rule['selector'] === ':root') {\n        rule['selector'] = 'html';\n      }\n      this.transformRule(rule);\n    });\n    style.textContent = toCssText(ast);\n    return ast;\n  }\n  /**\n   * @param {StyleNode} rules\n   * @param {string} elementName\n   */\n  transformRules(rules, elementName) {\n    this._currentElement = elementName;\n    forEachRule(rules, (r) => {\n      this.transformRule(r);\n    });\n    this._currentElement = null;\n  }\n  /**\n   * @param {!StyleNode} rule\n   */\n  transformRule(rule) {\n    rule['cssText'] = this.transformCssText(rule['parsedCssText'], rule);\n    // :root was only used for variable assignment in property shim,\n    // but generates invalid selectors with real properties.\n    // replace with `:host > *`, which serves the same effect\n    if (rule['selector'] === ':root') {\n      rule['selector'] = ':host > *';\n    }\n  }\n  /**\n   * @param {string} cssText\n   * @param {!StyleNode} rule\n   * @return {string}\n   */\n  transformCssText(cssText, rule) {\n    // produce variables\n    cssText = cssText.replace(\n      VAR_ASSIGN,\n      (matchText, propertyName, valueProperty, valueMixin) =>\n        this._produceCssProperties(\n          matchText,\n          propertyName,\n          valueProperty,\n          valueMixin,\n          rule\n        )\n    );\n    // consume mixins\n    return this._consumeCssProperties(cssText, rule);\n  }\n  /**\n   * @param {string} property\n   * @return {string}\n   */\n  _getInitialValueForProperty(property) {\n    if (!this._measureElement) {\n      this._measureElement = /** @type {HTMLMetaElement} */ (document.createElement(\n        'meta'\n      ));\n      this._measureElement.setAttribute('apply-shim-measure', '');\n      this._measureElement.style.all = 'initial';\n      document.head.appendChild(this._measureElement);\n    }\n    return window\n      .getComputedStyle(this._measureElement)\n      .getPropertyValue(property);\n  }\n  /**\n   * Walk over all rules before this rule to find fallbacks for mixins\n   *\n   * @param {!StyleNode} startRule\n   * @return {!Object}\n   */\n  _fallbacksFromPreviousRules(startRule) {\n    // find the \"top\" rule\n    let topRule = startRule;\n    while (topRule['parent']) {\n      topRule = topRule['parent'];\n    }\n    const fallbacks = {};\n    let seenStartRule = false;\n    forEachRule(topRule, (r) => {\n      // stop when we hit the input rule\n      seenStartRule = seenStartRule || r === startRule;\n      if (seenStartRule) {\n        return;\n      }\n      // NOTE: Only matching selectors are \"safe\" for this fallback processing\n      // It would be prohibitive to run `matchesSelector()` on each selector,\n      // so we cheat and only check if the same selector string is used, which\n      // guarantees things like specificity matching\n      if (r['selector'] === startRule['selector']) {\n        Object.assign(fallbacks, this._cssTextToMap(r['parsedCssText']));\n      }\n    });\n    return fallbacks;\n  }\n  /**\n   * replace mixin consumption with variable consumption\n   * @param {string} text\n   * @param {!StyleNode=} rule\n   * @return {string}\n   */\n  _consumeCssProperties(text, rule) {\n    /** @type {Array} */\n    let m = null;\n    // loop over text until all mixins with defintions have been applied\n    while ((m = MIXIN_MATCH.exec(text))) {\n      let matchText = m[0];\n      let mixinName = m[1];\n      let idx = m.index;\n      // collect properties before apply to be \"defaults\" if mixin might override them\n      // match includes a \"prefix\", so find the start and end positions of @apply\n      let applyPos = idx + matchText.indexOf('@apply');\n      let afterApplyPos = idx + matchText.length;\n      // find props defined before this @apply\n      let textBeforeApply = text.slice(0, applyPos);\n      let textAfterApply = text.slice(afterApplyPos);\n      let defaults = rule ? this._fallbacksFromPreviousRules(rule) : {};\n      Object.assign(defaults, this._cssTextToMap(textBeforeApply));\n      let replacement = this._atApplyToCssProperties(mixinName, defaults);\n      // use regex match position to replace mixin, keep linear processing time\n      text = `${textBeforeApply}${replacement}${textAfterApply}`;\n      // move regex search to _after_ replacement\n      MIXIN_MATCH.lastIndex = idx + replacement.length;\n    }\n    return text;\n  }\n  /**\n   * produce variable consumption at the site of mixin consumption\n   * `@apply` --foo; -> for all props (${propname}: var(--foo_-_${propname}, ${fallback[propname]}}))\n   * Example:\n   *  border: var(--foo_-_border); padding: var(--foo_-_padding, 2px)\n   *\n   * @param {string} mixinName\n   * @param {Object} fallbacks\n   * @return {string}\n   */\n  _atApplyToCssProperties(mixinName, fallbacks) {\n    mixinName = mixinName.replace(APPLY_NAME_CLEAN, '');\n    let vars = [];\n    let mixinEntry = this._map.get(mixinName);\n    // if we depend on a mixin before it is created\n    // make a sentinel entry in the map to add this element as a dependency for when it is defined.\n    if (!mixinEntry) {\n      this._map.set(mixinName, {});\n      mixinEntry = this._map.get(mixinName);\n    }\n    if (mixinEntry) {\n      if (this._currentElement) {\n        mixinEntry.dependants[this._currentElement] = true;\n      }\n      let p, parts, f;\n      const properties = mixinEntry.properties;\n      for (p in properties) {\n        f = fallbacks && fallbacks[p];\n        parts = [p, ': var(', mixinName, MIXIN_VAR_SEP, p];\n        if (f) {\n          parts.push(',', f.replace(IMPORTANT, ''));\n        }\n        parts.push(')');\n        if (IMPORTANT.test(properties[p])) {\n          parts.push(' !important');\n        }\n        vars.push(parts.join(''));\n      }\n    }\n    return vars.join('; ');\n  }\n\n  /**\n   * @param {string} property\n   * @param {string} value\n   * @return {string}\n   */\n  _replaceInitialOrInherit(property, value) {\n    let match = INITIAL_INHERIT.exec(value);\n    if (match) {\n      if (match[1]) {\n        // initial\n        // replace `initial` with the concrete initial value for this property\n        value = this._getInitialValueForProperty(property);\n      } else {\n        // inherit\n        // with this purposfully illegal value, the variable will be invalid at\n        // compute time (https://www.w3.org/TR/css-variables/#invalid-at-computed-value-time)\n        // and for inheriting values, will behave similarly\n        // we cannot support the same behavior for non inheriting values like 'border'\n        value = 'apply-shim-inherit';\n      }\n    }\n    return value;\n  }\n\n  /**\n   * \"parse\" a mixin definition into a map of properties and values\n   * cssTextToMap('border: 2px solid black') -> ('border', '2px solid black')\n   * @param {string} text\n   * @param {boolean=} replaceInitialOrInherit\n   * @return {!Object<string, string>}\n   */\n  _cssTextToMap(text, replaceInitialOrInherit = false) {\n    let props = text.split(';');\n    let property, value;\n    let out = {};\n    for (let i = 0, p, sp; i < props.length; i++) {\n      p = props[i];\n      if (p) {\n        sp = p.split(':');\n        // ignore lines that aren't definitions like @media\n        if (sp.length > 1) {\n          property = sp[0].trim();\n          // some properties may have ':' in the value, like data urls\n          value = sp.slice(1).join(':');\n          if (replaceInitialOrInherit) {\n            value = this._replaceInitialOrInherit(property, value);\n          }\n          out[property] = value;\n        }\n      }\n    }\n    return out;\n  }\n\n  /**\n   * @param {MixinMapEntry} mixinEntry\n   */\n  _invalidateMixinEntry(mixinEntry) {\n    if (!invalidCallback) {\n      return;\n    }\n    for (let elementName in mixinEntry.dependants) {\n      if (elementName !== this._currentElement) {\n        invalidCallback(elementName);\n      }\n    }\n  }\n\n  /**\n   * @param {string} matchText\n   * @param {string} propertyName\n   * @param {?string} valueProperty\n   * @param {?string} valueMixin\n   * @param {!StyleNode} rule\n   * @return {string}\n   */\n  _produceCssProperties(\n    matchText,\n    propertyName,\n    valueProperty,\n    valueMixin,\n    rule\n  ) {\n    // handle case where property value is a mixin\n    if (valueProperty) {\n      // form: --mixin2: var(--mixin1), where --mixin1 is in the map\n      processVariableAndFallback(valueProperty, (prefix, value) => {\n        if (value && this._map.get(value)) {\n          valueMixin = `@apply ${value};`;\n        }\n      });\n    }\n    if (!valueMixin) {\n      return matchText;\n    }\n    let mixinAsProperties = this._consumeCssProperties('' + valueMixin, rule);\n    let prefix = matchText.slice(0, matchText.indexOf('--'));\n    // `initial` and `inherit` as properties in a map should be replaced because\n    // these keywords are eagerly evaluated when the mixin becomes CSS Custom Properties,\n    // and would set the variable value, rather than carry the keyword to the `var()` usage.\n    let mixinValues = this._cssTextToMap(mixinAsProperties, true);\n    let combinedProps = mixinValues;\n    let mixinEntry = this._map.get(propertyName);\n    let oldProps = mixinEntry && mixinEntry.properties;\n    if (oldProps) {\n      // NOTE: since we use mixin, the map of properties is updated here\n      // and this is what we want.\n      combinedProps = Object.assign(Object.create(oldProps), mixinValues);\n    } else {\n      this._map.set(propertyName, combinedProps);\n    }\n    let out = [];\n    let p, v;\n    // set variables defined by current mixin\n    let needToInvalidate = false;\n    for (p in combinedProps) {\n      v = mixinValues[p];\n      // if property not defined by current mixin, set initial\n      if (v === undefined) {\n        v = 'initial';\n      }\n      if (oldProps && !(p in oldProps)) {\n        needToInvalidate = true;\n      }\n      out.push(`${propertyName}${MIXIN_VAR_SEP}${p}: ${v}`);\n    }\n    if (needToInvalidate) {\n      this._invalidateMixinEntry(mixinEntry);\n    }\n    if (mixinEntry) {\n      mixinEntry.properties = combinedProps;\n    }\n    // because the mixinMap is global, the mixin might conflict with\n    // a different scope's simple variable definition:\n    // Example:\n    // some style somewhere:\n    // --mixin1:{ ... }\n    // --mixin2: var(--mixin1);\n    // some other element:\n    // --mixin1: 10px solid red;\n    // --foo: var(--mixin1);\n    // In this case, we leave the original variable definition in place.\n    if (valueProperty) {\n      prefix = `${matchText};${prefix}`;\n    }\n    return `${prefix}${out.join('; ')};`;\n  }\n}\n\n/* exports */\n/* eslint-disable no-self-assign */\nApplyShim.prototype['detectMixin'] = ApplyShim.prototype.detectMixin;\nApplyShim.prototype['transformStyle'] = ApplyShim.prototype.transformStyle;\nApplyShim.prototype['transformCustomStyle'] =\n  ApplyShim.prototype.transformCustomStyle;\nApplyShim.prototype['transformRules'] = ApplyShim.prototype.transformRules;\nApplyShim.prototype['transformRule'] = ApplyShim.prototype.transformRule;\nApplyShim.prototype['transformTemplate'] =\n  ApplyShim.prototype.transformTemplate;\nApplyShim.prototype['_separator'] = MIXIN_VAR_SEP;\n/* eslint-enable no-self-assign */\nObject.defineProperty(ApplyShim.prototype, 'invalidCallback', {\n  /** @return {?function(string)} */\n  get() {\n    return invalidCallback;\n  },\n  /** @param {?function(string)} cb */\n  set(cb) {\n    invalidCallback = cb;\n  },\n});\n\nexport default ApplyShim;\n"
      },
      {
       "name": "../node_modules/.pnpm/@webcomponents+shadycss@1.11.0/node_modules/@webcomponents/shadycss/src/template-map.js",
       "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/**\n * @const {!Object<string, !HTMLTemplateElement>}\n */\nconst templateMap = {};\nexport default templateMap;\n"
      },
      {
       "name": "../node_modules/.pnpm/@webcomponents+shadycss@1.11.0/node_modules/@webcomponents/shadycss/src/apply-shim-utils.js",
       "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\nimport templateMap from './template-map.js';\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\n\n/*\n * Utilities for handling invalidating apply-shim mixins for a given template.\n *\n * The invalidation strategy involves keeping track of the \"current\" version of a template's mixins, and updating that count when a mixin is invalidated.\n * The template\n */\n\n/** @const {string} */\nconst CURRENT_VERSION = '_applyShimCurrentVersion';\n\n/** @const {string} */\nconst NEXT_VERSION = '_applyShimNextVersion';\n\n/** @const {string} */\nconst VALIDATING_VERSION = '_applyShimValidatingVersion';\n\n/**\n * @const {Promise<void>}\n */\nconst promise = Promise.resolve();\n\n/**\n * @param {string} elementName\n */\nexport function invalidate(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    invalidateTemplate(template);\n  }\n}\n\n/**\n * This function can be called multiple times to mark a template invalid\n * and signal that the style inside must be regenerated.\n *\n * Use `startValidatingTemplate` to begin an asynchronous validation cycle.\n * During that cycle, call `templateIsValidating` to see if the template must\n * be revalidated\n * @param {HTMLTemplateElement} template\n */\nexport function invalidateTemplate(template) {\n  // default the current version to 0\n  template[CURRENT_VERSION] = template[CURRENT_VERSION] || 0;\n  // ensure the \"validating for\" flag exists\n  template[VALIDATING_VERSION] = template[VALIDATING_VERSION] || 0;\n  // increment the next version\n  template[NEXT_VERSION] = (template[NEXT_VERSION] || 0) + 1;\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValid(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValid(template);\n  }\n  return true;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValid(template) {\n  return template[CURRENT_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValidating(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValidating(template);\n  }\n  return false;\n}\n\n/**\n * Returns true if the template is currently invalid and `startValidating` has been called since the last invalidation.\n * If false, the template must be validated.\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValidating(template) {\n  return (\n    !templateIsValid(template) &&\n    template[VALIDATING_VERSION] === template[NEXT_VERSION]\n  );\n}\n\n/**\n * the template is marked as `validating` for one microtask so that all instances\n * found in the tree crawl of `applyStyle` will update themselves,\n * but the template will only be updated once.\n * @param {string} elementName\n */\nexport function startValidating(elementName) {\n  let template = templateMap[elementName];\n  startValidatingTemplate(template);\n}\n\n/**\n * Begin an asynchronous invalidation cycle.\n * This should be called after every validation of a template\n *\n * After one microtask, the template will be marked as valid until the next call to `invalidateTemplate`\n * @param {HTMLTemplateElement} template\n */\nexport function startValidatingTemplate(template) {\n  // remember that the current \"next version\" is the reason for this validation cycle\n  template[VALIDATING_VERSION] = template[NEXT_VERSION];\n  // however, there only needs to be one async task to clear the counters\n  if (!template._validating) {\n    template._validating = true;\n    promise.then(function () {\n      // sync the current version to let future invalidations cause a refresh cycle\n      template[CURRENT_VERSION] = template[NEXT_VERSION];\n      template._validating = false;\n    });\n  }\n}\n\n/**\n * @return {boolean}\n */\nexport function elementsAreInvalid() {\n  for (let elementName in templateMap) {\n    let template = templateMap[elementName];\n    if (!templateIsValid(template)) {\n      return true;\n    }\n  }\n  return false;\n}\n"
      },
      {
       "name": "../node_modules/.pnpm/@webcomponents+shadycss@1.11.0/node_modules/@webcomponents/shadycss/src/css-parse.js",
       "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n/** @unrestricted */\nclass StyleNode {\n  constructor() {\n    /** @type {number} */\n    this['start'] = 0;\n    /** @type {number} */\n    this['end'] = 0;\n    /** @type {StyleNode} */\n    this['previous'] = null;\n    /** @type {StyleNode} */\n    this['parent'] = null;\n    /** @type {Array<StyleNode>} */\n    this['rules'] = null;\n    /** @type {string} */\n    this['parsedCssText'] = '';\n    /** @type {string} */\n    this['cssText'] = '';\n    /** @type {boolean} */\n    this['atRule'] = false;\n    /** @type {number} */\n    this['type'] = 0;\n    /** @type {string} */\n    this['keyframesName'] = '';\n    /** @type {string} */\n    this['selector'] = '';\n    /** @type {string} */\n    this['parsedSelector'] = '';\n  }\n}\n\nexport {StyleNode};\n\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {!StyleNode}\n */\nfunction lex(text) {\n  let root = new StyleNode();\n  root['start'] = 0;\n  root['end'] = text.length;\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n['rules']) {\n        n['rules'] = [];\n      }\n      let p = n;\n      let previous = p['rules'][p['rules'].length - 1] || null;\n      n = new StyleNode();\n      n['start'] = i + 1;\n      n['parent'] = p;\n      n['previous'] = previous;\n      p['rules'].push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n['end'] = i + 1;\n      n = n['parent'] || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {!StyleNode}\n */\nfunction parseCss(node, text) {\n  let t = text.substring(node['start'], node['end'] - 1);\n  node['parsedCssText'] = node['cssText'] = t.trim();\n  if (node['parent']) {\n    let ss = node['previous']\n      ? node['previous']['end']\n      : node['parent']['start'];\n    t = text.substring(ss, node['start'] - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = (node['parsedSelector'] = node['selector'] = t.trim());\n    node['atRule'] = s.indexOf(AT_START) === 0;\n    // note, support a subset of rule types...\n    if (node['atRule']) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node['type'] = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node['type'] = types.KEYFRAMES_RULE;\n        node['keyframesName'] = node['selector'].split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node['type'] = types.MIXIN_RULE;\n      } else {\n        node['type'] = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node['rules'];\n  if (r$) {\n    for (let i = 0, l = r$.length, r; i < l && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function () {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n/**\n * stringify parsed css.\n * @param {StyleNode} node\n * @param {boolean=} preserveProperties\n * @param {string=} text\n * @return {string}\n */\nexport function stringify(node, preserveProperties, text = '') {\n  // calc rule cssText\n  let cssText = '';\n  if (node['cssText'] || node['rules']) {\n    let r$ = node['rules'];\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r; i < l && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties\n        ? node['cssText']\n        : removeCustomProps(node['cssText']);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node['selector']) {\n      text += node['selector'] + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node['selector']) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\n/**\n * @param {Array<StyleNode>} rules\n * @return {boolean}\n */\nfunction _hasMixinRules(rules) {\n  let r = rules[0];\n  return (\n    Boolean(r) &&\n    Boolean(r['selector']) &&\n    r['selector'].indexOf(VAR_START) === 0\n  );\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nexport function removeCustomPropAssignment(cssText) {\n  return cssText.replace(RX.customProp, '').replace(RX.mixinProp, '');\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomPropApply(cssText) {\n  return cssText.replace(RX.mixinApply, '').replace(RX.varApply, '');\n}\n\n/** @enum {number} */\nexport const types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000,\n};\n\nconst OPEN_BRACE = '{';\nconst CLOSE_BRACE = '}';\n\n// helper regexp's\nconst RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g,\n};\n\nconst VAR_START = '--';\nconst MEDIA_START = '@media';\nconst AT_START = '@';\n"
      },
      {
       "name": "../node_modules/.pnpm/@webcomponents+shadycss@1.11.0/node_modules/@webcomponents/shadycss/src/unscoped-style-handler.js",
       "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {!Set<string>} */\nconst styleTextSet = new Set();\n\nexport const scopingAttribute = 'shady-unscoped';\n\n/**\n * Add a specifically-marked style to the document directly, and only one copy of that style.\n *\n * @param {!HTMLStyleElement} style\n * @return {undefined}\n */\nexport function processUnscopedStyle(style) {\n  const text = style.textContent;\n  if (!styleTextSet.has(text)) {\n    styleTextSet.add(text);\n    const newStyle = document.createElement('style');\n    newStyle.setAttribute('shady-unscoped', '');\n    newStyle.textContent = text;\n    document.head.appendChild(newStyle);\n  }\n}\n\n/**\n * Check if a style is supposed to be unscoped\n * @param {!HTMLStyleElement} style\n * @return {boolean} true if the style has the unscoping attribute\n */\nexport function isUnscopedStyle(style) {\n  return style.hasAttribute(scopingAttribute);\n}\n"
      }
     ]
    },
    {
     "id": 127,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-context-menu@5.0.0/node_modules/@vaadin/vaadin-context-menu/src/vaadin-context-menu.js + 4 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-context-menu@5.0.0/node_modules/@vaadin/vaadin-context-menu/src/vaadin-context-menu.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { gestures, addListener, removeListener } from '@polymer/polymer/lib/utils/gestures.js';\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners.js';\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { ItemsMixin } from './vaadin-contextmenu-items-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { ThemePropertyMixin } from '@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js';\nimport './vaadin-contextmenu-event.js';\nimport './vaadin-device-detector.js';\nimport './vaadin-context-menu-overlay.js';\n\n/**\n *\n * `<vaadin-context-menu>` is a Web Component for creating context menus. The content of the\n * menu can be populated in three ways: imperatively by using the items API or a renderer callback function and\n * declaratively by using Polymer's Templates.\n *\n * ### Items\n *\n * Items is a higher level convenience API for defining a (hierarchical) menu structure for the component.\n * If a menu item has a non-empty `children` set, a sub-menu with the child items is opened\n * next to the parent menu on mouseover, tap or a right arrow keypress.\n *\n * When an item is selected, `<vaadin-context-menu>` dispatches an \"item-selected\" event\n * with the selected item as `event.detail.value` property.\n *\n * ```javascript\n * contextMenu.items = [\n *   {text: 'Menu Item 1', children:\n *     [\n *       {text: 'Menu Item 1-1', checked: true},\n *       {text: 'Menu Item 1-2'}\n *     ]\n *   },\n *   {component: 'hr'},\n *   {text: 'Menu Item 2', children:\n *     [\n *       {text: 'Menu Item 2-1'},\n *       {text: 'Menu Item 2-2', disabled: true}\n *     ]\n *   },\n *   {text: 'Menu Item 3', disabled: true}\n * ];\n *\n * contextMenu.addEventListener('item-selected', e => {\n *   const item = e.detail.value;\n *   console.log(`${item.text} selected`);\n * });\n * ```\n *\n * **NOTE:** when the `items` array is defined, the renderer or a template cannot be used.\n *\n * ### Rendering\n *\n * The renderer function provides `root`, `contextMenu`, `model` arguments when applicable.\n * Generate DOM content by using `model` object properties if needed, append it to the `root`\n * element and control the state of the host element by accessing `contextMenu`. Before generating\n * new content, the renderer function should check if there is already content in `root` for reusing it.\n *\n * ```html\n * <vaadin-context-menu id=\"contextMenu\">\n *  <p>This paragraph has a context menu.</p>\n * </vaadin-context-menu>\n * ```\n * ```js\n * const contextMenu = document.querySelector('#contextMenu');\n * contextMenu.renderer = (root, contextMenu, context) => {\n *   let listBox = root.firstElementChild;\n *   if (!listBox) {\n *     listBox = document.createElement('vaadin-list-box');\n *     root.appendChild(listBox);\n *   }\n *\n *   let item = listBox.querySelector('vaadin-item');\n *   if (!item) {\n *     item = document.createElement('vaadin-item');\n *     listBox.appendChild(item);\n *   }\n *   item.textContent = 'Content of the selector: ' + context.target.textContent;\n * };\n * ```\n *\n * You can access the menu context inside the renderer using\n * `context.target` and `context.detail`.\n *\n * Renderer is called on the opening of the context-menu and each time the related context is updated.\n * DOM generated during the renderer call can be reused\n * in the next renderer call and will be provided with the `root` argument.\n * On first call it will be empty.\n *\n * **NOTE:** when the `renderer` function is defined, the template content\n * is not in use.\n *\n * ### Polymer Templates\n *\n * Alternatively to using the `renderer`, you can populate\n * the menu content using Polymer's Templates:\n *\n * ```html\n * <vaadin-context-menu>\n *   <template>\n *     <vaadin-list-box>\n *       <vaadin-item>First menu item</vaadin-item>\n *       <vaadin-item>Second menu item</vaadin-item>\n *     </vaadin-list-box>\n *   </template>\n * </vaadin-context-menu>\n * ```\n *\n * ### “vaadin-contextmenu” Gesture Event\n *\n * `vaadin-contextmenu` is a gesture event (a custom event),\n * which is dispatched after either `contextmenu` and long touch events.\n * This enables support for both mouse and touch environments in a uniform way.\n *\n * `<vaadin-context-menu>` opens the menu overlay on the `vaadin-contextmenu`\n * event by default.\n *\n * ### Menu Listener\n *\n * By default, the `<vaadin-context-menu>` element listens for the menu opening\n * event on itself. In order to have a context menu on your content, wrap\n * your content with the `<vaadin-context-menu>` element, and add a template\n * element with a menu. Example:\n *\n * ```html\n * <vaadin-context-menu>\n *   <template>\n *     <vaadin-list-box>\n *       <vaadin-item>First menu item</vaadin-item>\n *       <vaadin-item>Second menu item</vaadin-item>\n *     </vaadin-list-box>\n *   </template>\n *\n *   <p>This paragraph has the context menu provided in the above template.</p>\n *   <p>Another paragraph with the context menu.</p>\n * </vaadin-context-menu>\n * ```\n *\n * In case if you do not want to wrap the page content, you can listen for\n * events on an element outside the `<vaadin-context-menu>` by setting the\n * `listenOn` property:\n *\n * ```html\n * <vaadin-context-menu id=\"customListener\">\n *   <template>\n *     <vaadin-list-box>\n *       ...\n *     </vaadin-list-box>\n *   </template>\n * </vaadin-context-menu>\n *\n * <div id=\"menuListener\">The element that listens for the context menu.</div>\n * ```\n * ```javascript\n *   const contextMenu = document.querySelector('vaadin-context-menu#customListener');\n *   contextMenu.listenOn = document.querySelector('#menuListener');\n * ```\n *\n * ### Filtering Menu Targets\n *\n * By default, the listener element and all its descendants open the context\n * menu. You can filter the menu targets to a smaller set of elements inside\n * the listener element by setting the `selector` property.\n *\n * In the following example, only the elements matching `.has-menu` will open the context menu:\n *\n * ```html\n * <vaadin-context-menu selector=\".has-menu\">\n *   <template>\n *     <vaadin-list-box>\n *       ...\n *     </vaadin-list-box>\n *   </template>\n *\n *   <p class=\"has-menu\">This paragraph opens the context menu</p>\n *   <p>This paragraph does not open the context menu</p>\n * </vaadin-context-menu>\n * ```\n *\n * ### Menu Context\n *\n * You can bind to the following properties in the menu template:\n *\n * - `target` is the menu opening event target, which is the element that\n * the user has called the context menu for\n * - `detail` is the menu opening event detail\n *\n * In the following example, the menu item text is composed with the contents\n * of the element that opened the menu:\n *\n * ```html\n * <vaadin-context-menu selector=\"li\">\n *   <template>\n *     <vaadin-list-box>\n *       <vaadin-item>The menu target: [[target.textContent]]</vaadin-item>\n *     </vaadin-list-box>\n *   </template>\n *\n *   <ul>\n *     <li>Foo</li>\n *     <li>Bar</li>\n *     <li>Baz</li>\n *   </ul>\n * </vaadin-context-menu>\n * ```\n *\n * ### Styling\n *\n * `<vaadin-context-menu>` uses `<vaadin-context-menu-overlay>` internal\n * themable component as the actual visible context menu overlay. See\n * See [`<vaadin-overlay>` documentation](https://github.com/vaadin/vaadin-overlay/blob/master/src/vaadin-overlay.html)\n * for `<vaadin-context-menu-overlay>` parts.\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * Note: the `theme` attribute value set on `<vaadin-context-menu>` is\n * propagated to the internal `<vaadin-context-menu-overlay>` component.\n * In case of using nested menu items, the `theme` attribute is also propagated\n * to internal `vaadin-context-menu-list-box` and `vaadin-context-menu-item`'s.\n *\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\n * @fires {CustomEvent} item-selected - Fired when an item is selected when the context menu is populated using the `items` API.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemePropertyMixin\n * @mixes ItemsMixin\n * @mixes GestureEventListeners\n */\nclass ContextMenuElement extends ElementMixin(ThemePropertyMixin(ItemsMixin(GestureEventListeners(PolymerElement)))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n      </style>\n\n      <slot id=\"slot\"></slot>\n\n      <vaadin-device-detector phone=\"{{_phone}}\" touch=\"{{_touch}}\"></vaadin-device-detector>\n\n      <vaadin-context-menu-overlay\n        id=\"overlay\"\n        on-opened-changed=\"_onOverlayOpened\"\n        on-vaadin-overlay-open=\"_onVaadinOverlayOpen\"\n        with-backdrop=\"[[_phone]]\"\n        phone$=\"[[_phone]]\"\n        model=\"[[_context]]\"\n        theme$=\"[[theme]]\"\n      >\n      </vaadin-context-menu-overlay>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-context-menu';\n  }\n\n  static get version() {\n    return '5.0.0';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * CSS selector that can be used to target any child element\n       * of the context menu to listen for `openOn` events.\n       */\n      selector: {\n        type: String\n      },\n\n      /**\n       * True if the overlay is currently displayed.\n       * @type {boolean}\n       */\n      opened: {\n        type: Boolean,\n        value: false,\n        notify: true,\n        readOnly: true\n      },\n\n      /**\n       * Event name to listen for opening the context menu.\n       * @attr {string} open-on\n       * @type {string}\n       */\n      openOn: {\n        type: String,\n        value: 'vaadin-contextmenu'\n      },\n\n      /**\n       * The target element that's listened to for context menu opening events.\n       * By default the vaadin-context-menu listens to the target's `vaadin-contextmenu`\n       * events.\n       * @type {!HTMLElement}\n       * @default self\n       */\n      listenOn: {\n        type: Object,\n        value: function () {\n          return this;\n        }\n      },\n\n      /**\n       * Event name to listen for closing the context menu.\n       * @attr {string} close-on\n       * @type {string}\n       */\n      closeOn: {\n        type: String,\n        value: 'click',\n        observer: '_closeOnChanged'\n      },\n\n      /**\n       * Custom function for rendering the content of the menu overlay.\n       * Receives three arguments:\n       *\n       * - `root` The root container DOM element. Append your content to it.\n       * - `contextMenu` The reference to the `<vaadin-context-menu>` element.\n       * - `context` The object with the menu context, contains:\n       *   - `context.target`  the target of the menu opening event,\n       *   - `context.detail` the menu opening event detail.\n       * @type {ContextMenuRenderer | undefined}\n       */\n      renderer: {\n        type: Function\n      },\n\n      /** @private */\n      _context: Object,\n\n      /** @private */\n      _boundClose: Object,\n\n      /** @private */\n      _boundOpen: Object,\n\n      /**\n       * @type {HTMLTemplateElement}\n       * @private\n       */\n      _contentTemplate: Object,\n\n      /** @private */\n      _oldTemplate: Object,\n\n      /** @private */\n      _oldRenderer: Object,\n\n      /** @private */\n      _touch: Boolean\n    };\n  }\n\n  static get observers() {\n    return [\n      '_openedChanged(opened)',\n      '_contextChanged(_context, _instance)',\n      '_targetOrOpenOnChanged(listenOn, openOn)',\n      '_templateOrRendererChanged(_contentTemplate, renderer, _context, items)'\n    ];\n  }\n\n  constructor() {\n    super();\n    this._boundOpen = this.open.bind(this);\n    this._boundClose = this.close.bind(this);\n    this._boundOnGlobalContextMenu = this._onGlobalContextMenu.bind(this);\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.__boundOnScroll = this.__onScroll.bind(this);\n    window.addEventListener('scroll', this.__boundOnScroll, true);\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    window.removeEventListener('scroll', this.__boundOnScroll, true);\n    this.close();\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this._observer = new FlattenedNodesObserver(this, (info) => {\n      this._setTemplateFromNodes(info.addedNodes);\n    });\n  }\n\n  /**\n   * @param {!Array<!Node>} nodes\n   * @private\n   */\n  _setTemplateFromNodes(nodes) {\n    this._contentTemplate =\n      nodes.filter((node) => node.localName && node.localName === 'template')[0] || this._contentTemplate;\n  }\n\n  /**\n   * Runs before overlay is fully rendered\n   * @private\n   */\n  _onOverlayOpened(e) {\n    this._setOpened(e.detail.value);\n    this.__alignOverlayPosition();\n  }\n\n  /**\n   * Runs after overlay is fully rendered\n   * @private\n   */\n  _onVaadinOverlayOpen() {\n    this.__alignOverlayPosition();\n    this.$.overlay.style.opacity = '';\n    this.__forwardFocus();\n  }\n\n  /** @private */\n  _targetOrOpenOnChanged(listenOn, openOn) {\n    if (this._oldListenOn && this._oldOpenOn) {\n      this._unlisten(this._oldListenOn, this._oldOpenOn, this._boundOpen);\n\n      this._oldListenOn.style.webkitTouchCallout = '';\n      this._oldListenOn.style.webkitUserSelect = '';\n      this._oldListenOn.style.userSelect = '';\n\n      this._oldListenOn = null;\n      this._oldOpenOn = null;\n    }\n\n    if (listenOn && openOn) {\n      this._listen(listenOn, openOn, this._boundOpen);\n\n      this._oldListenOn = listenOn;\n      this._oldOpenOn = openOn;\n    }\n  }\n\n  /** @private */\n  _setListenOnUserSelect(value) {\n    // note: these styles don't seem to work in Firefox on iOS.\n    this.listenOn.style.webkitTouchCallout = value;\n    this.listenOn.style.webkitUserSelect = value; // Chrome, Safari, Firefox\n    this.listenOn.style.userSelect = value;\n\n    // note: because user-selection is disabled on the overlay\n    // before opening the menu the text could be already selected\n    // so we need to clear that selection\n    document.getSelection().removeAllRanges();\n  }\n\n  /** @private */\n  _closeOnChanged(closeOn, oldCloseOn) {\n    // Listen on this.$.overlay.root to workaround issue on\n    //  ShadyDOM polyfill: https://github.com/webcomponents/shadydom/issues/159\n\n    // Outside click event from overlay\n    const evtOverlay = 'vaadin-overlay-outside-click';\n\n    if (oldCloseOn) {\n      this._unlisten(this.$.overlay, oldCloseOn, this._boundClose);\n      this._unlisten(this.$.overlay.root, oldCloseOn, this._boundClose);\n    }\n    if (closeOn) {\n      this._listen(this.$.overlay, closeOn, this._boundClose);\n      this._listen(this.$.overlay.root, closeOn, this._boundClose);\n      this._unlisten(this.$.overlay, evtOverlay, this._preventDefault);\n    } else {\n      this._listen(this.$.overlay, evtOverlay, this._preventDefault);\n    }\n  }\n\n  /** @private */\n  _preventDefault(e) {\n    e.preventDefault();\n  }\n\n  /** @private */\n  _openedChanged(opened) {\n    if (opened) {\n      if (!this._instance) {\n        this.$.overlay.template = this.querySelector('template');\n        this._instance = this.$.overlay._instance;\n      }\n      document.documentElement.addEventListener('contextmenu', this._boundOnGlobalContextMenu, true);\n      this._setListenOnUserSelect('none');\n    } else {\n      document.documentElement.removeEventListener('contextmenu', this._boundOnGlobalContextMenu, true);\n      this._setListenOnUserSelect('');\n    }\n\n    // Has to be set after instance has been created\n    this.$.overlay.opened = opened;\n  }\n\n  /**\n   * Manually invoke existing renderer.\n   */\n  render() {\n    this.$.overlay.render();\n  }\n\n  /** @private */\n  _removeNewRendererOrTemplate(template, oldTemplate, renderer, oldRenderer) {\n    if (template !== oldTemplate) {\n      this._contentTemplate = undefined;\n    } else if (renderer !== oldRenderer) {\n      this.renderer = undefined;\n    }\n  }\n\n  /** @private */\n  _templateOrRendererChanged(template, renderer, context, items) {\n    if (template && renderer) {\n      this._removeNewRendererOrTemplate(template, this._oldTemplate, renderer, this._oldRenderer);\n      throw new Error('You should only use either a renderer or a template for context-menu content');\n    }\n\n    this._oldTemplate = template;\n    this._oldRenderer = renderer;\n\n    if (items) {\n      if (template || renderer) {\n        throw new Error('The items API cannot be used together with a template/renderer');\n      }\n      if (this.closeOn === 'click') {\n        this.closeOn = '';\n      }\n\n      renderer = this.__itemsRenderer;\n    }\n    if (renderer && context) {\n      this.$.overlay.setProperties({ owner: this, renderer: renderer });\n    }\n  }\n\n  /** @private */\n  _contextChanged(context, instance) {\n    if (context === undefined || instance === undefined) {\n      return;\n    }\n    instance.detail = context.detail;\n    instance.target = context.target;\n  }\n\n  /**\n   * Closes the overlay.\n   */\n  close() {\n    this._setOpened(false);\n  }\n\n  /** @private */\n  _contextTarget(e) {\n    if (this.selector) {\n      const targets = this.listenOn.querySelectorAll(this.selector);\n\n      return Array.prototype.filter.call(targets, (el) => {\n        return e.composedPath().indexOf(el) > -1;\n      })[0];\n    } else {\n      return e.target;\n    }\n  }\n\n  /**\n   * Opens the overlay.\n   * @param {!Event | undefined} e used as the context for the menu. Overlay coordinates are taken from this event.\n   */\n  open(e) {\n    if (e && !this.opened) {\n      this._context = {\n        detail: e.detail,\n        target: this._contextTarget(e)\n      };\n\n      if (this._context.target) {\n        this._preventDefault(e);\n        e.stopPropagation();\n\n        // Used in alignment which is delayed until overlay is rendered\n        this.__x = this._getEventCoordinate(e, 'x');\n        this.__pageXOffset = window.pageXOffset;\n\n        this.__y = this._getEventCoordinate(e, 'y');\n        this.__pageYOffset = window.pageYOffset;\n\n        this.$.overlay.style.opacity = '0';\n        this._setOpened(true);\n      }\n    }\n  }\n\n  /** @private */\n  __onScroll() {\n    if (!this.opened) {\n      return;\n    }\n\n    const yDiff = window.pageYOffset - this.__pageYOffset;\n    const xDiff = window.pageXOffset - this.__pageXOffset;\n\n    this.__adjustPosition('left', -xDiff);\n    this.__adjustPosition('right', xDiff);\n\n    this.__adjustPosition('top', -yDiff);\n    this.__adjustPosition('bottom', yDiff);\n\n    this.__pageYOffset += yDiff;\n    this.__pageXOffset += xDiff;\n  }\n\n  /** @private */\n  __adjustPosition(coord, diff) {\n    const overlay = this.$.overlay;\n    const style = overlay.style;\n\n    style[coord] = (parseInt(style[coord]) || 0) + diff + 'px';\n  }\n\n  /** @private */\n  __alignOverlayPosition() {\n    const overlay = this.$.overlay;\n    const style = overlay.style;\n\n    // Reset all properties before measuring\n    ['top', 'right', 'bottom', 'left'].forEach((prop) => style.removeProperty(prop));\n    ['right-aligned', 'end-aligned', 'bottom-aligned'].forEach((attr) => overlay.removeAttribute(attr));\n\n    // Maximum x and y values are imposed by content size and overlay limits.\n    const { xMax, xMin, yMax, left, right, top, width } = overlay.getBoundaries();\n    // Reuse saved x and y event values, in order to this method be used async\n    // in the `vaadin-overlay-change` which guarantees that overlay is ready\n    let x = this.__x || (!this.__isRTL ? left : right);\n    const y = this.__y || top;\n\n    // Select one overlay corner and move to the event x/y position.\n    // Then set styling attrs for flex-aligning the content appropriately.\n    const wdthVport = document.documentElement.clientWidth;\n    const hghtVport = document.documentElement.clientHeight;\n\n    // Align to the parent menu overlay, if any.\n    const parent = overlay.parentOverlay;\n    let alignedToParent = false;\n    let parentContentRect;\n    if (parent) {\n      parentContentRect = parent.$.overlay.getBoundingClientRect();\n      if (parent.hasAttribute('right-aligned') || parent.hasAttribute('end-aligned')) {\n        const parentStyle = getComputedStyle(parent);\n        const getPadding = (el, direction) => {\n          return parseFloat(getComputedStyle(el.$.content)['padding' + direction]);\n        };\n        const dimensionToSet = parseFloat(parentStyle[this.__isRTL ? 'left' : 'right']) + parentContentRect.width;\n        const padding = getPadding(parent, 'Left') + getPadding(overlay, 'Right');\n\n        // Preserve end-aligned, if possible.\n        if (wdthVport - (dimensionToSet - padding) > width) {\n          this._setEndAligned(overlay);\n          style[this.__isRTL ? 'left' : 'right'] = dimensionToSet + 'px';\n          alignedToParent = true;\n        }\n      } else if (x < parentContentRect.x) {\n        // Check if sub menu opens on the left side and the parent menu is not right aligned.\n        // If so, use actual width of the submenu content instead of the parent menu content.\n        x = x - (width - parentContentRect.width);\n      }\n    }\n\n    if (!alignedToParent) {\n      if (!this.__isRTL) {\n        // Sub-menu is displayed in the right side of root menu\n        if ((x < wdthVport / 2 || x < xMax) && !parent) {\n          style.left = x + 'px';\n        } else if (parent && wdthVport - parentContentRect.width - parentContentRect.left >= parentContentRect.width) {\n          // Sub-menu is displayed in the right side of root menu If it is nested menu\n          style.left = parentContentRect.left + parentContentRect.width + 'px';\n        } else if (parent) {\n          // Sub-menu is displayed in the left side of root menu If it is nested menu\n          style.right = 'auto';\n          style.left =\n            Math.max(\n              overlay.getBoundingClientRect().left,\n              parentContentRect.left - overlay.getBoundingClientRect().width\n            ) + 'px';\n          this._setEndAligned(overlay);\n        } else {\n          // Sub-menu is displayed in the left side of root menu\n          style.right = Math.max(0, wdthVport - x) + 'px';\n          this._setEndAligned(overlay);\n        }\n      } else {\n        // Sub-menu is displayed in the left side of root menu\n        if ((x > wdthVport / 2 || x > xMin) && !parent) {\n          style.right = Math.max(0, wdthVport - x) + 'px';\n        } else if (parent && parentContentRect.left >= parentContentRect.width) {\n          // Sub-menu is displayed in the left side of root menu If it is nested menu\n          style.right = wdthVport - parentContentRect.right + parentContentRect.width + 'px';\n        } else if (parent) {\n          // Sub-menu is displayed in the right side of root menu If it is nested menu\n          style.right = 'auto';\n          style.left =\n            Math.max(\n              overlay.getBoundingClientRect().left - overlay.getBoundingClientRect().width,\n              parentContentRect.right\n            ) + 'px';\n          this._setEndAligned(overlay);\n        } else {\n          // Sub-menu is displayed in the left side of root menu\n          style.left = x + 'px';\n          this._setEndAligned(overlay);\n        }\n      }\n    }\n    if (y < hghtVport / 2 || y < yMax) {\n      style.top = y + 'px';\n    } else {\n      style.bottom = Math.max(0, hghtVport - y) + 'px';\n      overlay.setAttribute('bottom-aligned', '');\n    }\n  }\n\n  /** @private */\n  _setEndAligned(element) {\n    element.setAttribute('end-aligned', '');\n    if (!this.__isRTL) {\n      element.setAttribute('right-aligned', '');\n    }\n  }\n\n  /** @private */\n  _getEventCoordinate(event, coord) {\n    if (event.detail instanceof Object) {\n      if (event.detail[coord]) {\n        // Polymer gesture events, get coordinate from detail\n        return event.detail[coord];\n      } else if (event.detail.sourceEvent) {\n        // Unwrap detailed event\n        return this._getEventCoordinate(event.detail.sourceEvent, coord);\n      }\n    } else {\n      const prop = 'client' + coord.toUpperCase();\n      const position = event.changedTouches ? event.changedTouches[0][prop] : event[prop];\n\n      if (position === 0) {\n        // Native keyboard event\n        const rect = event.target.getBoundingClientRect();\n        return coord === 'x' ? rect.left : rect.top + rect.height;\n      } else {\n        // Native mouse or touch event\n        return position;\n      }\n    }\n  }\n\n  /** @private */\n  _listen(node, evType, handler) {\n    if (gestures[evType]) {\n      addListener(node, evType, handler);\n    } else {\n      node.addEventListener(evType, handler);\n    }\n  }\n\n  /** @private */\n  _unlisten(node, evType, handler) {\n    if (gestures[evType]) {\n      removeListener(node, evType, handler);\n    } else {\n      node.removeEventListener(evType, handler);\n    }\n  }\n\n  /** @private */\n  _onGlobalContextMenu(e) {\n    if (!e.shiftKey) {\n      e.preventDefault();\n      this.close();\n    }\n  }\n\n  /**\n   * Fired when an item is selected when the context menu is populated using the `items` API.\n   *\n   * @event item-selected\n   * @param {Object} detail\n   * @param {Object} detail.value the selected menu item\n   */\n}\n\ncustomElements.define(ContextMenuElement.is, ContextMenuElement);\nexport { ContextMenuElement };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-context-menu@5.0.0/node_modules/@vaadin/vaadin-context-menu/src/vaadin-contextmenu-items-mixin.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { flush } from '@polymer/polymer/lib/utils/flush.js';\nimport { ItemElement } from '@vaadin/vaadin-item/src/vaadin-item.js';\nimport { ListBoxElement } from '@vaadin/vaadin-list-box/src/vaadin-list-box.js';\n\n/**\n * The vaadin-context-menu-item element.\n *\n * @extends ItemElement\n */\nclass ContextMenuItemElement extends ItemElement {\n  static get is() {\n    return 'vaadin-context-menu-item';\n  }\n}\n\ncustomElements.define(ContextMenuItemElement.is, ContextMenuItemElement);\n\n/**\n * The vaadin-context-menu-list-box element.\n *\n * @extends ListBoxElement\n */\nclass ContextMenuListBoxElement extends ListBoxElement {\n  static get is() {\n    return 'vaadin-context-menu-list-box';\n  }\n}\n\ncustomElements.define(ContextMenuListBoxElement.is, ContextMenuListBoxElement);\n\n/**\n * @polymerMixin\n */\nexport const ItemsMixin = (superClass) =>\n  class ItemsMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * @typedef ContextMenuItem\n         * @type {object}\n         * @property {string} text - Text to be set as the menu item component's textContent\n         * @property {union: string | object} component - The component to represent the item.\n         * Either a tagName or an element instance. Defaults to \"vaadin-context-menu-item\".\n         * @property {boolean} disabled - If true, the item is disabled and cannot be selected\n         * @property {boolean} checked - If true, the item shows a checkmark next to it\n         * @property {MenuItem[]} children - Array of child menu items\n         */\n\n        /**\n         * Defines a (hierarchical) menu structure for the component.\n         * If a menu item has a non-empty `children` set, a sub-menu with the child items is opened\n         * next to the parent menu on mouseover, tap or a right arrow keypress.\n         *\n         * The items API can't be used together with a renderer or a template!\n         *\n         * #### Example\n         *\n         * ```javascript\n         * contextMenu.items = [\n         *   {text: 'Menu Item 1', children:\n         *     [\n         *       {text: 'Menu Item 1-1', checked: true},\n         *       {text: 'Menu Item 1-2'}\n         *     ]\n         *   },\n         *   {component: 'hr'},\n         *   {text: 'Menu Item 2', children:\n         *     [\n         *       {text: 'Menu Item 2-1'},\n         *       {text: 'Menu Item 2-2', disabled: true}\n         *     ]\n         *   },\n         *   {text: 'Menu Item 3', disabled: true}\n         * ];\n         * ```\n         *\n         * @type {!Array<!ContextMenuItem> | undefined}\n         *\n         *\n         * ### Styling\n         *\n         * The `<vaadin-context-menu-item>` sub-menu elements have the following additional state attributes on top of\n         * the built-in `<vaadin-item>` state attributes (see `<vaadin-item>` documentation for full listing).\n         *\n         * Part name | Attribute | Description\n         * ----------------|----------------|----------------\n         * `:host` | expanded | Expanded parent item\n         */\n        items: Array\n      };\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      // Overlay's outside click listener doesn't work with modeless\n      // overlays (submenus) so we need additional logic for it\n      this.__itemsOutsideClickListener = (e) => {\n        if (!e.composedPath().filter((el) => el.localName === 'vaadin-context-menu-overlay')[0]) {\n          this.dispatchEvent(new CustomEvent('items-outside-click'));\n        }\n      };\n      this.addEventListener('items-outside-click', () => this.items && this.close());\n    }\n\n    /** @protected */\n    connectedCallback() {\n      super.connectedCallback();\n      // Firefox leaks click to document on contextmenu even if prevented\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=990614\n      document.documentElement.addEventListener('click', this.__itemsOutsideClickListener);\n    }\n\n    /** @protected */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n      document.documentElement.removeEventListener('click', this.__itemsOutsideClickListener);\n    }\n\n    /**\n     * @return {boolean}\n     * @protected\n     */\n    get __isRTL() {\n      return this.getAttribute('dir') === 'rtl';\n    }\n\n    /** @protected */\n    __forwardFocus() {\n      const overlay = this.$.overlay;\n      const child = overlay.getFirstChild();\n      // if parent item is not focused, do not focus submenu\n      if (overlay.parentOverlay) {\n        const parent = overlay.parentOverlay.querySelector('[expanded]');\n        if (parent && parent.hasAttribute('focused') && child) {\n          child.focus();\n        } else {\n          overlay.$.overlay.focus();\n        }\n      } else if (child) {\n        child.focus();\n      }\n    }\n\n    /** @private */\n    __openSubMenu(subMenu, itemElement) {\n      subMenu.items = itemElement._item.children;\n      subMenu.listenOn = itemElement;\n\n      const itemRect = itemElement.getBoundingClientRect();\n\n      const content = subMenu.$.overlay.$.content;\n      const style = getComputedStyle(content);\n      const parent = this.$.overlay;\n      const y = parent.hasAttribute('bottom-aligned')\n        ? itemRect.bottom + parseFloat(style.paddingBottom)\n        : itemRect.top - parseFloat(style.paddingTop);\n\n      // Store the reference to align based on parent overlay coordinates\n      subMenu.$.overlay._setParentOverlay(parent);\n\n      // Set theme attribute from parent element\n      if (parent.theme) {\n        subMenu.setAttribute('theme', parent.theme);\n      } else {\n        subMenu.removeAttribute('theme');\n      }\n\n      let x;\n      content.style.minWidth = '';\n      if (document.documentElement.clientWidth - itemRect.right > itemRect.width) {\n        // There's room on the right side\n        x = itemRect.right;\n      } else {\n        // Open on the left side\n        x = itemRect.left - itemRect.width;\n        // Make sure there's no gaps between the menus\n        content.style.minWidth = parent.$.content.clientWidth + 'px';\n      }\n      x = Math.max(x, 0);\n\n      itemElement.dispatchEvent(\n        new CustomEvent('opensubmenu', {\n          detail: {\n            x,\n            y,\n            children: itemElement._item.children\n          }\n        })\n      );\n    }\n\n    /**\n     * @param {!HTMLElement} root\n     * @param {!ContextMenuElement} menu\n     * @param {!ContextMenuRendererContext} context\n     * @protected\n     */\n    __itemsRenderer(root, menu, context) {\n      this.__initMenu(root, menu);\n\n      const subMenu = root.querySelector(this.constructor.is);\n      subMenu.closeOn = menu.closeOn;\n\n      const listBox = root.querySelector('vaadin-context-menu-list-box');\n\n      listBox.innerHTML = '';\n\n      const items = Array.from(context.detail.children || menu.items);\n\n      items.forEach((item) => {\n        let component;\n        if (item.component instanceof HTMLElement) {\n          component = item.component;\n        } else {\n          component = document.createElement(item.component || 'vaadin-context-menu-item');\n        }\n\n        if (component instanceof ItemElement) {\n          component.setAttribute('role', 'menuitem');\n          component.classList.add('vaadin-menu-item');\n        } else if (component.localName === 'hr') {\n          component.setAttribute('role', 'separator');\n        }\n        this.theme && component.setAttribute('theme', this.theme);\n\n        component._item = item;\n\n        if (item.text) {\n          component.textContent = item.text;\n        }\n\n        this.__toggleMenuComponentAttribute(component, 'menu-item-checked', item.checked);\n        this.__toggleMenuComponentAttribute(component, 'disabled', item.disabled);\n\n        component.setAttribute('aria-haspopup', 'false');\n        component.classList.remove('vaadin-context-menu-parent-item');\n        if (item.children && item.children.length) {\n          component.classList.add('vaadin-context-menu-parent-item');\n          component.setAttribute('aria-haspopup', 'true');\n          component.setAttribute('aria-expanded', 'false');\n          component.removeAttribute('expanded');\n        }\n\n        listBox.appendChild(component);\n      });\n    }\n\n    /** @private */\n    __toggleMenuComponentAttribute(component, attribute, on) {\n      if (on) {\n        component.setAttribute(attribute, '');\n        component['__has-' + attribute] = true;\n      } else if (component['__has-' + attribute]) {\n        component.removeAttribute(attribute);\n        component['__has-' + attribute] = false;\n      }\n    }\n\n    /** @private */\n    __initMenu(root, menu) {\n      if (!root.firstElementChild) {\n        const is = this.constructor.is;\n        root.innerHTML = `\n        <vaadin-context-menu-list-box></vaadin-context-menu-list-box>\n        <${is} hidden></${is}>\n      `;\n        flush();\n        const listBox = root.querySelector('vaadin-context-menu-list-box');\n        this.theme && listBox.setAttribute('theme', this.theme);\n        listBox.classList.add('vaadin-menu-list-box');\n        requestAnimationFrame(() => listBox.setAttribute('role', 'menu'));\n\n        const subMenu = root.querySelector(is);\n        subMenu.$.overlay.modeless = true;\n        subMenu.openOn = 'opensubmenu';\n\n        menu.addEventListener('opened-changed', (e) => !e.detail.value && subMenu.close());\n        subMenu.addEventListener('opened-changed', (e) => {\n          if (!e.detail.value) {\n            const expandedItem = listBox.querySelector('[expanded]');\n            if (expandedItem) {\n              expandedItem.setAttribute('aria-expanded', 'false');\n              expandedItem.removeAttribute('expanded');\n            }\n          }\n        });\n\n        listBox.addEventListener('selected-changed', (e) => {\n          if (typeof e.detail.value === 'number') {\n            const item = e.target.items[e.detail.value]._item;\n            if (!item.children) {\n              const detail = { value: item };\n              menu.dispatchEvent(new CustomEvent('item-selected', { detail }));\n            }\n            listBox.selected = null;\n          }\n        });\n\n        subMenu.addEventListener('item-selected', (e) => {\n          menu.dispatchEvent(new CustomEvent('item-selected', { detail: e.detail }));\n        });\n\n        subMenu.addEventListener('close-all-menus', () => {\n          menu.dispatchEvent(new CustomEvent('close-all-menus'));\n        });\n        menu.addEventListener('close-all-menus', menu.close);\n        menu.addEventListener('item-selected', menu.close);\n        menu.$.overlay.$.backdrop.addEventListener('click', () => menu.close());\n\n        menu.$.overlay.addEventListener('keydown', (e) => {\n          const isRTL = this.__isRTL;\n          if ((!isRTL && e.keyCode === 37) || (isRTL && e.keyCode === 39)) {\n            menu.close();\n            menu.listenOn.focus();\n          } else if (e.keyCode === 27) {\n            menu.dispatchEvent(new CustomEvent('close-all-menus'));\n          }\n        });\n\n        requestAnimationFrame(() => (this.__openListenerActive = true));\n        const openSubMenu = (\n          e,\n          itemElement = e.composedPath().filter((e) => e.localName === 'vaadin-context-menu-item')[0]\n        ) => {\n          // Delay enabling the mouseover listener to avoid it from triggering on parent menu open\n          if (!this.__openListenerActive) {\n            return;\n          }\n\n          // Don't open sub-menus while the menu is still opening\n          if (menu.$.overlay.hasAttribute('opening')) {\n            requestAnimationFrame(() => openSubMenu(e, itemElement));\n            return;\n          }\n\n          if (itemElement) {\n            if (subMenu.items !== itemElement._item.children) {\n              subMenu.close();\n            }\n            if (!menu.opened) {\n              return;\n            }\n            if (itemElement._item.children && itemElement._item.children.length) {\n              itemElement.setAttribute('aria-expanded', 'true');\n              itemElement.setAttribute('expanded', '');\n              this.__openSubMenu(subMenu, itemElement);\n            } else {\n              subMenu.listenOn.focus();\n            }\n          }\n        };\n\n        menu.$.overlay.addEventListener('mouseover', openSubMenu);\n        menu.$.overlay.addEventListener('keydown', (e) => {\n          const isRTL = this.__isRTL;\n          const shouldOpenSubMenu =\n            (!isRTL && e.keyCode === 39) || (isRTL && e.keyCode === 37) || e.keyCode === 13 || e.keyCode === 32;\n\n          shouldOpenSubMenu && openSubMenu(e);\n        });\n      } else {\n        const listBox = root.querySelector('vaadin-context-menu-list-box');\n        if (this.theme) {\n          listBox.setAttribute('theme', this.theme);\n        } else {\n          listBox.removeAttribute('theme');\n        }\n      }\n    }\n  };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-context-menu@5.0.0/node_modules/@vaadin/vaadin-context-menu/src/vaadin-contextmenu-event.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { register, prevent } from '@polymer/polymer/lib/utils/gestures.js';\n\nregister({\n  name: 'vaadin-contextmenu',\n  deps: ['touchstart', 'touchmove', 'touchend', 'contextmenu'],\n  flow: {\n    start: ['touchstart', 'contextmenu'],\n    end: ['contextmenu']\n  },\n\n  emits: ['vaadin-contextmenu'],\n\n  info: {\n    sourceEvent: null,\n    _ios:\n      (/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream) ||\n      (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1)\n  },\n\n  reset: function () {\n    this.info.sourceEvent = null;\n    this._cancelTimer();\n    this.info.touchJob = null;\n    this.info.touchStartCoords = null;\n  },\n\n  _cancelTimer: function () {\n    if (this._timerId) {\n      clearTimeout(this._timerId);\n      delete this._fired;\n    }\n  },\n\n  touchstart: function (e) {\n    this.info.sourceEvent = e;\n    this.info.touchStartCoords = {\n      x: e.changedTouches[0].clientX,\n      y: e.changedTouches[0].clientY\n    };\n\n    // After timeout event is already retargeted to the parent element in case there is one.\n    // So we are assigning the target synchronously on event dispatched.\n    const t = e.composedPath()[0] || e.target;\n\n    this._timerId = setTimeout(() => {\n      const ct = e.changedTouches[0];\n      if (!e.shiftKey) {\n        if (this.info._ios) {\n          this._fired = true;\n          this.fire(t, ct.clientX, ct.clientY);\n        }\n\n        // needed to prevent any 'tap' gesture events from firing\n        // which could potentially cancel/close the overlay.\n        prevent('tap');\n      }\n    }, 500); // default setting for Android and iOS.\n  },\n\n  touchmove: function (e) {\n    const moveThreshold = 15;\n    const touchStartCoords = this.info.touchStartCoords;\n    if (\n      Math.abs(touchStartCoords.x - e.changedTouches[0].clientX) > moveThreshold ||\n      Math.abs(touchStartCoords.y - e.changedTouches[0].clientY) > moveThreshold\n    ) {\n      this._cancelTimer();\n    }\n  },\n\n  touchend: function (e) {\n    if (this._fired) {\n      e.preventDefault();\n    }\n    this._cancelTimer();\n  },\n\n  contextmenu: function (e) {\n    if (!e.shiftKey) {\n      this.info.sourceEvent = e;\n      this.fire(e.target, e.clientX, e.clientY);\n      prevent('tap');\n    }\n  },\n\n  fire: function (target, x, y) {\n    // NOTE(web-padawan): the code below is copied from `Polymer.Gestures._fire`,\n    // which is not exported from `gestures.js` module for Polymer 3.\n    const sourceEvent = this.info.sourceEvent;\n    const ev = new Event('vaadin-contextmenu', { bubbles: true, cancelable: true, composed: true });\n    ev.detail = { x, y, sourceEvent };\n    target.dispatchEvent(ev);\n    // forward `preventDefault` in a clean way\n    if (ev.defaultPrevented && sourceEvent && sourceEvent.preventDefault) {\n      sourceEvent.preventDefault();\n    }\n  }\n});\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-context-menu@5.0.0/node_modules/@vaadin/vaadin-context-menu/src/vaadin-device-detector.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport '@polymer/iron-media-query/iron-media-query.js';\n\n/**\n * Element for internal use only.\n *\n * @private\n */\nclass DeviceDetectorElement extends PolymerElement {\n  static get template() {\n    return html`<iron-media-query query=\"min-device-width: 750px\" query-matches=\"{{wide}}\"></iron-media-query>`;\n  }\n\n  static get is() {\n    return 'vaadin-device-detector';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * `true`, when running in a phone.\n       */\n      phone: {\n        type: Boolean,\n        computed: '_phone(wide, touch)',\n        notify: true\n      },\n\n      /**\n       * `true`, when running in a touch device.\n       * @default false\n       */\n      touch: {\n        type: Boolean,\n        notify: true,\n        value: () => this._touch()\n      },\n\n      /**\n       * `true`, when running in a tablet/desktop device.\n       */\n      wide: {\n        type: Boolean,\n        notify: true\n      }\n    };\n  }\n\n  static _touch() {\n    try {\n      document.createEvent('TouchEvent');\n      return true;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  _phone(wide, touch) {\n    return !wide && touch;\n  }\n}\n\ncustomElements.define(DeviceDetectorElement.is, DeviceDetectorElement);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-context-menu@5.0.0/node_modules/@vaadin/vaadin-context-menu/src/vaadin-context-menu-overlay.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport { OverlayElement } from '@vaadin/vaadin-overlay/src/vaadin-overlay.js';\n\nregisterStyles(\n  'vaadin-context-menu-overlay',\n  css`\n    :host {\n      align-items: flex-start;\n      justify-content: flex-start;\n    }\n\n    :host([right-aligned]),\n    :host([end-aligned]) {\n      align-items: flex-end;\n    }\n\n    :host([bottom-aligned]) {\n      justify-content: flex-end;\n    }\n\n    [part='overlay'] {\n      background-color: #fff;\n    }\n  `,\n  { moduleId: 'vaadin-context-menu-overlay-styles' }\n);\n\n/**\n * The overlay element.\n *\n * ### Styling\n *\n * See [`<vaadin-overlay>` documentation](https://github.com/vaadin/vaadin-overlay/blob/master/src/vaadin-overlay.html)\n * for `<vaadin-context-menu-overlay>` parts.\n *\n * #### Deprecated\n * `right-aligned` is deprecated in favor of `end-aligned`\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends PolymerElement\n * @private\n */\nclass ContextMenuOverlayElement extends OverlayElement {\n  static get is() {\n    return 'vaadin-context-menu-overlay';\n  }\n\n  static get properties() {\n    return {\n      instanceProps: {\n        type: Object,\n        value: () => {\n          return {\n            detail: true,\n            target: true\n          };\n        }\n      },\n\n      /**\n       * @protected\n       */\n      parentOverlay: {\n        type: Object,\n        readOnly: true\n      }\n    };\n  }\n\n  static get observers() {\n    return ['_themeChanged(theme)'];\n  }\n\n  ready() {\n    super.ready();\n\n    this.addEventListener('keydown', (e) => {\n      if (!e.defaultPrevented && e.composedPath()[0] === this.$.overlay && [38, 40].indexOf(e.keyCode) > -1) {\n        const child = this.getFirstChild();\n        if (child && Array.isArray(child.items) && child.items.length) {\n          e.preventDefault();\n          if (e.keyCode === 38) {\n            child.items[child.items.length - 1].focus();\n          } else {\n            child.focus();\n          }\n        }\n      }\n    });\n  }\n\n  getFirstChild() {\n    return this.content.querySelector(':not(style):not(slot)');\n  }\n\n  _themeChanged() {\n    this.close();\n  }\n\n  getBoundaries() {\n    // Measure actual overlay and content sizes\n    const overlayRect = this.getBoundingClientRect();\n    const contentRect = this.$.overlay.getBoundingClientRect();\n\n    // Maximum x and y values are imposed by content size and overlay limits.\n    let yMax = overlayRect.bottom - contentRect.height;\n\n    // Adjust constraints to ensure bottom-aligned applies to sub-menu.\n    const parent = this.parentOverlay;\n    if (parent && parent.hasAttribute('bottom-aligned')) {\n      const parentStyle = getComputedStyle(parent);\n      yMax = yMax - parseFloat(parentStyle.bottom) - parseFloat(parentStyle.height);\n    }\n\n    return {\n      xMax: overlayRect.right - contentRect.width,\n      xMin: overlayRect.left + contentRect.width,\n      yMax,\n      left: overlayRect.left,\n      right: overlayRect.right,\n      top: overlayRect.top,\n      width: contentRect.width\n    };\n  }\n}\n\ncustomElements.define(ContextMenuOverlayElement.is, ContextMenuOverlayElement);\n"
      }
     ]
    },
    {
     "id": 131,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-context-menu@5.0.0/node_modules/@vaadin/vaadin-context-menu/theme/lumo/vaadin-context-menu.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-context-menu@5.0.0/node_modules/@vaadin/vaadin-context-menu/theme/lumo/vaadin-context-menu.js",
       "source": "import './vaadin-context-menu-styles.js';\nimport '@vaadin/vaadin-item/theme/lumo/vaadin-item.js';\nimport '@vaadin/vaadin-list-box/theme/lumo/vaadin-list-box.js';\nimport '../../src/vaadin-context-menu.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-context-menu@5.0.0/node_modules/@vaadin/vaadin-context-menu/theme/lumo/vaadin-context-menu-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/menu-overlay.js';\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\n\nregisterStyles(\n  'vaadin-context-menu-overlay',\n  css`\n    :host([phone]) {\n      top: 0 !important;\n      right: 0 !important;\n      bottom: var(--vaadin-overlay-viewport-bottom) !important;\n      left: 0 !important;\n      align-items: stretch;\n      justify-content: flex-end;\n    }\n\n    /* TODO These style overrides should not be needed.\n       We should instead offer a way to have non-selectable items inside the context menu. */\n\n    :host {\n      --_lumo-list-box-item-selected-icon-display: none;\n      --_lumo-list-box-item-padding-left: calc(var(--lumo-space-m) + var(--lumo-border-radius) / 4);\n    }\n\n    [part='overlay'] {\n      outline: none;\n    }\n  `,\n  { include: ['lumo-menu-overlay'], moduleId: 'lumo-context-menu-overlay' }\n);\n\nregisterStyles(\n  'vaadin-context-menu-list-box',\n  css`\n    :host(.vaadin-menu-list-box) {\n      --_lumo-list-box-item-selected-icon-display: block;\n    }\n\n    /* Normal item */\n    [part='items'] ::slotted(.vaadin-menu-item) {\n      -webkit-tap-highlight-color: var(--lumo-primary-color-10pct);\n      cursor: default;\n    }\n\n    [part='items'] ::slotted(.vaadin-menu-item) {\n      outline: none;\n      border-radius: var(--lumo-border-radius);\n      padding-left: var(--_lumo-list-box-item-padding-left, calc(var(--lumo-border-radius) / 4));\n      padding-right: calc(var(--lumo-space-l) + var(--lumo-border-radius) / 4);\n    }\n\n    :host(.vaadin-menu-list-box) [part='items'] ::slotted(.vaadin-menu-item) {\n      padding-left: calc(var(--lumo-border-radius) / 4);\n      padding-right: calc(var(--lumo-space-l) + var(--lumo-border-radius) / 4);\n    }\n\n    /* Hovered item */\n    /* TODO a workaround until we have \"focus-follows-mouse\". After that, use the hover style for focus-ring as well */\n    [part='items'] ::slotted(.vaadin-menu-item:hover:not([disabled])),\n    [part='items'] ::slotted(.vaadin-menu-item[expanded]:not([disabled])) {\n      background-color: var(--lumo-primary-color-10pct);\n    }\n\n    /* RTL styles */\n    :host([dir='rtl'])[part='items'] ::slotted(.vaadin-menu-item) {\n      padding-left: calc(var(--lumo-space-l) + var(--lumo-border-radius) / 4);\n      padding-right: var(--_lumo-list-box-item-padding-left, calc(var(--lumo-border-radius) / 4));\n    }\n\n    :host([dir='rtl'].vaadin-menu-list-box) [part='items'] ::slotted(.vaadin-menu-item) {\n      padding-left: calc(var(--lumo-space-l) + var(--lumo-border-radius) / 4);\n      padding-right: calc(var(--lumo-border-radius) / 4);\n    }\n\n    /* Focused item */\n    @media (pointer: coarse) {\n      [part='items'] ::slotted(.vaadin-menu-item:hover:not([expanded]):not([disabled])) {\n        background-color: transparent;\n      }\n    }\n  `,\n  { moduleId: 'lumo-context-menu-list-box' }\n);\n\nregisterStyles(\n  'vaadin-context-menu-item',\n  css`\n    :host {\n      user-select: none;\n      -ms-user-select: none;\n      -webkit-user-select: none;\n    }\n\n    :host(.vaadin-menu-item[menu-item-checked])::before {\n      opacity: 1;\n    }\n\n    :host(.vaadin-menu-item.vaadin-context-menu-parent-item)::after {\n      font-family: lumo-icons;\n      font-size: var(--lumo-icon-size-xs);\n      content: var(--lumo-icons-angle-right);\n      color: var(--lumo-tertiary-text-color);\n    }\n\n    :host(:not([dir='rtl']).vaadin-menu-item.vaadin-context-menu-parent-item)::after {\n      margin-right: calc(var(--lumo-space-m) * -1);\n      padding-left: var(--lumo-space-m);\n    }\n\n    :host([expanded]) {\n      background-color: var(--lumo-primary-color-10pct);\n    }\n\n    /* RTL styles */\n    :host([dir='rtl'].vaadin-menu-item.vaadin-context-menu-parent-item)::after {\n      content: var(--lumo-icons-angle-left);\n      margin-left: calc(var(--lumo-space-m) * -1);\n      padding-right: var(--lumo-space-m);\n    }\n  `,\n  { moduleId: 'lumo-context-menu-item' }\n);\n"
      }
     ]
    },
    {
     "id": 142,
     "name": "../node_modules/.pnpm/@webcomponents+shadycss@1.11.0/node_modules/@webcomponents/shadycss/src/custom-style-interface.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@webcomponents+shadycss@1.11.0/node_modules/@webcomponents/shadycss/src/custom-style-interface.js",
       "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport documentWait from './document-wait.js';\n\n/**\n * @typedef {HTMLStyleElement | {getStyle: function():HTMLStyleElement}}\n */\nexport let CustomStyleProvider;\n\nconst SEEN_MARKER = '__seenByShadyCSS';\nconst CACHED_STYLE = '__shadyCSSCachedStyle';\n\n/** @type {?function(!HTMLStyleElement)} */\nlet transformFn = null;\n\n/** @type {?function()} */\nlet validateFn = null;\n\n/**\nThis interface is provided to add document-level <style> elements to ShadyCSS for processing.\nThese styles must be processed by ShadyCSS to simulate ShadowRoot upper-bound encapsulation from outside styles\nIn addition, these styles may also need to be processed for @apply rules and CSS Custom Properties\n\nTo add document-level styles to ShadyCSS, one can call `ShadyCSS.addDocumentStyle(styleElement)` or `ShadyCSS.addDocumentStyle({getStyle: () => styleElement})`\n\nIn addition, if the process used to discover document-level styles can be synchronously flushed, one should set `ShadyCSS.documentStyleFlush`.\nThis function will be called when calculating styles.\n\nAn example usage of the document-level styling api can be found in `examples/document-style-lib.js`\n\n@unrestricted\n*/\nexport default class CustomStyleInterface {\n  constructor() {\n    /** @type {!Array<!CustomStyleProvider>} */\n    this['customStyles'] = [];\n    this['enqueued'] = false;\n    // NOTE(dfreedm): use quotes here to prevent closure inlining to `function(){}`;\n    documentWait(() => {\n      if (window['ShadyCSS']['flushCustomStyles']) {\n        window['ShadyCSS']['flushCustomStyles']();\n      }\n    });\n  }\n  /**\n   * Queue a validation for new custom styles to batch style recalculations\n   */\n  enqueueDocumentValidation() {\n    if (this['enqueued'] || !validateFn) {\n      return;\n    }\n    this['enqueued'] = true;\n    documentWait(validateFn);\n  }\n  /**\n   * @param {!HTMLStyleElement} style\n   */\n  addCustomStyle(style) {\n    if (!style[SEEN_MARKER]) {\n      style[SEEN_MARKER] = true;\n      this['customStyles'].push(style);\n      this.enqueueDocumentValidation();\n    }\n  }\n  /**\n   * @param {!CustomStyleProvider} customStyle\n   * @return {HTMLStyleElement}\n   */\n  getStyleForCustomStyle(customStyle) {\n    if (customStyle[CACHED_STYLE]) {\n      return customStyle[CACHED_STYLE];\n    }\n    let style;\n    if (customStyle['getStyle']) {\n      style = customStyle['getStyle']();\n    } else {\n      style = customStyle;\n    }\n    return style;\n  }\n  /**\n   * @return {!Array<!CustomStyleProvider>}\n   */\n  processStyles() {\n    const cs = this['customStyles'];\n    for (let i = 0; i < cs.length; i++) {\n      const customStyle = cs[i];\n      if (customStyle[CACHED_STYLE]) {\n        continue;\n      }\n      const style = this.getStyleForCustomStyle(customStyle);\n      if (style) {\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        const styleToTransform = /** @type {!HTMLStyleElement} */ (style[\n          '__appliedElement'\n        ] || style);\n        if (transformFn) {\n          transformFn(styleToTransform);\n        }\n        customStyle[CACHED_STYLE] = styleToTransform;\n      }\n    }\n    return cs;\n  }\n}\n\n/* eslint-disable no-self-assign */\nCustomStyleInterface.prototype['addCustomStyle'] =\n  CustomStyleInterface.prototype.addCustomStyle;\nCustomStyleInterface.prototype['getStyleForCustomStyle'] =\n  CustomStyleInterface.prototype.getStyleForCustomStyle;\nCustomStyleInterface.prototype['processStyles'] =\n  CustomStyleInterface.prototype.processStyles;\n/* eslint-enable no-self-assign */\n\nObject.defineProperties(CustomStyleInterface.prototype, {\n  'transformCallback': {\n    /** @return {?function(!HTMLStyleElement)} */\n    get() {\n      return transformFn;\n    },\n    /** @param {?function(!HTMLStyleElement)} fn */\n    set(fn) {\n      transformFn = fn;\n    },\n  },\n  'validateCallback': {\n    /** @return {?function()} */\n    get() {\n      return validateFn;\n    },\n    /**\n     * @param {?function()} fn\n     * @this {CustomStyleInterface}\n     */\n    set(fn) {\n      let needsEnqueue = false;\n      if (!validateFn) {\n        needsEnqueue = true;\n      }\n      validateFn = fn;\n      if (needsEnqueue) {\n        this.enqueueDocumentValidation();\n      }\n    },\n  },\n});\n\n/** @typedef {{\n * customStyles: !Array<!CustomStyleProvider>,\n * addCustomStyle: function(!CustomStyleProvider),\n * getStyleForCustomStyle: function(!CustomStyleProvider): HTMLStyleElement,\n * findStyles: function(),\n * transformCallback: ?function(!HTMLStyleElement),\n * validateCallback: ?function()\n * }}\n */\nexport const CustomStyleInterfaceInterface = {};\n"
      },
      {
       "name": "../node_modules/.pnpm/@webcomponents+shadycss@1.11.0/node_modules/@webcomponents/shadycss/src/document-wait.js",
       "source": "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {Promise<void>} */\nlet readyPromise = null;\n\n/** @type {?function(?function())} */\nlet whenReady =\n  (window['HTMLImports'] && window['HTMLImports']['whenReady']) || null;\n\n/** @type {function()} */\nlet resolveFn;\n\n/**\n * @param {?function()} callback\n */\nexport default function documentWait(callback) {\n  requestAnimationFrame(function () {\n    if (whenReady) {\n      whenReady(callback);\n    } else {\n      if (!readyPromise) {\n        readyPromise = new Promise((resolve) => {\n          resolveFn = resolve;\n        });\n        if (document.readyState === 'complete') {\n          resolveFn();\n        } else {\n          document.addEventListener('readystatechange', () => {\n            if (document.readyState === 'complete') {\n              resolveFn();\n            }\n          });\n        }\n      }\n      readyPromise.then(function () {\n        callback && callback();\n      });\n    }\n  });\n}\n"
      }
     ]
    },
    {
     "id": 144,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/vaadin-grid-column.js",
     "source": "import './theme/lumo/vaadin-grid-column.js';\nexport * from './src/vaadin-grid-column.js';\n"
    },
    {
     "id": 154,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-dialog@2.5.2/node_modules/@vaadin/vaadin-dialog/theme/lumo/vaadin-dialog.js + 4 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-dialog@2.5.2/node_modules/@vaadin/vaadin-dialog/theme/lumo/vaadin-dialog.js",
       "source": "import './vaadin-dialog-styles.js';\nimport '../../src/vaadin-dialog.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-dialog@2.5.2/node_modules/@vaadin/vaadin-dialog/theme/lumo/vaadin-dialog-styles.js",
       "source": "import '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/overlay.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-dialog\" theme-for=\"vaadin-dialog-overlay\">\n  <template>\n    <style include=\"lumo-overlay\">\n      /* Optical centering */\n      :host::before,\n      :host::after {\n        content: \"\";\n        flex-basis: 0;\n        flex-grow: 1;\n      }\n\n      :host::after {\n        flex-grow: 1.1;\n      }\n\n      [part=\"overlay\"] {\n        box-shadow: 0 0 0 1px var(--lumo-shade-5pct), var(--lumo-box-shadow-xl);\n        background-image: none;\n        outline: none;\n        -webkit-tap-highlight-color: transparent;\n      }\n\n      [part=\"content\"] {\n        padding: var(--lumo-space-l);\n      }\n\n      /* Animations */\n\n      :host([opening]),\n      :host([closing]) {\n        animation: 0.25s lumo-overlay-dummy-animation;\n      }\n\n      :host([opening]) [part=\"overlay\"] {\n        animation: 0.12s 0.05s vaadin-dialog-enter cubic-bezier(.215, .61, .355, 1) both;\n      }\n\n      @keyframes vaadin-dialog-enter {\n        0% {\n          opacity: 0;\n          transform: scale(0.95);\n        }\n      }\n\n      :host([closing]) [part=\"overlay\"] {\n        animation: 0.1s 0.03s vaadin-dialog-exit cubic-bezier(.55, .055, .675, .19) both;\n      }\n\n      :host([closing]) [part=\"backdrop\"] {\n        animation-delay: 0.05s;\n      }\n\n      @keyframes vaadin-dialog-exit {\n        100% {\n          opacity: 0;\n          transform: scale(1.02);\n        }\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-dialog@2.5.2/node_modules/@vaadin/vaadin-dialog/src/vaadin-dialog.js",
       "source": "/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '@polymer/polymer/lib/utils/templatize.js';\nimport { OverlayElement } from '@vaadin/vaadin-overlay/src/vaadin-overlay.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { ThemePropertyMixin } from '@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js';\nimport { DialogDraggableMixin } from './vaadin-dialog-draggable-mixin.js';\nimport { DialogResizableMixin } from './vaadin-dialog-resizable-mixin.js';\nimport { IronResizableBehavior } from '@polymer/iron-resizable-behavior/iron-resizable-behavior.js';\nimport { mixinBehaviors } from '@polymer/polymer/lib/legacy/class.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"vaadin-dialog-overlay-styles\" theme-for=\"vaadin-dialog-overlay\">\n  <template>\n    <style>\n      /*\n        NOTE(platosha): Make some min-width to prevent collapsing of the content\n        taking the parent width, e. g., <vaadin-grid> and such.\n      */\n      [part=\"content\"] {\n        min-width: 12em; /* matches the default <vaadin-text-field> width */\n      }\n\n      :host([has-bounds-set]) [part=\"overlay\"] {\n        max-width: none;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\nlet memoizedTemplate;\n\n/**\n * The overlay element.\n *\n * ### Styling\n *\n * See [`<vaadin-overlay>` documentation](https://github.com/vaadin/vaadin-overlay/blob/master/src/vaadin-overlay.html)\n * for `<vaadin-dialog-overlay>` parts.\n *\n * @extends PolymerElement\n * @private\n */\nclass DialogOverlayElement extends mixinBehaviors(IronResizableBehavior, OverlayElement) {\n  static get is() {\n    return 'vaadin-dialog-overlay';\n  }\n\n  static get template() {\n    if (!memoizedTemplate) {\n      memoizedTemplate = super.template.cloneNode(true);\n      const contentPart = memoizedTemplate.content.querySelector('[part=\"content\"]');\n      const overlayPart = memoizedTemplate.content.querySelector('[part=\"overlay\"]');\n      const resizerContainer = document.createElement('div');\n      resizerContainer.id = 'resizerContainer';\n      resizerContainer.classList.add('resizer-container');\n      resizerContainer.appendChild(contentPart);\n      overlayPart.appendChild(resizerContainer);\n    }\n    return memoizedTemplate;\n  }\n\n  static get properties() {\n    return {\n      modeless: Boolean,\n\n      withBackdrop: Boolean\n    };\n  }\n}\n\ncustomElements.define(DialogOverlayElement.is, DialogOverlayElement);\n\n\n/**\n *\n * `<vaadin-dialog>` is a Web Component for creating customized modal dialogs. The content of the\n * dialog can be populated in two ways: imperatively by using renderer callback function and\n * declaratively by using Polymer's Templates.\n *\n * ### Rendering\n *\n * By default, the dialog uses the content provided by using the renderer callback function.\n *\n * The renderer function provides `root`, `dialog` arguments.\n * Generate DOM content, append it to the `root` element and control the state\n * of the host element by accessing `dialog`. Before generating new content,\n * users are able to check if there is already content in `root` for reusing it.\n *\n * ```html\n * <vaadin-dialog id=\"dialog\"></vaadin-dialog>\n * ```\n * ```js\n * const dialog = document.querySelector('#dialog');\n * dialog.renderer = function(root, dialog) {\n *   root.textContent = \"Sample dialog\";\n * };\n * ```\n *\n * Renderer is called on the opening of the dialog.\n * DOM generated during the renderer call can be reused\n * in the next renderer call and will be provided with the `root` argument.\n * On first call it will be empty.\n *\n * ### Polymer Templates\n *\n * Alternatively, the content can be provided with Polymer's Template.\n * Dialog finds the first child template and uses that in case renderer callback function\n * is not provided. You can also set a custom template using the `template` property.\n *\n * ```html\n * <vaadin-dialog opened>\n *   <template>\n *     Sample dialog\n *   </template>\n * </vaadin-dialog>\n * ```\n *\n * ### Styling\n *\n * See [`<vaadin-overlay>` documentation](https://github.com/vaadin/vaadin-overlay/blob/master/src/vaadin-overlay.html)\n * for `<vaadin-dialog-overlay>` parts.\n *\n * Note: the `theme` attribute value set on `<vaadin-dialog>` is\n * propagated to the internal `<vaadin-dialog-overlay>` component.\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends PolymerElement\n * @mixes ThemePropertyMixin\n * @mixes ElementMixin\n * @mixes DialogDraggableMixin\n * @mixes DialogResizableMixin\n * @demo demo/index.html\n */\nclass DialogElement extends\n  ThemePropertyMixin(\n    ElementMixin(\n      DialogDraggableMixin(\n        DialogResizableMixin(\n          PolymerElement)))) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: none;\n      }\n    </style>\n\n    <vaadin-dialog-overlay id=\"overlay\" on-opened-changed=\"_onOverlayOpened\" on-mousedown=\"_bringOverlayToFront\" on-touchstart=\"_bringOverlayToFront\" theme\\$=\"[[theme]]\" modeless=\"[[modeless]]\" with-backdrop=\"[[!modeless]]\" resizable\\$=\"[[resizable]]\" focus-trap=\"\">\n    </vaadin-dialog-overlay>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-dialog';\n  }\n\n  static get version() {\n    return '2.5.2';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * True if the overlay is currently displayed.\n       * @type {boolean}\n       */\n      opened: {\n        type: Boolean,\n        value: false,\n        notify: true\n      },\n\n      /**\n       * Set to true to disable closing dialog on outside click\n       * @attr {boolean} no-close-on-outside-click\n       * @type {boolean}\n       */\n      noCloseOnOutsideClick: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Set to true to disable closing dialog on Escape press\n       * @attr {boolean} no-close-on-esc\n       * @type {boolean}\n       */\n      noCloseOnEsc: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Set the `aria-label` attribute for assistive technologies like\n       * screen readers. An `undefined` value for this property (the\n       * default) means that the `aria-label` attribute is not present at\n       * all.\n       */\n      ariaLabel: {\n        type: String\n      },\n\n      /**\n       * @type {HTMLTemplateElement | undefined}\n       * @protected\n       */\n      _contentTemplate: Object,\n\n      /**\n       * Custom function for rendering the content of the dialog.\n       * Receives two arguments:\n       *\n       * - `root` The root container DOM element. Append your content to it.\n       * - `dialog` The reference to the `<vaadin-dialog>` element.\n       * @type {DialogRenderer | undefined}\n       */\n      renderer: Function,\n\n      /**\n       * Set to true to remove backdrop and allow click events on background elements.\n       * @type {boolean}\n       */\n      modeless: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Set to true to enable repositioning the dialog by clicking and dragging.\n       *\n       * By default, only the overlay area can be used to drag the element. But,\n       * a child element can be marked as a draggable area by adding a\n       * \"`draggable`\" class to it, this will by default make all of its children draggable also.\n       * If you want a child element to be draggable\n       * but still have its children non-draggable (by default), mark it with\n       * \"`draggable-leaf-only`\" class name.\n       *\n       * @type {boolean}\n       */\n      draggable: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * Set to true to enable resizing the dialog by dragging the corners and edges.\n       * @type {boolean}\n       */\n      resizable: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /** @private */\n      _oldTemplate: Object,\n\n      /** @private */\n      _oldRenderer: Object\n    };\n  }\n\n  static get observers() {\n    return [\n      '_openedChanged(opened)',\n      '_ariaLabelChanged(ariaLabel)',\n      '_templateOrRendererChanged(_contentTemplate, renderer)'\n    ];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.$.overlay.setAttribute('role', 'dialog');\n    this.$.overlay.addEventListener('vaadin-overlay-outside-click', this._handleOutsideClick.bind(this));\n    this.$.overlay.addEventListener('vaadin-overlay-escape-press', this._handleEscPress.bind(this));\n\n    this._observer = new FlattenedNodesObserver(this, info => {\n      this._setTemplateFromNodes(info.addedNodes);\n    });\n  }\n\n  /**\n   * @param {!Array<!Node>} nodes\n   * @protected\n   */\n  _setTemplateFromNodes(nodes) {\n    this._contentTemplate = nodes.filter(node => node.localName && node.localName === 'template')[0] || this._contentTemplate;\n  }\n\n  /** @private */\n  _removeNewRendererOrTemplate(template, oldTemplate, renderer, oldRenderer) {\n    if (template !== oldTemplate) {\n      this._contentTemplate = undefined;\n    } else if (renderer !== oldRenderer) {\n      this.renderer = undefined;\n    }\n  }\n\n  /**\n   * Manually invoke existing renderer.\n   */\n  render() {\n    this.$.overlay.render();\n  }\n\n  /** @private */\n  _templateOrRendererChanged(template, renderer) {\n    if (template && renderer) {\n      this._removeNewRendererOrTemplate(template, this._oldTemplate, renderer, this._oldRenderer);\n      throw new Error('You should only use either a renderer or a template for dialog content');\n    }\n\n    this._oldTemplate = template;\n    this._oldRenderer = renderer;\n\n    if (renderer) {\n      this.$.overlay.setProperties({owner: this, renderer: renderer});\n    }\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.opened = false;\n  }\n\n  /** @private */\n  _openedChanged(opened) {\n    if (opened) {\n      this.$.overlay.template = this.querySelector('template');\n    }\n    this.$.overlay.opened = opened;\n  }\n\n  /** @private */\n  _ariaLabelChanged(ariaLabel) {\n    if (ariaLabel !== undefined && ariaLabel !== null) {\n      this.$.overlay.setAttribute('aria-label', ariaLabel);\n    } else {\n      this.$.overlay.removeAttribute('aria-label');\n    }\n  }\n\n  /** @private */\n  _onOverlayOpened(e) {\n    if (e.detail.value === false) {\n      this.opened = false;\n    }\n  }\n\n  /**\n   * Close the dialog if `noCloseOnOutsideClick` isn't set to true\n   * @private\n   */\n  _handleOutsideClick(e) {\n    if (this.noCloseOnOutsideClick) {\n      e.preventDefault();\n    }\n  }\n\n  /**\n   * Close the dialog if `noCloseOnEsc` isn't set to true\n   * @private\n   */\n  _handleEscPress(e) {\n    if (this.noCloseOnEsc) {\n      e.preventDefault();\n    }\n  }\n\n  /**\n   * @param {!DialogOverlayBoundsParam} bounds\n   * @protected\n   */\n  _setBounds(bounds) {\n    const overlay = this.$.overlay.$.overlay;\n    const parsedBounds = Object.assign({}, bounds);\n\n    if (overlay.style.position !== 'absolute') {\n      overlay.style.position = 'absolute';\n      this.$.overlay.setAttribute('has-bounds-set', '');\n      this.__forceSafariReflow();\n    }\n\n    for (const arg in parsedBounds) {\n      if (typeof parsedBounds[arg] === 'number') {\n        parsedBounds[arg] = `${parsedBounds[arg]}px`;\n      }\n    }\n\n    Object.assign(overlay.style, parsedBounds);\n  }\n\n  /** @private */\n  _bringOverlayToFront() {\n    if (this.modeless) {\n      this.$.overlay.bringToFront();\n    }\n  }\n\n  /**\n   * @return {!DialogOverlayBounds}\n   * @protected\n   */\n  _getOverlayBounds() {\n    const overlay = this.$.overlay.$.overlay;\n    const overlayBounds = overlay.getBoundingClientRect();\n    const containerBounds = this.$.overlay.getBoundingClientRect();\n    const top = overlayBounds.top - containerBounds.top;\n    const left = overlayBounds.left - containerBounds.left;\n    const width = overlayBounds.width;\n    const height = overlayBounds.height;\n    return {top, left, width, height};\n  }\n\n  /**\n   * @param {!MouseEvent | !TouchEvent} e\n   * @return {boolean}\n   * @protected\n   */\n  _eventInWindow(e) {\n    return e.clientX >= 0 && e.clientX <= window.innerWidth && e.clientY >= 0 && e.clientY <= window.innerHeight;\n  }\n\n  /**\n   * @param {!MouseEvent | !TouchEvent} e\n   * @return {!MouseEvent | !Touch}\n   * @protected\n   */\n  __getMouseOrFirstTouchEvent(e) {\n    return e.touches ? e.touches[0] : e;\n  }\n\n  /**\n   * Safari 13 renders overflowing elements incorrectly.\n   * This forces it to recalculate height.\n   * @private\n   */\n  __forceSafariReflow() {\n    const scrollPosition = this.$.overlay.$.resizerContainer.scrollTop;\n    const overlay = this.$.overlay.$.overlay;\n    overlay.style.display = 'block';\n    window.requestAnimationFrame(() => {\n      overlay.style.display = '';\n      this.$.overlay.$.resizerContainer.scrollTop = scrollPosition;\n    });\n  }\n}\n\ncustomElements.define(DialogElement.is, DialogElement);\n\nexport { DialogElement };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-dialog@2.5.2/node_modules/@vaadin/vaadin-dialog/src/vaadin-dialog-draggable-mixin.js",
       "source": "const TOUCH_DEVICE = (() => {\n  try {\n    document.createEvent('TouchEvent');\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();\n\n/**\n * @polymerMixin\n */\nexport const DialogDraggableMixin = (superClass) =>\n  class VaadinDialogDraggableMixin extends superClass {\n    static get properties() {\n      return {\n        /** @private */\n        _touchDevice: {\n          type: Boolean,\n          value: TOUCH_DEVICE\n        },\n\n        /* TODO: Expose as a public property (check naming) */\n        __dragHandleClassName: {\n          type: String\n        }\n      };\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n      this._originalBounds = {};\n      this._originalMouseCoords = {};\n      this._startDrag = this._startDrag.bind(this);\n      this._drag = this._drag.bind(this);\n      this._stopDrag = this._stopDrag.bind(this);\n      this.$.overlay.$.overlay.addEventListener('mousedown', this._startDrag);\n      this.$.overlay.$.overlay.addEventListener('touchstart', this._startDrag);\n    }\n\n    /** @private */\n    _startDrag(e) {\n      // Don't initiate when there's more than 1 touch (pinch zoom)\n      if (e.type === 'touchstart' && e.touches.length > 1) {\n        return;\n      }\n\n      if (this.draggable && (e.button === 0 || e.touches)) {\n        const resizerContainer = this.$.overlay.$.resizerContainer;\n        const isResizerContainer = e.target === resizerContainer;\n        const isResizerContainerScrollbar = e.offsetX > resizerContainer.clientWidth || e.offsetY > resizerContainer.clientHeight;\n        const isContentPart = e.target === this.$.overlay.$.content;\n\n        const isDraggable = e.composedPath().some((node, index) => {\n          if (node.classList) {\n            const isDraggableNode = node.classList.contains(this.__dragHandleClassName || 'draggable');\n            const isDraggableLeafOnly = node.classList.contains('draggable-leaf-only');\n            const isLeafNode = index === 0;\n            return (isDraggableLeafOnly && isLeafNode) || (isDraggableNode && (!isDraggableLeafOnly || isLeafNode));\n          }\n        });\n\n        if ((isResizerContainer && !isResizerContainerScrollbar) || isContentPart || isDraggable) {\n          !isDraggable && e.preventDefault();\n          this._originalBounds = this._getOverlayBounds();\n          const event = this.__getMouseOrFirstTouchEvent(e);\n          this._originalMouseCoords = {top: event.pageY, left: event.pageX};\n          window.addEventListener('mouseup', this._stopDrag);\n          window.addEventListener('touchend', this._stopDrag);\n          window.addEventListener('mousemove', this._drag);\n          window.addEventListener('touchmove', this._drag);\n          if (this.$.overlay.$.overlay.style.position !== 'absolute') {\n            this._setBounds(this._originalBounds);\n          }\n        }\n      }\n    }\n\n    /** @private */\n    _drag(e) {\n      const event = this.__getMouseOrFirstTouchEvent(e);\n      if (this._eventInWindow(event)) {\n        const top = this._originalBounds.top + (event.pageY - this._originalMouseCoords.top);\n        const left = this._originalBounds.left + (event.pageX - this._originalMouseCoords.left);\n        this._setBounds({top, left});\n      }\n    }\n\n    /** @private */\n    _stopDrag() {\n      window.removeEventListener('mouseup', this._stopDrag);\n      window.removeEventListener('touchend', this._stopDrag);\n      window.removeEventListener('mousemove', this._drag);\n      window.removeEventListener('touchmove', this._drag);\n    }\n  };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-dialog@2.5.2/node_modules/@vaadin/vaadin-dialog/src/vaadin-dialog-resizable-mixin.js",
       "source": "const $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"vaadin-dialog-resizable-overlay-styles\" theme-for=\"vaadin-dialog-overlay\">\n  <template>\n    <style>\n      [part='overlay'] {\n        position: relative;\n        overflow: visible;\n        max-height: 100%;\n        display: flex;\n      }\n\n      [part='content'] {\n        box-sizing: border-box;\n        height: 100%;\n      }\n\n      .resizer-container {\n        overflow: auto;\n        flex-grow: 1;\n      }\n\n      [part='overlay'][style] .resizer-container {\n        min-height: 100%;\n        width: 100%;\n      }\n\n      :host(:not([resizable])) .resizer {\n        display: none;\n      }\n\n      .resizer {\n        position: absolute;\n        height: 16px;\n        width: 16px;\n      }\n\n      .resizer.edge {\n        height: 8px;\n        width: 8px;\n        top: -4px;\n        right: -4px;\n        bottom: -4px;\n        left: -4px;\n      }\n\n      .resizer.edge.n {\n        width: auto;\n        bottom: auto;\n        cursor: ns-resize;\n      }\n\n      .resizer.ne {\n        top: -4px;\n        right: -4px;\n        cursor: nesw-resize;\n      }\n\n      .resizer.edge.e {\n        height: auto;\n        left: auto;\n        cursor: ew-resize;\n      }\n\n      .resizer.se {\n        bottom: -4px;\n        right: -4px;\n        cursor: nwse-resize;\n      }\n\n      .resizer.edge.s {\n        width: auto;\n        top: auto;\n        cursor: ns-resize;\n      }\n\n      .resizer.sw {\n        bottom: -4px;\n        left: -4px;\n        cursor: nesw-resize;\n      }\n\n      .resizer.edge.w {\n        height: auto;\n        right: auto;\n        cursor: ew-resize;\n      }\n\n      .resizer.nw {\n        top: -4px;\n        left: -4px;\n        cursor: nwse-resize;\n      }\n\n      /* IE11 -only CSS */\n      _:-ms-fullscreen,\n      [part='overlay'] {\n        max-height: none;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n\n/**\n * @polymerMixin\n */\nexport const DialogResizableMixin = (superClass) =>\n  class VaadinDialogResizableMixin extends superClass {\n    /** @protected */\n    ready() {\n      super.ready();\n      this._originalBounds = {};\n      this._originalMouseCoords = {};\n      this._resizeListeners = {start: {}, resize: {}, stop: {}};\n      this._addResizeListeners();\n    }\n\n    /** @private */\n    _addResizeListeners() {\n      // Note: edge controls added before corners\n      ['n', 'e', 's', 'w', 'nw', 'ne', 'se', 'sw'].forEach((direction) => {\n        const resizer = document.createElement('div');\n        this._resizeListeners.start[direction] = (e) => this._startResize(e, direction);\n        this._resizeListeners.resize[direction] = (e) => this._resize(e, direction);\n        this._resizeListeners.stop[direction] = () => this._stopResize(direction);\n        if (direction.length === 1) {\n          resizer.classList.add('edge');\n        }\n        resizer.classList.add('resizer');\n        resizer.classList.add(direction);\n        resizer.addEventListener('mousedown', this._resizeListeners.start[direction]);\n        resizer.addEventListener('touchstart', this._resizeListeners.start[direction]);\n        this.$.overlay.$.resizerContainer.appendChild(resizer);\n      });\n    }\n\n    /**\n     * @param {!MouseEvent | !TouchEvent} e\n     * @param {!DialogResizableDirection} direction\n     * @protected\n     */\n    _startResize(e, direction) {\n      // Don't initiate when there's more than 1 touch (pinch zoom)\n      if (e.type === 'touchstart' && e.touches.length > 1) {\n        return;\n      }\n\n      if (e.button === 0 || e.touches) {\n        e.preventDefault();\n\n        this._originalBounds = this._getOverlayBounds();\n        const event = this.__getMouseOrFirstTouchEvent(e);\n        this._originalMouseCoords = {top: event.pageY, left: event.pageX};\n        window.addEventListener('mousemove', this._resizeListeners.resize[direction]);\n        window.addEventListener('touchmove', this._resizeListeners.resize[direction]);\n        window.addEventListener('mouseup', this._resizeListeners.stop[direction]);\n        window.addEventListener('touchend', this._resizeListeners.stop[direction]);\n        if (this.$.overlay.$.overlay.style.position !== 'absolute') {\n          this._setBounds(this._originalBounds);\n        }\n      }\n    }\n\n    /**\n     * @param {!MouseEvent | !TouchEvent} e\n     * @param {!DialogResizableDirection} resizer\n     * @protected\n     */\n    _resize(e, resizer) {\n      const event = this.__getMouseOrFirstTouchEvent(e);\n      if (this._eventInWindow(event)) {\n        const minimumSize = 40;\n        resizer.split('').forEach((direction) => {\n          switch (direction) {\n            case 'n': {\n              const height = this._originalBounds.height - (event.pageY - this._originalMouseCoords.top);\n              const top = this._originalBounds.top + (event.pageY - this._originalMouseCoords.top);\n              if (height > minimumSize) {\n                this._setBounds({top, height});\n              }\n              break;\n            }\n            case 'e': {\n              const width = this._originalBounds.width + (event.pageX - this._originalMouseCoords.left);\n              if (width > minimumSize) {\n                this._setBounds({width});\n              }\n              break;\n            }\n            case 's': {\n              const height = this._originalBounds.height + (event.pageY - this._originalMouseCoords.top);\n              if (height > minimumSize) {\n                this._setBounds({height});\n              }\n              break;\n            }\n            case 'w': {\n              const width = this._originalBounds.width - (event.pageX - this._originalMouseCoords.left);\n              const left = this._originalBounds.left + (event.pageX - this._originalMouseCoords.left);\n              if (width > minimumSize) {\n                this._setBounds({left, width});\n              }\n              break;\n            }\n          }\n        });\n\n        this.$.overlay.notifyResize();\n      }\n    }\n\n    /**\n     * @param {!DialogResizableDirection} direction\n     * @protected\n     */\n    _stopResize(direction) {\n      window.removeEventListener('mousemove', this._resizeListeners.resize[direction]);\n      window.removeEventListener('touchmove', this._resizeListeners.resize[direction]);\n      window.removeEventListener('mouseup', this._resizeListeners.stop[direction]);\n      window.removeEventListener('touchend', this._resizeListeners.stop[direction]);\n      this.dispatchEvent(new CustomEvent('resize', {detail: this._getResizeDimensions()}));\n    }\n\n    /**\n     * @return {!DialogResizeDimensions}\n     * @protected\n     */\n    _getResizeDimensions() {\n      const scrollPosition = this.$.overlay.$.resizerContainer.scrollTop;\n      const {width, height} = getComputedStyle(this.$.overlay.$.overlay);\n      const content = this.$.overlay.$.content;\n      content.setAttribute('style', 'position: absolute; top: 0; right: 0; bottom: 0; left: 0; box-sizing: content-box; height: auto;');\n      const {width: contentWidth, height: contentHeight} = getComputedStyle(content);\n      content.removeAttribute('style');\n      this.$.overlay.$.resizerContainer.scrollTop = scrollPosition;\n      return {width, height, contentWidth, contentHeight};\n    }\n  };\n"
      }
     ]
    },
    {
     "id": 160,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/theme/lumo/vaadin-grid-sorter.js + 2 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/theme/lumo/vaadin-grid-sorter.js",
       "source": "import './vaadin-grid-sorter-styles.js';\nimport '../../src/vaadin-grid-sorter.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/theme/lumo/vaadin-grid-sorter-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/color.js';\n\nregisterStyles(\n  'vaadin-grid-sorter',\n  css`\n    :host {\n      justify-content: flex-start;\n      align-items: baseline;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      user-select: none;\n    }\n\n    [part='content'] {\n      display: inline-block;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    [part='indicators'] {\n      margin-left: var(--lumo-space-s);\n    }\n\n    :host(:not([direction])) [part='indicators']::before {\n      opacity: 0.2;\n    }\n\n    :host([direction]) {\n      color: var(--lumo-primary-text-color);\n    }\n\n    [part='order'] {\n      font-size: var(--lumo-font-size-xxs);\n      line-height: 1;\n    }\n\n    /* RTL specific styles */\n\n    :host([dir='rtl']) [part='indicators'] {\n      margin-right: var(--lumo-space-s);\n      margin-left: 0;\n    }\n  `,\n  { moduleId: 'lumo-grid-sorter' }\n);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-sorter.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { DirMixin } from '@vaadin/vaadin-element-mixin/vaadin-dir-mixin.js';\n\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `\n  <style>\n    @font-face {\n      font-family: 'vaadin-grid-sorter-icons';\n      src: url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAQwAA0AAAAABuwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAAEFAAAABkAAAAcfep+mUdERUYAAAP4AAAAHAAAAB4AJwAOT1MvMgAAAZgAAAA/AAAAYA8TBPpjbWFwAAAB7AAAAFUAAAFeF1fZ4mdhc3AAAAPwAAAACAAAAAgAAAAQZ2x5ZgAAAlgAAABcAAAAnMvguMloZWFkAAABMAAAAC8AAAA2C5Ap72hoZWEAAAFgAAAAHQAAACQGbQPHaG10eAAAAdgAAAAUAAAAHAoAAABsb2NhAAACRAAAABIAAAASAIwAYG1heHAAAAGAAAAAFgAAACAACwAKbmFtZQAAArQAAAECAAACZxWCgKhwb3N0AAADuAAAADUAAABZCrApUXicY2BkYGAA4rDECVrx/DZfGbhZGEDgyqNPOxH0/wNMq5kPALkcDEwgUQBWRA0dAHicY2BkYGA+8P8AAwMLAwgwrWZgZEAFbABY4QM8AAAAeJxjYGRgYOAAQiYGEICQSAAAAi8AFgAAeJxjYGY6yziBgZWBgWkm0xkGBoZ+CM34msGYkZMBFTAKoAkwODAwvmRiPvD/AIMDMxCD1CDJKjAwAgBktQsXAHicY2GAAMZQCM0EwqshbAALxAEKeJxjYGBgZoBgGQZGBhCIAPIYwXwWBhsgzcXAwcAEhIwMCi+Z/v/9/x+sSuElA4T9/4k4K1gHFwMMMILMY2QDYmaoABOQYGJABUA7WBiGNwAAJd4NIQAAAAAAAAAACAAIABAAGAAmAEAATgAAeJyNjLENgDAMBP9tIURJwQCMQccSZgk2i5fIYBDAidJjycXr7x5EPwE2wY8si7jmyBNXGo/bNBerxJNrpxhbO3/fEFpx8ZICpV+ghxJ74fAMe+h7Ox14AbrsHB14nK2QQWrDMBRER4mTkhQK3ZRQKOgCNk7oGQqhhEIX2WSlWEI1BAlkJ5CDdNsj5Ey9Rncdi38ES+jzNJo/HwTgATcoDEthhY3wBHc4CE+pfwsX5F/hGe7Vo/AcK/UhvMSz+mGXKhZU6pww8ISz3oWn1BvhgnwTnuEJf8Jz1OpFeIlX9YULDLdFi4ASHolkSR0iuYdjLak1vAequBhj21D61Nqyi6l3qWybGPjySbPHGScGJl6dP58MYcQRI0bts7mjebBqrFENH7t3qWtj0OuqHnXcW7b0HOTZFnKryRGW2hFX1m0O2vEM3opNMfTau+CS6Z3Vx6veNnEXY6jwDxhsc2gAAHicY2BiwA84GBgYmRiYGJkZmBlZGFkZ2djScyoLMgzZS/MyDQwMwLSrpYEBlIbxjQDrzgsuAAAAAAEAAf//AA94nGNgZGBg4AFiMSBmYmAEQnYgZgHzGAAD6wA2eJxjYGBgZACCKyoz1cD0o087YTQATOcIewAAAA==) format('woff');\n      font-weight: normal;\n      font-style: normal;\n    }\n  </style>\n`;\n\ndocument.head.appendChild($_documentContainer.content);\n\n/**\n * `<vaadin-grid-sorter>` is a helper element for the `<vaadin-grid>` that provides out-of-the-box UI controls,\n * visual feedback, and handlers for sorting the grid data.\n *\n * #### Example:\n * ```html\n * <vaadin-grid-column>\n *   <template class=\"header\">\n *     <vaadin-grid-sorter path=\"name.first\">First name</vaadin-grid-sorter>\n *   </template>\n *   <template>[[item.name.first]]</template>\n * </vaadin-grid-column>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `content` | The slotted content wrapper\n * `indicators` | The internal sorter indicators.\n * `order` | The internal sorter order\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `direction` | Sort direction of a sorter | :host\n *\n * @fires {CustomEvent} direction-changed - Fired when the `direction` property changes.\n * @fires {CustomEvent} sorter-changed - Fired when the `path` or `direction` property changes.\n *\n * @extends HTMLElement\n */\nclass GridSorterElement extends ThemableMixin(DirMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-flex;\n          cursor: pointer;\n          max-width: 100%;\n        }\n\n        [part='content'] {\n          flex: 1 1 auto;\n        }\n\n        [part='indicators'] {\n          position: relative;\n          align-self: center;\n          flex: none;\n        }\n\n        [part='order'] {\n          display: inline;\n          vertical-align: super;\n        }\n\n        [part='indicators']::before {\n          font-family: 'vaadin-grid-sorter-icons';\n          display: inline-block;\n        }\n\n        :host(:not([direction])) [part='indicators']::before {\n          content: '\\\\e901';\n        }\n\n        :host([direction='asc']) [part='indicators']::before {\n          content: '\\\\e900';\n        }\n\n        :host([direction='desc']) [part='indicators']::before {\n          content: '\\\\e902';\n        }\n      </style>\n\n      <div part=\"content\">\n        <slot></slot>\n      </div>\n      <div part=\"indicators\">\n        <span part=\"order\">[[_getDisplayOrder(_order)]]</span>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-grid-sorter';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * JS Path of the property in the item used for sorting the data.\n       */\n      path: String,\n\n      /**\n       * How to sort the data.\n       * Possible values are `asc` to use an ascending algorithm, `desc` to sort the data in\n       * descending direction, or `null` for not sorting the data.\n       * @type {GridSorterDirection | undefined}\n       */\n      direction: {\n        type: String,\n        reflectToAttribute: true,\n        notify: true,\n        value: null\n      },\n\n      /**\n       * @type {number | null}\n       * @protected\n       */\n      _order: {\n        type: Number,\n        value: null\n      },\n\n      /** @private */\n      _isConnected: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  static get observers() {\n    return ['_pathOrDirectionChanged(path, direction, _isConnected)'];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.addEventListener('click', this._onClick.bind(this));\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    this._isConnected = true;\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this._isConnected = false;\n  }\n\n  /** @private */\n  _pathOrDirectionChanged(path, direction, isConnected) {\n    if (path === undefined || direction === undefined || isConnected === undefined) {\n      return;\n    }\n\n    if (isConnected) {\n      this.dispatchEvent(new CustomEvent('sorter-changed', { bubbles: true, composed: true }));\n    }\n  }\n\n  /** @private */\n  _getDisplayOrder(order) {\n    return order === null ? '' : order + 1;\n  }\n\n  /** @private */\n  _onClick(e) {\n    const activeElement = this.getRootNode().activeElement;\n    if (this !== activeElement && this.contains(activeElement)) {\n      // Some focusable content inside the sorter was clicked, do nothing.\n      return;\n    }\n\n    e.preventDefault();\n    if (this.direction === 'asc') {\n      this.direction = 'desc';\n    } else if (this.direction === 'desc') {\n      this.direction = null;\n    } else {\n      this.direction = 'asc';\n    }\n  }\n}\n\ncustomElements.define(GridSorterElement.is, GridSorterElement);\n\nexport { GridSorterElement };\n"
      }
     ]
    },
    {
     "id": 161,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-ordered-layout@1.4.0/node_modules/@vaadin/vaadin-ordered-layout/theme/lumo/vaadin-horizontal-layout.js + 2 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-ordered-layout@1.4.0/node_modules/@vaadin/vaadin-ordered-layout/theme/lumo/vaadin-horizontal-layout.js",
       "source": "import './vaadin-horizontal-layout-styles.js';\nimport '../../src/vaadin-horizontal-layout.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-ordered-layout@1.4.0/node_modules/@vaadin/vaadin-ordered-layout/theme/lumo/vaadin-horizontal-layout-styles.js",
       "source": "import '@vaadin/vaadin-lumo-styles/spacing.js';\nimport './vaadin-ordered-layout.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-horizontal-layout\" theme-for=\"vaadin-horizontal-layout\">\n  <template>\n    <style include=\"lumo-ordered-layout\">\n      :host([theme~=\"spacing-xs\"]:not([dir=\"rtl\"])) ::slotted(*) {\n        margin-left: var(--lumo-space-xs);\n      }\n\n      :host([theme~=\"spacing-s\"]:not([dir=\"rtl\"])) ::slotted(*) {\n        margin-left: var(--lumo-space-s);\n      }\n\n      :host([theme~=\"spacing\"]:not([dir=\"rtl\"])) ::slotted(*) {\n        margin-left: var(--lumo-space-m);\n      }\n\n      :host([theme~=\"spacing-l\"]:not([dir=\"rtl\"])) ::slotted(*) {\n        margin-left: var(--lumo-space-l);\n      }\n\n      :host([theme~=\"spacing-xl\"]:not([dir=\"rtl\"])) ::slotted(*) {\n        margin-left: var(--lumo-space-xl);\n      }\n\n      /*\n        Compensate for the first item margin, so that there is no gap around\n        the layout itself.\n       */\n      :host([theme~=\"spacing-xs\"])::before,\n      :host([theme~=\"spacing-s\"])::before,\n      :host([theme~=\"spacing\"])::before,\n      :host([theme~=\"spacing-l\"])::before,\n      :host([theme~=\"spacing-xl\"])::before {\n        content: \"\";\n      }\n\n      :host([theme~=\"spacing-xs\"]:not([dir=\"rtl\"]))::before {\n        margin-left: calc(var(--lumo-space-xs) * -1);\n      }\n\n      :host([theme~=\"spacing-s\"]:not([dir=\"rtl\"]))::before {\n        margin-left: calc(var(--lumo-space-s) * -1);\n      }\n\n      :host([theme~=\"spacing\"]:not([dir=\"rtl\"]))::before {\n        margin-left: calc(var(--lumo-space-m) * -1);\n      }\n\n      :host([theme~=\"spacing-l\"]:not([dir=\"rtl\"]))::before {\n        margin-left: calc(var(--lumo-space-l) * -1);\n      }\n\n      :host([theme~=\"spacing-xl\"]:not([dir=\"rtl\"]))::before {\n        margin-left: calc(var(--lumo-space-xl) * -1);\n      }\n\n      /* RTL styles */\n      :host([dir=\"rtl\"][theme~=\"spacing-xs\"]) ::slotted(*) {\n        margin-right: var(--lumo-space-xs);\n      }\n\n      :host([dir=\"rtl\"][theme~=\"spacing-s\"]) ::slotted(*) {\n        margin-right: var(--lumo-space-s);\n      }\n\n      :host([dir=\"rtl\"][theme~=\"spacing\"]) ::slotted(*) {\n        margin-right: var(--lumo-space-m);\n      }\n\n      :host([dir=\"rtl\"][theme~=\"spacing-l\"]) ::slotted(*) {\n        margin-right: var(--lumo-space-l);\n      }\n\n      :host([dir=\"rtl\"][theme~=\"spacing-xl\"]) ::slotted(*) {\n        margin-right: var(--lumo-space-xl);\n      }\n\n      /*\n        Compensate for the first item margin, so that there is no gap around\n        the layout itself.\n       */\n      :host([dir=\"rtl\"][theme~=\"spacing-xs\"])::before {\n        margin-right: calc(var(--lumo-space-xs) * -1);\n      }\n\n      :host([dir=\"rtl\"][theme~=\"spacing-s\"])::before {\n        margin-right: calc(var(--lumo-space-s) * -1);\n      }\n\n      :host([dir=\"rtl\"][theme~=\"spacing\"])::before {\n        margin-right: calc(var(--lumo-space-m) * -1);\n      }\n\n      :host([dir=\"rtl\"][theme~=\"spacing-l\"])::before {\n        margin-right: calc(var(--lumo-space-l) * -1);\n      }\n\n      :host([dir=\"rtl\"][theme~=\"spacing-xl\"])::before {\n        margin-right: calc(var(--lumo-space-xl) * -1);\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-ordered-layout@1.4.0/node_modules/@vaadin/vaadin-ordered-layout/src/vaadin-horizontal-layout.js",
       "source": "/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n/**\n * `<vaadin-horizontal-layout>` provides a simple way to horizontally align your HTML elements.\n *\n * ```\n * <vaadin-horizontal-layout>\n *   <div>Item 1</div>\n *   <div>Item 2</div>\n * </vaadin-horizontal-layout>\n * ```\n *\n * ### Built-in Theme Variations\n *\n * `<vaadin-horizontal-layout>` supports the following theme variations:\n *\n * Theme variation | Description\n * ---|---\n * `theme=\"margin\"` | Applies the default amount of CSS margin for the host element (specified by the theme)\n * `theme=\"padding\"` | Applies the default amount of CSS padding for the host element (specified by the theme)\n * `theme=\"spacing\"` | Applies the default amount of CSS margin between items (specified by the theme)\n *\n * @extends PolymerElement\n * @mixes ThemableMixin\n * @mixes ElementMixin\n * @demo demo/index.html\n */\nclass HorizontalLayoutElement extends ElementMixin(ThemableMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: flex;\n        box-sizing: border-box;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      /* Theme variations */\n      :host([theme~=\"margin\"]) {\n        margin: 1em;\n      }\n\n      :host([theme~=\"padding\"]) {\n        padding: 1em;\n      }\n\n      :host([theme~=\"spacing\"]:not([dir=\"rtl\"])) ::slotted(*) {\n        margin-left: 1em;\n      }\n\n      :host([theme~=\"spacing\"][dir=\"rtl\"]) ::slotted(*) {\n        margin-right: 1em;\n      }\n\n      /*\n        Compensate for the first item margin, so that there is no gap around\n        the layout itself.\n       */\n      :host([theme~=\"spacing\"])::before {\n        content: \"\";\n      }\n\n      :host([theme~=\"spacing\"]:not([dir=\"rtl\"]))::before {\n        margin-left: -1em;\n      }\n\n      :host([theme~=\"spacing\"][dir=\"rtl\"])::before {\n        margin-right: -1em;\n      }\n    </style>\n\n    <slot></slot>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-horizontal-layout';\n  }\n\n  static get version() {\n    return '1.4.0';\n  }\n}\n\ncustomElements.define(HorizontalLayoutElement.is, HorizontalLayoutElement);\n\nexport { HorizontalLayoutElement };\n"
      }
     ]
    },
    {
     "id": 162,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-ordered-layout@1.4.0/node_modules/@vaadin/vaadin-ordered-layout/theme/lumo/vaadin-vertical-layout.js + 2 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-ordered-layout@1.4.0/node_modules/@vaadin/vaadin-ordered-layout/theme/lumo/vaadin-vertical-layout.js",
       "source": "import './vaadin-vertical-layout-styles.js';\nimport '../../src/vaadin-vertical-layout.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-ordered-layout@1.4.0/node_modules/@vaadin/vaadin-ordered-layout/theme/lumo/vaadin-vertical-layout-styles.js",
       "source": "import '@vaadin/vaadin-lumo-styles/spacing.js';\nimport './vaadin-ordered-layout.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-vertical-layout\" theme-for=\"vaadin-vertical-layout\">\n  <template>\n    <style include=\"lumo-ordered-layout\">\n      :host([theme~=\"spacing-xs\"]) ::slotted(*) {\n        margin-top: var(--lumo-space-xs);\n      }\n\n      :host([theme~=\"spacing-s\"]) ::slotted(*) {\n        margin-top: var(--lumo-space-s);\n      }\n\n      :host([theme~=\"spacing\"]) ::slotted(*) {\n        margin-top: var(--lumo-space-m);\n      }\n\n      :host([theme~=\"spacing-l\"]) ::slotted(*) {\n        margin-top: var(--lumo-space-l);\n      }\n\n      :host([theme~=\"spacing-xl\"]) ::slotted(*) {\n        margin-top: var(--lumo-space-xl);\n      }\n\n      /*\n        Compensate for the first item margin, so that there is no gap around\n        the layout itself.\n       */\n       :host([theme~=\"spacing-xs\"])::before {\n         content: \"\";\n         margin-top: calc(var(--lumo-space-xs) * -1);\n       }\n\n       :host([theme~=\"spacing-s\"])::before {\n         content: \"\";\n         margin-top: calc(var(--lumo-space-s) * -1);\n       }\n\n      :host([theme~=\"spacing\"])::before {\n        content: \"\";\n        margin-top: calc(var(--lumo-space-m) * -1);\n      }\n\n      :host([theme~=\"spacing-l\"])::before {\n        content: \"\";\n        margin-top: calc(var(--lumo-space-l) * -1);\n      }\n\n      :host([theme~=\"spacing-xl\"])::before {\n        content: \"\";\n        margin-top: calc(var(--lumo-space-xl) * -1);\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-ordered-layout@1.4.0/node_modules/@vaadin/vaadin-ordered-layout/src/vaadin-vertical-layout.js",
       "source": "/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n/**\n * `<vaadin-vertical-layout>` provides a simple way to vertically align your HTML elements.\n *\n * ```\n * <vaadin-vertical-layout>\n *   <div>Item 1</div>\n *   <div>Item 2</div>\n * </vaadin-vertical-layout>\n * ```\n *\n * ### Built-in Theme Variations\n *\n * `<vaadin-vertical-layout>` supports the following theme variations:\n *\n * Theme variation | Description\n * ---|---\n * `theme=\"margin\"` | Applies the default amount of CSS margin for the host element (specified by the theme)\n * `theme=\"padding\"` | Applies the default amount of CSS padding for the host element (specified by the theme)\n * `theme=\"spacing\"` | Applies the default amount of CSS margin between items (specified by the theme)\n *\n * @extends PolymerElement\n * @mixes ThemableMixin\n * @mixes ElementMixin\n * @demo demo/index.html\n */\nclass VerticalLayoutElement extends ElementMixin(ThemableMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n        box-sizing: border-box;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      /* Theme variations */\n      :host([theme~=\"margin\"]) {\n        margin: 1em;\n      }\n\n      :host([theme~=\"padding\"]) {\n        padding: 1em;\n      }\n\n      :host([theme~=\"spacing\"]) ::slotted(*) {\n        margin-top: 1em;\n      }\n\n      /*\n        Compensate for the first item margin, so that there is no gap around\n        the layout itself.\n       */\n      :host([theme~=\"spacing\"])::before {\n        content: \"\";\n        margin-top: -1em;\n      }\n    </style>\n\n    <slot></slot>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-vertical-layout';\n  }\n\n  static get version() {\n    return '1.4.0';\n  }\n}\n\ncustomElements.define(VerticalLayoutElement.is, VerticalLayoutElement);\n\nexport { VerticalLayoutElement };\n"
      }
     ]
    },
    {
     "id": 177,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/theme/lumo/vaadin-grid-column-group.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/theme/lumo/vaadin-grid-column-group.js",
       "source": "import '../../src/vaadin-grid-column-group.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-column-group.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { microTask } from '@polymer/polymer/lib/utils/async.js';\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { ColumnBaseMixin } from './vaadin-grid-column.js';\n\n/**\n * A `<vaadin-grid-column-group>` is used to make groups of columns in `<vaadin-grid>` and\n * to configure additional headers and footers.\n *\n * Groups can be nested to create complex header and footer configurations.\n *\n * The `class` attribute is used to differentiate header and footer templates.\n *\n * #### Example:\n * ```html\n * <vaadin-grid-column-group resizable>\n *  <template class=\"header\">Name</template>\n *\n *  <vaadin-grid-column>\n *    <template class=\"header\">First</template>\n *    <template>[[item.name.first]]</template>\n *  </vaadin-grid-column>\n *  <vaadin-grid-column>\n *    <template class=\"header\">Last</template>\n *    <template>[[item.name.last]]</template>\n *  </vaadin-grid-column>\n * </vaadin-grid-column-group>\n * ```\n *\n * @extends HTMLElement\n * @mixes ColumnBaseMixin\n */\nclass GridColumnGroupElement extends ColumnBaseMixin(PolymerElement) {\n  static get is() {\n    return 'vaadin-grid-column-group';\n  }\n\n  static get properties() {\n    return {\n      /** @private */\n      _childColumns: {\n        value: function () {\n          return this._getChildColumns(this);\n        }\n      },\n\n      /**\n       * Flex grow ratio for the column group as the sum of the ratios of its child columns.\n       * @attr {number} flex-grow\n       */\n      flexGrow: {\n        type: Number,\n        readOnly: true\n      },\n\n      /**\n       * Width of the column group as the sum of the widths of its child columns.\n       */\n      width: {\n        type: String,\n        readOnly: true\n      },\n\n      /** @private */\n      _visibleChildColumns: Array,\n\n      /** @private */\n      _colSpan: Number,\n\n      /** @private */\n      _rootColumns: Array\n    };\n  }\n\n  static get observers() {\n    return [\n      '_updateVisibleChildColumns(_childColumns)',\n      '_childColumnsChanged(_childColumns)',\n      '_groupFrozenChanged(frozen, _rootColumns)',\n      '_groupHiddenChanged(hidden, _rootColumns)',\n      '_visibleChildColumnsChanged(_visibleChildColumns)',\n      '_colSpanChanged(_colSpan, _headerCell, _footerCell)',\n      '_groupOrderChanged(_order, _rootColumns)',\n      '_groupReorderStatusChanged(_reorderStatus, _rootColumns)',\n      '_groupResizableChanged(resizable, _rootColumns)'\n    ];\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    this._addNodeObserver();\n    this._updateFlexAndWidth();\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this._observer && this._observer.disconnect();\n  }\n\n  /**\n   * @param {string} path\n   * @param {unknown=} value\n   * @protected\n   */\n  _columnPropChanged(path, value) {\n    if (path === 'hidden') {\n      this._preventHiddenCascade = true;\n      this._updateVisibleChildColumns(this._childColumns);\n      this._preventHiddenCascade = false;\n    }\n\n    if (/flexGrow|width|hidden|_childColumns/.test(path)) {\n      this._updateFlexAndWidth();\n    }\n\n    if (path === 'frozen') {\n      // Don’t unfreeze the frozen group because of a non-frozen child\n      this.frozen = this.frozen || value;\n    }\n\n    if (path === 'lastFrozen') {\n      // Don’t unfreeze the frozen group because of a non-frozen child\n      this._lastFrozen = this._lastFrozen || value;\n    }\n  }\n\n  /** @private */\n  _groupOrderChanged(order, rootColumns) {\n    if (rootColumns) {\n      const _rootColumns = rootColumns.slice(0);\n\n      if (!order) {\n        _rootColumns.forEach((column) => (column._order = 0));\n        return;\n      }\n      // The parent column order number cascades downwards to it's children\n      // so that the resulting order numbering constructs as follows:\n      // [             1000              ]\n      // [     1100    ] | [     1200    ]\n      // [1110] | [1120] | [1210] | [1220]\n\n      // Trailing zeros are counted so we know the level on which we're working on.\n      const trailingZeros = /(0+)$/.exec(order).pop().length;\n\n      // In an unlikely situation where a group has more than 9 child columns,\n      // the child scope must have 1 digit less...\n      const childCountDigits = ~~(Math.log(rootColumns.length) / Math.log(Math.LN10)) + 1;\n\n      // Final scope for the child columns needs to mind both factors.\n      const scope = Math.pow(10, trailingZeros - childCountDigits);\n\n      if (_rootColumns[0] && _rootColumns[0]._order) {\n        _rootColumns.sort((a, b) => a._order - b._order);\n      }\n\n      _rootColumns.forEach((column, index) => (column._order = order + (index + 1) * scope));\n    }\n  }\n\n  /** @private */\n  _groupReorderStatusChanged(reorderStatus, rootColumns) {\n    if (reorderStatus === undefined || rootColumns === undefined) {\n      return;\n    }\n\n    rootColumns.forEach((column) => (column._reorderStatus = reorderStatus));\n  }\n\n  /** @private */\n  _groupResizableChanged(resizable, rootColumns) {\n    if (resizable === undefined || rootColumns === undefined) {\n      return;\n    }\n\n    rootColumns.forEach((column) => (column.resizable = resizable));\n  }\n\n  /** @private */\n  _updateVisibleChildColumns(childColumns) {\n    this._visibleChildColumns = Array.prototype.filter.call(childColumns, (col) => !col.hidden);\n  }\n\n  /** @private */\n  _childColumnsChanged(childColumns) {\n    if (!this._autoHidden && this.hidden) {\n      Array.prototype.forEach.call(childColumns, (column) => (column.hidden = true));\n      this._updateVisibleChildColumns(childColumns);\n    }\n  }\n\n  /** @protected */\n  _updateFlexAndWidth() {\n    if (!this._visibleChildColumns) {\n      return;\n    }\n\n    if (this._visibleChildColumns.length) {\n      this._setWidth(\n        'calc(' +\n          Array.prototype.reduce\n            .call(\n              this._visibleChildColumns,\n              (prev, curr) => (prev += ' + ' + (curr.width || '0px').replace('calc', '')),\n              ''\n            )\n            .substring(3) +\n          ')'\n      );\n    } else {\n      this._setWidth('0px');\n    }\n\n    this._setFlexGrow(Array.prototype.reduce.call(this._visibleChildColumns, (prev, curr) => prev + curr.flexGrow, 0));\n  }\n\n  /** @private */\n  _groupFrozenChanged(frozen, rootColumns) {\n    if (rootColumns === undefined || frozen === undefined) {\n      return;\n    }\n\n    // Don’t propagate the default `false` value.\n    if (frozen !== false) {\n      Array.from(rootColumns).forEach((col) => (col.frozen = frozen));\n    }\n  }\n\n  /** @private */\n  _groupHiddenChanged(hidden, rootColumns) {\n    if (rootColumns && !this._preventHiddenCascade) {\n      this._ignoreVisibleChildColumns = true;\n      rootColumns.forEach((column) => (column.hidden = hidden));\n      this._ignoreVisibleChildColumns = false;\n    }\n\n    this._columnPropChanged('hidden');\n  }\n\n  /** @private */\n  _visibleChildColumnsChanged(visibleChildColumns) {\n    this._colSpan = visibleChildColumns.length;\n\n    if (!this._ignoreVisibleChildColumns) {\n      if (visibleChildColumns.length === 0) {\n        this._autoHidden = this.hidden = true;\n      } else if (this.hidden && this._autoHidden) {\n        this._autoHidden = this.hidden = false;\n      }\n    }\n  }\n\n  /** @private */\n  _colSpanChanged(colSpan, headerCell, footerCell) {\n    if (headerCell) {\n      headerCell.setAttribute('colspan', colSpan);\n      this._grid && this._grid._a11yUpdateCellColspan(headerCell, colSpan);\n    }\n    if (footerCell) {\n      footerCell.setAttribute('colspan', colSpan);\n      this._grid && this._grid._a11yUpdateCellColspan(footerCell, colSpan);\n    }\n  }\n\n  /**\n   * @param {!GridColumnGroupElement} el\n   * @return {!Array<!GridColumnElement>}\n   * @protected\n   */\n  _getChildColumns(el) {\n    return FlattenedNodesObserver.getFlattenedNodes(el).filter(this._isColumnElement);\n  }\n\n  /** @private */\n  _addNodeObserver() {\n    this._observer = new FlattenedNodesObserver(this, (info) => {\n      if (\n        info.addedNodes.filter(this._isColumnElement).length > 0 ||\n        info.removedNodes.filter(this._isColumnElement).length > 0\n      ) {\n        this._preventHiddenCascade = true;\n        this._rootColumns = this._getChildColumns(this);\n        this._childColumns = this._rootColumns;\n        this._preventHiddenCascade = false;\n\n        // Update the column tree with microtask timing to avoid shady style scope issues\n        microTask.run(() => {\n          this._grid && this._grid._updateColumnTree && this._grid._updateColumnTree();\n        });\n      }\n    });\n    this._observer.flush();\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   * @protected\n   */\n  _isColumnElement(node) {\n    return node.nodeType === Node.ELEMENT_NODE && /\\bcolumn\\b/.test(node.localName);\n  }\n}\n\ncustomElements.define(GridColumnGroupElement.is, GridColumnGroupElement);\n\nexport { GridColumnGroupElement };\n"
      }
     ]
    },
    {
     "id": 178,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/theme/lumo/vaadin-grid.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/theme/lumo/vaadin-grid.js",
       "source": "import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport '@vaadin/vaadin-checkbox/theme/lumo/vaadin-checkbox.js';\nimport './vaadin-grid-styles.js';\nimport '../../src/vaadin-grid.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/theme/lumo/vaadin-grid-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport '@vaadin/vaadin-checkbox/theme/lumo/vaadin-checkbox.js';\n\nregisterStyles(\n  'vaadin-grid',\n  css`\n    :host {\n      font-family: var(--lumo-font-family);\n      font-size: var(--lumo-font-size-m);\n      line-height: var(--lumo-line-height-s);\n      color: var(--lumo-body-text-color);\n      background-color: var(--lumo-base-color);\n      box-sizing: border-box;\n      -webkit-text-size-adjust: 100%;\n      -webkit-tap-highlight-color: transparent;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n\n      /* For internal use only */\n      --_lumo-grid-border-color: var(--lumo-contrast-20pct);\n      --_lumo-grid-secondary-border-color: var(--lumo-contrast-10pct);\n      --_lumo-grid-border-width: 1px;\n      --_lumo-grid-selected-row-color: var(--lumo-primary-color-10pct);\n    }\n\n    /* No (outer) border */\n\n    :host(:not([theme~='no-border'])) {\n      border: var(--_lumo-grid-border-width) solid var(--_lumo-grid-border-color);\n    }\n\n    /* Cell styles */\n\n    [part~='cell'] {\n      min-height: var(--lumo-size-m);\n      background-color: var(--lumo-base-color);\n    }\n\n    [part~='cell'] ::slotted(vaadin-grid-cell-content) {\n      cursor: default;\n      padding: var(--lumo-space-xs) var(--lumo-space-m);\n    }\n\n    /* Apply row borders by default and introduce the \"no-row-borders\" variant */\n    :host(:not([theme~='no-row-borders'])) [part~='cell']:not([part~='details-cell']) {\n      border-top: var(--_lumo-grid-border-width) solid var(--_lumo-grid-secondary-border-color);\n    }\n\n    /* Hide first body row top border */\n    :host(:not([theme~='no-row-borders'])) [part='row'][first] [part~='cell']:not([part~='details-cell']) {\n      border-top: 0;\n      min-height: calc(var(--lumo-size-m) - var(--_lumo-grid-border-width));\n    }\n\n    /* Focus-ring */\n\n    [part~='cell']:focus {\n      outline: none;\n    }\n\n    :host([navigating]) [part~='cell']:focus::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      pointer-events: none;\n      box-shadow: inset 0 0 0 2px var(--lumo-primary-color-50pct);\n    }\n\n    /* Drag and Drop styles */\n    :host([dragover])::after {\n      content: '';\n      position: absolute;\n      z-index: 100;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      pointer-events: none;\n      box-shadow: inset 0 0 0 2px var(--lumo-primary-color-50pct);\n    }\n\n    [part~='row'][dragover] {\n      z-index: 100 !important;\n    }\n\n    [part~='row'][dragover] [part~='cell'] {\n      overflow: visible;\n    }\n\n    [part~='row'][dragover] [part~='cell']::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      height: calc(var(--_lumo-grid-border-width) + 2px);\n      pointer-events: none;\n      background: var(--lumo-primary-color-50pct);\n    }\n\n    :host([theme~='no-row-borders']) [dragover] [part~='cell']::after {\n      height: 2px;\n    }\n\n    [part~='row'][dragover='below'] [part~='cell']::after {\n      top: 100%;\n      bottom: auto;\n      margin-top: -1px;\n    }\n\n    [part~='row'][dragover='above'] [part~='cell']::after {\n      top: auto;\n      bottom: 100%;\n      margin-bottom: -1px;\n    }\n\n    [part~='row'][details-opened][dragover='below'] [part~='cell']:not([part~='details-cell'])::after,\n    [part~='row'][details-opened][dragover='above'] [part~='details-cell']::after {\n      display: none;\n    }\n\n    [part~='row'][dragover][dragover='on-top'] [part~='cell']::after {\n      height: 100%;\n    }\n\n    [part~='row'][dragstart] {\n      /* Add bottom-space to the row so the drag number doesn't get clipped. Needed for IE/Edge */\n      border-bottom: 100px solid transparent;\n      z-index: 100 !important;\n      opacity: 0.9;\n    }\n\n    [part~='row'][dragstart] [part~='cell'] {\n      border: none !important;\n      box-shadow: none !important;\n    }\n\n    [part~='row'][dragstart] [part~='cell'][last-column] {\n      border-radius: 0 var(--lumo-border-radius-s) var(--lumo-border-radius-s) 0;\n    }\n\n    [part~='row'][dragstart] [part~='cell'][first-column] {\n      border-radius: var(--lumo-border-radius-s) 0 0 var(--lumo-border-radius-s);\n    }\n\n    [ios] [part~='row'][dragstart] [part~='cell'] {\n      background: var(--lumo-primary-color-50pct);\n    }\n\n    #scroller:not([ios]) [part~='row'][dragstart]:not([dragstart=''])::after {\n      display: block;\n      position: absolute;\n      left: var(--_grid-drag-start-x);\n      top: var(--_grid-drag-start-y);\n      z-index: 100;\n      content: attr(dragstart);\n      align-items: center;\n      justify-content: center;\n      box-sizing: border-box;\n      padding: calc(var(--lumo-space-xs) * 0.8);\n      color: var(--lumo-error-contrast-color);\n      background-color: var(--lumo-error-color);\n      border-radius: var(--lumo-border-radius-m);\n      font-family: var(--lumo-font-family);\n      font-size: var(--lumo-font-size-xxs);\n      line-height: 1;\n      font-weight: 500;\n      text-transform: initial;\n      letter-spacing: initial;\n      min-width: calc(var(--lumo-size-s) * 0.7);\n      text-align: center;\n    }\n\n    /* Headers and footers */\n\n    [part~='header-cell'] ::slotted(vaadin-grid-cell-content),\n    [part~='footer-cell'] ::slotted(vaadin-grid-cell-content),\n    [part~='reorder-ghost'] {\n      font-size: var(--lumo-font-size-s);\n      font-weight: 500;\n    }\n\n    [part~='footer-cell'] ::slotted(vaadin-grid-cell-content) {\n      font-weight: 400;\n    }\n\n    [part='row']:only-child [part~='header-cell'] {\n      min-height: var(--lumo-size-xl);\n    }\n\n    /* Header borders */\n\n    /* Hide first header row top border */\n    :host(:not([theme~='no-row-borders'])) [part='row']:first-child [part~='header-cell'] {\n      border-top: 0;\n    }\n\n    [part='row']:last-child [part~='header-cell'] {\n      border-bottom: var(--_lumo-grid-border-width) solid transparent;\n    }\n\n    :host(:not([theme~='no-row-borders'])) [part='row']:last-child [part~='header-cell'] {\n      border-bottom-color: var(--_lumo-grid-secondary-border-color);\n    }\n\n    /* Overflow uses a stronger border color */\n    :host([overflow~='top']) [part='row']:last-child [part~='header-cell'] {\n      border-bottom-color: var(--_lumo-grid-border-color);\n    }\n\n    /* Footer borders */\n\n    [part='row']:first-child [part~='footer-cell'] {\n      border-top: var(--_lumo-grid-border-width) solid transparent;\n    }\n\n    :host(:not([theme~='no-row-borders'])) [part='row']:first-child [part~='footer-cell'] {\n      border-top-color: var(--_lumo-grid-secondary-border-color);\n    }\n\n    /* Overflow uses a stronger border color */\n    :host([overflow~='bottom']) [part='row']:first-child [part~='footer-cell'] {\n      border-top-color: var(--_lumo-grid-border-color);\n    }\n\n    /* Column reordering */\n\n    :host([reordering]) [part~='cell'] {\n      background: linear-gradient(var(--lumo-shade-20pct), var(--lumo-shade-20pct)) var(--lumo-base-color);\n    }\n\n    :host([reordering]) [part~='cell'][reorder-status='allowed'] {\n      background: var(--lumo-base-color);\n    }\n\n    :host([reordering]) [part~='cell'][reorder-status='dragging'] {\n      background: linear-gradient(var(--lumo-contrast-5pct), var(--lumo-contrast-5pct)) var(--lumo-base-color);\n    }\n\n    [part~='reorder-ghost'] {\n      opacity: 0.85;\n      box-shadow: var(--lumo-box-shadow-s);\n      /* TODO Use the same styles as for the cell element (reorder-ghost copies styles from the cell element) */\n      padding: var(--lumo-space-s) var(--lumo-space-m) !important;\n    }\n\n    /* Column resizing */\n\n    [part='resize-handle'] {\n      width: 3px;\n      background-color: var(--lumo-primary-color-50pct);\n      opacity: 0;\n      transition: opacity 0.2s;\n    }\n\n    :host(:not([reordering])) *:not([column-resizing]) [part~='cell']:hover [part='resize-handle'],\n    [part='resize-handle']:active {\n      opacity: 1;\n      transition-delay: 0.15s;\n    }\n\n    /* Column borders */\n\n    :host([theme~='column-borders']) [part~='cell']:not([last-column]):not([part~='details-cell']) {\n      border-right: var(--_lumo-grid-border-width) solid var(--_lumo-grid-secondary-border-color);\n    }\n\n    /* Frozen columns */\n\n    [last-frozen] {\n      border-right: var(--_lumo-grid-border-width) solid transparent;\n      overflow: hidden;\n    }\n\n    :host([overflow~='left']) [part~='cell'][last-frozen]:not([part~='details-cell']) {\n      border-right-color: var(--_lumo-grid-border-color);\n    }\n\n    /* Row stripes */\n\n    :host([theme~='row-stripes']) [part~='row']:not([odd]) [part~='body-cell'],\n    :host([theme~='row-stripes']) [part~='row']:not([odd]) [part~='details-cell'] {\n      background-image: linear-gradient(var(--lumo-contrast-5pct), var(--lumo-contrast-5pct));\n      background-repeat: repeat-x;\n    }\n\n    /* Selected row */\n\n    /* Raise the selected rows above unselected rows (so that box-shadow can cover unselected rows) */\n    :host(:not([reordering])) [part~='row'][selected] {\n      z-index: 1;\n    }\n\n    :host(:not([reordering])) [part~='row'][selected] [part~='body-cell']:not([part~='details-cell']) {\n      background-image: linear-gradient(var(--_lumo-grid-selected-row-color), var(--_lumo-grid-selected-row-color));\n      background-repeat: repeat;\n    }\n\n    /* Cover the border of an unselected row */\n    :host(:not([theme~='no-row-borders'])) [part~='row'][selected] [part~='cell']:not([part~='details-cell']) {\n      box-shadow: 0 var(--_lumo-grid-border-width) 0 0 var(--_lumo-grid-selected-row-color);\n    }\n\n    /* Compact */\n\n    :host([theme~='compact']) [part='row']:only-child [part~='header-cell'] {\n      min-height: var(--lumo-size-m);\n    }\n\n    :host([theme~='compact']) [part~='cell'] {\n      min-height: var(--lumo-size-s);\n    }\n\n    :host([theme~='compact']) [part='row'][first] [part~='cell']:not([part~='details-cell']) {\n      min-height: calc(var(--lumo-size-s) - var(--_lumo-grid-border-width));\n    }\n\n    :host([theme~='compact']) [part~='cell'] ::slotted(vaadin-grid-cell-content) {\n      padding: var(--lumo-space-xs) var(--lumo-space-s);\n    }\n\n    /* Wrap cell contents */\n\n    :host([theme~='wrap-cell-content']) [part~='cell'] ::slotted(vaadin-grid-cell-content) {\n      white-space: normal;\n    }\n\n    /* RTL specific styles */\n\n    :host([dir='rtl']) [part~='row'][dragstart] [part~='cell'][last-column] {\n      border-radius: var(--lumo-border-radius-s) 0 0 var(--lumo-border-radius-s);\n    }\n\n    :host([dir='rtl']) [part~='row'][dragstart] [part~='cell'][first-column] {\n      border-radius: 0 var(--lumo-border-radius-s) var(--lumo-border-radius-s) 0;\n    }\n\n    :host([dir='rtl'][theme~='column-borders']) [part~='cell']:not([last-column]):not([part~='details-cell']) {\n      border-right: none;\n      border-left: var(--_lumo-grid-border-width) solid var(--_lumo-grid-secondary-border-color);\n    }\n\n    :host([dir='rtl']) [last-frozen] {\n      border-right: none;\n      border-left: var(--_lumo-grid-border-width) solid transparent;\n    }\n\n    :host([dir='rtl'][overflow~='right']) [part~='cell'][last-frozen]:not([part~='details-cell']) {\n      border-left-color: var(--_lumo-grid-border-color);\n    }\n  `,\n  { moduleId: 'lumo-grid' }\n);\n\nregisterStyles(\n  'vaadin-checkbox',\n  css`\n    :host(.vaadin-grid-select-all-checkbox) {\n      font-size: var(--lumo-font-size-m);\n    }\n  `,\n  { moduleId: 'vaadin-grid-select-all-checkbox-lumo' }\n);\n"
      }
     ]
    },
    {
     "id": 179,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-icons@4.3.2/node_modules/@vaadin/vaadin-icons/vaadin-icons.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-icons@4.3.2/node_modules/@vaadin/vaadin-icons/vaadin-icons.js",
       "source": "import '@polymer/iron-icon/iron-icon.js';\nimport './iconset.js';\n\n/**\n@license\nCopyright (c) 2015-2019 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/**\n`vaadin-icons` is a set of 600+ icons which can be used together with\nPolymer's [`iron-icon`](https://www.webcomponents.org/element/@polymer/iron-icon) component.\n\nTo use the `vaadin-icons` iconset, [install and import](https://github.com/vaadin/vaadin-icons#installation)\nthe iconset, and specify the icon as `vaadin:<icon>`. For example, to use\na cart icon, you would use:\n```html\n<iron-icon icon=\"vaadin:cart\"></iron-icon>\n```\n\nFor the complete list of available icons, see https://vaadin.com/components/vaadin-icons/html-examples\n@pseudoElement vaadin-icons\n@demo\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\n;\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-icons@4.3.2/node_modules/@vaadin/vaadin-icons/iconset.js",
       "source": "import '@polymer/iron-iconset-svg/iron-iconset-svg.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<iron-iconset-svg name=\"vaadin\" size=\"16\">\n<svg><defs>\n<g id=\"abacus\"><path d=\"M0 0v16h16v-16h-16zM14 2v3h-0.1c-0.2-0.6-0.8-1-1.4-1s-1.2 0.4-1.4 1h-3.2c-0.2-0.6-0.7-1-1.4-1s-1.2 0.4-1.4 1h-0.2c-0.2-0.6-0.7-1-1.4-1s-1.2 0.4-1.4 1h-0.1v-3h12zM13.9 10c-0.2-0.6-0.8-1-1.4-1s-1.2 0.4-1.4 1h-0.2c-0.2-0.6-0.8-1-1.4-1s-1.2 0.4-1.4 1h-3.2c-0.2-0.6-0.7-1-1.4-1s-1.2 0.4-1.4 1h-0.1v-4h0.1c0.2 0.6 0.8 1 1.4 1s1.2-0.4 1.4-1h0.2c0.2 0.6 0.8 1 1.4 1s1.2-0.4 1.4-1h3.2c0.2 0.6 0.8 1 1.4 1s1.2-0.4 1.4-1h0.1l-0.1 4zM2 14v-3h0.1c0.2 0.6 0.8 1 1.4 1s1.2-0.4 1.4-1h3.2c0.2 0.6 0.8 1 1.4 1s1.2-0.4 1.4-1h0.2c0.2 0.6 0.8 1 1.4 1s1.2-0.4 1.4-1h0.1v3h-12z\"></path></g>\n<g id=\"absolute-position\"><path d=\"M0 0v16h16v-16h-16zM15 15h-14v-6h3v1l3-2-3-2v1h-3v-6h6v3h-1l2 3 2-3h-1v-3h6v14z\"></path></g>\n<g id=\"academy-cap\"><path d=\"M15.090 12.79c0.235-0.185 0.385-0.469 0.385-0.789 0-0.358-0.188-0.672-0.471-0.849l-0.004-5.822-1 0.67v5.15c-0.283 0.18-0.468 0.492-0.468 0.847 0 0.316 0.147 0.598 0.376 0.782l-0.378 0.502c-0.323 0.41-0.521 0.931-0.53 1.498l-0 1.222h0.81c0.002 0 0.004 0 0.005 0 0.411 0 0.757-0.282 0.853-0.664l0.331-1.336v2h1v-1.21c-0.009-0.569-0.207-1.090-0.534-1.505z\"></path><path d=\"M8 0l-8 4 8 5 8-5-8-4z\"></path><path d=\"M8 10l-5-3.33v1.71c0 0.91 2.94 3.62 5 3.62s5-2.71 5-3.62v-1.71z\"></path></g>\n<g id=\"accessibility\"><path d=\"M10.4 10h-0.5c0.1 0.3 0.1 0.7 0.1 1 0 2.2-1.8 4-4 4s-4-1.8-4-4c0-2.1 1.6-3.8 3.7-4l-0.2-1c-2.6 0.4-4.5 2.4-4.5 5 0 2.8 2.2 5 5 5 2.4 0 4.4-1.7 4.9-3.9l-0.5-2.1z\"></path><path d=\"M13.1 13l-1.1-5h-4.1l-0.2-1h3.3v-1h-3.5l-0.6-2.5c0.9-0.1 1.6-0.8 1.6-1.7 0-1-0.8-1.8-1.8-1.8s-1.7 0.8-1.7 1.8c0 0.6 0.3 1.2 0.8 1.5l1.3 5.7h4.1l1.2 5h2.6v-1h-1.9z\"></path></g>\n<g id=\"accordion-menu\"><path d=\"M0 4v8h16v-8h-16zM15 11h-14v-4h14v4z\"></path><path d=\"M0 0h16v3h-16v-3z\"></path><path d=\"M0 13h16v3h-16v-3z\"></path></g>\n<g id=\"add-dock\"><path d=\"M0 11v5h16v-5h-16zM12 15h-3v-3h3v3z\"></path><path d=\"M12 7v-2c0-5-8-5-8-5s5 0 5 5v2h-2l3.5 3 3.5-3h-2z\"></path></g>\n<g id=\"adjust\"><path d=\"M8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zM2 8c0-3.3 2.7-6 6-6v12c-3.3 0-6-2.7-6-6z\"></path></g>\n<g id=\"adobe-flash\"><path d=\"M0 0v16h16v-16h-16zM13 4.4c-3 0-3.3 2.6-3.3 2.6h1.3v2h-2.4c-1.8 5.8-5.6 5-5.6 5v-2.5c0 0 2.5 0.6 3.9-4 1.8-6.1 6.1-5.5 6.1-5.5v2.4z\"></path></g>\n<g id=\"airplane\"><path d=\"M12.3 6.5c0.5-0.5 0.9-0.8 1.2-1.1 1.6-1.6 3.2-4.1 2.2-5.1s-3.4 0.6-5 2.2c-0.3 0.3-0.6 0.7-1.1 1.2l-7-3.2c-0.7-0.3-1.5-0.2-2 0.3l-0.6 0.5 6.6 5.7c-1.3 1.6-2.7 3.1-3.4 4l-1.1-0.6c-0.5-0.3-1.2-0.3-1.6 0.2l-0.3 0.3 2.8 2.1 2 2.8 0.3-0.3c0.4-0.4 0.5-1.1 0.2-1.6l-0.5-1.1c0.9-0.7 2.4-2.1 4-3.4l5.7 6.6 0.5-0.5c0.5-0.5 0.6-1.3 0.3-2l-3.2-7z\"></path></g>\n<g id=\"alarm\"><path d=\"M8 5h-1v5h4v-1l-2.93 0.070-0.070-4.070z\"></path><path d=\"M5.46 0.87c-0.387-0.522-1-0.856-1.692-0.856-0.41 0-0.793 0.118-1.117 0.321l-0.991 0.765c-0.41 0.384-0.666 0.929-0.666 1.534 0 0.496 0.172 0.951 0.459 1.31z\"></path><path d=\"M14.34 1.1l-1-0.77c-0.315-0.198-0.698-0.316-1.108-0.316-0.692 0-1.305 0.334-1.688 0.85l3.996 3.076c0.287-0.356 0.46-0.813 0.46-1.312 0-0.602-0.253-1.145-0.659-1.528z\"></path><path d=\"M12.87 14c1.308-1.268 2.122-3.038 2.13-4.998-0.028-3.856-3.145-6.973-6.997-7.002-3.857 0.028-6.975 3.145-7.003 6.997 0.008 1.965 0.822 3.735 2.128 5.001l-0.938 0.942c-0.075 0.102-0.12 0.231-0.12 0.37 0 0.348 0.282 0.63 0.63 0.63 0.139 0 0.268-0.045 0.372-0.122l0.998-0.999c1.092 0.758 2.446 1.211 3.905 1.211s2.813-0.453 3.928-1.226l0.977 1.015c0.102 0.075 0.231 0.12 0.37 0.12 0.348 0 0.63-0.282 0.63-0.63 0-0.139-0.045-0.268-0.122-0.372zM2.87 9c0.028-2.822 2.308-5.102 5.127-5.13 2.825 0.028 5.105 2.308 5.133 5.127-0.028 2.825-2.308 5.105-5.127 5.133-2.825-0.028-5.105-2.308-5.133-5.127z\"></path></g>\n<g id=\"align-center\"><path d=\"M5 0h6v3h-6v-3z\"></path><path d=\"M1 4h14v3h-14v-3z\"></path><path d=\"M3 8h10v3h-10v-3z\"></path><path d=\"M0 12h16v3h-16v-3z\"></path></g>\n<g id=\"align-justify\"><path d=\"M0 0h16v3h-16v-3z\"></path><path d=\"M0 4h16v3h-16v-3z\"></path><path d=\"M0 12h16v3h-16v-3z\"></path><path d=\"M0 8h16v3h-16v-3z\"></path></g>\n<g id=\"align-left\"><path d=\"M0 0h11v3h-11v-3z\"></path><path d=\"M0 4h15v3h-15v-3z\"></path><path d=\"M0 8h13v3h-13v-3z\"></path><path d=\"M0 12h16v3h-16v-3z\"></path></g>\n<g id=\"align-right\"><path d=\"M5 0h11v3h-11v-3z\"></path><path d=\"M1 4h15v3h-15v-3z\"></path><path d=\"M3 8h13v3h-13v-3z\"></path><path d=\"M0 12h16v3h-16v-3z\"></path></g>\n<g id=\"alt-a\"><path d=\"M14 7v-1h-1v-1h-1v1h-0.5v1h0.5v3.56c0 1 0.56 1.44 2 1.44v-1c-0.055 0.012-0.119 0.019-0.185 0.019-0.359 0-0.669-0.21-0.813-0.514l-0.002-3.505h1z\"></path><path d=\"M9 3h1v9h-1v-9z\"></path><path d=\"M3 12l0.57-2h2.82l0.61 2h1l-2.27-8h-1.46l-2.27 8h1zM5 5.1l1.11 3.9h-2.22z\"></path></g>\n<g id=\"alt\"><path d=\"M3.89 9h2.22l-1.11-3.9-1.11 3.9z\"></path><path d=\"M0 0v16h16v-16h-16zM7 12l-0.61-2h-2.78l-0.61 2h-1l2.27-8h1.46l2.27 8h-1zM10 12h-1v-9h1v9zM14 7h-1v3.5s0 0.5 1 0.5v1c-1 0-2-0.44-2-1.44v-3.56h-0.5v-1h0.5v-1h1v1h1v1z\"></path></g>\n<g id=\"ambulance\"><path d=\"M6.18 14c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path><path d=\"M14 14c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path><path d=\"M5 6h-1v1h-1v1h1v1h1v-1h1v-1h-1v-1z\"></path><path d=\"M15.76 8.64l-3-4.53c-0.455-0.673-1.215-1.11-2.078-1.11-0.008 0-0.015 0-0.023 0l-2.659-0v-1c0-0.552-0.448-1-1-1s-1 0.448-1 1v1h-4.5c-0.828 0-1.5 0.672-1.5 1.5v8.5h1.37c0.474-1.135 1.546-1.931 2.812-2 1.278 0.072 2.345 0.868 2.81 1.978l2.188 0.021c0.474-1.135 1.546-1.931 2.812-2 1.303 0.003 2.405 0.827 2.822 1.979l1.187 0.021v-3.57c-0.001-0.294-0.090-0.568-0.243-0.795zM6.92 8.12c-0.266 1.117-1.255 1.935-2.435 1.935-1.381 0-2.5-1.119-2.5-2.5 0-1.18 0.818-2.17 1.918-2.432 0.195-0.049 0.399-0.075 0.609-0.075 1.37 0 2.48 1.11 2.48 2.48 0 0.21-0.026 0.414-0.075 0.609zM10 8v-3h0.85c0.003-0 0.006-0 0.009-0 0.777 0 1.461 0.394 1.866 0.992l1.325 2.008z\"></path></g>\n<g id=\"anchor\"><path d=\"M13 9v2c0 0-0.8 1.7-4 1.9v-6.9h2.2c0.2 0.3 0.5 0.5 0.8 0.5 0.6 0 1-0.4 1-1s-0.4-1-1-1c-0.4 0-0.7 0.2-0.8 0.5h-2.2v-1.3c0.6-0.3 1-1 1-1.7 0-1.1-0.9-2-2-2s-2 0.9-2 2c0 0.7 0.4 1.4 1 1.7v1.3h-2.2c-0.1-0.3-0.4-0.5-0.8-0.5-0.6 0-1 0.4-1 1s0.4 1 1 1c0.4 0 0.7-0.2 0.8-0.5h2.2v7c-3.3-0.3-4-2-4-2v-2h-3c0 0 2.8 7 8 7 5 0 8-7 8-7h-3zM8 1c0.6 0 1 0.4 1 1s-0.4 1-1 1-1-0.4-1-1 0.4-1 1-1z\"></path></g>\n<g id=\"angle-double-down\"><path d=\"M3 2v2l5 5 5-5v-2l-5 5z\"></path><path d=\"M3 7v2l5 5 5-5v-2l-5 5z\"></path></g>\n<g id=\"angle-double-left\"><path d=\"M14 3h-2l-5 5 5 5h2l-5-5z\"></path><path d=\"M9 3h-2l-5 5 5 5h2l-5-5z\"></path></g>\n<g id=\"angle-double-right\"><path d=\"M2 13h2l5-5-5-5h-2l5 5z\"></path><path d=\"M7 13h2l5-5-5-5h-2l5 5z\"></path></g>\n<g id=\"angle-double-up\"><path d=\"M13 14v-2l-5-5-5 5v2l5-5z\"></path><path d=\"M13 9v-2l-5-5-5 5v2l5-5z\"></path></g>\n<g id=\"angle-down\"><path d=\"M13 4v2l-5 5-5-5v-2l5 5z\"></path></g>\n<g id=\"angle-left\"><path d=\"M12 13h-2l-5-5 5-5h2l-5 5z\"></path></g>\n<g id=\"angle-right\"><path d=\"M4 13h2l5-5-5-5h-2l5 5z\"></path></g>\n<g id=\"angle-up\"><path d=\"M3 12v-2l5-5 5 5v2l-5-5z\"></path></g>\n<g id=\"archive\"><path d=\"M0 1h16v3h-16v-3z\"></path><path d=\"M1 5v11h14v-11h-14zM11 9h-6v-2h6v2z\"></path></g>\n<g id=\"archives\"><path d=\"M11 2h-6v4h6v-4zM9 4h-2v-1h2v1z\"></path><path d=\"M3 0v16h2v-1h6v1h2v-16h-10zM12 14h-8v-6h8v6zM12 7h-8v-6h8v6z\"></path><path d=\"M11 9h-6v4h6v-4zM9 11h-2v-1h2v1z\"></path></g>\n<g id=\"area-select\"><path d=\"M7.9 7.9l2.1 7.5 1.7-2.6 3.2 3.2 1.1-1.1-3.3-3.2 2.7-1.6z\"></path><path d=\"M8 12h-7v-9h12v5.4l1 0.2v-6.6h-14v11h8.2z\"></path></g>\n<g id=\"arrow-backward\"><path d=\"M0 7.9l6-4.9v3c0 0 1.1 0 2 0 8 0 8 8 8 8s-1-4-7.8-4c-1.1 0-1.8 0-2.2 0v2.9l-6-5z\"></path></g>\n<g id=\"arrow-circle-down-o\"><path d=\"M1 8c0-3.9 3.1-7 7-7s7 3.1 7 7-3.1 7-7 7-7-3.1-7-7zM0 8c0 4.4 3.6 8 8 8s8-3.6 8-8-3.6-8-8-8-8 3.6-8 8v0z\"></path><path d=\"M9 9.6l1.8-1.8 1.4 1.4-4.2 4.2-4.2-4.2 1.4-1.4 1.8 1.8v-6.6h2v6.6z\"></path></g>\n<g id=\"arrow-circle-down\"><path d=\"M0 8c0 4.4 3.6 8 8 8s8-3.6 8-8-3.6-8-8-8c-4.4 0-8 3.6-8 8zM9 9.6l1.8-1.8 1.4 1.4-4.2 4.2-4.2-4.2 1.4-1.4 1.8 1.8v-6.6h2v6.6z\"></path></g>\n<g id=\"arrow-circle-left-o\"><path d=\"M8 1c3.9 0 7 3.1 7 7s-3.1 7-7 7-7-3.1-7-7 3.1-7 7-7zM8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8v0z\"></path><path d=\"M6.4 9l1.8 1.8-1.4 1.4-4.2-4.2 4.2-4.2 1.4 1.4-1.8 1.8h6.6v2h-6.6z\"></path></g>\n<g id=\"arrow-circle-left\"><path d=\"M8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zM6.4 9l1.8 1.8-1.4 1.4-4.2-4.2 4.2-4.2 1.4 1.4-1.8 1.8h6.6v2h-6.6z\"></path></g>\n<g id=\"arrow-circle-right-o\"><path d=\"M8 15c-3.9 0-7-3.1-7-7s3.1-7 7-7 7 3.1 7 7-3.1 7-7 7zM8 16c4.4 0 8-3.6 8-8s-3.6-8-8-8-8 3.6-8 8 3.6 8 8 8v0z\"></path><path d=\"M9.6 7l-1.8-1.8 1.4-1.4 4.2 4.2-4.2 4.2-1.4-1.4 1.8-1.8h-6.6v-2h6.6z\"></path></g>\n<g id=\"arrow-circle-right\"><path d=\"M8 16c4.4 0 8-3.6 8-8s-3.6-8-8-8-8 3.6-8 8 3.6 8 8 8zM9.6 7l-1.8-1.8 1.4-1.4 4.2 4.2-4.2 4.2-1.4-1.4 1.8-1.8h-6.6v-2h6.6z\"></path></g>\n<g id=\"arrow-circle-up-o\"><path d=\"M15 8c0 3.9-3.1 7-7 7s-7-3.1-7-7 3.1-7 7-7 7 3.1 7 7zM16 8c0-4.4-3.6-8-8-8s-8 3.6-8 8c0 4.4 3.6 8 8 8s8-3.6 8-8v0z\"></path><path d=\"M7 6.4l-1.8 1.8-1.4-1.4 4.2-4.2 4.2 4.2-1.4 1.4-1.8-1.8v6.6h-2v-6.6z\"></path></g>\n<g id=\"arrow-circle-up\"><path d=\"M16 8c0-4.4-3.6-8-8-8s-8 3.6-8 8 3.6 8 8 8 8-3.6 8-8zM7 6.4l-1.8 1.8-1.4-1.4 4.2-4.2 4.2 4.2-1.4 1.4-1.8-1.8v6.6h-2v-6.6z\"></path></g>\n<g id=\"arrow-down\"><path d=\"M12.5 8.6l-3.5 3.6v-12.2h-2v12.2l-3.5-3.6-1.4 1.5 5.9 5.9 5.9-5.9z\"></path></g>\n<g id=\"arrow-forward\"><path d=\"M16 7.9l-6-4.9v3c-0.5 0-1.1 0-2 0-8 0-8 8-8 8s1-4 7.8-4c1.1 0 1.8 0 2.2 0v2.9l6-5z\"></path></g>\n<g id=\"arrow-left\"><path d=\"M7.4 12.5l-3.6-3.5h12.2v-2h-12.2l3.6-3.5-1.5-1.4-5.9 5.9 5.9 5.9z\"></path></g>\n<g id=\"arrow-long-down\"><path d=\"M7 1h2v11h2l-3 3-3-3h2z\"></path></g>\n<g id=\"arrow-long-left\"><path d=\"M15 7v2h-11v2l-3-3 3-3v2z\"></path></g>\n<g id=\"arrow-right\"><path d=\"M8.6 3.5l3.5 3.5h-12.1v2h12.1l-3.5 3.5 1.4 1.4 6-5.9-6-5.9z\"></path></g>\n<g id=\"arrow-up\"><path d=\"M3.4 7.4l3.6-3.6v12.2h2v-12.2l3.5 3.6 1.4-1.5-5.9-5.9-6 5.9z\"></path></g>\n<g id=\"arrows-cross\"><path d=\"M15 5v-4h-4l1.3 1.3-4.3 4.3-4.3-4.3 1.3-1.3h-4v4l1.3-1.3 4.3 4.3-4.3 4.3-1.3-1.3v4h4l-1.3-1.3 4.3-4.3 4.3 4.3-1.3 1.3h4v-4l-1.3 1.3-4.3-4.3 4.3-4.3z\"></path></g>\n<g id=\"arrows-long-h\"><path d=\"M16 8l-3-3v2h-10v-2l-3 3 3 3v-2h10v2z\"></path></g>\n<g id=\"arrows-long-right\"><path d=\"M1 9v-2h11v-2l3 3-3 3v-2z\"></path></g>\n<g id=\"arrows-long-up\"><path d=\"M9 15h-2v-11h-2l3-3 3 3h-2z\"></path></g>\n<g id=\"arrows-long-v\"><path d=\"M9 3h2l-3-3-3 3h2v10h-2l3 3 3-3h-2z\"></path></g>\n<g id=\"arrows\"><path d=\"M16 8l-3-3v2h-4v-4h2l-3-3-3 3h2v4h-4v-2l-3 3 3 3v-2h4v4h-2l3 3 3-3h-2v-4h4v2z\"></path></g>\n<g id=\"asterisk\"><path d=\"M15.9 5.7l-2-3.4-3.9 2.2v-4.5h-4v4.5l-4-2.2-2 3.4 3.9 2.3-3.9 2.3 2 3.4 4-2.2v4.5h4v-4.5l3.9 2.2 2-3.4-4-2.3z\"></path></g>\n<g id=\"at\"><path d=\"M7.5 12.2c-2.3 0-4.2-1.9-4.2-4.2s1.9-4.2 4.2-4.2 4.2 1.9 4.2 4.2c0.1 2.3-1.9 4.2-4.2 4.2zM7.5 5.2c-1.5 0-2.7 1.3-2.7 2.8s1.2 2.8 2.8 2.8 2.8-1.2 2.8-2.8-1.4-2.8-2.9-2.8z\"></path><path d=\"M8 16c-4.4 0-8-3.6-8-8s3.6-8 8-8 8 3.6 8 8c0 1.5-0.4 3-1.2 4.2-0.3 0.5-1.1 1.2-2.3 1.2-0.8 0-1.3-0.3-1.6-0.6-0.7-0.7-0.6-1.8-0.6-1.9v-6.9h1.5v7c0 0.2 0 0.6 0.2 0.8 0 0 0.2 0.2 0.5 0.2 0.7 0 1.1-0.5 1.1-0.5 0.6-1 1-2.2 1-3.4 0-3.6-2.9-6.5-6.5-6.5s-6.6 2.8-6.6 6.4 2.9 6.5 6.5 6.5c0.7 0 1.3-0.1 1.9-0.3l0.4 1.4c-0.7 0.3-1.5 0.4-2.3 0.4z\"></path></g>\n<g id=\"automation\"><path d=\"M14 12c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path><path d=\"M11.7 16v0c-0.8 0-1.6-0.2-2.3-0.7l-6.2-3.3c-0.5-0.4-0.9-0.6-1.3-1-1.2-1.2-1.9-2.9-1.9-4.6s0.7-3.3 1.9-4.5c1.2-1.2 2.8-1.9 4.5-1.9s3.3 0.7 4.6 1.9c0.4 0.4 0.6 0.7 1 1.2l3.5 6.4c1 1.7 0.7 3.8-0.7 5.2-0.9 0.9-1.9 1.3-3.1 1.3zM6.4 1c-1.4 0-2.8 0.6-3.8 1.6s-1.6 2.4-1.6 3.8c0 1.5 0.6 2.8 1.6 3.8 0.3 0.3 0.6 0.5 1.1 0.8l6.3 3.4c0.6 0.4 1.2 0.5 1.8 0.5v0c0.9 0 1.7-0.3 2.3-1 1.1-1.1 1.3-2.7 0.5-4l-3.5-6.4c-0.3-0.4-0.5-0.7-0.8-1-1.1-0.9-2.4-1.5-3.9-1.5z\"></path><path d=\"M11 7v-1l-1.4-0.5c-0.1-0.2-0.1-0.3-0.2-0.5l0.6-1.3-0.7-0.7-1.3 0.6c-0.2-0.1-0.3-0.1-0.5-0.2l-0.5-1.4h-1l-0.5 1.4c-0.2 0.1-0.3 0.1-0.5 0.2l-1.3-0.6-0.7 0.7 0.6 1.3c-0.1 0.2-0.1 0.3-0.2 0.5l-1.4 0.5v1l1.4 0.5c0.1 0.2 0.1 0.3 0.2 0.5l-0.6 1.3 0.7 0.7 1.3-0.6c0.2 0.1 0.3 0.2 0.5 0.2l0.5 1.4h1l0.5-1.4c0.2-0.1 0.3-0.1 0.5-0.2l1.3 0.6 0.7-0.7-0.6-1.3c0.1-0.2 0.2-0.3 0.2-0.5l1.4-0.5zM6.5 8c-0.8 0-1.5-0.7-1.5-1.5s0.7-1.5 1.5-1.5 1.5 0.7 1.5 1.5-0.7 1.5-1.5 1.5z\"></path></g>\n<g id=\"backspace-a\"><path d=\"M5 12l-5-4 5-4v2h11v4h-11v2z\"></path></g>\n<g id=\"backspace\"><path d=\"M0 2v12h16v-12h-16zM13 9h-7v2l-3-3 3-3v2h7v2z\"></path></g>\n<g id=\"backwards\"><path d=\"M16 15v-14l-8 7z\"></path><path d=\"M8 15v-14l-8 7z\"></path></g>\n<g id=\"ban\"><path d=\"M8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zM8 2c1.3 0 2.5 0.4 3.5 1.1l-8.4 8.4c-0.7-1-1.1-2.2-1.1-3.5 0-3.3 2.7-6 6-6zM8 14c-1.3 0-2.5-0.4-3.5-1.1l8.4-8.4c0.7 1 1.1 2.2 1.1 3.5 0 3.3-2.7 6-6 6z\"></path></g>\n<g id=\"bar-chart-h\"><path d=\"M1 15v-15h-1v16h16v-1h-15z\"></path><path d=\"M2 8h4v6h-4v-6z\"></path><path d=\"M7 2h4v12h-4v-12z\"></path><path d=\"M12 6h4v8h-4v-8z\"></path></g>\n<g id=\"bar-chart-v\"><path d=\"M1 15v-15h-1v16h16v-1h-15z\"></path><path d=\"M8 0v4h-6v-4h6z\"></path><path d=\"M14 5v4h-12v-4h12z\"></path><path d=\"M10 10v4h-8v-4h8z\"></path></g>\n<g id=\"bar-chart\"><path d=\"M0 15h15v1h-15v-1z\"></path><path d=\"M0 11h3v3h-3v-3z\"></path><path d=\"M4 9h3v5h-3v-5z\"></path><path d=\"M8 5h3v9h-3v-9z\"></path><path d=\"M12 0h3v14h-3v-14z\"></path></g>\n<g id=\"barcode\"><path d=\"M0 3h1v10h-1v-10z\"></path><path d=\"M8 3h2v10h-2v-10z\"></path><path d=\"M11 3h1v10h-1v-10z\"></path><path d=\"M13 3h1v10h-1v-10z\"></path><path d=\"M15 3h1v10h-1v-10z\"></path><path d=\"M2 3h3v10h-3v-10z\"></path><path d=\"M6 3h1v10h-1v-10z\"></path></g>\n<g id=\"bed\"><path d=\"M4.28 7h2.72l-1.15-1.68c-0.542-0.725-1.36-1.216-2.295-1.319l-0.555-0.001v1.54c-0.011 0.063-0.018 0.136-0.018 0.211 0 0.69 0.56 1.25 1.25 1.25 0.017 0 0.034-0 0.050-0.001z\"></path><path d=\"M13 7v-0.28c0-0.003 0-0.007 0-0.010 0-0.934-0.749-1.693-1.678-1.71l-4.692-0c0.5 0.62 1.37 2 1.37 2h5z\"></path><path d=\"M15 5.1c-0.552 0-1 0.448-1 1v1.9h-12v-4c0-0.552-0.448-1-1-1s-1 0.448-1 1v9h2v-2h12v2h2v-6.9c0-0.552-0.448-1-1-1z\"></path></g>\n<g id=\"bell-o\"><path d=\"M12.7 11.4c-0.5-0.2-0.7-0.7-0.7-1.2v-5.2c0 0 0-2.4-3-2.9v-1.1c0 0 0.1-1-1-1s-1 1-1 1v1.1c-3 0.5-3 2.9-3 2.9v5.2c0 0.5-0.3 1-0.7 1.2l-1.3 0.6v2h4c0 0-0.1 2 2 2s2-2 2-2h4v-2l-1.3-0.6zM13 13h-10v-0.4l0.7-0.4c0.8-0.3 1.3-1.1 1.3-2v-5.2c0-0.1 0-1.6 2.2-1.9l0.8-0.2 0.8 0.1c2 0.4 2.2 1.7 2.2 2v5.2c0 0.9 0.5 1.7 1.3 2.1l0.7 0.4v0.3z\"></path></g>\n<g id=\"bell-slash-o\"><path d=\"M15.2 0l-3.6 3.6c-0.4-0.6-1.2-1.3-2.6-1.5v-1.1c0 0 0.1-1-1-1s-1 1-1 1v1.1c-3 0.5-3 2.9-3 2.9v5.2c0 0.5-0.3 1-0.7 1.2l-1.3 0.6v1.3l-2 2v0.7h0.7l15.3-15.4v-0.6h-0.8zM5 10.3c0-0.1 0-0.1 0 0v-5.3c0-0.1 0.1-1.6 2.2-1.9l0.8-0.2 0.8 0.1c1.2 0.2 1.8 0.8 2 1.3l-5.8 6z\"></path><path d=\"M12 10.2v-4.6l-1 1v3.5c0 0.9 0.5 1.7 1.3 2.1l0.7 0.4v0.4h-8.3l-1 1h2.4c0 0-0.1 2 2 2s2-2 2-2h3.9v-2l-1.3-0.6c-0.4-0.3-0.7-0.7-0.7-1.2z\"></path></g>\n<g id=\"bell-slash\"><path d=\"M15.2 0l-3.6 3.6c-0.5-0.6-1.2-1.3-2.6-1.5v-1.1c0 0 0.1-1-1-1s-1 1-1 1v1.1c-2.8 0.5-3 2.9-3 2.9v5.2c0 0.5-0.3 1-0.7 1.2l-1.3 0.6v1h0.3l-2.3 2.3v0.7h0.7l15.3-15.4v-0.6h-0.8zM6 4.8v4.5l-1 1v-5.3c0 0 0-0.8 0.7-1.4 0.7-0.7 1.3-0.6 1.3-0.6s-1 0.7-1 1.8z\"></path><path d=\"M8 16c2.1 0 2-2 2-2h-4c0 0-0.1 2 2 2z\"></path><path d=\"M12 10.2v-4.6l-6 6-0.3 0.4-1 1h9.3v-1l-1.3-0.6c-0.4-0.3-0.7-0.7-0.7-1.2z\"></path></g>\n<g id=\"bell\"><path d=\"M6 14h4c0 0 0.1 2-2 2s-2-2-2-2z\"></path><path d=\"M12.7 11.4c-0.5-0.2-0.7-0.7-0.7-1.2v-5.2c0 0-0.2-2.4-3-2.9v-1.1c0 0 0.1-1-1-1s-1 1-1 1v1.1c-2.8 0.5-3 2.9-3 2.9v5.2c0 0.5-0.3 1-0.7 1.2l-1.3 0.6v1h12v-1l-1.3-0.6zM6 4.8v7.2h-2c0.8 0 1-1 1-1v-6c0 0 0-0.8 0.7-1.4 0.7-0.7 1.3-0.6 1.3-0.6s-1 0.7-1 1.8z\"></path></g>\n<g id=\"boat\"><path d=\"M1.5 9.6c1.1 0.7 2.5 1.9 2.5 3.3 0 0.4 0 0.7 0 1.1 0 0 0.1 0 0.1 0s0.9 0 2-1c1 1 2 1 2 1s1 0 2-1c1 1 1.9 1 1.9 1s0.1 0 0.1 0c0-0.3 0-0.7 0-1.1 0-1.4 1.4-2.6 2.5-3.3 0.6-0.4 0.5-1.2-0.2-1.4l-1.4-0.4v-3.8h-1v-1h-3v-2h-2v2h-3v1h-1v3.8l-1.3 0.4c-0.8 0.2-0.8 1-0.2 1.4zM4 5h1v-1h6v1h1v2.5l-3.3-1c-0.5-0.1-1-0.1-1.5 0l-3.2 1v-2.5z\"></path><path d=\"M14 14c-1 1-2 1-2 1s-1 0-2-1c-1 1-2 1-2 1s-1 0-2-1c-1 1-2 1-2 1s-1 0-2-1c-1 1-2 1-2 1v1h16v-1c0 0-1 0-2-1z\"></path></g>\n<g id=\"bold\"><path d=\"M11 7.5c0 0 2-0.8 2-3.6 0-4.1-5.1-3.9-7-3.9h-4v16h4c3.7 0 8 0 8-4.4 0-3.8-3-4.1-3-4.1zM9 4.4c0 1.8-1.5 1.6-3 1.6v-3c1.8 0 3 0.1 3 1.4zM6 13v-4c1.8 0 4-0.3 4 2.2 0 1.9-2.5 1.8-4 1.8z\"></path></g>\n<g id=\"bolt\"><path d=\"M7.99 0l-7.010 9.38 6.020-0.42-4.96 7.040 12.96-10-7.010 0.47 7.010-6.47h-7.010z\"></path></g>\n<g id=\"bomb\"><path d=\"M12 1h1v1h-1v-1z\"></path><path d=\"M12 5h1v1h-1v-1z\"></path><path d=\"M14 3h1v1h-1v-1z\"></path><path d=\"M10 3h1v1h-1v-1z\"></path><path d=\"M14.6 2.1l0.7-0.7-0.7-0.7-1.4 1.4 0.7 0.7z\"></path><path d=\"M13.9 4.2l-0.7 0.7 1.4 1.4 0.7-0.7-0.7-0.7z\"></path><path d=\"M11.1 2.8l0.7-0.7-1.4-1.4-0.7 0.7 0.7 0.7z\"></path><path d=\"M10.4 6.4l2-2-0.7-0.7-2 2-0.7-0.7-0.7 0.8c-0.8-0.5-1.8-0.8-2.8-0.8-3 0-5.5 2.5-5.5 5.5s2.5 5.5 5.5 5.5 5.5-2.5 5.5-5.5c0-1-0.3-1.9-0.7-2.8l0.7-0.7-0.6-0.6zM6 7.2c-2 0-3.4 1.8-3.4 2.8h-1c0-2 2.4-3.8 4.4-3.8v1z\"></path></g>\n<g id=\"book-dollar\"><path d=\"M12.9 2.5c-1.6-1.2-1.4-2.5-1.4-2.5h-9.5v12.5c0 1.9 2.1 3.5 4 3.5h8v-13c0 0-0.8-0.2-1.1-0.5zM7 6.3c-0.9-0.3-2.3-0.8-2.3-1.9 0.1-0.8 1.3-1.4 1.3-1.6v-0.8h1v0.7c1 0.1 1.8 0.4 1.9 0.4l-0.3 0.9c0 0-0.7-0.3-1.5-0.3-0.7 0-1.1 0.3-1.2 0.8 0 0.3 0.5 0.6 1.3 0.9 1.5 0.5 1.9 1.1 1.9 1.9 0 0.7-0.1 1.6-2.1 1.8v0.9h-1v-0.8c0-0.1-1.4-0.5-1.5-0.5l0.5-0.9c0 0 1.1 0.5 2 0.4s1.3-0.6 1.3-1c0.1-0.3-0.4-0.6-1.3-0.9zM13 15h-7c-1 0-1.8-0.6-2-1.3-0.1-0.3 0-0.7 0.4-0.7h6.6v-10.3c1 0.6 2 1.1 2 1.3v11z\"></path></g>\n<g id=\"book-percent\"><path d=\"M12.6 2.5c-1.6-1.2-1.6-2.5-1.6-2.5h-9v12.5c0 1.9 1.6 3.5 3.5 3.5h8.5v-13c0 0-1-0.2-1.4-0.5zM5.5 3.2c0.8 0 1.5 0.7 1.5 1.6s-0.7 1.4-1.5 1.4-1.5-0.6-1.5-1.4 0.7-1.6 1.5-1.6zM9 3h1l-5 7h-1l5-7zM10 8.5c0 0.8-0.7 1.5-1.5 1.5s-1.5-0.7-1.5-1.5 0.7-1.5 1.5-1.5 1.5 0.7 1.5 1.5zM13 15h-7.5c-1 0-1.8-0.6-2-1.3-0.1-0.4 0-0.7 0.4-0.7h7.1v-10.3c0 0.6 1 1.1 2 1.3v11z\"></path><path d=\"M9 8.5c0 0.276-0.224 0.5-0.5 0.5s-0.5-0.224-0.5-0.5c0-0.276 0.224-0.5 0.5-0.5s0.5 0.224 0.5 0.5z\"></path><path d=\"M6 4.8c0 0.276-0.224 0.5-0.5 0.5s-0.5-0.224-0.5-0.5c0-0.276 0.224-0.5 0.5-0.5s0.5 0.224 0.5 0.5z\"></path></g>\n<g id=\"book\"><path d=\"M12.6 2.5c-1.6-1.2-1.6-2.5-1.6-2.5h-9v12.5c0 1.9 1.6 3.5 3.5 3.5h8.5v-13c0 0-1-0.2-1.4-0.5zM4 2h5v2h-5v-2zM13 15h-7.5c-1 0-1.8-0.6-2-1.3-0.1-0.4 0-0.7 0.4-0.7h7.1v-10.3c0.4 0.6 1.2 1.1 2 1.3v11z\"></path></g>\n<g id=\"bookmark-o\"><path d=\"M3 0v16l5-5 5 5v-16h-10zM12 13.7l-4-3.9-4 3.9v-10.7h8v10.7zM12 2h-8v-1h8v1z\"></path></g>\n<g id=\"bookmark\"><path d=\"M3 0v0 1h10l0.1-1z\"></path><path d=\"M3 2h10v14l-5-5-5 5z\"></path></g>\n<g id=\"briefcase\"><path d=\"M11 3v-2h-6v2h-5v12h16v-12h-5zM10 3h-4v-1h4v1z\"></path></g>\n<g id=\"browser\"><path d=\"M15 1v-1h-15v15h1v1h15v-15h-1zM3 1h9v1h-9v-1zM1 1h1v1h-1v-1zM1 3h13v11h-13v-11z\"></path></g>\n<g id=\"bug-o\"><path d=\"M13 8v-1c1.216-1.124 1.981-2.721 2-4.497 0-0.28-0.224-0.503-0.5-0.503s-0.5 0.224-0.5 0.5c-0.018 1.112-0.431 2.125-1.105 2.906-0.876 0.978-2.15 1.594-3.569 1.594-0.020 0-0.040-0-0.059-0l-2.537 0c-0.022 0-0.049 0.001-0.075 0.001-1.414 0-2.684-0.612-3.561-1.586-0.669-0.781-1.079-1.793-1.094-2.901-0-0.279-0.224-0.503-0.5-0.503s-0.5 0.224-0.5 0.5c0.022 1.776 0.786 3.368 1.996 4.486l0.004 1.004c-3 0.060-3 1.42-3 3.47 0 0.276 0.224 0.5 0.5 0.5s0.5-0.224 0.5-0.5c0-1.72 0-2.4 2-2.47 0.031 1.11 0.245 2.161 0.612 3.136-0.383 0.006-0.696 0.176-0.942 0.414-0.445 0.624-0.711 1.402-0.711 2.242 0 0.2 0.015 0.397 0.044 0.589l-0.003 0.118c0 0.276 0.224 0.5 0.5 0.5s0.5-0.224 0.5-0.5v-0.14c-0.022-0.144-0.035-0.311-0.035-0.48 0-0.587 0.154-1.139 0.424-1.616 0.165-0.152 0.401-0.257 0.66-0.264 0.681 1.007 1.714 1.731 2.92 1.994l0.031-0.994h2v1c1.237-0.269 2.271-0.993 2.939-1.983 0.013-0.017 0.016-0.017 0.019-0.017 0.254 0 0.486 0.095 0.663 0.251 0.262 0.462 0.418 1.015 0.418 1.605 0 0.178-0.014 0.352-0.041 0.522l0.002 0.121c0 0.276 0.224 0.5 0.5 0.5s0.5-0.224 0.5-0.5v-0.14c0.025-0.165 0.039-0.356 0.039-0.551 0-0.839-0.266-1.616-0.717-2.251-0.238-0.226-0.551-0.396-0.9-0.466 0.336-0.917 0.55-1.975 0.578-3.080 2-0.012 2 0.708 2 2.458 0 0.276 0.224 0.5 0.5 0.5s0.5-0.224 0.5-0.5c0-2.030 0-3.39-3-3.47zM6 13.5c-0.44-0.253-0.805-0.589-1.083-0.989l-0.247-0.411-0.15-0.39c-0.302-0.802-0.49-1.73-0.52-2.697l-0-0.013v-1.65c0.578 0.326 1.254 0.556 1.973 0.647l0.027 5.573zM9 13h-2v-1h2v1zM9 11h-2v-1h2v1zM9 9h-2v-1h2v1zM12 9c-0.030 0.98-0.218 1.908-0.54 2.77l-0.13 0.33-0.24 0.4c-0.285 0.411-0.65 0.747-1.074 0.992l-0.016-5.492c0.743-0.081 1.421-0.297 2.029-0.624l-0.029 1.624z\"></path><path d=\"M8 6.2c1.433-0.018 2.767-0.429 3.903-1.129 0.046-0.036 0.098-0.126 0.098-0.229 0-0.008-0-0.016-0.001-0.023-0.066-1.142-0.781-2.103-1.781-2.522-0.137-0.050-0.219-0.16-0.219-0.29 0-0.002 0-0.005 0-0.008v-1.5c0-0.276-0.224-0.5-0.5-0.5s-0.5 0.224-0.5 0.5v1.2c0 0.166-0.134 0.3-0.3 0.3 0 0 0 0 0 0h-1.4c-0.166 0-0.3-0.134-0.3-0.3v-1.2c0-0.276-0.224-0.5-0.5-0.5s-0.5 0.224-0.5 0.5v1.5c-0.006 0.125-0.086 0.229-0.198 0.269-1.026 0.43-1.744 1.4-1.802 2.544-0.001 0.014-0.001 0.021-0.001 0.029 0 0.102 0.051 0.193 0.13 0.247 0.959 0.703 2.161 1.125 3.462 1.125 0.144 0 0.287-0.005 0.428-0.015zM10 3c0.552 0 1 0.448 1 1s-0.448 1-1 1c-0.552 0-1-0.448-1-1s0.448-1 1-1zM6 3c0.552 0 1 0.448 1 1s-0.448 1-1 1c-0.552 0-1-0.448-1-1s0.448-1 1-1z\"></path></g>\n<g id=\"bug\"><path d=\"M8 6.2c1.433-0.018 2.767-0.429 3.903-1.129 0.046-0.036 0.098-0.126 0.098-0.229 0-0.008-0-0.016-0.001-0.023-0.066-1.142-0.781-2.103-1.781-2.522-0.137-0.050-0.219-0.16-0.219-0.29 0-0.002 0-0.005 0-0.008v-1.5c0-0.276-0.224-0.5-0.5-0.5s-0.5 0.224-0.5 0.5v1.2c0 0.166-0.134 0.3-0.3 0.3 0 0 0 0 0 0h-1.4c-0.166 0-0.3-0.134-0.3-0.3v-1.2c0-0.276-0.224-0.5-0.5-0.5s-0.5 0.224-0.5 0.5v1.5c-0.006 0.125-0.086 0.229-0.198 0.269-1.026 0.43-1.744 1.4-1.802 2.544-0.001 0.014-0.001 0.021-0.001 0.029 0 0.102 0.051 0.193 0.13 0.247 0.959 0.703 2.161 1.125 3.462 1.125 0.144 0 0.287-0.005 0.428-0.015zM10 3c0.552 0 1 0.448 1 1s-0.448 1-1 1c-0.552 0-1-0.448-1-1s0.448-1 1-1zM6 3c0.552 0 1 0.448 1 1s-0.448 1-1 1c-0.552 0-1-0.448-1-1s0.448-1 1-1z\"></path><path d=\"M13 8v-1c1.216-1.124 1.981-2.721 2-4.497 0-0.28-0.224-0.503-0.5-0.503s-0.5 0.224-0.5 0.5c-0.018 1.112-0.431 2.125-1.105 2.906-0.876 0.978-2.15 1.594-3.569 1.594-0.020 0-0.040-0-0.059-0l-2.537 0c-0.022 0-0.049 0.001-0.075 0.001-1.414 0-2.684-0.612-3.561-1.586-0.669-0.781-1.079-1.793-1.094-2.901-0-0.279-0.224-0.503-0.5-0.503s-0.5 0.224-0.5 0.5c0.022 1.776 0.786 3.368 1.996 4.486l0.004 1.004c-3 0.060-3 1.42-3 3.47 0 0.276 0.224 0.5 0.5 0.5s0.5-0.224 0.5-0.5c0-1.72 0-2.4 2-2.47 0.031 1.11 0.245 2.161 0.612 3.136-0.383 0.006-0.696 0.176-0.942 0.414-0.445 0.624-0.711 1.402-0.711 2.242 0 0.2 0.015 0.397 0.044 0.589l-0.003 0.118c0 0.276 0.224 0.5 0.5 0.5s0.5-0.224 0.5-0.5v-0.14c-0.022-0.144-0.035-0.311-0.035-0.48 0-0.587 0.154-1.139 0.424-1.616 0.165-0.152 0.401-0.257 0.66-0.264 0.588 1.095 1.667 1.859 2.934 1.998l0.017-0.998h2v1c1.284-0.141 2.364-0.905 2.94-1.98 0.012-0.020 0.015-0.020 0.018-0.020 0.254 0 0.486 0.095 0.663 0.251 0.262 0.462 0.418 1.015 0.418 1.605 0 0.178-0.014 0.352-0.041 0.522l0.002 0.121c0 0.276 0.224 0.5 0.5 0.5s0.5-0.224 0.5-0.5v-0.14c0.025-0.165 0.039-0.356 0.039-0.551 0-0.839-0.266-1.616-0.717-2.251-0.238-0.226-0.551-0.396-0.9-0.466 0.336-0.917 0.55-1.975 0.578-3.080 2-0.012 2 0.708 2 2.458 0 0.276 0.224 0.5 0.5 0.5s0.5-0.224 0.5-0.5c0-2.030 0-3.39-3-3.47zM9 13h-2v-1h2v1zM9 11h-2v-1h2v1zM9 9h-2v-1h2v1z\"></path></g>\n<g id=\"building-o\"><path d=\"M2 0v16h12v-16h-12zM13 15h-4v-3h-2v3h-4v-14h10v14z\"></path><path d=\"M4 9h2v2h-2v-2z\"></path><path d=\"M7 9h2v2h-2v-2z\"></path><path d=\"M10 9h2v2h-2v-2z\"></path><path d=\"M4 6h2v2h-2v-2z\"></path><path d=\"M7 6h2v2h-2v-2z\"></path><path d=\"M10 6h2v2h-2v-2z\"></path><path d=\"M4 3h2v2h-2v-2z\"></path><path d=\"M7 3h2v2h-2v-2z\"></path><path d=\"M10 3h2v2h-2v-2z\"></path></g>\n<g id=\"building\"><path d=\"M3 0v16h4v-3h2v3h4v-16h-10zM6 12h-2v-2h2v2zM6 9h-2v-2h2v2zM6 6h-2v-2h2v2zM6 3h-2v-2h2v2zM9 12h-2v-2h2v2zM9 9h-2v-2h2v2zM9 6h-2v-2h2v2zM9 3h-2v-2h2v2zM12 12h-2v-2h2v2zM12 9h-2v-2h2v2zM12 6h-2v-2h2v2zM12 3h-2v-2h2v2z\"></path></g>\n<g id=\"bullets\"><path d=\"M0 2.5v0c0 0.8 0.7 1.5 1.5 1.5v0c0.8 0 1.5-0.7 1.5-1.5v0c0-0.8-0.7-1.5-1.5-1.5v0c-0.8 0-1.5 0.7-1.5 1.5z\"></path><path d=\"M0 7.5v0c0 0.8 0.7 1.5 1.5 1.5v0c0.8 0 1.5-0.7 1.5-1.5v0c0-0.8-0.7-1.5-1.5-1.5v0c-0.8 0-1.5 0.7-1.5 1.5z\"></path><path d=\"M0 12.5v0c0 0.8 0.7 1.5 1.5 1.5v0c0.8 0 1.5-0.7 1.5-1.5v0c0-0.8-0.7-1.5-1.5-1.5v0c-0.8 0-1.5 0.7-1.5 1.5z\"></path><path d=\"M5 1h11v3h-11v-3z\"></path><path d=\"M5 6h11v3h-11v-3z\"></path><path d=\"M5 11h11v3h-11v-3z\"></path></g>\n<g id=\"bullseye\"><path d=\"M8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zM8 14.9c-3.8 0-6.9-3.1-6.9-6.9s3.1-6.9 6.9-6.9 6.9 3.1 6.9 6.9-3.1 6.9-6.9 6.9z\"></path><path d=\"M8 2.3c-3.2 0-5.7 2.5-5.7 5.7s2.6 5.7 5.7 5.7 5.7-2.6 5.7-5.7-2.5-5.7-5.7-5.7zM8 12.6c-2.5 0-4.6-2.1-4.6-4.6s2.1-4.6 4.6-4.6 4.6 2.1 4.6 4.6c0 2.5-2.1 4.6-4.6 4.6z\"></path><path d=\"M8 4.6c-1.9 0-3.4 1.5-3.4 3.4s1.5 3.4 3.4 3.4c1.9 0 3.4-1.5 3.4-3.4s-1.5-3.4-3.4-3.4z\"></path></g>\n<g id=\"buss\"><path d=\"M14.67 4h-0.67v-2c0-1.105-0.895-2-2-2h-8c-1.105 0-2 0.895-2 2v2h-0.68c-0 0-0 0-0 0-0.177 0-0.32 0.143-0.32 0.32 0 0.004 0 0.007 0 0.011l-0 2.339c-0 0.003-0 0.006-0 0.010 0 0.177 0.143 0.32 0.32 0.32 0 0 0 0 0 0h0.68v6c0 0.55 0 1 1 1v1.5c0 0.276 0.224 0.5 0.5 0.5h2c0.276 0 0.5-0.224 0.5-0.5v-1.5h4v1.5c0 0.276 0.224 0.5 0.5 0.5h2c0.276 0 0.5-0.224 0.5-0.5v-1.5c1 0 1-0.45 1-1v-6h0.67c0.182 0 0.33-0.148 0.33-0.33s-0.148-0.33-0.33-0.33c-0.182 0-0.33 0.148-0.33 0.33s0.148 0.33 0.33 0.33c0.182 0 0.33-0.148 0.33-0.33v-2.34c0-0.182-0.148-0.33-0.33-0.33 0 0 0 0 0 0zM6 1h4v1h-4v-1zM4 12c-0.552 0-1-0.448-1-1s0.448-1 1-1c0.552 0 1 0.448 1 1s-0.448 1-1 1zM3 8v-5h10v5h-10zM12 12c-0.552 0-1-0.448-1-1s0.448-1 1-1c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path></g>\n<g id=\"button\"><path d=\"M15.7 5.3l-1-1c-0.2-0.2-0.4-0.3-0.7-0.3h-13c-0.6 0-1 0.4-1 1v5c0 0.3 0.1 0.6 0.3 0.7l1 1c0.2 0.2 0.4 0.3 0.7 0.3h13c0.6 0 1-0.4 1-1v-5c0-0.3-0.1-0.5-0.3-0.7zM14 10h-13v-5h13v5z\"></path></g>\n<g id=\"calc-book\"><path d=\"M11.9 0c-1.3 0-2 0.4-2.4 0.8-0.4-0.4-1.1-0.8-2.5-0.8-3.4 0-4 2-4 2v0 0 4h-3v10h7v-4.6l1.5-0.2c0 0 0.2-0.3 0.3 0.7h1.3c0.1-1 0.4-0.7 0.4-0.7l5.5 0.7v-9.8c0 0-0.6-2.1-4.1-2.1zM1 7h5v2h-5v-2zM6 10v1h-1v-1h1zM4 10v1h-1v-1h1zM2 15h-1v-1h1v1zM2 13h-1v-1h1v1zM2 11h-1v-1h1v1zM4 15h-1v-1h1v1zM4 13h-1v-1h1v1zM6 15h-1v-1h1v1zM6 13h-1v-1h1v1zM9 9.5c-0.9-0.1-1.3-0.3-2-0.3v-3.2h-3v-3.9c0-0.4 0.8-1.5 3-1.5 1.8 0 1.9 0.8 1.9 1 0 0 0 0 0 0v7.9zM15 9.9c-1-0.4-1.1-0.7-2.5-0.7-0.1 0-0.2 0-0.2 0-1 0-1.3 0.2-2.3 0.4v-7.6c0 0 0-0.1 0-0.1s0-0.1 0-0.1c0-0.2 0.2-1.1 1.9-1.1 2.3 0 3.1 0.9 3.1 1.4v7.8z\"></path></g>\n<g id=\"calc\"><path d=\"M9 3h6v2h-6v-2z\"></path><path d=\"M9 11h6v2h-6v-2z\"></path><path d=\"M5 1h-2v2h-2v2h2v2h2v-2h2v-2h-2z\"></path><path d=\"M7 10.4l-1.4-1.4-1.6 1.6-1.6-1.6-1.4 1.4 1.6 1.6-1.6 1.6 1.4 1.4 1.6-1.6 1.6 1.6 1.4-1.4-1.6-1.6z\"></path><path d=\"M13 14.5c0 0.552-0.448 1-1 1s-1-0.448-1-1c0-0.552 0.448-1 1-1s1 0.448 1 1z\"></path><path d=\"M13 9.5c0 0.552-0.448 1-1 1s-1-0.448-1-1c0-0.552 0.448-1 1-1s1 0.448 1 1z\"></path></g>\n<g id=\"calendar-briefcase\"><path d=\"M3 0h1v3h-1v-3z\"></path><path d=\"M11 0h1v3h-1v-3z\"></path><path d=\"M13 1v3h-3v-3h-5v3h-3v-3h-2v14h5v-1h-4v-8h13v3h1v-8z\"></path><path d=\"M13 10v-2h-4v2h-3v6h10v-6h-3zM10 9h2v1h-2v-1z\"></path></g>\n<g id=\"calendar-clock\"><path d=\"M3 0h1v3h-1v-3z\"></path><path d=\"M11 0h1v3h-1v-3z\"></path><path d=\"M6.6 14h-5.6v-8h13v0.6c0.4 0.2 0.7 0.4 1 0.7v-6.3h-2v3h-3v-3h-5v3h-3v-3h-2v14h7.3c-0.3-0.3-0.5-0.6-0.7-1z\"></path><path d=\"M14 12h-3v-3h1v2h2z\"></path><path d=\"M11.5 8c1.9 0 3.5 1.6 3.5 3.5s-1.6 3.5-3.5 3.5-3.5-1.6-3.5-3.5 1.6-3.5 3.5-3.5zM11.5 7c-2.5 0-4.5 2-4.5 4.5s2 4.5 4.5 4.5 4.5-2 4.5-4.5-2-4.5-4.5-4.5v0z\"></path></g>\n<g id=\"calendar-envelope\"><path d=\"M3 0h1v2h-1v-2z\"></path><path d=\"M9 0h1v2h-1v-2z\"></path><path d=\"M13 7v-6h-2v2h-3v-2h-3v2h-3v-2h-2v12h4v3h12v-9h-3zM4 12h-3v-7h11v2h-8v5zM5 10.2l2.6 1.5-2.6 2.6v-4.1zM5.7 15l2.8-2.8 1.5 0.9 1.5-0.8 2.8 2.8h-8.6zM15 14.3l-2.6-2.6 2.6-1.4v4zM15 9.2l-5 2.7-5-2.9v-1h10v1.2zM15.4 9.6v0 0 0z\"></path></g>\n<g id=\"calendar-o\"><path d=\"M14 1v3h-3v-3h-6v3h-3v-3h-2v15h16v-15h-2zM15 15h-14v-9h14v9z\"></path><path d=\"M3 0h1v3h-1v-3z\"></path><path d=\"M12 0h1v3h-1v-3z\"></path></g>\n<g id=\"calendar-user\"><path d=\"M3 0h1v3h-1v-3z\"></path><path d=\"M11 0h1v3h-1v-3z\"></path><path d=\"M9 14.1c0-0.1 0-0.1 0 0l-8-0.1v-8h13v1.2c0.4 0.1 0.7 0.3 1 0.6v-6.8h-2v3h-3v-3h-5v3h-3v-3h-2v14h9v-0.9z\"></path><path d=\"M15 10c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path><path d=\"M13.9 12h-1.8c-1.1 0-2.1 0.9-2.1 2.1v1.9h6v-1.9c0-1.2-0.9-2.1-2.1-2.1z\"></path></g>\n<g id=\"calendar\"><path d=\"M14 1v3h-3v-3h-6v3h-3v-3h-2v15h16v-15h-2zM3 15h-2v-2h2v2zM3 12h-2v-2h2v2zM3 9h-2v-2h2v2zM6 15h-2v-2h2v2zM6 12h-2v-2h2v2zM6 9h-2v-2h2v2zM9 15h-2v-2h2v2zM9 12h-2v-2h2v2zM9 9h-2v-2h2v2zM12 15h-2v-2h2v2zM12 12h-2v-2h2v2zM12 9h-2v-2h2v2zM15 15h-2v-2h2v2zM15 12h-2v-2h2v2zM15 9h-2v-2h2v2z\"></path><path d=\"M3 0h1v3h-1v-3z\"></path><path d=\"M12 0h1v3h-1v-3z\"></path></g>\n<g id=\"camera\"><path d=\"M11 9c0 1.657-1.343 3-3 3s-3-1.343-3-3c0-1.657 1.343-3 3-3s3 1.343 3 3z\"></path><path d=\"M11 4v-3h-6v3h-5v9h5c0.8 0.6 1.9 1 3 1s2.2-0.4 3-1h5v-9h-5zM6 2h4v2h-4v-2zM8 13c-2.2 0-4-1.8-4-4s1.8-4 4-4c2.2 0 4 1.8 4 4s-1.8 4-4 4zM15 6h-2v-1h2v1z\"></path></g>\n<g id=\"car\"><path d=\"M15 6.1l-1.4-2.9c-0.4-0.7-1.1-1.2-1.9-1.2h-7.4c-0.8 0-1.5 0.5-1.9 1.2l-1.4 2.9c-0.6 0.1-1 0.6-1 1.1v3.5c0 0.6 0.4 1.1 1 1.2v2c0 0.6 0.5 1.1 1.1 1.1h0.9c0.5 0 1-0.5 1-1.1v-1.9h8v1.9c0 0.6 0.5 1.1 1.1 1.1h0.9c0.6 0 1.1-0.5 1.1-1.1v-2c0.6-0.1 1-0.6 1-1.2v-3.5c-0.1-0.5-0.5-1-1.1-1.1zM4 8.4c0 0.3-0.3 0.6-0.6 0.6h-1.8c-0.3 0-0.6-0.3-0.6-0.6v-0.8c0-0.3 0.3-0.6 0.6-0.6h1.8c0.3 0 0.6 0.3 0.6 0.6v0.8zM10 11h-4v-1h4v1zM2.1 6l1.2-2.4c0.2-0.4 0.6-0.6 1-0.6h7.4c0.4 0 0.8 0.2 1 0.6l1.2 2.4h-11.8zM15 8.4c0 0.3-0.3 0.6-0.6 0.6h-1.8c-0.3 0-0.6-0.3-0.6-0.6v-0.8c0-0.3 0.3-0.6 0.6-0.6h1.8c0.3 0 0.6 0.3 0.6 0.6v0.8z\"></path></g>\n<g id=\"caret-down\"><path d=\"M3 4h10l-5 7z\"></path></g>\n<g id=\"caret-left\"><path d=\"M11 3v10l-7-5z\"></path></g>\n<g id=\"caret-right\"><path d=\"M5 13v-10l7 5z\"></path></g>\n<g id=\"caret-square-down-o\"><path d=\"M15 1h-14v14h14v-14zM14 14h-12v-12h12v12z\"></path><path d=\"M4 6h8l-4 5z\"></path></g>\n<g id=\"caret-square-left-o\"><path d=\"M15 1h-14v14h14v-14zM14 14h-12v-12h12v12z\"></path><path d=\"M10 4v8l-5-4z\"></path></g>\n<g id=\"caret-square-right-o\"><path d=\"M15 1h-14v14h14v-14zM14 14h-12v-12h12v12z\"></path><path d=\"M5.9 12v-8l5 4z\"></path></g>\n<g id=\"caret-square-up-o\"><path d=\"M15 1h-14v14h14v-14zM14 14h-12v-12h12v12z\"></path><path d=\"M12 10h-8l4-5z\"></path></g>\n<g id=\"caret-up\"><path d=\"M13 12h-10l5-7z\"></path></g>\n<g id=\"cart-o\"><path d=\"M14 13.1v-1.1h-9.4l0.6-1.1 9.2-0.9 1.6-6h-12.3l-0.7-3h-3v1h2.2l2.1 8.4-1.3 2.6v1.5c0 0.8 0.7 1.5 1.5 1.5s1.5-0.7 1.5-1.5-0.7-1.5-1.5-1.5h7.5v1.5c0 0.8 0.7 1.5 1.5 1.5s1.5-0.7 1.5-1.5c0-0.7-0.4-1.2-1-1.4zM4 5h10.7l-1.1 4-8.4 0.9-1.2-4.9z\"></path></g>\n<g id=\"cart\"><path d=\"M14 13.1v-1.1h-9.4l0.6-1.1 9.2-0.9 1.6-6h-12.3l-0.7-3h-3v1h2.2l2.1 8.4-1.3 2.6v1.5c0 0.8 0.7 1.5 1.5 1.5s1.5-0.7 1.5-1.5-0.7-1.5-1.5-1.5h7.5v1.5c0 0.8 0.7 1.5 1.5 1.5s1.5-0.7 1.5-1.5c0-0.7-0.4-1.2-1-1.4z\"></path></g>\n<g id=\"cash\"><path d=\"M16 14h-14v-1h13v-7h1v8z\"></path><path d=\"M13 4v7h-12v-7h12zM14 3h-14v9h14v-9z\"></path><path d=\"M3 6h-1v3h1v1h4c-1.381 0-2.5-1.119-2.5-2.5s1.119-2.5 2.5-2.5h-4v1z\"></path><path d=\"M11 6v-1h-4c1.381 0 2.5 1.119 2.5 2.5s-1.119 2.5-2.5 2.5h4v-1h1v-3h-1z\"></path></g>\n<g id=\"chart-3d\"><path d=\"M12 4v-2l-4-2-4 2v1l-4 2v5l12 6 4-2v-8zM4 10.88l-3-1.5v-3.3l3 1.53v3.27zM4 6.49l-2.34-1.2 2.34-1.17v2.37zM8 12.88l-3-1.5v-8.31l3 1.54v8.27zM5.66 2.29l2.34-1.17 2.34 1.17-2.34 1.2zM12 14.88l-3-1.5v-6.31l3 1.54v6.27zM12 7.49l-2.34-1.2 2.34-1.17 2.34 1.17z\"></path></g>\n<g id=\"chart-grid\"><path d=\"M0 9v7h16v-7h-16zM5 15h-4v-1h4v1zM5 13h-4v-1h4v1zM5 11h-4v-1h4v1zM10 15h-4v-1h4v1zM10 13h-4v-1h4v1zM10 11h-4v-1h4v1zM15 15h-4v-1h4v1zM15 13h-4v-1h4v1zM15 11h-4v-1h4v1z\"></path><path d=\"M16 8h-16v-8h1v7h15v1z\"></path><path d=\"M15 1.57l-5.020 2.86-3.96-1.98-4.020 1.61v1.080l3.98-1.59 4.040 2.020 4.98-2.85v-1.15z\"></path></g>\n<g id=\"chart-line\"><path d=\"M0 16h16v-16h-1v2.6l-4 3.4v-6h-1v6.4l-4-0.9v-5.5h-1v5.7l-4 2.9v-8.6h-1zM5 14h-4v-1.7l4-2.9v4.6zM10 14h-4v-5.3l0.1-0.1 3.9 0.9v4.5zM15 14h-4v-4.3h0.1l3.9-3.2v7.5z\"></path></g>\n<g id=\"chart-timeline\"><path d=\"M16 13v-1h-15v-12h-1v13h5v2h-5v1h16v-1h-5v-2h5z\"></path><path d=\"M9 7l-3-3-4 4v3h14v-11l-7 7z\"></path></g>\n<g id=\"chart\"><path d=\"M0 15h16v1h-16v-1z\"></path><path d=\"M0 0h1v16h-1v-16z\"></path><path d=\"M9 8l-2.9-3-4.1 4v5h14v-13.1z\"></path></g>\n<g id=\"chat\"><path d=\"M14 14.2c0 0 0 0 0 0 0-0.6 2-1.8 2-3.1 0-1.5-1.4-2.7-3.1-3.2 0.7-0.8 1.1-1.7 1.1-2.8 0-2.8-2.9-5.1-6.6-5.1-3.5 0-7.4 2.1-7.4 5.1 0 2.1 1.6 3.6 2.3 4.2-0.1 1.2-0.6 1.7-0.6 1.7l-1.2 1h1.5c1.6 0 2.9-0.5 3.7-1.1 0 0.1 0 0.1 0 0.2 0 2 2.2 3.6 5 3.6 0.2 0 0.4 0 0.6 0 0.4 0.5 1.7 1.4 3.4 1.4 0.1-0.1-0.7-0.5-0.7-1.9zM7.4 1c3.1 0 5.6 1.9 5.6 4.1s-2.6 4.1-5.8 4.1c-0.2 0-0.6 0-0.8 0h-0.3l-0.1 0.2c-0.3 0.4-1.5 1.2-3.1 1.5 0.1-0.4 0.1-1 0.1-1.8v-0.3c-1-0.8-2.1-2.2-2.1-3.6 0-2.2 3.2-4.2 6.5-4.2z\"></path></g>\n<g id=\"check-circle-o\"><path d=\"M8 1c3.9 0 7 3.1 7 7s-3.1 7-7 7-7-3.1-7-7 3.1-7 7-7zM8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8v0z\"></path><path d=\"M7.1 11.7l-4.2-4.1 1.4-1.4 2.8 2.7 4.9-4.9 1.4 1.4z\"></path></g>\n<g id=\"check-circle\"><path d=\"M8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zM7.1 11.7l-4.2-4.1 1.4-1.4 2.7 2.7 5-4.9 1.4 1.4-6.3 6.3z\"></path></g>\n<g id=\"check-square-o\"><path d=\"M14 6.2v7.8h-12v-12h10.5l1-1h-12.5v14h14v-9.8z\"></path><path d=\"M7.9 10.9l-4.2-4.2 1.5-1.4 2.7 2.8 6.7-6.7 1.4 1.4z\"></path></g>\n<g id=\"check-square\"><path d=\"M13 0.9l-1 1.1h-12v14h14v-10.5l1.7-2-2.7-2.6zM6.5 11.7l-4.2-4.2 1.4-1.4 2.7 2.7 6.6-6.6 1.4 1.4-7.9 8.1z\"></path></g>\n<g id=\"check\"><path d=\"M7.3 14.2l-7.1-5.2 1.7-2.4 4.8 3.5 6.6-8.5 2.3 1.8z\"></path></g>\n<g id=\"chevron-circle-down-o\"><path d=\"M13 6.6l-5 5-5-5 1.4-1.4 3.6 3.6 3.6-3.6z\"></path><path d=\"M1 8c0-3.9 3.1-7 7-7s7 3.1 7 7-3.1 7-7 7-7-3.1-7-7zM0 8c0 4.4 3.6 8 8 8s8-3.6 8-8-3.6-8-8-8-8 3.6-8 8v0z\"></path></g>\n<g id=\"chevron-circle-down\"><path d=\"M0 8c0 4.4 3.6 8 8 8s8-3.6 8-8-3.6-8-8-8-8 3.6-8 8zM11.6 5.2l1.4 1.4-5 5-5-5 1.4-1.4 3.6 3.6 3.6-3.6z\"></path></g>\n<g id=\"chevron-circle-left-o\"><path d=\"M9.4 13l-5-5 5-5 1.4 1.4-3.6 3.6 3.6 3.6z\"></path><path d=\"M8 1c3.9 0 7 3.1 7 7s-3.1 7-7 7-7-3.1-7-7 3.1-7 7-7zM8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8v0z\"></path></g>\n<g id=\"chevron-circle-left\"><path d=\"M8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zM10.8 11.6l-1.4 1.4-5-5 5-5 1.4 1.4-3.6 3.6 3.6 3.6z\"></path></g>\n<g id=\"chevron-circle-right-o\"><path d=\"M6.6 13l5-5-5-5-1.4 1.4 3.6 3.6-3.6 3.6z\"></path><path d=\"M8 1c3.9 0 7 3.1 7 7s-3.1 7-7 7-7-3.1-7-7 3.1-7 7-7zM8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8v0z\"></path></g>\n<g id=\"chevron-circle-right\"><path d=\"M8 16c4.4 0 8-3.6 8-8s-3.6-8-8-8-8 3.6-8 8 3.6 8 8 8zM5.2 4.4l1.4-1.4 5 5-5 5-1.4-1.4 3.6-3.6-3.6-3.6z\"></path></g>\n<g id=\"chevron-circle-up-o\"><path d=\"M3 9.4l5-5 5 5-1.4 1.4-3.6-3.6-3.6 3.6z\"></path><path d=\"M15 8c0 3.9-3.1 7-7 7s-7-3.1-7-7 3.1-7 7-7 7 3.1 7 7zM16 8c0-4.4-3.6-8-8-8s-8 3.6-8 8 3.6 8 8 8 8-3.6 8-8v0z\"></path></g>\n<g id=\"chevron-circle-up\"><path d=\"M16 8c0-4.4-3.6-8-8-8s-8 3.6-8 8 3.6 8 8 8 8-3.6 8-8zM4.4 10.8l-1.4-1.4 5-5 5 5-1.4 1.4-3.6-3.6-3.6 3.6z\"></path></g>\n<g id=\"chevron-down-small\"><path d=\"M8 12l-6.32-6.32 1.67-1.68 4.65 4.65 4.65-4.65 1.67 1.68-6.32 6.32z\"></path></g>\n<g id=\"chevron-down\"><path d=\"M8 13.1l-8-8 2.1-2.2 5.9 5.9 5.9-5.9 2.1 2.2z\"></path></g>\n<g id=\"chevron-left-small\"><path d=\"M4 8l6.32-6.32 1.68 1.67-4.65 4.65 4.65 4.65-1.68 1.67-6.32-6.32z\"></path></g>\n<g id=\"chevron-left\"><path d=\"M2.9 8l8-8 2.2 2.1-5.9 5.9 5.9 5.9-2.2 2.1z\"></path></g>\n<g id=\"chevron-right-small\"><path d=\"M12 8l-6.32-6.32-1.68 1.67 4.65 4.65-4.65 4.65 1.68 1.67 6.32-6.32z\"></path></g>\n<g id=\"chevron-right\"><path d=\"M13.1 8l-8 8-2.2-2.1 5.9-5.9-5.9-5.9 2.2-2.1z\"></path></g>\n<g id=\"chevron-up-small\"><path d=\"M8 4l-6.32 6.32 1.67 1.68 4.65-4.65 4.65 4.65 1.67-1.68-6.32-6.32z\"></path></g>\n<g id=\"chevron-up\"><path d=\"M8 2.9l8 8-2.1 2.2-5.9-5.9-5.9 5.9-2.1-2.2z\"></path></g>\n<g id=\"child\"><path d=\"M10 5c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path><path d=\"M12.79 10.32l-2.6-2.63c-0.421-0.426-1.004-0.69-1.65-0.69h-1.070c-0 0-0 0-0.001 0-0.648 0-1.235 0.264-1.659 0.69l-2.6 2.63c-0.216 0.129-0.358 0.362-0.358 0.628 0 0.403 0.327 0.73 0.73 0.73 0.266 0 0.499-0.142 0.626-0.355l1.792-1.793v6.47h1.5v-4h1v4h1.5v-6.47l1.75 1.8c0.135 0.175 0.344 0.287 0.58 0.287 0.403 0 0.73-0.327 0.73-0.73 0-0.228-0.105-0.432-0.269-0.566z\"></path></g>\n<g id=\"circle-thin\"><path d=\"M8 1c3.9 0 7 3.1 7 7s-3.1 7-7 7-7-3.1-7-7 3.1-7 7-7zM8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8v0z\"></path></g>\n<g id=\"circle\"><path d=\"M8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8z\"></path></g>\n<g id=\"clipboard-check\"><path d=\"M11 1v-1h-6v1h-2v1h-1v14h12v-1h1v-14h-4zM6 1h4v2h-4v-2zM13 15h-10v-12h2v1h6v-1h2v12z\"></path><path d=\"M7.39 12.47l-3-2.73 1.35-1.48 1.58 1.44 2.87-2.9 1.42 1.4-4.22 4.27z\"></path></g>\n<g id=\"clipboard-cross\"><path d=\"M11 1v-1h-6v1h-2v1h-1v14h12v-1h1v-14h-4zM6 1h4v2h-4v-2zM13 15h-10v-12h2v1h6v-1h2v12z\"></path><path d=\"M11 8h-2v-2h-2v2h-2v2h2v2h2v-2h2z\"></path></g>\n<g id=\"clipboard-heart\"><path d=\"M9.5 7c0 0 0 0 0 0-0.6 0-1.1 0.6-1.5 1-0.4-0.4-0.9-1-1.5-1 0 0 0 0 0 0-1.5 0-2.1 1.9-1 2.9l2.5 2.1 2.5-2.1c1.1-1 0.5-2.9-1-2.9z\"></path><path d=\"M11 1v-1h-6v1h-2v1h-1v14h12v-1h1v-14h-4zM6 1h4v2h-4v-2zM13 15h-10v-12h2v1h6v-1h2v12z\"></path></g>\n<g id=\"clipboard-pulse\"><path d=\"M11 1v-1h-6v1h-2v1h-1v14h12v-1h1v-14h-4zM6 1h4v2h-4v-2zM13 15h-10v-12h2v1h6v-1h2v12z\"></path><path d=\"M9.3 13c0 0 0 0 0 0-0.2 0-0.3-0.1-0.4-0.3l-0.8-4.8-0.7 3.1c0 0.1-0.1 0.2-0.3 0.3-0.1 0-0.3 0-0.4-0.1l-1-1.3h-1.3c-0.2 0-0.4-0.2-0.4-0.4s0.2-0.4 0.4-0.4h1.6c0.1 0 0.2 0.1 0.3 0.1l0.6 0.8 0.9-4.3c0-0.2 0.2-0.3 0.4-0.3 0 0 0 0 0 0 0.2 0 0.3 0.2 0.3 0.4l0.9 5.3 0.6-1.7c0.1-0.1 0.2-0.2 0.3-0.2h1.3c0.2 0 0.4 0.2 0.4 0.4s-0.2 0.4-0.4 0.4h-1l-1 2.9c0 0-0.2 0.1-0.3 0.1z\"></path></g>\n<g id=\"clipboard-text\"><path d=\"M4 6h8v1h-8v-1z\"></path><path d=\"M4 8h8v1h-8v-1z\"></path><path d=\"M4 10h5v1h-5v-1z\"></path><path d=\"M11 1v-1h-6v1h-2v1h-1v14h12v-1h1v-14h-4zM6 1h4v2h-4v-2zM13 15h-10v-12h2v1h6v-1h2v12z\"></path></g>\n<g id=\"clipboard-user\"><path d=\"M11 1v-1h-6v1h-2v1h-1v14h12v-1h1v-14h-4zM6 1h4v2h-4v-2zM13 15h-10v-12h2v1h6v-1h2v12z\"></path><path d=\"M8 6c-2.5 0-1.3 3.2-1.3 3.2 0.3 0.4 0.7 0.4 0.7 0.6 0 0.3-0.3 0.3-0.6 0.4-0.5 0.1-0.9-0.1-1.4 0.8-0.3 0.4-0.4 2-0.4 2h6c0 0-0.1-1.6-0.4-2-0.4-0.8-0.9-0.7-1.4-0.8-0.3 0-0.6-0.1-0.6-0.4s0.3-0.2 0.6-0.6c0.1 0 1.3-3.2-1.2-3.2z\"></path></g>\n<g id=\"clipboard\"><path d=\"M11 1v-1h-6v1h-2v1h-1v14h12v-1h1v-14h-4zM6 1h4v2h-4v-2zM13 15h-10v-12h2v1h6v-1h2v12z\"></path></g>\n<g id=\"clock\"><path d=\"M8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zM8 14c-3.3 0-6-2.7-6-6s2.7-6 6-6 6 2.7 6 6-2.7 6-6 6z\"></path><path d=\"M8 3h-1v6h5v-1h-4z\"></path></g>\n<g id=\"close-big\"><path d=\"M16 0l-1 0.010-7 6.99-7-6.99-1-0.010v1l7 7-7 7v1h1l7-7 7 7h1v-1l-7-7 7-7v-1z\"></path></g>\n<g id=\"close-circle-o\"><path d=\"M8 1c3.9 0 7 3.1 7 7s-3.1 7-7 7-7-3.1-7-7 3.1-7 7-7zM8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8v0z\"></path><path d=\"M12.2 10.8l-2.8-2.8 2.8-2.8-1.4-1.4-2.8 2.8-2.8-2.8-1.4 1.4 2.8 2.8-2.8 2.8 1.4 1.4 2.8-2.8 2.8 2.8z\"></path></g>\n<g id=\"close-circle\"><path d=\"M8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zM12.2 10.8l-1.4 1.4-2.8-2.8-2.8 2.8-1.4-1.4 2.8-2.8-2.8-2.8 1.4-1.4 2.8 2.8 2.8-2.8 1.4 1.4-2.8 2.8 2.8 2.8z\"></path></g>\n<g id=\"close-small\"><path d=\"M12.96 4.46l-1.42-1.42-3.54 3.55-3.54-3.55-1.42 1.42 3.55 3.54-3.55 3.54 1.42 1.42 3.54-3.55 3.54 3.55 1.42-1.42-3.55-3.54 3.55-3.54z\"></path></g>\n<g id=\"close\"><path d=\"M15.1 3.1l-2.2-2.2-4.9 5-4.9-5-2.2 2.2 5 4.9-5 4.9 2.2 2.2 4.9-5 4.9 5 2.2-2.2-5-4.9z\"></path></g>\n<g id=\"cloud-download-o\"><path d=\"M14.1 9.8c0-0.2 0-0.4 0-0.6 0-2.4-1.9-4.3-4.2-4.3-0.3 0.1-0.6 0.1-0.9 0.1v-3h-2v2.4c-0.4-0.3-0.9-0.4-1.3-0.4-1.6 0-2.9 1.3-2.9 2.9 0 0.3 0.1 0.6 0.2 0.9-1.6 0.2-3 1.8-3 3.6 0 1.9 1.5 3.6 3.3 3.6h10.3c1.4 0 2.4-1.5 2.4-2.7s-0.8-2.3-1.9-2.5zM13.6 14h-10.3c-1.2 0-2.3-1.3-2.3-2.6s1.1-2.6 2.3-2.6c0.1 0 0.3 0 0.4 0l1.4 0.2-0.9-1c-0.2-0.3-0.4-0.7-0.4-1.2 0-1 0.8-1.8 1.8-1.8 0.5 0 1 0.2 1.3 0.6v2.4h-1.9l3 4 3-4h-2v-1.9c0.3-0.1 0.6-0.1 0.9-0.1 1.8 0 3.2 1.5 3.2 3.3 0 0.3 0 0.6-0.1 0.9l-0.2 0.6 0.8 0.1c0.7 0 1.4 0.7 1.4 1.5 0 0.7-0.6 1.6-1.4 1.6z\"></path></g>\n<g id=\"cloud-download\"><path d=\"M14 10c0 0-0.1 0-0.1 0 0-0.3 0.1-0.6 0.1-1 0-2.2-1.8-4-4-4v-4h-4v3.1c-0.2-0.1-0.3-0.1-0.5-0.1-1.4 0-2.5 1.1-2.5 2.5 0 0.6 0.2 1.1 0.6 1.6-0.2-0.1-0.4-0.1-0.6-0.1-1.7 0-3 1.3-3 3s1.3 3 3 3h11c1.1 0 2-0.9 2-2s-0.9-2-2-2zM8 11.4l-2.9-3.4h1.9v-6h2v6h1.9l-2.9 3.4z\"></path></g>\n<g id=\"cloud-o\"><path d=\"M14.1 8.9c0-0.2 0-0.4 0-0.6 0-2.4-1.9-4.3-4.2-4.3-0.6 0-1.2 0.1-1.8 0.4-0.5-0.7-1.5-1.2-2.4-1.2-1.6 0-2.9 1.2-2.9 2.8 0 0.3 0.1 0.6 0.2 0.9-1.6 0.2-3 1.8-3 3.5 0 1.9 1.5 3.6 3.3 3.6h10.3c1.4 0 2.4-1.4 2.4-2.6s-0.8-2.2-1.9-2.5zM13.6 13h-10.3c-1.2 0-2.3-1.2-2.3-2.5s1.1-2.5 2.3-2.5c0.1 0 0.3 0 0.4 0l1.3 0.3-0.8-1.2c-0.2-0.3-0.4-0.7-0.4-1.1 0-1 0.8-1.8 1.8-1.8 0.8 0 1.5 0.5 1.7 1.2l0.3 0.6 0.5-0.3c0.5-0.3 1.1-0.5 1.8-0.5 1.8 0 3.2 1.5 3.2 3.3 0 0.3 0 0.6-0.1 0.9l-0.2 0.6h0.8c0.7 0 1.4 0.7 1.4 1.5 0 0.6-0.6 1.5-1.4 1.5z\"></path></g>\n<g id=\"cloud-upload-o\"><path d=\"M14.1 10.9c0-0.2 0-0.4 0-0.6 0-2.4-1.9-4.3-4.2-4.3-0.3 0-0.6 0-0.9 0.1v-2.1h2l-3-4-3 4h2v1.5c-0.4-0.2-0.9-0.3-1.3-0.3-1.6 0-2.9 1.2-2.9 2.8 0 0.3 0.1 0.6 0.2 0.9-1.6 0.2-3 1.8-3 3.5 0 1.9 1.5 3.6 3.3 3.6h10.3c1.4 0 2.4-1.4 2.4-2.6s-0.8-2.2-1.9-2.5zM13.6 15h-10.3c-1.2 0-2.3-1.2-2.3-2.5s1.1-2.5 2.3-2.5c0.1 0 0.3 0 0.4 0l1.3 0.3-0.8-1.2c-0.2-0.3-0.4-0.7-0.4-1.1 0-1 0.8-1.8 1.8-1.8 0.5 0 1 0.2 1.3 0.6v3.2h2v-2.8c0.3-0.1 0.6-0.1 0.9-0.1 1.8 0 3.2 1.5 3.2 3.3 0 0.3 0 0.6-0.1 0.9l-0.2 0.6h0.8c0.7 0 1.4 0.7 1.4 1.5 0.1 0.7-0.5 1.6-1.3 1.6z\"></path></g>\n<g id=\"cloud-upload\"><path d=\"M14 10c0 0-0.1 0-0.1 0 0-0.3 0.1-0.6 0.1-1 0-1.6-1-3-2.4-3.6l-3.6-4.4-2.5 3c-1.4 0-2.5 1.1-2.5 2.5 0 0.6 0.2 1.1 0.6 1.6-0.2-0.1-0.4-0.1-0.6-0.1-1.7 0-3 1.3-3 3s1.3 3 3 3h11c1.1 0 2-0.9 2-2s-0.9-2-2-2zM9 6v6h-2v-6h-1.9l2.9-3.4 2.9 3.4h-1.9z\"></path></g>\n<g id=\"cloud\"><path d=\"M14 13c1.1 0 2-0.9 2-2s-0.9-2-2-2c0 0-0.1 0-0.1 0 0-0.3 0.1-0.6 0.1-1 0-2.2-1.8-4-4-4-0.8 0-1.5 0.2-2.2 0.6-0.3-0.9-1.2-1.6-2.3-1.6-1.4 0-2.5 1.1-2.5 2.5 0 0.6 0.2 1.1 0.6 1.6-0.2-0.1-0.4-0.1-0.6-0.1-1.7 0-3 1.3-3 3s1.3 3 3 3h11z\"></path></g>\n<g id=\"cluster\"><path d=\"M14 12c-0.372 0.011-0.716 0.121-1.008 0.305l-2.212-2.155c0.434-0.547 0.708-1.239 0.74-1.993l1.57-0.157c0.225 0.556 0.76 0.941 1.385 0.941 0.823 0 1.49-0.667 1.49-1.49s-0.667-1.49-1.49-1.49c-0.749 0-1.368 0.552-1.474 1.271l-1.591 0.128c-0.224-1.136-0.973-2.060-1.978-2.521l0.308-0.839h0.26c1.099-0.008 1.986-0.9 1.986-2 0-1.105-0.895-2-2-2s-2 0.895-2 2c0 0.742 0.404 1.39 1.004 1.735l-0.27 0.855c-0.227-0.054-0.487-0.084-0.754-0.084-0.83 0-1.59 0.296-2.181 0.789l-2.994-3.004c0.141-0.224 0.225-0.497 0.225-0.79 0-0.828-0.672-1.5-1.5-1.5s-1.5 0.672-1.5 1.5c0 0.823 0.663 1.492 1.484 1.5 0.281-0.001 0.544-0.079 0.767-0.214l2.993 3.004c-0.474 0.588-0.76 1.344-0.76 2.168 0 0.015 0 0.030 0 0.045-0 0.058-0 0.108-0 0.158l-0.66 0.11c-0.313-0.72-1.019-1.214-1.839-1.214-1.105 0-2 0.895-2 2s0.895 2 2 2c1.105 0 2-0.895 2-2 0-0.020-0-0.039-0.001-0.059l0.63-0.097c0.242 0.843 0.768 1.538 1.466 1.992l-0.556 1.188c-0.161-0.049-0.347-0.078-0.539-0.080-0.006-0-0.012-0-0.017-0-1.105 0-2 0.895-2 2s0.895 2 2 2c1.105 0 2-0.895 2-2 0-0.64-0.301-1.211-0.769-1.577l0.566-1.153c0.364 0.146 0.787 0.231 1.229 0.231 0.847 0 1.621-0.311 2.216-0.824l2.176 2.124c-0.25 0.33-0.4 0.748-0.4 1.2 0 1.105 0.895 2 2 2s2-0.895 2-2c0-1.105-0.895-2-2-2 0 0 0 0 0 0zM5 15c-0.552 0-1-0.448-1-1s0.448-1 1-1c0.552 0 1 0.448 1 1s-0.448 1-1 1zM8 10.5c-1.381 0-2.5-1.119-2.5-2.5s1.119-2.5 2.5-2.5c1.381 0 2.5 1.119 2.5 2.5s-1.119 2.5-2.5 2.5z\"></path></g>\n<g id=\"code\"><path d=\"M5.2 14l4.5-12h1.1l-4.5 12z\"></path><path d=\"M11.1 13h1.2l3.7-5-3.7-5h-1.3l3.8 5z\"></path><path d=\"M4.9 13h-1.2l-3.7-5 3.7-5h1.3l-3.8 5z\"></path></g>\n<g id=\"coffee\"><path d=\"M14 13l-4 1h-6l-4-1v-1h14z\"></path><path d=\"M14.7 3h-1.7v-1h-12v5c0 1.5 0.8 2.8 2 3.4v0.6h8v-0.6c0.9-0.5 1.6-1.4 1.9-2.4 0 0 0.1 0 0.1 0 2.3 0 2.9-2 3-3.5 0.1-0.8-0.5-1.5-1.3-1.5zM13 7v-3h1.7c0.1 0 0.2 0.1 0.2 0.1s0.1 0.1 0.1 0.3c-0.2 2.6-1.6 2.6-2 2.6z\"></path></g>\n<g id=\"cog-o\"><path d=\"M15.2 6l-1.1-0.2c-0.1-0.2-0.1-0.4-0.2-0.6l0.6-0.9 0.5-0.7-2.6-2.6-0.7 0.5-0.9 0.6c-0.2-0.1-0.4-0.1-0.6-0.2l-0.2-1.1-0.2-0.8h-3.6l-0.2 0.8-0.2 1.1c-0.2 0.1-0.4 0.1-0.6 0.2l-0.9-0.6-0.7-0.4-2.5 2.5 0.5 0.7 0.6 0.9c-0.2 0.2-0.2 0.4-0.3 0.6l-1.1 0.2-0.8 0.2v3.6l0.8 0.2 1.1 0.2c0.1 0.2 0.1 0.4 0.2 0.6l-0.6 0.9-0.5 0.7 2.6 2.6 0.7-0.5 0.9-0.6c0.2 0.1 0.4 0.1 0.6 0.2l0.2 1.1 0.2 0.8h3.6l0.2-0.8 0.2-1.1c0.2-0.1 0.4-0.1 0.6-0.2l0.9 0.6 0.7 0.5 2.6-2.6-0.5-0.7-0.6-0.9c0.1-0.2 0.2-0.4 0.2-0.6l1.1-0.2 0.8-0.2v-3.6l-0.8-0.2zM15 9l-1.7 0.3c-0.1 0.5-0.3 1-0.6 1.5l0.9 1.4-1.4 1.4-1.4-0.9c-0.5 0.3-1 0.5-1.5 0.6l-0.3 1.7h-2l-0.3-1.7c-0.5-0.1-1-0.3-1.5-0.6l-1.4 0.9-1.4-1.4 0.9-1.4c-0.3-0.5-0.5-1-0.6-1.5l-1.7-0.3v-2l1.7-0.3c0.1-0.5 0.3-1 0.6-1.5l-1-1.4 1.4-1.4 1.4 0.9c0.5-0.3 1-0.5 1.5-0.6l0.4-1.7h2l0.3 1.7c0.5 0.1 1 0.3 1.5 0.6l1.4-0.9 1.4 1.4-0.9 1.4c0.3 0.5 0.5 1 0.6 1.5l1.7 0.3v2z\"></path><path d=\"M8 4.5c-1.9 0-3.5 1.6-3.5 3.5s1.6 3.5 3.5 3.5 3.5-1.6 3.5-3.5c0-1.9-1.6-3.5-3.5-3.5zM8 10.5c-1.4 0-2.5-1.1-2.5-2.5s1.1-2.5 2.5-2.5 2.5 1.1 2.5 2.5c0 1.4-1.1 2.5-2.5 2.5z\"></path></g>\n<g id=\"cog\"><path d=\"M16 9v-2l-1.7-0.6c-0.2-0.6-0.4-1.2-0.7-1.8l0.8-1.6-1.4-1.4-1.6 0.8c-0.5-0.3-1.1-0.6-1.8-0.7l-0.6-1.7h-2l-0.6 1.7c-0.6 0.2-1.2 0.4-1.7 0.7l-1.6-0.8-1.5 1.5 0.8 1.6c-0.3 0.5-0.5 1.1-0.7 1.7l-1.7 0.6v2l1.7 0.6c0.2 0.6 0.4 1.2 0.7 1.8l-0.8 1.6 1.4 1.4 1.6-0.8c0.5 0.3 1.1 0.6 1.8 0.7l0.6 1.7h2l0.6-1.7c0.6-0.2 1.2-0.4 1.8-0.7l1.6 0.8 1.4-1.4-0.8-1.6c0.3-0.5 0.6-1.1 0.7-1.8l1.7-0.6zM8 12c-2.2 0-4-1.8-4-4s1.8-4 4-4 4 1.8 4 4-1.8 4-4 4z\"></path><path d=\"M10.6 7.9c0 1.381-1.119 2.5-2.5 2.5s-2.5-1.119-2.5-2.5c0-1.381 1.119-2.5 2.5-2.5s2.5 1.119 2.5 2.5z\"></path></g>\n<g id=\"cogs\"><path d=\"M12 7v-2l-1.2-0.4c-0.1-0.3-0.2-0.7-0.4-1l0.6-1.2-1.5-1.3-1.1 0.5c-0.3-0.2-0.6-0.3-1-0.4l-0.4-1.2h-2l-0.4 1.2c-0.3 0.1-0.7 0.2-1 0.4l-1.1-0.5-1.4 1.4 0.6 1.2c-0.2 0.3-0.3 0.6-0.4 1l-1.3 0.3v2l1.2 0.4c0.1 0.3 0.2 0.7 0.4 1l-0.5 1.1 1.4 1.4 1.2-0.6c0.3 0.2 0.6 0.3 1 0.4l0.3 1.3h2l0.4-1.2c0.3-0.1 0.7-0.2 1-0.4l1.2 0.6 1.4-1.4-0.6-1.2c0.2-0.3 0.3-0.6 0.4-1l1.2-0.4zM3 6c0-1.7 1.3-3 3-3s3 1.3 3 3c0 1.7-1.3 3-3 3s-3-1.3-3-3z\"></path><path d=\"M7.5 6c0 0.828-0.672 1.5-1.5 1.5s-1.5-0.672-1.5-1.5c0-0.828 0.672-1.5 1.5-1.5s1.5 0.672 1.5 1.5z\"></path><path d=\"M16 3v-1h-0.6c0-0.2-0.1-0.4-0.2-0.5l0.4-0.4-0.7-0.7-0.4 0.4c-0.2-0.1-0.3-0.2-0.5-0.2v-0.6h-1v0.6c-0.2 0-0.4 0.1-0.5 0.2l-0.4-0.4-0.7 0.7 0.4 0.4c-0.1 0.2-0.2 0.3-0.2 0.5h-0.6v1h0.6c0 0.2 0.1 0.4 0.2 0.5l-0.4 0.4 0.7 0.7 0.4-0.4c0.2 0.1 0.3 0.2 0.5 0.2v0.6h1v-0.6c0.2 0 0.4-0.1 0.5-0.2l0.4 0.4 0.7-0.7-0.4-0.4c0.1-0.2 0.2-0.3 0.2-0.5h0.6zM13.5 3.5c-0.6 0-1-0.4-1-1s0.4-1 1-1 1 0.4 1 1c0 0.6-0.4 1-1 1z\"></path><path d=\"M15.4 11.8c-0.1-0.3-0.2-0.6-0.4-0.9l0.3-0.6-0.7-0.7-0.5 0.4c-0.3-0.2-0.6-0.3-0.9-0.4l-0.2-0.6h-1l-0.2 0.6c-0.3 0.1-0.6 0.2-0.9 0.4l-0.6-0.3-0.7 0.7 0.3 0.6c-0.2 0.3-0.3 0.6-0.4 0.9l-0.5 0.1v1l0.6 0.2c0.1 0.3 0.2 0.6 0.4 0.9l-0.3 0.6 0.7 0.7 0.6-0.3c0.3 0.2 0.6 0.3 0.9 0.4l0.1 0.5h1l0.2-0.6c0.3-0.1 0.6-0.2 0.9-0.4l0.6 0.3 0.7-0.7-0.4-0.5c0.2-0.3 0.3-0.6 0.4-0.9l0.6-0.2v-1l-0.6-0.2zM12.5 14c-0.8 0-1.5-0.7-1.5-1.5s0.7-1.5 1.5-1.5 1.5 0.7 1.5 1.5-0.7 1.5-1.5 1.5z\"></path></g>\n<g id=\"coin-piles\"><path d=\"M10.5 0c-3.040 0-5.5 0.88-5.5 2 0 0 0 0 0 0v2c-3 0.1-5 0.94-5 2 0 0 0 0 0 0v2s0 0 0 0v2s0 0 0 0v2c0 1.090 2.46 2 5.5 2 0.020 0 0.043 0 0.067 0 0.732 0 1.45-0.055 2.153-0.16 0.698 1.305 2.094 2.158 3.69 2.158 2.017 0 3.715-1.363 4.224-3.217 0.209-0.199 0.344-0.442 0.367-0.717l0-2.064v-8c0-1.12-2.46-2-5.5-2zM5.5 5c2.5 0 4.5 0.45 4.5 1s-2 1-4.5 1-4.5-0.45-4.5-1 2-1 4.5-1zM5.5 13c-2.71 0-4.25-0.71-4.5-1v-0.8c1.199 0.512 2.595 0.809 4.060 0.809 0.155 0 0.309-0.003 0.462-0.010 0.508-0.001 1.030-0.030 1.544-0.085-0.043 0.371 0.022 0.712 0.123 1.037-0.452 0.021-0.967 0.051-1.488 0.051-0.070 0-0.141-0.001-0.211-0.002zM7.070 10.91c-0.467 0.057-1.008 0.090-1.556 0.090-0.005 0-0.010 0-0.014 0-2.709 0-4.249-0.71-4.499-1v-0.84c1.223 0.535 2.649 0.846 4.147 0.846 0.124 0 0.248-0.002 0.371-0.006 0.632-0.001 1.271-0.044 1.897-0.128-0.197 0.306-0.291 0.654-0.342 1.015zM5.5 9c-2.71 0-4.25-0.71-4.5-1v-0.9c1.223 0.535 2.649 0.846 4.147 0.846 0.124 0 0.248-0.002 0.371-0.006 0.088 0.004 0.212 0.006 0.337 0.006 1.498 0 2.923-0.311 4.214-0.872l-0.068 0.366c-0.777 0.265-1.432 0.717-1.935 1.304-0.752 0.165-1.611 0.256-2.491 0.256-0.026 0-0.052-0-0.077-0zM11.41 15c-1.883 0-3.41-1.527-3.41-3.41s1.527-3.41 3.41-3.41c1.883 0 3.41 1.527 3.41 3.41s-1.527 3.41-3.41 3.41zM15 8c-0.175 0.167-0.385 0.3-0.617 0.386-0.288-0.244-0.6-0.46-0.938-0.634 0.575-0.153 1.101-0.352 1.593-0.61l-0.038 0.858zM15 6c-0.24 0.31-1.61 0.94-4 1v-1c0.003 0 0.007 0 0.011 0 1.443 0 2.814-0.305 4.053-0.855l-0.064 0.855zM15 4c-0.25 0.33-1.79 1-4.5 1h-0.23c-1.213-0.63-2.648-1-4.169-1-0.014 0-0.029 0-0.043 0l-0.058-0v-0.9c1.223 0.535 2.649 0.846 4.147 0.846 0.124 0 0.248-0.002 0.371-0.006 0.088 0.004 0.212 0.006 0.337 0.006 1.498 0 2.923-0.311 4.214-0.872l-0.068 0.926zM10.5 3c-2.5 0-4.5-0.45-4.5-1s2-1 4.5-1 4.5 0.45 4.5 1-2 1-4.5 1z\"></path><path d=\"M10.5 11h0.5v3h1v-5h-0.5l-1 2z\"></path></g>\n<g id=\"coins\"><path d=\"M11.5 0c-2.485 0-4.5 2.015-4.5 4.5 0.004 0.261 0.029 0.513 0.074 0.758-0.479-0.176-1.025-0.261-1.591-0.261-3.043 0-5.51 2.467-5.51 5.51s2.467 5.51 5.51 5.51c3.043 0 5.51-2.467 5.51-5.51 0-0.566-0.085-1.112-0.244-1.626 0.23 0.077 0.484 0.099 0.742 0.099 2.48 0 4.49-2.010 4.49-4.49 0-2.477-2.005-4.485-4.481-4.49zM10 10.5c0 2.485-2.015 4.5-4.5 4.5s-4.5-2.015-4.5-4.5c0-2.485 2.015-4.5 4.5-4.5 2.483 0.006 4.494 2.017 4.5 4.499zM12.5 7h-2v-0.5h0.5v-3h-0.5l1-1.5h0.5v4.5h0.5v0.5z\"></path><path d=\"M5.63 8c0.033-0.003 0.072-0.005 0.111-0.005 0.696 0 1.26 0.564 1.26 1.26 0 0.016-0 0.031-0.001 0.047 0 1.698-1.86 2.698-1.86 2.698h1.37v-0.5h0.49v1.5h-3v-1s2-1.27 2-2.33c0-0.37 0-0.67-0.42-0.67-0.69 0-0.65 1-0.65 1h-0.93s-0.23-2 1.63-2z\"></path></g>\n<g id=\"combobox\"><path d=\"M15 4h-14c-0.6 0-1 0.4-1 1v6c0 0.6 0.4 1 1 1h14c0.6 0 1-0.4 1-1v-6c0-0.6-0.4-1-1-1zM10 11h-9v-6h9v6zM13 8.4l-2-1.4h4l-2 1.4z\"></path><path d=\"M2 6h1v4h-1v-4z\"></path></g>\n<g id=\"comment-ellipsis-o\"><path d=\"M3 11.2c0 0.1 0 0.1 0 0 0 0.1 0 0.1 0 0 0 0 0 0 0 0z\"></path><path d=\"M8.3 1c-4.4 0-8.3 2.6-8.3 5.6 0 2 1.1 3.7 3 4.7 0 0 0 0 0 0s0 0.1 0 0.1c-0.1 1.3-0.9 1.7-0.9 1.7l-1.8 0.9h2c2.5 0 4.3-1.1 5.1-1.9 0.3 0 0.6 0 0.8 0 4.3 0 7.8-2.5 7.8-5.6s-3.4-5.5-7.7-5.5zM8.2 11.1c-0.3 0-0.7 0-0.9 0h-0.2l-0.2 0.2c-0.5 0.5-1.6 1.4-3.3 1.7 0.3-0.5 0.5-1.1 0.5-2v-0.3l-0.3-0.1c-1.8-0.9-2.8-2.3-2.8-4 0-2.4 3.5-4.6 7.3-4.6 3.7 0 6.7 2 6.7 4.6 0 2.4-3.1 4.5-6.8 4.5z\"></path><path d=\"M6 7c0 0.552-0.448 1-1 1s-1-0.448-1-1c0-0.552 0.448-1 1-1s1 0.448 1 1z\"></path><path d=\"M9 7c0 0.552-0.448 1-1 1s-1-0.448-1-1c0-0.552 0.448-1 1-1s1 0.448 1 1z\"></path><path d=\"M12 7c0 0.552-0.448 1-1 1s-1-0.448-1-1c0-0.552 0.448-1 1-1s1 0.448 1 1z\"></path></g>\n<g id=\"comment-ellipsis\"><path d=\"M8 1c-4.4 0-8 2.5-8 5.5 0 2 2 3.8 4 4.8 0 0 0 0 0 0 0 2.1-2 2.8-2 2.8 2.8 0 4.4-1.3 5.1-2.1 0.3 0 0.6 0 0.9 0 4.4 0 8-2.5 8-5.5s-3.6-5.5-8-5.5zM5 8c-0.6 0-1-0.4-1-1s0.4-1 1-1 1 0.4 1 1c0 0.6-0.4 1-1 1zM8 8c-0.6 0-1-0.4-1-1s0.4-1 1-1 1 0.4 1 1c0 0.6-0.4 1-1 1zM11 8c-0.6 0-1-0.4-1-1s0.4-1 1-1 1 0.4 1 1c0 0.6-0.4 1-1 1z\"></path></g>\n<g id=\"comment-o\"><path d=\"M3 11.2c0 0.1 0 0.1 0 0 0 0.1 0 0.1 0 0 0 0 0 0 0 0z\"></path><path d=\"M8.3 1c-4.4 0-8.3 2.6-8.3 5.6 0 2 1.1 3.7 3 4.7 0 0 0 0 0 0s0 0.1 0 0.1c-0.1 1.3-0.9 1.7-0.9 1.7l-1.8 0.9h2c2.5 0 4.3-1.1 5.1-1.9 0.3 0 0.5 0 0.8 0 4.3 0 7.8-2.5 7.8-5.6s-3.4-5.5-7.7-5.5zM8.2 11.1c-0.3 0-0.7 0-0.9 0h-0.3l-0.2 0.2c-0.5 0.5-1.6 1.4-3.3 1.7 0.3-0.5 0.5-1.1 0.5-2v-0.3l-0.3-0.1c-1.8-0.9-2.7-2.3-2.7-4 0-2.4 3.5-4.6 7.3-4.6 3.7 0 6.7 2 6.7 4.6 0 2.4-3.1 4.5-6.8 4.5z\"></path></g>\n<g id=\"comment\"><path d=\"M8 1c-4.4 0-8 2.5-8 5.5 0 2 2 3.8 4 4.8 0 0 0 0 0 0 0 2.1-2 2.8-2 2.8 2.8 0 4.4-1.3 5.1-2.1 0.3 0 0.6 0 0.9 0 4.4 0 8-2.5 8-5.5s-3.6-5.5-8-5.5z\"></path></g>\n<g id=\"comments-o\"><path d=\"M14.2 14c0.6-0.5 1.8-1.6 1.8-3.2 0-1.4-1.2-2.6-2.8-3.3 0.5-0.6 0.8-1.5 0.8-2.4 0-2.8-2.9-5.1-6.6-5.1-3.5 0-7.4 2.1-7.4 5.1 0 2.1 1.6 3.6 2.3 4.2-0.1 1.2-0.6 1.7-0.6 1.7l-1.2 1h1.5c1.2 0 2.2-0.3 3-0.7 0.3 1.9 2.5 3.4 5.3 3.4 0.1 0 0.3 0 0.5 0 0.6 0.5 1.8 1.3 3.5 1.3h1.4l-1.1-0.9c0 0-0.3-0.3-0.4-1.1zM10.3 13.7c-2.3 0-4.3-1.3-4.3-2.8 0-0.1 0-0.1 0-0.2 0.2-0.2 0.4-0.3 0.5-0.5 0.2 0 0.5 0 0.7 0 2.1 0 4-0.7 5.2-1.9 1.5 0.5 2.6 1.5 2.6 2.5s-0.9 2-1.7 2.5l-0.3 0.2v0.3c0 0.5 0.2 0.8 0.3 1.1-1-0.2-1.7-0.7-1.9-1l-0.1-0.2h-0.2c-0.3 0-0.6 0-0.8 0zM7.4 1c3.1 0 5.6 1.9 5.6 4.1s-2.6 4.1-5.8 4.1c-0.2 0-0.6 0-0.8 0h-0.3l-0.1 0.2c-0.3 0.4-1.5 1.2-3.1 1.5 0.1-0.4 0.1-1 0.1-1.8v-0.3c-1-0.8-2.1-2.2-2.1-3.6 0-2.2 3.2-4.2 6.5-4.2z\"></path></g>\n<g id=\"comments\"><path d=\"M16 11.1c0-1.5-1.5-2.8-3.2-3.3-1.3 1.5-3.9 2.4-6.4 2.4-0.1 0-0.3 0-0.4 0 0 0 0 0-0.1 0-0.1 0.3-0.1 0.5-0.1 0.8 0 2 2.2 3.6 5 3.6 0.2 0 0.4 0 0.6 0 0.4 0.5 1.7 1.4 3.4 1.4 0 0-0.8-0.4-0.8-1.8 0 0 0 0 0 0 0-0.6 2-1.8 2-3.1z\"></path><path d=\"M13 4.6c0-2.5-2.8-4.6-6.4-4.6s-6.6 2.1-6.6 4.6c0 1.7 2 3.2 3 4 0 0 0 0 0 0 0 1.8-1.4 2.4-1.4 2.4 2.3 0 3.6-1.1 4.2-1.8 0.2 0 0.5 0 0.8 0 3.5 0.1 6.4-2 6.4-4.6z\"></path></g>\n<g id=\"compile\"><path d=\"M1 12h4v4h-4v-4z\"></path><path d=\"M6 12h4v4h-4v-4z\"></path><path d=\"M11 12h4v4h-4v-4z\"></path><path d=\"M1 7h4v4h-4v-4z\"></path><path d=\"M1 2h4v4h-4v-4z\"></path><path d=\"M6 7h4v4h-4v-4z\"></path><path d=\"M7 1h4v4h-4v-4z\"></path><path d=\"M11 7h4v4h-4v-4z\"></path><path d=\"M13 0h3v3h-3v-3z\"></path></g>\n<g id=\"compress-square\"><path d=\"M12 0h-12v12l1-1v-10h10z\"></path><path d=\"M4 16h12v-12l-1 1v10h-10z\"></path><path d=\"M7 9h-5l1.8 1.8-3.8 3.8 1.4 1.4 3.8-3.8 1.8 1.8z\"></path><path d=\"M16 1.4l-1.4-1.4-3.8 3.8-1.8-1.8v5h5l-1.8-1.8z\"></path></g>\n<g id=\"compress\"><path d=\"M5.3 9.3l-5 5 1.4 1.4 5-5 1.3 1.3v-4h-4z\"></path><path d=\"M15.7 1.7l-1.4-1.4-4 4-1.3-1.3v4h4l-1.3-1.3z\"></path></g>\n<g id=\"connect-o\"><path d=\"M12.5 9c-1 0-1.8 0.4-2.4 1l-3.2-1.7c0.1-0.3 0.1-0.5 0.1-0.8 0-0.2 0-0.3 0-0.4l2.9-1.3c0.6 0.7 1.5 1.2 2.6 1.2 1.9 0 3.5-1.6 3.5-3.5s-1.6-3.5-3.5-3.5-3.5 1.6-3.5 3.5c0 0.2 0 0.3 0 0.4l-2.9 1.3c-0.6-0.7-1.5-1.2-2.6-1.2-1.9 0-3.5 1.6-3.5 3.5s1.6 3.5 3.5 3.5c1 0 1.8-0.4 2.4-1l3.1 1.7c0 0.3 0 0.5 0 0.8 0 1.9 1.6 3.5 3.5 3.5s3.5-1.6 3.5-3.5-1.6-3.5-3.5-3.5zM12.5 1c1.4 0 2.5 1.1 2.5 2.5s-1.1 2.5-2.5 2.5-2.5-1.1-2.5-2.5c0-1.4 1.1-2.5 2.5-2.5zM3.5 10c-1.4 0-2.5-1.1-2.5-2.5s1.1-2.5 2.5-2.5 2.5 1.1 2.5 2.5c0 1.4-1.1 2.5-2.5 2.5zM12.5 15c-1.4 0-2.5-1.1-2.5-2.5s1.1-2.5 2.5-2.5 2.5 1.1 2.5 2.5c0 1.4-1.1 2.5-2.5 2.5z\"></path></g>\n<g id=\"connect\"><path d=\"M12 10c-0.8 0-1.4 0.3-2 0.8l-3.2-1.8c0.1-0.3 0.2-0.7 0.2-1s-0.1-0.7-0.2-1l3.2-1.8c0.6 0.5 1.2 0.8 2 0.8 1.7 0 3-1.3 3-3s-1.3-3-3-3-3 1.3-3 3c0 0.2 0 0.3 0 0.5l-3.5 1.9c-0.4-0.2-0.9-0.4-1.5-0.4-1.6 0-3 1.3-3 3v0c0 1.6 1.4 3 3 3 0.6 0 1.1-0.2 1.5-0.4l3.5 1.9c0 0.2 0 0.3 0 0.5 0 1.7 1.3 3 3 3s3-1.3 3-3-1.3-3-3-3z\"></path></g>\n<g id=\"controller\"><path d=\"M5.951 0.249l0.981-0.195 0.195 0.981-0.981 0.195-0.195-0.981z\"></path><path d=\"M8.877 14.966l0.981-0.195 0.195 0.981-0.981 0.195-0.195-0.981z\"></path><path d=\"M0.055 9.071l0.981-0.195 0.195 0.981-0.981 0.195-0.195-0.981z\"></path><path d=\"M14.773 6.145l0.981-0.195 0.195 0.981-0.981 0.195-0.195-0.981z\"></path><path d=\"M11.471 1.897l0.556-0.831 0.831 0.556-0.556 0.831-0.831-0.556z\"></path><path d=\"M3.139 14.441l0.56-0.83 0.83 0.56-0.56 0.83-0.83-0.56z\"></path><path d=\"M1.069 3.989l0.56-0.83 0.83 0.56-0.56 0.83-0.83-0.56z\"></path><path d=\"M13.547 12.299l0.556-0.831 0.831 0.556-0.556 0.831-0.831-0.556z\"></path><path d=\"M8.875 1.039l0.195-0.981 0.981 0.195-0.195 0.981-0.981-0.195z\"></path><path d=\"M5.953 15.745l0.195-0.981 0.981 0.195-0.195 0.981-0.981-0.195z\"></path><path d=\"M0.061 6.931l0.195-0.981 0.981 0.195-0.195 0.981-0.981-0.195z\"></path><path d=\"M14.767 9.854l0.195-0.981 0.981 0.195-0.195 0.981-0.981-0.195z\"></path><path d=\"M3.139 1.628l0.831-0.556 0.556 0.831-0.831 0.556-0.556-0.831z\"></path><path d=\"M11.477 14.101l0.831-0.556 0.556 0.831-0.831 0.556-0.556-0.831z\"></path><path d=\"M1.071 12.033l0.831-0.556 0.556 0.831-0.831 0.556-0.556-0.831z\"></path><path d=\"M13.539 3.63l0.83-0.56 0.56 0.83-0.83 0.56-0.56-0.83z\"></path><path d=\"M14 8c-0.003-1.895-0.884-3.583-2.258-4.681l-3.322 4.991-0.84-0.59 3.32-5c-0.836-0.47-1.836-0.747-2.9-0.747-3.314 0-6 2.686-6 6s2.686 6 6 6c3.304 0 5.984-2.671 6-5.971z\"></path></g>\n<g id=\"copy-o\"><path d=\"M13 3h-3l-3-3h-7v13h6v3h10v-10l-3-3zM7 1l2 2h-2v-2zM1 12v-11h5v3h3v8h-8zM15 15h-8v-2h3v-9h2v3h3v8zM13 6v-2l2 2h-2z\"></path></g>\n<g id=\"copy\"><path d=\"M6 0v3h3z\"></path><path d=\"M9 4h-4v-4h-5v12h9z\"></path><path d=\"M13 4v3h3z\"></path><path d=\"M12 4h-2v9h-3v3h9v-8h-4z\"></path></g>\n<g id=\"copyright\"><path d=\"M8 1.5c3.6 0 6.5 2.9 6.5 6.5s-2.9 6.5-6.5 6.5-6.5-2.9-6.5-6.5 2.9-6.5 6.5-6.5zM8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8v0z\"></path><path d=\"M9.9 10.3c-0.5 0.4-1.2 0.7-1.9 0.7-1.7 0-3-1.3-3-3s1.3-3 3-3c0.8 0 1.6 0.3 2.1 0.9l1.1-1.1c-0.8-0.8-2-1.3-3.2-1.3-2.5 0-4.5 2-4.5 4.5s2 4.5 4.5 4.5c1.1 0 2-0.4 2.8-1l-0.9-1.2z\"></path></g>\n<g id=\"corner-lower-left\"><path d=\"M16 16l-16-16v16z\"></path></g>\n<g id=\"corner-lower-right\"><path d=\"M16 16h-16l16-16z\"></path></g>\n<g id=\"corner-upper-left\"><path d=\"M0 16l16-16h-16z\"></path></g>\n<g id=\"corner-upper-right\"><path d=\"M16 16l-16-16h16z\"></path></g>\n<g id=\"credit-card\"><path d=\"M0 2v12h16v-12h-16zM15 13h-14v-5h14v5zM15 5h-14v-2h14v2z\"></path><path d=\"M10 11h3v1h-3v-1z\"></path><path d=\"M2 11h6v1h-6v-1z\"></path></g>\n<g id=\"crop\"><path d=\"M16 0.7v-0.7h-0.7l-3 3h-7.3v-3h-2v3h-3v2h3v8h8v3h2v-3h3v-2h-3v-7.3l3-3zM5 5h5.3l-5.3 5.3v-5.3zM11 11h-5.3l5.3-5.3v5.3z\"></path></g>\n<g id=\"cross-cutlery\"><path d=\"M10.9 8.6c0 0 0 0 0 0 0.6-0.1 1.2-0.4 1.6-0.9l3.1-3.1c0.4-0.4 0.4-1 0-1.4l-0.1-0.2-3 3c-0.2 0.2-0.6 0.2-0.9 0s-0.2-0.6 0-0.9l2.6-2.6c0.2-0.2 0.2-0.6 0-0.9-0.2-0.2-0.6-0.2-0.9 0l-2.6 2.6c-0.2 0.2-0.6 0.2-0.9 0-0.2-0.2-0.2-0.6 0-0.9l3-3-0.1-0.1c-0.4-0.4-1-0.4-1.4 0l-3.1 3.3c-0.4 0.4-0.7 1-0.8 1.6l-4.9-4.8c-0.4-0.4-1-0.3-1.3 0l-0.2 0.2c-1.4 1.4-0.9 4.2 1.5 6.6l0.8 0.8c0.4 0.4 0.9 0.7 1.5 0.8-0.5 0.4-0.8 0.8-0.8 0.8l-3.4 3.4c-0.7 0.7-0.7 1.9 0 2.6s1.9 0.7 2.6 0l3.3-3.5c0.2-0.2 0.7-0.8 1.3-1.5 0.3 0.4 0.5 0.6 0.5 0.6l4.3 4.3c0.7 0.7 1.9 0.7 2.6 0s0.7-1.9 0-2.6l-4.3-4.2z\"></path></g>\n<g id=\"crosshairs\"><path d=\"M7.5 0h1v4l-0.5 2-0.5-2v-4z\"></path><path d=\"M8.5 16h-1v-4l0.5-2 0.5 2v4z\"></path><path d=\"M16 7.5v1h-4l-2-0.5 2-0.5h4z\"></path><path d=\"M0 8.5v-1h4l2 0.5-2 0.5h-4z\"></path><path d=\"M8 2.5c3.038 0 5.5 2.462 5.5 5.5s-2.462 5.5-5.5 5.5c-3.038 0-5.5-2.462-5.5-5.5 0.006-3.035 2.465-5.494 5.499-5.5zM8 1c-3.866 0-7 3.134-7 7s3.134 7 7 7c3.866 0 7-3.134 7-7s-3.134-7-7-7v0z\"></path></g>\n<g id=\"css\"><path d=\"M4.1 11c1.4 0 1.9-1 1.9-1l-0.8-0.5c0 0-0.3 0.5-1 0.5s-1.2-0.9-1.2-2.2c0-1.2 0.6-1.8 1.2-1.8 0.5 0 0.9 0.4 0.9 0.4l0.8-0.6c0 0-0.7-0.8-1.7-0.8-1.1 0-2.2 0.9-2.2 2.8s0.9 3.2 2.1 3.2zM8.7 9.9c-0.3 0.1-0.7 0-1-0.4l-0.8 0.5c0.4 0.6 1 1 1.6 1 0.1 0 0.3 0 0.4-0.1 0.7-0.2 1.1-0.8 1.1-1.6 0-1.2-0.8-1.6-1.3-1.8-0.5-0.3-0.7-0.4-0.7-0.8s0.1-0.7 0.6-0.7c0.3 0 0.6 0.4 0.6 0.4l0.8-0.6c-0.2-0.3-0.7-0.8-1.4-0.8-0.9 0-1.6 0.6-1.6 1.6 0 1.1 0.7 1.5 1.2 1.8 0.6 0.2 0.8 0.4 0.8 0.9 0 0.3 0 0.6-0.3 0.6zM12.7 9.9c-0.3 0.1-0.7 0-1-0.4l-0.8 0.5c0.4 0.6 1 1 1.6 1 0.1 0 0.3 0 0.4-0.1 0.7-0.2 1.1-0.8 1.1-1.6 0-1.2-0.8-1.6-1.3-1.8-0.5-0.3-0.7-0.4-0.7-0.8s0.1-0.7 0.6-0.7c0.3 0 0.6 0.4 0.6 0.4l0.8-0.6c-0.2-0.3-0.7-0.8-1.4-0.8-0.9 0-1.6 0.6-1.6 1.6 0 1.1 0.7 1.5 1.2 1.8 0.6 0.2 0.8 0.4 0.8 0.9 0 0.3 0 0.6-0.3 0.6zM0 0v16h16v-16h-16zM15 15h-14v-14h14v14z\"></path></g>\n<g id=\"ctrl-a\"><path d=\"M9 7v-1h-1v-1h-1v1h-0.5v1h0.5v3.56c0.176 0.835 0.907 1.453 1.783 1.453 0.077 0 0.152-0.005 0.226-0.014l-0.009-0.999c-0.055 0.012-0.119 0.019-0.185 0.019-0.359 0-0.669-0.21-0.813-0.514l-0.002-3.505h1z\"></path><path d=\"M14 3h1v9h-1v-9z\"></path><path d=\"M13 6c-0.025-0.001-0.055-0.001-0.085-0.001-0.773 0-1.462 0.358-1.911 0.917l-0.004-0.915h-1v6h1v-3c-0.003-0.037-0.004-0.080-0.004-0.124 0-1.038 0.842-1.88 1.88-1.88 0.044 0 0.087 0.001 0.13 0.004l-0.006-1z\"></path><path d=\"M4.19 12c-2.030 0-3.19-1.46-3.19-4s1.16-4 3.19-4c0.009-0 0.019-0 0.029-0 0.539 0 1.052 0.114 1.515 0.32l-0.424 0.901c-0.319-0.139-0.69-0.22-1.080-0.22-0.014 0-0.028 0-0.042 0-1.808-0-2.188 1.63-2.188 3s0.38 3 2.19 3c0.497-0.013 0.96-0.145 1.366-0.368l0.444 0.898c-0.524 0.285-1.146 0.458-1.806 0.47z\"></path></g>\n<g id=\"ctrl\"><path d=\"M0 0v16h16v-16h-16zM4.19 12c-2.030 0-3.19-1.46-3.19-4s1.16-4 3.19-4c0.009-0 0.019-0 0.029-0 0.539 0 1.052 0.114 1.515 0.32l-0.424 0.901c-0.319-0.139-0.69-0.22-1.080-0.22-0.014 0-0.028 0-0.042 0-1.808-0-2.188 1.63-2.188 3s0.38 3 2.19 3c0.497-0.013 0.96-0.145 1.366-0.368l0.444 0.898c-0.524 0.285-1.146 0.458-1.806 0.47zM9 7h-1v3.5c0.147 0.309 0.457 0.519 0.815 0.519 0.065 0 0.129-0.007 0.19-0.020l-0.006 1.001c-0.065 0.008-0.141 0.013-0.217 0.013-0.875 0-1.606-0.618-1.781-1.441l-0.002-3.572h-0.51v-1h0.51v-1h1v1h1v1zM11 9v3h-1v-6h1v0.92c0.453-0.564 1.142-0.921 1.915-0.921 0.030 0 0.060 0.001 0.090 0.002l-0.004 1c-0.037-0.003-0.080-0.004-0.124-0.004-1.038 0-1.88 0.842-1.88 1.88 0 0.044 0.001 0.087 0.004 0.13zM15 12h-1v-9h1v9z\"></path></g>\n<g id=\"cube\"><path d=\"M8 0l-8 2v10l8 4 8-4v-10l-8-2zM14.4 2.6l-5.9 2.2-6.6-2.2 6.1-1.6 6.4 1.6zM1 11.4v-8.1l7 2.4v9.2l-7-3.5z\"></path></g>\n<g id=\"cubes\"><path d=\"M12 6v-4l-4-2-4 2v4l-4 2v5l4 2 4-2 4 2 4-2v-5zM8.090 1.12l2.91 1.44-2.6 1.3-2.91-1.44zM5 2.78l3 1.5v3.6l-3-1.5v-3.6zM4 13.88l-3-1.5v-3.6l3 1.5v3.6zM4.28 9.88l-2.88-1.46 2.6-1.3 2.88 1.44zM12 13.88l-3-1.5v-3.6l3 1.5v3.6zM12.28 9.88l-2.88-1.46 2.6-1.3 2.88 1.44z\"></path></g>\n<g id=\"curly-brackets\"><path d=\"M2.1 3.1c0.2 1.3 0.4 1.6 0.4 2.9 0 0.8-1.5 1.5-1.5 1.5v1c0 0 1.5 0.7 1.5 1.5 0 1.3-0.2 1.6-0.4 2.9-0.3 2.1 0.8 3.1 1.8 3.1s2.1 0 2.1 0v-2c0 0-1.8 0.2-1.8-1 0-0.9 0.2-0.9 0.4-2.9 0.1-0.9-0.5-1.6-1.1-2.1 0.6-0.5 1.2-1.1 1.1-2-0.3-2-0.4-2-0.4-2.9 0-1.2 1.8-1.1 1.8-1.1v-2c0 0-1 0-2.1 0s-2.1 1-1.8 3.1z\"></path><path d=\"M13.9 3.1c-0.2 1.3-0.4 1.6-0.4 2.9 0 0.8 1.5 1.5 1.5 1.5v1c0 0-1.5 0.7-1.5 1.5 0 1.3 0.2 1.6 0.4 2.9 0.3 2.1-0.8 3.1-1.8 3.1s-2.1 0-2.1 0v-2c0 0 1.8 0.2 1.8-1 0-0.9-0.2-0.9-0.4-2.9-0.1-0.9 0.5-1.6 1.1-2.1-0.6-0.5-1.2-1.1-1.1-2 0.2-2 0.4-2 0.4-2.9 0-1.2-1.8-1.1-1.8-1.1v-2c0 0 1 0 2.1 0s2.1 1 1.8 3.1z\"></path></g>\n<g id=\"cursor-o\"><path d=\"M5 2.6l5.75 6.4h-2.46l0.63 1.41 1.8 4-0.91 0.34-1.88-4.3-0.5-1.11-1 0.71-1.43 1.020v-8.47zM4 0v13l3-2.14 2.26 5.14 2.8-1-2.23-5h3.17l-9-10z\"></path></g>\n<g id=\"cursor\"><path d=\"M4 0v13l3.31-3.47 2.69 6.47 1.37-0.63-2.72-6.37h4.35l-9-9z\"></path></g>\n<g id=\"cutlery\"><path d=\"M13 0.8c0-0.5-0.4-0.8-0.8-0.8h-0.2c-1.7 0-3 1.9-3 4.7v0.9c0 1 0.5 1.9 1.4 2.4-0.3 1.2-0.4 2.5-0.4 2.5v4c0 0.8 0.7 1.5 1.5 1.5s1.5-0.7 1.5-1.5v-4c0-0.4-0.1-1.4-0.3-2.3 0.2-0.2 0.3-0.4 0.3-0.7v-6.7z\"></path><path d=\"M7.2 0h-0.2v3.5c0 0.3-0.2 0.5-0.5 0.5s-0.5-0.2-0.5-0.5v-3c0-0.3-0.2-0.5-0.5-0.5s-0.5 0.2-0.5 0.5v3c0 0.3-0.2 0.5-0.5 0.5s-0.5-0.2-0.5-0.5v-3.5h-0.2c-0.4 0-0.8 0.4-0.8 0.8v3.7c0 1 0.6 1.9 1.5 2.3-0.4 1.6-0.5 3.7-0.5 3.7v4c0 0.8 0.7 1.5 1.5 1.5s1.5-0.7 1.5-1.5v-4c0-0.5-0.1-2.3-0.4-3.7 0.8-0.4 1.4-1.3 1.4-2.3v-3.7c0-0.4-0.4-0.8-0.8-0.8z\"></path></g>\n<g id=\"dashboard\"><path d=\"M16 10.1c0-4.4-3.6-8.1-8-8.1s-8 3.7-8 8.1c0 1.4 0.3 2.9 0.9 3.9h4.9c0.5 0.6 1.3 1 2.2 1s1.7-0.4 2.2-1h4.9c0.6-1 0.9-2.5 0.9-3.9zM14 7v1l-4.1 3.5c0 0.1 0.1 0.3 0.1 0.5 0 1.1-0.9 2-2 2s-2-0.9-2-2 0.9-2 2-2c0.3 0 0.6 0.1 0.8 0.2l4.2-3.2h1zM10 4h1v1h-1v-1zM5 4h1v1h-1v-1zM2 12h-1v-1h1v1zM3 8h-1v-1h1v1zM15 12h-1v-1h1v1z\"></path><path d=\"M9 12c0 0.552-0.448 1-1 1s-1-0.448-1-1c0-0.552 0.448-1 1-1s1 0.448 1 1z\"></path></g>\n<g id=\"database\"><path d=\"M14 2.5c0 0.828-2.686 1.5-6 1.5s-6-0.672-6-1.5c0-0.828 2.686-1.5 6-1.5s6 0.672 6 1.5z\"></path><path d=\"M8 5c-3.3 0-6-0.7-6-1.5v3c0 0.8 2.7 1.5 6 1.5s6-0.7 6-1.5v-3c0 0.8-2.7 1.5-6 1.5z\"></path><path d=\"M8 9c-3.3 0-6-0.7-6-1.5v3c0 0.8 2.7 1.5 6 1.5s6-0.7 6-1.5v-3c0 0.8-2.7 1.5-6 1.5z\"></path><path d=\"M8 13c-3.3 0-6-0.7-6-1.5v3c0 0.8 2.7 1.5 6 1.5s6-0.7 6-1.5v-3c0 0.8-2.7 1.5-6 1.5z\"></path></g>\n<g id=\"date-input\"><path d=\"M14 1v3h-3v-3h-6v3h-3v-3h-2v15h16v-15h-2zM15 15h-14v-9h14v9z\"></path><path d=\"M3 0h1v3h-1v-3z\"></path><path d=\"M12 0h1v3h-1v-3z\"></path><path d=\"M3 8h1v5h-1v-5z\"></path></g>\n<g id=\"deindent\"><path d=\"M4 10.5v-6l-4 3z\"></path><path d=\"M0 0h16v3h-16v-3z\"></path><path d=\"M6 4h10v3h-10v-3z\"></path><path d=\"M6 8h10v3h-10v-3z\"></path><path d=\"M0 12h16v3h-16v-3z\"></path></g>\n<g id=\"del-a\"><path d=\"M14 3h1v9h-1v-9z\"></path><path d=\"M3 12h-2v-9h2c2.23 0.051 4.019 1.871 4.019 4.109 0 0.138-0.007 0.274-0.020 0.408 0.013 0.1 0.020 0.236 0.020 0.374 0 2.238-1.788 4.058-4.014 4.109zM2 11h1c0.31 0 3-0.12 3-3.5s-2.88-3.5-3-3.5h-1v7z\"></path><path d=\"M13 9v-0.5c-0.017-0.77-0.31-1.468-0.783-2.003-0.419-0.412-0.999-0.668-1.638-0.668-0.031 0-0.063 0.001-0.094 0.002-0.013-0.001-0.034-0.001-0.054-0.001-0.594 0-1.132 0.241-1.521 0.631-0.566 0.685-0.91 1.572-0.91 2.54 0 0.003-0 0.006-0 0.009 0 0.881 0.322 1.686 0.854 2.306 0.43 0.429 1.030 0.697 1.692 0.697 0.030 0 0.059-0.001 0.089-0.002 0.861-0.026 1.642-0.372 2.228-0.922l-0.712-0.708c-0.401 0.368-0.931 0.603-1.515 0.63-0.026 0.001-0.051 0.002-0.076 0.002-0.385 0-0.734-0.153-0.99-0.402-0.355-0.435-0.57-0.997-0.57-1.61l4-0zM10.5 6.8c0.020-0.001 0.043-0.002 0.066-0.002 0.362 0 0.691 0.141 0.935 0.372 0.209 0.224 0.361 0.505 0.427 0.818l-2.778 0.011c0.11-0.661 0.661-1.165 1.337-1.2z\"></path></g>\n<g id=\"del\"><path d=\"M0 0v16h16v-16h-16zM3 12h-2v-9h2c2.23 0.051 4.019 1.871 4.019 4.109 0 0.138-0.007 0.274-0.020 0.408 0.013 0.1 0.020 0.236 0.020 0.374 0 2.238-1.788 4.058-4.014 4.109zM13 9h-4c-0 0.004-0 0.008-0 0.012 0 0.607 0.211 1.164 0.564 1.603 0.252 0.244 0.601 0.397 0.986 0.397 0.025 0 0.049-0.001 0.074-0.002 0.586-0.027 1.115-0.261 1.518-0.631l0.708 0.712c-0.584 0.548-1.364 0.893-2.225 0.92-0.030 0.001-0.060 0.002-0.090 0.002-0.662 0-1.261-0.268-1.696-0.702-0.522-0.613-0.84-1.414-0.84-2.289 0-0.007 0-0.014 0-0.022-0-0.005-0-0.012-0-0.019 0-0.968 0.344-1.855 0.915-2.547 0.384-0.383 0.922-0.624 1.516-0.624 0.021 0 0.041 0 0.062 0.001 0.024-0.001 0.055-0.002 0.086-0.002 0.639 0 1.219 0.256 1.641 0.672 0.47 0.532 0.762 1.23 0.78 1.996l0 0.524zM15 12h-1v-9h1v9z\"></path><path d=\"M3 4h-1v7h1c0.31 0 3-0.12 3-3.5s-2.88-3.5-3-3.5z\"></path><path d=\"M10.49 6.8c-0.679 0.035-1.23 0.539-1.339 1.192l2.779 0.008c-0.069-0.324-0.22-0.606-0.431-0.831-0.242-0.229-0.571-0.371-0.934-0.371-0.027 0-0.053 0.001-0.079 0.002z\"></path></g>\n<g id=\"dental-chair\"><path d=\"M11.5 8.2c-0.3-0.1-0.6-0.2-0.8-0.2h-2.7v-1h3c0-0.6-0.4-1-1-1h-4c0 0.6 0.4 1 1 1v1c-0.5 0-1-0.2-1.2-0.6l-1.1-1.8c-0.3-0.4-0.7-0.6-1.1-0.6h-0.6v-0.7c0-0.3-0.1-0.5-0.2-0.8l-0.3-0.7c-0.3-0.5-0.9-0.8-1.5-0.8h-1l5 7c0.4 0.6 1.1 1 1.8 1h1.2v1h-1v2h-0.6c-0.9 0-1.8 0.4-2.4 1v0h-1v1h11v-1h-1c-0.6-0.6-1.5-1-2.4-1h-0.6v-2h-1v-1h1.6c0.2 0 0.5 0.1 0.7 0.2l1.7 0.9c0.9 0.5 2 0.5 2.9 0h0.1l-4.5-2.9z\"></path></g>\n<g id=\"desktop\"><path d=\"M16 0h-16v13h6v2h-2v1h8v-1h-2v-2h6v-13zM9 12h-2v-1h2v1zM15 10h-14v-8.9c0-0.1 0-0.1 0-0.1h14c0 0 0 0 0 0.1v8.9z\"></path></g>\n<g id=\"diamond-o\"><path d=\"M13 2h-10l-3 3.5 8 9.5 8-9.5zM4.64 5h-2.89l1.52-1.78zM6.42 5l1.58-1.84 1.58 1.84h-3.16zM10 6l-2 6.68-2-6.68h4zM5.26 6l1.89 6.44-5.42-6.44h3.53zM10.75 6h3.53l-5.43 6.44zM11.37 5l1.37-1.78 1.51 1.78h-2.9zM12 3l-1.44 1.81-1.46-1.81h2.9zM5.43 4.83l-1.43-1.83h2.9z\"></path></g>\n<g id=\"diamond\"><path d=\"M0 6h4l3 8.6-7-8.6z\"></path><path d=\"M16 6h-4l-3 8.6 7-8.6z\"></path><path d=\"M8 15l-3-9h6l-3 9z\"></path><path d=\"M4 5h-4l2-3 2 3z\"></path><path d=\"M16 5h-4l2-3 2 3z\"></path><path d=\"M10 5h-4l2-3 2 3z\"></path><path d=\"M3.34 2h3.66l-2 3-1.66-3z\"></path><path d=\"M9 2h4l-2 3-2-3z\"></path></g>\n<g id=\"diploma-scroll\"><path d=\"M12.61 8.41c-0.53-0.079-1.008-0.223-1.454-0.424 2.104-1.876 4.424-3.536 4.454-3.556l0.1-0.070 0.060-0.11c0.177-0.367 0.281-0.797 0.281-1.252 0-0.901-0.407-1.707-1.046-2.244-0.523-0.482-1.219-0.776-1.983-0.776-0.538 0-1.043 0.146-1.476 0.4l-0.126 0.133c-1.578 2.181-3.182 4.099-4.908 5.899-1.836 1.638-3.87 3.195-6.018 4.592l-0.394 0.248v0.23c-0.077 0.314-0.122 0.675-0.122 1.046 0 0.97 0.304 1.87 0.822 2.609 0.507 0.53 1.237 0.87 2.045 0.87 0.055 0 0.109-0.002 0.162-0.005 0.026 0.002 0.065 0.003 0.104 0.003 0.701 0 1.317-0.36 1.674-0.905 0.245-0.308 2.065-2.608 4.005-4.708 0.268 0.464 0.476 1.003 0.594 1.575 0.032 0.249 0.046 0.496 0.046 0.747 0 0.823-0.158 1.61-0.445 2.331l1.685-2.043 1.33 1c-0.041-1.174-0.243-2.286-0.584-3.336-0.227-0.416-0.542-0.845-0.915-1.214 0.406 0.346 0.871 0.643 1.372 0.874 0.94 0.338 1.989 0.572 3.076 0.672l-0.949-1.266 2-1.73c-0.83 0.273-1.785 0.431-2.777 0.431-0.216 0-0.43-0.007-0.642-0.022zM12.16 1.18c0.246-0.123 0.536-0.194 0.842-0.194 0.506 0 0.966 0.196 1.309 0.516 0.441 0.356 0.721 0.897 0.721 1.504 0 0.242-0.045 0.474-0.126 0.688-0.486 0.307-2.346 1.717-4.146 3.307-0.055-0.521-0.302-0.975-0.668-1.298-0.28-0.239-0.643-0.384-1.039-0.384-0.068 0-0.135 0.004-0.201 0.012 1.568-1.771 2.978-3.691 3.308-4.151zM2.7 11.81c0.073-0.051 0.164-0.082 0.262-0.082 0.014 0 0.027 0.001 0.040 0.002l0.068-0c0.179 0.052 0.334 0.142 0.461 0.261l-0.871 0.719c-0.081-0.165-0.128-0.358-0.128-0.563 0-0.052 0.003-0.103 0.009-0.153 0.027-0.077 0.084-0.144 0.158-0.183zM4 14.5c-0.175 0.306-0.499 0.508-0.871 0.508-0.046 0-0.090-0.003-0.134-0.009-0.046 0.006-0.106 0.008-0.167 0.008-0.515 0-0.981-0.209-1.318-0.548-0.365-0.54-0.583-1.206-0.583-1.922 0-0.251 0.027-0.495 0.077-0.73l0.706-0.457c-0.094 0.14-0.164 0.304-0.199 0.481-0.007 0.076-0.010 0.154-0.010 0.234 0 0.642 0.202 1.237 0.545 1.724l0.354 0.44 1.7-1.4c0.066 0.209 0.104 0.45 0.104 0.7 0 0.351-0.075 0.685-0.21 0.985zM4.86 12.050c-0.345-0.6-0.889-1.053-1.54-1.274-0.071-0.012-0.13-0.016-0.19-0.016s-0.119 0.004-0.177 0.010c-0.046-0.007-0.106-0.011-0.168-0.011s-0.122 0.004-0.182 0.011c1.489-1.018 2.766-2.003 3.988-3.052 0.398 0.071 0.812 0.25 1.131 0.533 0.297 0.313 0.48 0.739 0.48 1.209 0 0.032-0.001 0.063-0.002 0.094-1.14 1.226-2.25 2.536-3 3.506-0.054-0.379-0.177-0.719-0.357-1.023z\"></path></g>\n<g id=\"diploma\"><path d=\"M14 10.58c0.024-0.048 0.038-0.105 0.038-0.165s-0.014-0.117-0.039-0.167l-0.479-0.698c-0.009-0.013-0.014-0.028-0.014-0.045s0.005-0.032 0.014-0.045l0.48-0.7c0.024-0.048 0.038-0.105 0.038-0.165s-0.014-0.117-0.039-0.167c-0.040-0.11-0.127-0.196-0.236-0.237l-0.823-0.301c-0.031-0.011-0.054-0.037-0.060-0.069l-0-0.841c-0.007-0.125-0.072-0.233-0.169-0.299-0.066-0.045-0.145-0.071-0.231-0.071-0.004 0-0.007 0-0.011 0l-0.159-0-0.85 0.22c-0.010 0.004-0.022 0.007-0.035 0.007s-0.025-0.003-0.036-0.007l-0.549-0.65c-0.079-0.085-0.191-0.137-0.315-0.137s-0.236 0.053-0.315 0.137l-0.55 0.65c-0.010 0.004-0.022 0.007-0.035 0.007s-0.025-0.003-0.036-0.007l0.001 0-0.9-0.23h-0.1c-0.002-0-0.005-0-0.008-0-0.087 0-0.167 0.026-0.234 0.071-0.096 0.066-0.161 0.174-0.168 0.298l-0 0.841c-0.006 0.033-0.029 0.059-0.059 0.070l-0.821 0.3c-0.134 0.023-0.245 0.11-0.299 0.228-0.025 0.051-0.039 0.107-0.039 0.167s0.014 0.117 0.039 0.167l0.479 0.698c0.009 0.013 0.014 0.028 0.014 0.045s-0.005 0.032-0.014 0.045l-0.48 0.7c-0.024 0.048-0.038 0.105-0.038 0.165s0.014 0.117 0.039 0.167c0.040 0.11 0.127 0.196 0.236 0.237l0.823 0.301c0.031 0.011 0.054 0.037 0.060 0.069l0 0.841c0.007 0.125 0.072 0.233 0.169 0.299 0.067 0.045 0.147 0.071 0.234 0.071 0.003 0 0.005-0 0.008-0h0.16l0.31-0.070v3.69l1.53-2 1.47 2v-3.69l0.31 0.080h0.11c0.002 0 0.005 0 0.008 0 0.087 0 0.167-0.026 0.234-0.071 0.096-0.066 0.161-0.174 0.168-0.298l0-0.841c0.006-0.033 0.029-0.059 0.059-0.070l0.821-0.3c0.13-0.026 0.236-0.112 0.289-0.227z\"></path><path d=\"M0 1v12h8l-0.11-0.050c-0.282-0.195-0.469-0.508-0.49-0.867l-0-0.083h-6.4v-10h14v10h-1.43v0.080c-0.021 0.361-0.208 0.675-0.486 0.868l-0.084 0.052h3v-12h-16z\"></path><path d=\"M7.43 6.91c0.007-0.377 0.198-0.708 0.486-0.908 0.016-0.005 0.030-0.006 0.044-0.006s0.028 0.001 0.041 0.004l-5.001-0v1h4.43v-0.090z\"></path><path d=\"M6.42 8h-3.42v1h3.36c-0.074-0.136-0.117-0.298-0.117-0.47 0-0.13 0.025-0.253 0.070-0.367 0.014-0.063 0.054-0.122 0.107-0.163z\"></path><path d=\"M3 4h10v1h-10v-1z\"></path></g>\n<g id=\"disc\"><path d=\"M8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zM15 8c0 1.1-0.2 2.1-0.7 3l-2.7-1.2c0.2-0.6 0.4-1.2 0.4-1.8 0-2.2-1.8-4-4-4-0.5 0-0.9 0.1-1.4 0.3l-1.2-2.8c0.6-0.2 1.2-0.4 1.8-0.5l0.3 3h0.5v-3c3.9 0 7 3.1 7 7zM8 5c1.7 0 3 1.3 3 3s-1.3 3-3 3-3-1.3-3-3 1.3-3 3-3zM1 8c0-1.1 0.2-2.1 0.7-3l2.7 1.2c-0.2 0.6-0.4 1.2-0.4 1.8 0 2.2 1.8 4 4 4 0.5 0 0.9-0.1 1.4-0.3l1.2 2.8c-0.6 0.2-1.2 0.4-1.8 0.5l-0.3-3h-0.5v3c-3.9 0-7-3.1-7-7z\"></path><path d=\"M10 8c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path></g>\n<g id=\"doctor-briefcase\"><path d=\"M16 12l-1.4-6.7c-0.2-0.7-0.9-1.3-1.7-1.3h-1.9v-1.2c0-1-0.8-1.8-1.8-1.8h-2.4c-1 0-1.8 0.8-1.8 1.8v1.2h-1.9c-0.8 0-1.5 0.6-1.7 1.3l-1.4 6.7c-0.2 1 0.6 2 1.7 2h12.5c1.2 0 2-1 1.8-2zM6 2.8c0-0.4 0.4-0.8 0.8-0.8h2.4c0.4 0 0.8 0.4 0.8 0.8v1.2h-4v-1.2zM11 10h-2v2h-2v-2h-2v-2h2v-2h2v2h2v2z\"></path></g>\n<g id=\"doctor\"><path d=\"M14 11.3c-1-1.9-2-1.6-3.1-1.7 0.1 0.3 0.1 0.6 0.1 1 1.6 0.4 2 2.3 2 3.4v1h-2v-1h1c0 0 0-2.5-1.5-2.5s-1.5 2.4-1.5 2.5h1v1h-2v-1c0-1.1 0.4-3.1 2-3.4 0-0.6-0.1-1.1-0.2-1.3-0.2-0.1-0.4-0.3-0.4-0.6 0-0.6 0.8-0.4 1.4-1.5 0 0 0.9-2.3 0.6-4.3h-1c0-0.2 0.1-0.3 0.1-0.5s0-0.3-0.1-0.5h0.8c-0.3-1-1.3-1.9-3.2-1.9 0 0 0 0 0 0s0 0 0 0 0 0 0 0c-1.9 0-2.9 0.9-3.3 2h0.8c0 0.2-0.1 0.3-0.1 0.5s0 0.3 0.1 0.5h-1c-0.2 2 0.6 4.3 0.6 4.3 0.6 1 1.4 0.8 1.4 1.5 0 0.5-0.5 0.7-1.1 0.8-0.2 0.2-0.4 0.6-0.4 1.4 0 0.4 0 0.8 0 1.2 0.6 0.2 1 0.8 1 1.4 0 0.7-0.7 1.4-1.5 1.4s-1.5-0.7-1.5-1.5c0-0.7 0.4-1.2 1-1.4 0-0.3 0-0.7 0-1.2s0.1-0.9 0.2-1.3c-0.7 0.1-1.5 0.4-2.2 1.7-0.6 1.1-0.9 4.7-0.9 4.7h13.7c0.1 0-0.2-3.6-0.8-4.7zM6.5 2.5c0-0.8 0.7-1.5 1.5-1.5s1.5 0.7 1.5 1.5-0.7 1.5-1.5 1.5-1.5-0.7-1.5-1.5z\"></path><path d=\"M5 13.5c0 0.276-0.224 0.5-0.5 0.5s-0.5-0.224-0.5-0.5c0-0.276 0.224-0.5 0.5-0.5s0.5 0.224 0.5 0.5z\"></path></g>\n<g id=\"dollar\"><path d=\"M8.2 6.8c-0.1 0-0.1-0.1-0.2-0.1v-3.1c1.2 0.1 2.2 0.6 2.2 0.6l0.9-1.8c-0.1 0-1.5-0.8-3.1-0.8v-1.6h-1v1.6c-0.8 0.2-1.4 0.5-2 0.9-0.6 0.6-1 1.4-1 2.3 0 0.7 0.2 2.3 3 3.6v3.9c-0.9-0.2-2-0.7-2.4-0.9l-1 1.7c0.2 0.1 1.8 1 3.4 1.2v1.7h1v-1.7c0 0 0 0 0 0 2.3-0.3 3.6-2.1 3.6-3.8 0-1.5-1-2.7-3.4-3.7zM7 6.2c-0.8-0.5-1-1-1-1.3 0-0.4 0.1-0.7 0.4-0.9 0.2-0.1 0.4-0.2 0.6-0.3v2.5zM8 12.3v-3.4c1.1 0.5 1.6 1.1 1.6 1.6 0 0.6-0.3 1.6-1.6 1.8z\"></path></g>\n<g id=\"dot-circle\"><path d=\"M8 4c-2.2 0-4 1.8-4 4s1.8 4 4 4 4-1.8 4-4-1.8-4-4-4z\"></path><path d=\"M8 1c3.9 0 7 3.1 7 7s-3.1 7-7 7-7-3.1-7-7 3.1-7 7-7zM8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8v0z\"></path></g>\n<g id=\"download-alt\"><path d=\"M0 14h16v2h-16v-2z\"></path><path d=\"M8 13l5-5h-3v-8h-4v8h-3z\"></path></g>\n<g id=\"download\"><path d=\"M16 10h-5.5l-2.5 2.5-2.5-2.5h-5.5v6h16v-6zM4 14h-2v-2h2v2z\"></path><path d=\"M10 6v-6h-4v6h-3l5 5 5-5z\"></path></g>\n<g id=\"drop\"><path d=\"M8 0c0 0-5 8.2-5 11s2.2 5 5 5 5-2.2 5-5-5-11-5-11zM8.9 14.9l-0.2-1c1.4-0.3 2.4-1.7 2.4-3.2 0-0.3-0.1-1.1-0.8-2.6l0.9-0.4c0.6 1.4 0.8 2.4 0.8 3 0 2-1.3 3.8-3.1 4.2z\"></path></g>\n<g id=\"edit\"><path d=\"M16 4c0 0 0-1-1-2s-1.9-1-1.9-1l-1.1 1.1v-2.1h-12v16h12v-8l4-4zM6.3 11.4l-0.6-0.6 0.3-1.1 1.5 1.5-1.2 0.2zM7.2 9.5l-0.6-0.6 5.2-5.2c0.2 0.1 0.4 0.3 0.6 0.5zM14.1 2.5l-0.9 1c-0.2-0.2-0.4-0.3-0.6-0.5l0.9-0.9c0.1 0.1 0.3 0.2 0.6 0.4zM11 15h-10v-14h10v2.1l-5.9 5.9-1.1 4.1 4.1-1.1 2.9-3v6z\"></path></g>\n<g id=\"eject\"><path d=\"M1 11h14l-7-10z\"></path><path d=\"M1 12h14v3h-14v-3z\"></path></g>\n<g id=\"elastic\"><path d=\"M4.7 16v0c-1.7 0-3.1-0.8-4-2.1-1.1-1.7-0.9-4 0.4-5.8 0.9-1.3 2.1-2.1 3.6-2.4 1.2-0.3 2.2-1.1 2.5-2.2 0.2-0.8 0.7-1.5 1.3-2 0.9-1 2.2-1.5 3.5-1.5 1.1 0 2.2 0.4 2.9 1.2 1.5 1.6 1.5 4.2-0.1 6-0.5 0.6-1.2 1.1-2 1.4-1.2 0.5-2.2 1.6-2.6 3-0.3 1-0.8 1.9-1.5 2.6-1.1 1.2-2.6 1.8-4 1.8zM12 1c-1 0-2 0.4-2.8 1.2-0.5 0.5-0.8 1-1 1.6-0.5 1.5-1.8 2.5-3.3 2.9-1.2 0.2-2.2 0.9-3 2-1.1 1.5-1.2 3.3-0.3 4.7 0.6 1 1.8 1.6 3.1 1.6v0c1.2 0 2.4-0.5 3.3-1.4 0.6-0.6 1.1-1.4 1.3-2.2 0.4-1.7 1.6-3 3.2-3.6 0.6-0.2 1.2-0.7 1.6-1.2 1.2-1.4 1.3-3.5 0.1-4.7-0.6-0.6-1.4-0.9-2.2-0.9z\"></path></g>\n<g id=\"ellipsis-circle-o\"><path d=\"M8 1c3.9 0 7 3.1 7 7s-3.1 7-7 7-7-3.1-7-7 3.1-7 7-7zM8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8v0z\"></path><path d=\"M4 7h2v2h-2v-2z\"></path><path d=\"M7 7h2v2h-2v-2z\"></path><path d=\"M10 7h2v2h-2v-2z\"></path></g>\n<g id=\"ellipsis-circle\"><path d=\"M8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zM6 9h-2v-2h2v2zM9 9h-2v-2h2v2zM12 9h-2v-2h2v2z\"></path></g>\n<g id=\"ellipsis-dots-h\"><path d=\"M4 8c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path><path d=\"M10 8c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path><path d=\"M16 8c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path></g>\n<g id=\"ellipsis-dots-v\"><path d=\"M10 2c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path><path d=\"M10 8c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path><path d=\"M10 14c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path></g>\n<g id=\"ellipsis-h\"><path d=\"M0 6h4v4h-4v-4z\"></path><path d=\"M6 6h4v4h-4v-4z\"></path><path d=\"M12 6h4v4h-4v-4z\"></path></g>\n<g id=\"ellipsis-v\"><path d=\"M6 0h4v4h-4v-4z\"></path><path d=\"M6 6h4v4h-4v-4z\"></path><path d=\"M6 12h4v4h-4v-4z\"></path></g>\n<g id=\"enter-arrow\"><path d=\"M0 9l7 4v-3h9v-7l-3 2v2h-6v-3l-7 5z\"></path></g>\n<g id=\"enter\"><path d=\"M4 0v6h-3v10h14v-16h-11zM12 11h-5v2l-3-2.5 3-2.5v2h4v-3h1v4z\"></path></g>\n<g id=\"envelope-o\"><path d=\"M0 3v11h16v-11h-16zM1 7.1l3.9 2-3.9 3.4v-5.4zM1.9 13l4-3.5 2.1 1.1 2.1-1.1 4 3.5h-12.2zM15 12.5l-3.9-3.5 3.9-2v5.5zM15 5.9l-7 3.5-7-3.5v-1.9h14v1.9z\"></path></g>\n<g id=\"envelope-open-o\"><path d=\"M14 3.7v-0.7h-1.5l-4.5-3-4.6 3h-1.4v0.7l-2 1.3v11h16v-10.9l-2-1.4zM8 1.2l2.7 1.8h-5.5l2.8-1.8zM3 4h10v3.7l-3.5 1.7-1.5-1.3-1.5 1.4-3.5-1.7v-3.8zM1 5.5l1-0.7v2.4l-1-0.4v-1.3zM1 7.9l4.6 2.3-4.6 4v-6.3zM1.9 15l6.1-5.3 6.1 5.3h-12.2zM15 14.2l-4.7-4.1 4.7-2.3v6.4zM15 6.7l-1 0.5v-2.3l1 0.7v1.1z\"></path></g>\n<g id=\"envelope-open\"><path d=\"M14 3.7v3.7l2-1v-1.4z\"></path><path d=\"M2 3.8l-2 1.2v1.5l2 1z\"></path><path d=\"M11.2 2l-3.2-2-3.2 2z\"></path><path d=\"M13 3h-10v4.9l3.4 1.7 1.6-1.2 1.6 1.2 3.4-1.7z\"></path><path d=\"M16 7.6l-5.5 2.7 5.5 4.4z\"></path><path d=\"M8 9.6l-8 6.4h16z\"></path><path d=\"M5.5 10.3l-5.5-2.7v7.1z\"></path></g>\n<g id=\"envelope\"><path d=\"M0 3h16v2.4l-8 4-8-4z\"></path><path d=\"M0 14l5.5-4.8 2.5 1.4 2.5-1.4 5.5 4.8z\"></path><path d=\"M4.6 8.8l-4.6-2.3v6.5z\"></path><path d=\"M11.4 8.8l4.6-2.3v6.5z\"></path></g>\n<g id=\"envelopes-o\"><path d=\"M14 2h-14v10h14v-10zM5.71 8l1.29 0.55 1.29-0.55 4.71 3h-12zM1 9.83v-4l3.64 1.63zM9.36 7.46l3.64-1.68v4zM13 3v1.68l-6 2.77-6-2.77v-1.68h12z\"></path><path d=\"M15 4v9h-13v1h14v-10h-1z\"></path></g>\n<g id=\"envelopes\"><path d=\"M16 14h-14v-1h13v-9h1v10z\"></path><path d=\"M14 10.77v-5.48l-4.68 2.18 4.68 3.3z\"></path><path d=\"M8.28 7.96l-1.28 0.59-1.28-0.59-5.72 4.030v0.010l14-0.010-5.72-4.030z\"></path><path d=\"M7 7.45l7-3.27v-2.18h-14v2.18l7 3.27z\"></path><path d=\"M4.68 7.47l-4.68-2.18v5.48l4.68-3.3z\"></path></g>\n<g id=\"eraser\"><path d=\"M8.1 14l6.4-7.2c0.6-0.7 0.6-1.8-0.1-2.5l-2.7-2.7c-0.3-0.4-0.8-0.6-1.3-0.6h-1.8c-0.5 0-1 0.2-1.4 0.6l-6.7 7.6c-0.6 0.7-0.6 1.9 0.1 2.5l2.7 2.7c0.3 0.4 0.8 0.6 1.3 0.6h11.4v-1h-7.9zM6.8 13.9c0 0 0-0.1 0 0l-2.7-2.7c-0.4-0.4-0.4-0.9 0-1.3l3.4-3.9h-1l-3 3.3c-0.6 0.7-0.6 1.7 0.1 2.4l2.3 2.3h-1.3c-0.2 0-0.4-0.1-0.6-0.2l-2.8-2.8c-0.3-0.3-0.3-0.8 0-1.1l3.5-3.9h1.8l3.5-4h1l-3.5 4 3.1 3.7-3.5 4c-0.1 0.1-0.2 0.1-0.3 0.2z\"></path></g>\n<g id=\"esc-a\"><path d=\"M8 12c-0.726-0.029-1.409-0.177-2.043-0.425l0.403-0.915c0.435 0.202 0.945 0.319 1.482 0.319 0.326 0 0.643-0.043 0.943-0.125 0.121-0.109 0.215-0.285 0.215-0.484 0-0 0-0 0-0 0.070-0.43-0.22-0.62-1.17-1-0.83-0.29-2.040-0.76-1.83-2.080 0.072-0.594 0.46-1.082 0.989-1.296 0.223-0.053 0.466-0.081 0.715-0.081 0.724 0 1.393 0.235 1.934 0.633l-0.569 0.754c-0.366-0.248-0.817-0.396-1.302-0.396-0.123 0-0.243 0.009-0.361 0.028-0.215 0.084-0.377 0.296-0.387 0.547-0.080 0.401 0.14 0.581 1.15 1.001 0.85 0.33 2 0.77 1.8 2.080-0.067 0.511-0.364 0.94-0.782 1.186-0.323 0.163-0.696 0.256-1.090 0.256-0.034 0-0.069-0.001-0.103-0.002z\"></path><path d=\"M13.71 12c-0.027 0.001-0.058 0.001-0.089 0.001-0.583 0-1.124-0.18-1.57-0.488-0.646-0.548-1.059-1.37-1.059-2.289 0-0.079 0.003-0.157 0.009-0.235-0.011-0.079-0.016-0.183-0.016-0.288 0-0.899 0.413-1.701 1.060-2.228 0.5-0.282 1.091-0.446 1.72-0.446 0.443 0 0.868 0.081 1.259 0.23l-0.374 0.922c-0.276-0.111-0.595-0.176-0.93-0.176-0.388 0-0.756 0.087-1.086 0.242-0.395 0.361-0.652 0.893-0.652 1.485 0 0.095 0.007 0.188 0.019 0.279-0.010 0.063-0.016 0.148-0.016 0.234 0 0.599 0.255 1.138 0.663 1.514 0.346 0.177 0.754 0.28 1.185 0.28 0.292 0 0.573-0.047 0.835-0.134l0.331 0.905c-0.383 0.121-0.823 0.19-1.279 0.19-0.004 0-0.008 0-0.012-0z\"></path><path d=\"M5 4v-1h-4v9h4v-1h-3v-3h3v-1h-3v-3h3z\"></path></g>\n<g id=\"esc\"><path d=\"M0 0v16h16v-16h-16zM5 4h-3v3h3v1h-3v3h3v1h-4v-9h4v1zM10 10.54c-0.067 0.511-0.364 0.94-0.782 1.186-0.333 0.175-0.719 0.276-1.129 0.276-0.031 0-0.062-0.001-0.093-0.002-0.722-0.029-1.405-0.177-2.038-0.425l0.403-0.915c0.435 0.202 0.945 0.319 1.482 0.319 0.326 0 0.643-0.043 0.943-0.125 0.121-0.109 0.215-0.285 0.215-0.484 0-0 0-0 0-0 0.070-0.43-0.22-0.62-1.17-1-0.83-0.29-2.040-0.76-1.83-2.080 0.072-0.594 0.46-1.082 0.989-1.296 0.223-0.053 0.466-0.081 0.715-0.081 0.724 0 1.393 0.235 1.934 0.633l-0.569 0.754c-0.366-0.248-0.817-0.396-1.302-0.396-0.123 0-0.243 0.009-0.361 0.028-0.215 0.084-0.377 0.296-0.387 0.547-0.080 0.401 0.14 0.581 1.15 1.001 0.83 0.3 2.020 0.75 1.83 2.060zM12.67 10.72c0.345 0.176 0.752 0.279 1.183 0.279 0.292 0 0.573-0.047 0.835-0.134l0.311 0.945c-0.383 0.121-0.823 0.19-1.279 0.19-0 0-0.001 0-0.001 0-0.027 0.001-0.058 0.001-0.089 0.001-0.583 0-1.124-0.18-1.57-0.488-0.651-0.548-1.069-1.374-1.069-2.297 0-0.076 0.003-0.152 0.008-0.227-0.010-0.079-0.016-0.183-0.016-0.288 0-0.899 0.413-1.701 1.060-2.228 0.5-0.282 1.091-0.446 1.72-0.446 0.443 0 0.868 0.081 1.259 0.23l-0.374 0.922c-0.276-0.111-0.595-0.176-0.93-0.176-0.388 0-0.756 0.087-1.086 0.242-0.395 0.361-0.652 0.893-0.652 1.485 0 0.095 0.007 0.188 0.019 0.279-0.008 0.055-0.013 0.13-0.013 0.206 0 0.592 0.25 1.126 0.65 1.502z\"></path></g>\n<g id=\"euro\"><path d=\"M10.89 3c1.166 0.009 2.244 0.383 3.127 1.011l-0.017-2.321c-0.918-0.433-1.994-0.686-3.129-0.686-3.606 0-6.616 2.551-7.323 5.947l-1.548 0.049v1h1.41c0 0.17 0 0.33 0 0.5-0.005 0.075-0.008 0.162-0.008 0.25s0.003 0.175 0.008 0.262l-1.411-0.012v1h1.54c0.882 3.353 3.805 5.818 7.331 5.999 1.149-0.002 2.218-0.256 3.175-0.708l-0.045-2.291c-0.866 0.617-1.944 0.991-3.108 1-2.461-0.128-4.512-1.744-5.28-3.959l6.388-0.041v-1h-6.59c-0.006-0.075-0.009-0.162-0.009-0.25s0.003-0.175 0.010-0.261c-0.001-0.159-0.001-0.319-0.001-0.489h6.59v-1h-6.4c0.678-2.325 2.788-3.996 5.29-4z\"></path></g>\n<g id=\"exchange\"><path d=\"M16 5v2h-13v2l-3-3 3-3v2z\"></path><path d=\"M0 12v-2h13v-2l3 3-3 3v-2z\"></path></g>\n<g id=\"exclamation-circle-o\"><path d=\"M8 1c3.9 0 7 3.1 7 7s-3.1 7-7 7-7-3.1-7-7 3.1-7 7-7zM8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8v0z\"></path><path d=\"M7 3h2v7h-2v-7z\"></path><path d=\"M7 11h2v2h-2v-2z\"></path></g>\n<g id=\"exclamation-circle\"><path d=\"M8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zM9 13h-2v-2h2v2zM9 10h-2v-7h2v7z\"></path></g>\n<g id=\"exclamation\"><path d=\"M6 0h4v4l-1 7h-2l-1-7z\"></path><path d=\"M10 14c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path></g>\n<g id=\"exit-o\"><path d=\"M10 0c1.1 0 2 0.9 2 2 0 0.9-0.6 1.7-1.5 1.9 0 0 0 0.1 0 0.1 0.4 0 0.7 0.2 1 0.5l1.3 1.3c0.1 0.1 0.3 0.2 0.5 0.2h1.7v-6h-5z\"></path><path d=\"M11.8 14.5l-3.8-4.5v2.5c0 0.8-0.7 1.5-1.5 1.5h-3.5c-0.6 0-1-0.4-1-1s0.4-1 1-1h2.5c0.3 0 0.5-0.2 0.5-0.5v-2c0-0.7 0.1-1.3 0.4-2l0.7-1.5h-0.8c-0.5 0-0.9 0.2-1.2 0.6l-0.5 0.7c-0.2 0.4-0.7 0.5-1.2 0.3-0.4-0.3-0.6-0.9-0.2-1.3l0.6-0.8c0.7-1 1.9-1.5 3.1-1.5h2l0.1-0.3c-0.6-0.3-1-1-1-1.7 0-1.1 0.9-2 2-2h-7v4.9l-0.6 0.8c-0.3 0.4-0.5 0.9-0.4 1.5 0.1 0.5 0.4 1 0.9 1.3 0 0 0 0 0 0v2.5c-1.1 0-2 0.9-2 2s0.9 2 2 2v1h11.6c-1.1 0-2.1-0.6-2.7-1.5z\"></path><path d=\"M11.4 7.3l-0.7-0.8-0.6 1.5c-0.2 0.5-0.3 0.9 0 1.3l4.9 6.1v-7.4h-2.1c-0.6 0-1.1-0.2-1.5-0.7z\"></path></g>\n<g id=\"exit\"><path d=\"M14 6h-1.7c-0.2 0-0.4-0.1-0.6-0.2l-1.3-1.3c-0.2-0.3-0.6-0.5-1.1-0.5h-0.3c1.1 0 2-0.9 2-2s-0.9-2-2-2-2 0.9-2 2c0 0.7 0.4 1.4 1 1.7l-0.2 0.3h-2c-1.1 0-2.3 0.5-3 1.5l-0.6 0.8c-0.4 0.4-0.2 1 0.2 1.3 0.4 0.2 0.9 0.1 1.2-0.3l0.5-0.7c0.3-0.4 0.7-0.6 1.2-0.6h0.8l-0.7 1.6c-0.3 0.6-0.4 1.2-0.4 1.9v2c0 0.3-0.2 0.5-0.5 0.5h-2.5c-0.6 0-1 0.4-1 1s0.4 1 1 1h3.5c0.8 0 1.5-0.7 1.5-1.5v-2.5l3.8 4.5c0.6 0.9 1.7 1.5 2.8 1.5h0.9l-5.4-6.7c-0.3-0.4-0.2-0.8 0-1.3l0.6-1.5 0.7 0.8c0.4 0.4 1 0.7 1.6 0.7h2c0.6 0 1-0.4 1-1s-0.4-1-1-1z\"></path></g>\n<g id=\"expand-full\"><path d=\"M5.3 6.7l1.4-1.4-3-3 1.3-1.3h-4v4l1.3-1.3z\"></path><path d=\"M6.7 10.7l-1.4-1.4-3 3-1.3-1.3v4h4l-1.3-1.3z\"></path><path d=\"M10.7 9.3l-1.4 1.4 3 3-1.3 1.3h4v-4l-1.3 1.3z\"></path><path d=\"M11 1l1.3 1.3-3 3 1.4 1.4 3-3 1.3 1.3v-4z\"></path></g>\n<g id=\"expand-square\"><path d=\"M11 2h-9v9l1-1v-7h7z\"></path><path d=\"M5 14h9v-9l-1 1v7h-7z\"></path><path d=\"M16 0h-5l1.8 1.8-4.5 4.5 1.4 1.4 4.5-4.5 1.8 1.8z\"></path><path d=\"M7.7 9.7l-1.4-1.4-4.5 4.5-1.8-1.8v5h5l-1.8-1.8z\"></path></g>\n<g id=\"expand\"><path d=\"M15 1h-4l1.3 1.3-4.5 4.5 1.4 1.4 4.5-4.5 1.3 1.3z\"></path><path d=\"M6.8 7.8l-4.5 4.5-1.3-1.3v4h4l-1.3-1.3 4.5-4.5z\"></path></g>\n<g id=\"external-browser\"><path d=\"M11 10l-2.9-3.2-3.3 3.2h2.2v1.8c0 1.7-0.9 4.2-4 4.2 4.8 0 6-1.4 6-4.3v-1.7h2z\"></path><path d=\"M0 0v13h6v-1h-5v-9h14v9h-5v1h6v-13h-16zM2 2h-1v-1h1v1zM13 2h-10v-1h10v1z\"></path></g>\n<g id=\"external-link\"><path d=\"M14 16v-11l-1 1v9h-12v-12h9l1-1h-11v14z\"></path><path d=\"M16 0h-5l1.8 1.8-6.8 6.8 1.4 1.4 6.8-6.8 1.8 1.8z\"></path></g>\n<g id=\"eye-slash\"><path d=\"M12.9 5.2l-0.8 0.8c1.7 0.9 2.5 2.3 2.8 3-0.7 0.9-2.8 3.1-7 3.1-0.7 0-1.2-0.1-1.8-0.2l-0.8 0.8c0.8 0.3 1.7 0.4 2.6 0.4 5.7 0 8.1-4 8.1-4s-0.6-2.4-3.1-3.9z\"></path><path d=\"M12 7.1c0-0.3 0-0.6-0.1-0.8l-4.8 4.7c0.3 0 0.6 0.1 0.9 0.1 2.2 0 4-1.8 4-4z\"></path><path d=\"M15.3 0l-4.4 4.4c-0.8-0.2-1.8-0.4-2.9-0.4-6.7 0-8 5.1-8 5.1s1 1.8 3.3 3l-3.3 3.2v0.7h0.7l15.3-15.3v-0.7h-0.7zM4 11.3c-1.6-0.7-2.5-1.8-2.9-2.3 0.3-0.7 1.1-2.2 3.1-3.2-0.1 0.4-0.2 0.8-0.2 1.3 0 1.1 0.5 2.2 1.3 2.9l-1.3 1.3zM6.2 7.9l-1 0.2c0 0-0.3-0.5-0.3-1.2 0-0.8 0.4-1.5 0.4-1.5 0.5-0.3 1.3-0.3 1.3-0.3s-0.5 0.9-0.5 1.7c-0.1 0.7 0.1 1.1 0.1 1.1z\"></path></g>\n<g id=\"eye\"><path d=\"M8 3.9c-6.7 0-8 5.1-8 5.1s2.2 4.1 7.9 4.1 8.1-4 8.1-4-1.3-5.2-8-5.2zM5.3 5.4c0.5-0.3 1.3-0.3 1.3-0.3s-0.5 0.9-0.5 1.6c0 0.7 0.2 1.1 0.2 1.1l-1.1 0.2c0 0-0.3-0.5-0.3-1.2 0-0.8 0.4-1.4 0.4-1.4zM7.9 12.1c-4.1 0-6.2-2.3-6.8-3.2 0.3-0.7 1.1-2.2 3.1-3.2-0.1 0.4-0.2 0.8-0.2 1.3 0 2.2 1.8 4 4 4s4-1.8 4-4c0-0.5-0.1-0.9-0.2-1.3 2 0.9 2.8 2.5 3.1 3.2-0.7 0.9-2.8 3.2-7 3.2z\"></path></g>\n<g id=\"eyedropper\"><path d=\"M15 1c-1.8-1.8-3.7-0.7-4.6 0.1-0.4 0.4-0.7 0.9-0.7 1.5v0c0 1.1-1.1 1.8-2.1 1.5l-0.1-0.1-0.7 0.8 0.7 0.7-6 6-0.8 2.3-0.7 0.7 1.5 1.5 0.8-0.8 2.3-0.8 6-6 0.7 0.7 0.7-0.6-0.1-0.2c-0.3-1 0.4-2.1 1.5-2.1v0c0.6 0 1.1-0.2 1.4-0.6 0.9-0.9 2-2.8 0.2-4.6zM3.9 13.6l-2 0.7-0.2 0.1 0.1-0.2 0.7-2 5.8-5.8 1.5 1.5-5.9 5.7z\"></path></g>\n<g id=\"facebook-square\"><path d=\"M0 0v16h16v-16h-16zM12.9 8.4h-2.1v5.6h-2.1v-5.6h-1.5v-2h1.5c0 0 0-0.8 0-1.7 0-1.5 0.9-2.7 2.9-2.7 0.8 0 1.4 0.1 1.4 0.1v1.9c0 0-0.6 0-1.3 0s-0.8 0.3-0.8 0.9c0 0.1 0 0.1 0 0.1 0 0.2 0 0.5 0 1.4h2.1l-0.1 2z\"></path></g>\n<g id=\"facebook\"><path d=\"M7.2 16v-7.5h-2v-2.7h2c0 0 0-1.1 0-2.3 0-1.8 1.2-3.5 3.9-3.5 1.1 0 1.9 0.1 1.9 0.1l-0.1 2.5c0 0-0.8 0-1.7 0-1 0-1.1 0.4-1.1 1.2 0 0.6 0-1.3 0 2h2.9l-0.1 2.7h-2.8v7.5h-2.9z\"></path></g>\n<g id=\"factory\"><path d=\"M4.4 1.3c-0.6 0.3-0.8 1.1-0.4 1.5 0.5-0.9 1.3-0.6 2.5 0.4 0.8 0.7 1.9 0.1 1.9 0.1s0.2 1.2 1.7 1.4c1.7 0.2 2.3-0.8 2.3-0.8s0.4 1 1.9 0.4c1.1-0.4 0.7-1.1 0.7-1.1s1 0 1-0.7c0-0.9-1.1-0.8-1.1-0.8s0.2-1-0.9-1.1c-1-0.1-1.3 0.5-1.3 0.5s-0.3-1.1-1.8-1.1c-1.4 0-1.9 1.3-1.9 1.3s-0.4-0.6-1.6-0.6c-0.9 0-1.3 0.7-1.3 0.7s-1.1-0.5-1.7-0.1z\"></path><path d=\"M12 12.1v-2.1l-4 2.1v-2.1h-2.4l-0.6-7h-2l-0.6 7h-2.4v6h16v-6l-4 2.1zM6 14h-4v-2h4v2z\"></path></g>\n<g id=\"family\"><path d=\"M9.5 7.5c0 0.828-0.672 1.5-1.5 1.5s-1.5-0.672-1.5-1.5c0-0.828 0.672-1.5 1.5-1.5s1.5 0.672 1.5 1.5z\"></path><path d=\"M14.27 4h-2.54c0 0 0 0 0 0-0.955 0-1.73 0.775-1.73 1.73v3.27c0 0.552 0.448 1 1 1v6h4v-6c0.552 0 1-0.448 1-1v-3.27c0-0.955-0.775-1.73-1.73-1.73 0 0 0 0 0 0z\"></path><path d=\"M15 2c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path><path d=\"M4.27 5h-2.54c-0.955 0-1.73 0.775-1.73 1.73s0.775 1.73 1.73 1.73c0.955 0 1.73-0.775 1.73-1.73s-0.775-1.73-1.73-1.73c-0.955 0-1.73 0.775-1.73 1.73v2.27c0 0.552 0.448 1 1 1l-1 3h1v3h4v-3h1l-1-3c0.552 0 1-0.448 1-1v-2.27c0-0.955-0.775-1.73-1.73-1.73 0 0 0 0 0 0z\"></path><path d=\"M5 3c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path><path d=\"M7 13v3h2v-3c0.552 0 1-0.448 1-1v-1.54c0-0.806-0.654-1.46-1.46-1.46 0 0 0 0 0 0h-1.080c-0.806 0-1.46 0.654-1.46 1.46 0 0 0 0 0 0v1.54c0 0.552 0.448 1 1 1z\"></path></g>\n<g id=\"fast-backward\"><path d=\"M16 15v-14l-7 7z\"></path><path d=\"M9 15v-14l-7 7z\"></path><path d=\"M0 1h2v14h-2v-14z\"></path></g>\n<g id=\"fast-forward\"><path d=\"M0 1v14l7-7z\"></path><path d=\"M7 1v14l7-7z\"></path><path d=\"M14 1h2v14h-2v-14z\"></path></g>\n<g id=\"female\"><path d=\"M10 2c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path><path d=\"M10 8v-1.5l1.8 1.8c0.3 0.3 0.7 0.3 1 0s0.3-0.8 0-1l-2.6-2.6c-0.4-0.5-1-0.7-1.7-0.7h-1c-0.7 0-1.3 0.2-1.7 0.7l-2.6 2.6c-0.3 0.3-0.3 0.8 0 1 0.3 0.3 0.7 0.3 1 0l1.8-1.8v1.5l-4 5h4v3h4v-3h4l-4-5z\"></path></g>\n<g id=\"file-add\"><path d=\"M12 15h-10v-14h6v4h4v1h1v-2l-4-4h-8v16h12v-2h-1v1zM9 1l3 3h-3v-3z\"></path><path d=\"M13 7h-2v2h-2v2h2v2h2v-2h2v-2h-2v-2z\"></path></g>\n<g id=\"file-code\"><path d=\"M10 0h-8v16h12v-12l-4-4zM9 5h4v10h-10v-14h6v4zM10 4v-3l3 3h-3z\"></path><path d=\"M6.2 13h-0.7l-2-2.5 2-2.5h0.7l-2 2.5z\"></path><path d=\"M9.8 13h0.7l2-2.5-2-2.5h-0.7l2 2.5z\"></path><path d=\"M6.7 14h0.6l2.1-7h-0.8z\"></path></g>\n<g id=\"file-font\"><path d=\"M10 0h-8v16h12v-12l-4-4zM9 5h4v10h-10v-14h6v4zM10 4v-3l3 3h-3z\"></path><path d=\"M5 7v2h2v5h2v-5h2v-2z\"></path></g>\n<g id=\"file-movie\"><path d=\"M10 0h-8v16h12v-12l-4-4zM9 5h4v10h-10v-14h6v4zM10 4v-3l3 3h-3z\"></path><path d=\"M10 10v-2h-6v5h6v-2l2 2v-5z\"></path></g>\n<g id=\"file-o\"><path d=\"M10 0h-8v16h12v-12l-4-4zM9 5h4v10h-10v-14h6v4zM10 4v-3l3 3h-3z\"></path></g>\n<g id=\"file-picture\"><path d=\"M10 0h-8v16h12v-12l-4-4zM9 5h4v10h-10v-14h6v4zM10 4v-3l3 3h-3z\"></path><path d=\"M4 11.5v2.5h8v-1.7c0 0 0.1-1.3-1.3-1.5-1.3-0.2-1.5 0.4-2.5 0.5-0.8 0-0.6-1.3-2.2-1.3-1.2 0-2 1.5-2 1.5z\"></path><path d=\"M12 8.5c0 0.828-0.672 1.5-1.5 1.5s-1.5-0.672-1.5-1.5c0-0.828 0.672-1.5 1.5-1.5s1.5 0.672 1.5 1.5z\"></path></g>\n<g id=\"file-presentation\"><path d=\"M10 0h-8v16h12v-12l-4-4zM13 15h-10v-14h6v4h4v10zM10 4v-3l3 3h-3z\"></path><path d=\"M9 6h-2v1h-3v6h2v1h1v-1h2v1h1v-1h2v-6h-3v-1zM11 8v4h-6v-4h6z\"></path><path d=\"M7 9v2l2-1z\"></path></g>\n<g id=\"file-process\"><path d=\"M12 0h-7v6h0.7l0.2 0.7 0.1 0.1v-5.8h5v4h4v9h-6l0.3 0.5-0.5 0.5h7.2v-11l-4-4zM12 4v-3l3 3h-3z\"></path><path d=\"M5.5 11.5c0 0.552-0.448 1-1 1s-1-0.448-1-1c0-0.552 0.448-1 1-1s1 0.448 1 1z\"></path><path d=\"M7.9 12.4l1.1-0.4v-1l-1.1-0.4c-0.1-0.3-0.2-0.6-0.4-0.9l0.5-1-0.7-0.7-1 0.5c-0.3-0.2-0.6-0.3-0.9-0.4l-0.4-1.1h-1l-0.4 1.1c-0.3 0.1-0.6 0.2-0.9 0.4l-1-0.5-0.7 0.7 0.5 1.1c-0.2 0.3-0.3 0.6-0.4 0.9l-1.1 0.3v1l1.1 0.4c0.1 0.3 0.2 0.6 0.4 0.9l-0.5 1 0.7 0.7 1.1-0.5c0.3 0.2 0.6 0.3 0.9 0.4l0.3 1.1h1l0.4-1.1c0.3-0.1 0.6-0.2 0.9-0.4l1 0.5 0.7-0.7-0.5-1.1c0.2-0.2 0.3-0.5 0.4-0.8zM4.5 13.5c-1.1 0-2-0.9-2-2s0.9-2 2-2 2 0.9 2 2c0 1.1-0.9 2-2 2z\"></path></g>\n<g id=\"file-refresh\"><path d=\"M10 0h-8v16h12v-12l-4-4zM13 15h-10v-14h6v4h4v10zM10 4v-3l3 3h-3z\"></path><path d=\"M4.7 7.7l-0.7-0.7v3h3l-1.2-1.2c0.4-0.8 1.3-1.3 2.2-1.3 1.4 0 2.5 1.1 2.5 2.5h1.5c0-2.2-1.8-4-4-4-1.3 0-2.5 0.7-3.3 1.7z\"></path><path d=\"M9.8 11.8c-0.5 0.5-1.1 0.8-1.8 0.7-1 0-1.9-0.6-2.3-1.5h-1.6c0.4 1.7 2 3 3.8 3 1.1 0 2.1-0.5 2.8-1.2l1.3 1.2v-3h-3l0.8 0.8z\"></path></g>\n<g id=\"file-remove\"><path d=\"M12 15h-10v-14h6v4h4v2.59l1-1v-2.59l-4-4h-8v16h12v-2.59l-1-1v2.59zM9 1l3 3h-3v-3z\"></path><path d=\"M15 8l-1-1-2 2-2-2-1 1 2 2-2 2 1 1 2-2 2 2 1-1-2-2 2-2z\"></path></g>\n<g id=\"file-search\"><path d=\"M12 13.47v1.53h-10v-14h6v4h4v0.56c0.386 0.229 0.716 0.504 0.996 0.825l0.004-2.385-4-4h-8v16h12v-1.53zM9 1l3 3h-3v-3z\"></path><path d=\"M14.78 12.72l-1.92-1.92c-0.089-0.085-0.201-0.148-0.325-0.179 0.292-0.458 0.468-1.018 0.468-1.618 0-1.657-1.343-3-3-3s-3 1.343-3 3c0 1.657 1.343 3 3 3 0.6 0 1.16-0.176 1.629-0.48 0.020 0.136 0.083 0.248 0.169 0.337l1.92 1.92c0.134 0.125 0.313 0.201 0.511 0.201 0.414 0 0.75-0.336 0.75-0.75 0-0.198-0.077-0.378-0.202-0.512zM10 11c-1.105 0-2-0.895-2-2s0.895-2 2-2c1.105 0 2 0.895 2 2s-0.895 2-2 2z\"></path></g>\n<g id=\"file-sound\"><path d=\"M11.4 10.5c0 1.2-0.4 2.2-1 3l0.4 0.5c0.7-0.9 1.2-2.1 1.2-3.5s-0.5-2.6-1.2-3.5l-0.4 0.5c0.6 0.8 1 1.9 1 3z\"></path><path d=\"M9.9 8l-0.4 0.5c0.4 0.5 0.7 1.2 0.7 2s-0.3 1.5-0.7 2l0.4 0.5c0.5-0.6 0.8-1.5 0.8-2.5s-0.3-1.8-0.8-2.5z\"></path><path d=\"M9.1 9l-0.4 0.5c0.2 0.3 0.3 0.6 0.3 1s-0.1 0.7-0.3 1l0.4 0.5c0.3-0.4 0.5-0.9 0.5-1.5s-0.2-1.1-0.5-1.5z\"></path><path d=\"M10 0h-8v16h12v-12l-4-4zM9 5h4v10h-10v-14h6v4zM10 4v-3l3 3h-3z\"></path><path d=\"M6 9h-2v3h2l2 2v-7z\"></path></g>\n<g id=\"file-start\"><path d=\"M10 0h-8v16h12v-12l-4-4zM13 15h-10v-14h6v4h4v10zM10 4v-3l3 3h-3z\"></path><path d=\"M5 6v6l6-3z\"></path></g>\n<g id=\"file-table\"><path d=\"M10 0h-8v16h12v-12l-4-4zM9 5h4v10h-10v-14h6v4zM10 4v-3l3 3h-3z\"></path><path d=\"M4 7v6h8v-6h-8zM6 12h-1v-1h1v1zM6 10h-1v-1h1v1zM9 12h-2v-1h2v1zM9 10h-2v-1h2v1zM11 12h-1v-1h1v1zM11 10h-1v-1h1v1z\"></path></g>\n<g id=\"file-text-o\"><path d=\"M10 0h-8v16h12v-12l-4-4zM9 5h4v10h-10v-14h6v4zM10 4v-3l3 3h-3z\"></path><path d=\"M4 7h8v1h-8v-1z\"></path><path d=\"M4 9h8v1h-8v-1z\"></path><path d=\"M4 11h8v1h-8v-1z\"></path></g>\n<g id=\"file-text\"><path d=\"M10 0v4h4z\"></path><path d=\"M9 0h-7v16h12v-11h-5v-5zM12 12h-8v-1h8v1zM12 10h-8v-1h8v1zM12 7v1h-8v-1h8z\"></path></g>\n<g id=\"file-tree-small\"><path d=\"M5 12v2h11v-5h-11v2h-2v-4h9v-5h-12v5h2v5z\"></path></g>\n<g id=\"file-tree-sub\"><path d=\"M8 11v1h-1v-2h5v-4h-8v1h-1v-2h6v-4h-9v4h2v3h2v2h2v3h2v2h8v-4z\"></path></g>\n<g id=\"file-tree\"><path d=\"M16 10v-4h-11v1h-2v-3h9v-4h-12v4h2v10h3v2h11v-4h-11v1h-2v-5h2v2z\"></path></g>\n<g id=\"file-zip\"><path d=\"M10 0h-8v16h12v-12l-4-4zM9 15h-4v-2.8l0.7-2.2h2.4l0.9 2.2v2.8zM13 15h-3v-3l-1-3h-2v-1h-2v1l-1 3v3h-1v-14h4v1h2v1h-2v1h2v1h4v10zM10 4v-3l3 3h-3z\"></path><path d=\"M5 6h2v1h-2v-1z\"></path><path d=\"M5 2h2v1h-2v-1z\"></path><path d=\"M5 4h2v1h-2v-1z\"></path><path d=\"M7 5h2v1h-2v-1z\"></path><path d=\"M7 7h2v1h-2v-1z\"></path><path d=\"M6 12h2v2h-2v-2z\"></path></g>\n<g id=\"file\"><path d=\"M9 5h5v11h-12v-16h7v5zM10 4v-4l4 4h-4z\"></path></g>\n<g id=\"fill\"><path d=\"M13 14.5c0.468-2.207 0.985-4.050 1.604-5.846 0.411 1.796 0.928 3.638 1.337 5.521 0.059 1.153-0.612 1.825-1.441 1.825s-1.5-0.672-1.5-1.5z\"></path><path d=\"M8 1l-1.44 1.44-2-2c-0.276-0.262-0.649-0.423-1.060-0.423s-0.784 0.161-1.061 0.423c-0.27 0.271-0.438 0.645-0.438 1.059s0.168 0.789 0.439 1.060l2 2-4.44 4.44 7 7 8-8zM8 2.41l5.59 5.59h-11.18l2.75-2.75c0.071 0.042 0.156 0.067 0.247 0.067 0.271 0 0.49-0.219 0.49-0.49 0-0.091-0.025-0.176-0.068-0.249l0.721-0.718 1.54 1.53c0.091 0.091 0.216 0.147 0.355 0.147 0.277 0 0.502-0.225 0.502-0.502 0-0.139-0.056-0.264-0.147-0.355l-1.53-1.53zM3.15 1.85c-0.091-0.091-0.148-0.216-0.148-0.355s0.057-0.264 0.148-0.355c0.092-0.089 0.217-0.144 0.355-0.144s0.263 0.055 0.355 0.144l2 2-0.71 0.71z\"></path></g>\n<g id=\"film\"><path d=\"M0 0v16h1v-1h1v1h12v-1h1v1h1v-16h-16zM2 14h-1v-1h1v1zM2 12h-1v-1h1v1zM2 10h-1v-1h1v1zM2 8h-1v-1h1v1zM2 6h-1v-1h1v1zM2 4h-1v-1h1v1zM2 2h-1v-1h1v1zM13 15h-10v-6h10v6zM13 7h-10v-6h10v6zM15 14h-1v-1h1v1zM15 12h-1v-1h1v1zM15 10h-1v-1h1v1zM15 8h-1v-1h1v1zM15 6h-1v-1h1v1zM15 4h-1v-1h1v1zM15 2h-1v-1h1v1z\"></path></g>\n<g id=\"filter\"><path d=\"M1 2h14v2l-6 5v7l-2-2v-5l-6-5v-2z\"></path><path d=\"M1 0h14v1h-14v-1z\"></path></g>\n<g id=\"fire\"><path d=\"M4.9 15.8c0 0-3.9-0.4-3.9-5.7 0-4.1 3.1-6.5 3.1-6.5s1.3 1.4 2.3 1.9c1 0.6 1.4-5.5 1.4-5.5s7.2 3.9 7.2 9.8c0 6.1-4 5.9-4 5.9s1.8-2.4 1.8-5.2c0-3-3.9-6.7-3.9-6.7s-0.5 4.4-2.1 5c-1.6-0.9-2.5-2.3-2.5-2.3s-3.7 5.8 0.6 9.3z\"></path><path d=\"M8.2 16.1c-2-0.1-3.7-1.4-3.7-3.2s0.7-2.6 0.7-2.6 0.5 1 1.1 1.5 1.8 0.8 2.4 0.1c0.6-0.6 0.8-2.3 0.8-2.3s1.4 1.1 1.2 3c-0.1 2-0.9 3.5-2.5 3.5z\"></path></g>\n<g id=\"flag-checkered\"><path d=\"M2 0c-1.1 0-2 0.9-2 2 0 0.7 0.4 1.4 1 1.7v12.3h2v-12.3c0.6-0.3 1-1 1-1.7 0-1.1-0.9-2-2-2z\"></path><path d=\"M12 2c-2.1 0-1.8-1-4.4-1s-3.6 3-3.6 3v8c0 0 0.7-2 3-2 2.7 0 2.8 1 5 1 3.3 0 4-2 4-2v-8c0 0-1.6 1-4 1zM15 4.5c-0.2 0.2-0.8 0.4-2 0.6v-2.2c0.8-0.1 1.5-0.2 2-0.4v2zM5 7.9v-2.6c0.4-0.6 1.1-1.1 2-1.1v-2.1c0.2-0.1 0.4-0.1 0.6-0.1 1.2 0 1.6 0.2 2.1 0.4 0.1 0.1 0.2 0.2 0.3 0.2v2.2c0.5 0.2 1.1 0.4 2 0.4 0.4 0 0.7 0 1-0.1v2.6c-0.3 0-0.6 0.1-1 0.1-1.1 0-1.5-0.2-2-0.5v2.3c-0.7-0.3-1.5-0.6-3-0.6v-2.2c-0.9 0.2-1.5 0.6-2 1.1zM13 9.9v-2.2c1.1-0.2 1.7-0.6 2-0.8v1.8c-0.2 0.3-0.7 1-2 1.2z\"></path><path d=\"M10 7.2v-2.4c0 0-1.2-0.6-3-0.6v2.6c1.7-0.4 3 0.4 3 0.4z\"></path></g>\n<g id=\"flag-o\"><path d=\"M4 2c0-1.1-0.9-2-2-2s-2 0.9-2 2c0 0.7 0.4 1.4 1 1.7v12.3h2v-12.3c0.6-0.3 1-1 1-1.7z\"></path><path d=\"M7.6 2c1.2 0 1.6 0.2 2.1 0.4 0.5 0.3 1.1 0.6 2.3 0.6s2.2-0.2 3-0.5v6.3c-0.2 0.3-0.9 1.2-3 1.2-0.9 0-1.3-0.2-1.9-0.4-0.7-0.3-1.5-0.6-3.1-0.6-0.8 0-1.5 0.2-2 0.5v-5.3c0.2-0.5 1-2.2 2.6-2.2zM16 1c0 0-1.6 1-4 1-2.1 0-1.8-1-4.4-1s-3.6 3-3.6 3v8c0 0 0.7-2 3-2 2.7 0 2.8 1 5 1 3.3 0 4-2 4-2v-8z\"></path></g>\n<g id=\"flag\"><path d=\"M4 2c0-1.1-0.9-2-2-2s-2 0.9-2 2c0 0.7 0.4 1.4 1 1.7v12.3h2v-12.3c0.6-0.3 1-1 1-1.7z\"></path><path d=\"M4 4c0 0 1-3 3.6-3 2.7 0 2.3 1 4.4 1 2.4 0 4-1 4-1v8c0 0-0.7 2-4 2-2.2 0-2.3-1-5-1-2.3 0-3 2-3 2v-8z\"></path></g>\n<g id=\"flash\"><path d=\"M16 8l-2.2-1.6 1.1-2.4-2.7-0.2-0.2-2.7-2.4 1.1-1.6-2.2-1.6 2.2-2.4-1.1-0.2 2.7-2.7 0.2 1.1 2.4-2.2 1.6 2.2 1.6-1.1 2.4 2.7 0.2 0.2 2.7 2.4-1.1 1.6 2.2 1.6-2.2 2.4 1.1 0.2-2.7 2.7-0.2-1.1-2.4 2.2-1.6z\"></path></g>\n<g id=\"flask\"><path d=\"M2 16h12l-4-8v-7h1v-1h-6v1h1v7l-4 8zM9 1v7.2l1.9 3.8h-5.8l1.9-3.8v-7.2h2z\"></path></g>\n<g id=\"flight-landing\"><path d=\"M13.64 7c-0.71-0.2-1.89-0.43-3.23-0.67l-3.82-4.24c-0.209-0.23-0.462-0.416-0.746-0.544l-1.194-0.546c-0.090 0-0.15 0-0.1 0.11s1.45 2.89 2.29 4.59c-1.84-0.29-3.5-0.53-4.23-0.63-0.258-0.047-0.474-0.198-0.608-0.406l-0.722-1.074c-0.115-0.168-0.28-0.294-0.474-0.358l-0.806-0.232 0.61 3.26c0.067 0.34 0.318 0.609 0.644 0.699 1.326 0.381 4.816 1.341 7.526 1.921 6 1.28 6.8 1.28 7.12 0.91s-0.67-2.38-2.26-2.79z\"></path><path d=\"M0 13h16v1h-16v-1z\"></path></g>\n<g id=\"flight-takeoff\"><path d=\"M12.57 2.26c-0.65 0.29-1.66 0.85-2.8 1.5l-5.46-0.76c-0.093-0.014-0.2-0.022-0.309-0.022-0.211 0-0.414 0.030-0.607 0.086l-1.185 0.336c-0.1 0-0.1 0.1 0 0.14l4.56 2c-1.54 0.92-2.91 1.76-3.51 2.14-0.13 0.082-0.288 0.13-0.458 0.13-0.094 0-0.184-0.015-0.268-0.042l-1.194-0.378c-0.086-0.031-0.186-0.049-0.29-0.049s-0.204 0.018-0.296 0.051l-0.754 0.308 2.52 2.1c0.152 0.127 0.349 0.205 0.565 0.205 0.129 0 0.251-0.028 0.361-0.077 1.204-0.538 4.374-1.998 6.734-3.228 5.24-2.78 5.82-3.26 5.82-3.7 0-0.69-2-1.4-3.43-0.74z\"></path><path d=\"M0 13h16v1h-16v-1z\"></path></g>\n<g id=\"flip-h\"><path d=\"M0 15l6-5-6-4.9z\"></path><path d=\"M9 10.1l6 4.9v-10l-6 5.1zM14 12.9l-3.4-2.8 3.4-3v5.8z\"></path><path d=\"M7 5h1v1h-1v-1z\"></path><path d=\"M7 3h1v1h-1v-1z\"></path><path d=\"M7 7h1v1h-1v-1z\"></path><path d=\"M7 9h1v1h-1v-1z\"></path><path d=\"M7 11h1v1h-1v-1z\"></path><path d=\"M7 13h1v1h-1v-1z\"></path><path d=\"M7 15h1v1h-1v-1z\"></path><path d=\"M7.5 1v0c1.3 0 2.6 0.7 3.6 1.9l-1.1 1.1h3v-3l-1.2 1.2c-1.2-1.4-2.7-2.2-4.3-2.2 0 0 0 0 0 0-1.9 0-3.6 1-4.9 2.9l0.8 0.6c1.1-1.6 2.5-2.5 4.1-2.5z\"></path></g>\n<g id=\"flip-v\"><path d=\"M1 1l5 6 4.94-6h-9.94z\"></path><path d=\"M5.94 10l-4.94 6h10zM3.12 15l2.83-3.44 3 3.44h-5.83z\"></path><path d=\"M10 8h1v1h-1v-1z\"></path><path d=\"M12 8h1v1h-1v-1z\"></path><path d=\"M8 8h1v1h-1v-1z\"></path><path d=\"M6 8h1v1h-1v-1z\"></path><path d=\"M4 8h1v1h-1v-1z\"></path><path d=\"M2 8h1v1h-1v-1z\"></path><path d=\"M0 8h1v1h-1v-1z\"></path><path d=\"M15 8.47v0c-0.059 1.485-0.782 2.789-1.879 3.632l-1.121-1.102v3h3l-1.18-1.18c1.293-1.031 2.128-2.588 2.18-4.342l0-0.008c-0.092-2.083-1.223-3.883-2.884-4.905l-0.596 0.805c1.423 0.857 2.383 2.357 2.479 4.087z\"></path></g>\n<g id=\"folder-add\"><path d=\"M14 6v-2h-7l-1-2h-4l-1 2h-1v11h14v-1h-13v-9h0.62l1-2h2.57l1.19 2h6.62v1h1z\"></path><path d=\"M14 7h-2v2h-2v2h2v2h2v-2h2v-2h-2v-2z\"></path></g>\n<g id=\"folder-o\"><path d=\"M7 4l-1-2h-4l-1 2h-1v11h16v-11h-9zM15 14h-14v-9h0.6l1-2h2.6l1.2 2h8.6v9z\"></path></g>\n<g id=\"folder-open-o\"><path d=\"M14 6v-2h-7l-1-2h-4l-1 2h-1v11h14l2-9h-2zM14.9 7l-1.6 7-11.9-0.1 2.3-6.9h11.2zM1 5h0.6l1-2h2.6l1.2 2h6.6v1h-10l-2 5.9v-6.9z\"></path></g>\n<g id=\"folder-open\"><path d=\"M14 6v-2h-7l-1-2h-4l-1 2h-1v9.5l3-7.5z\"></path><path d=\"M3.7 7l-3.2 8h12.8l2.5-8z\"></path></g>\n<g id=\"folder-remove\"><path d=\"M13 12.41v1.59h-12v-9h0.62l1-2h2.57l1.19 2h6.62v2.59l1-1v-2.59h-7l-1-2h-4l-1 2h-1v11h14v-1.59l-1-1z\"></path><path d=\"M16 8l-1-1-2 2-2-2-1 1 2 2-2 2 1 1 2-2 2 2 1-1-2-2 2-2z\"></path></g>\n<g id=\"folder-search\"><path d=\"M13 13.47v0.53h-12v-9h0.62l1-2h2.57l1.19 2h6.62v0.91c0.385 0.179 0.716 0.407 1.001 0.681l-0.001-2.591h-7l-1-2h-4l-1 2h-1v11h14v-0.53z\"></path><path d=\"M15.78 12.72l-1.92-1.92c-0.089-0.085-0.201-0.148-0.325-0.179 0.292-0.458 0.468-1.018 0.468-1.618 0-1.657-1.343-3-3-3s-3 1.343-3 3c0 1.657 1.343 3 3 3 0.6 0 1.16-0.176 1.629-0.48 0.020 0.136 0.083 0.248 0.169 0.337l1.92 1.92c0.134 0.125 0.313 0.201 0.511 0.201 0.414 0 0.75-0.336 0.75-0.75 0-0.198-0.077-0.378-0.202-0.512zM11 11c-1.105 0-2-0.895-2-2s0.895-2 2-2c1.105 0 2 0.895 2 2s-0.895 2-2 2z\"></path></g>\n<g id=\"folder\"><path d=\"M16 15h-16v-11h1l1-2h4l1 2h9z\"></path></g>\n<g id=\"font\"><path d=\"M12 16h3l-6-16h-2l-6 16h3l1.9-5h4.2l1.9 5zM6.7 9l1.3-3.6 1.3 3.6h-2.6z\"></path></g>\n<g id=\"form\"><path d=\"M15 2v2h-9v-2h9zM16 1h-11v4h11v-4z\"></path><path d=\"M0 1h4v4h-4v-4z\"></path><path d=\"M15 7v2h-9v-2h9zM16 6h-11v4h11v-4z\"></path><path d=\"M0 6h4v4h-4v-4z\"></path><path d=\"M15 12v2h-9v-2h9zM16 11h-11v4h11v-4z\"></path><path d=\"M0 11h4v4h-4v-4z\"></path></g>\n<g id=\"forward\"><path d=\"M0 1v14l8-7z\"></path><path d=\"M8 1v14l8-7z\"></path></g>\n<g id=\"frown-o\"><path d=\"M8 1c3.9 0 7 3.1 7 7s-3.1 7-7 7-7-3.1-7-7 3.1-7 7-7zM8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8v0z\"></path><path d=\"M7 6c0 0.552-0.448 1-1 1s-1-0.448-1-1c0-0.552 0.448-1 1-1s1 0.448 1 1z\"></path><path d=\"M11 6c0 0.552-0.448 1-1 1s-1-0.448-1-1c0-0.552 0.448-1 1-1s1 0.448 1 1z\"></path><path d=\"M11.3 12.3c-0.7-1.1-2-1.8-3.3-1.8s-2.6 0.7-3.3 1.8l-0.8-0.6c0.9-1.4 2.4-2.2 4.1-2.2s3.2 0.8 4.1 2.2l-0.8 0.6z\"></path></g>\n<g id=\"funcion\"><path d=\"M10 0c0 0-2.1 0-2.7 3l-0.4 2h-1.9l-0.5 1h2.2l-1.4 7c-0.4 2-1.9 2-1.9 2h-1l-0.4 1h3c0 0 2.1 0 2.7-3l1.4-7h2.4l0.5-1h-2.7l0.4-2c0.4-2 1.8-2 1.8-2h1l0.5-1h-3z\"></path></g>\n<g id=\"funnel\"><path d=\"M6 11h4v4h-4v-4z\"></path><path d=\"M13.6 5l2.4-4h-16l2.4 4h11.2z\"></path><path d=\"M3 6l2.4 4h5.2l2.4-4h-10z\"></path></g>\n<g id=\"gamepad\"><path d=\"M12.16 2c-1.215 0.603-2.641 0.968-4.149 1-1.53-0.032-2.956-0.397-4.229-1.026-2.611 0.026-3.781 1.196-3.781 3.866v6c0.017 1.197 0.991 2.16 2.19 2.16 0 0 0 0 0 0h0.23c0 0 0.001 0 0.002 0 0.963 0 1.78-0.621 2.074-1.485 0.305-0.915 1.145-2.515 2.085-2.515h2.84c0.94 0 1.78 1.6 2.080 2.5 0.298 0.879 1.116 1.5 2.078 1.5 0.001 0 0.001 0 0.002 0h0.23c1.21 0 2.19-0.98 2.19-2.19v-6c0-2.64-1.17-3.81-3.84-3.81zM5 7h-1v1h-1v-1h-1v-1h1v-1h1v1h1v1zM10.060 8.11c-0.585 0-1.060-0.475-1.060-1.060s0.475-1.060 1.060-1.060c0.585 0 1.060 0.475 1.060 1.060s-0.475 1.060-1.060 1.060zM13 8c-0.552 0-1-0.448-1-1s0.448-1 1-1c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path></g>\n<g id=\"gavel\"><path d=\"M6.4 4.1v0c-0.4-0.4-0.4-0.9-0.1-1.2l2.6-2.6c0.3-0.3 0.8-0.3 1.2 0l0.1 0.1c0.3 0.3 0.3 0.8 0 1.2l-2.6 2.5c-0.3 0.3-0.9 0.3-1.2 0z\"></path><path d=\"M12 9.7v0c-0.4-0.4-0.4-0.9-0.1-1.3l2.6-2.6c0.3-0.3 0.8-0.3 1.2 0l0.1 0.1c0.3 0.3 0.3 0.8 0 1.2l-2.6 2.6c-0.4 0.3-0.9 0.3-1.2 0z\"></path><path d=\"M10 7.7l-1.7-1.7c-0.4-0.4-0.4-1 0-1.4l2.3-2.3c0.4-0.4 1-0.4 1.4 0l1.7 1.7c0.4 0.4 0.4 1 0 1.4l-2.3 2.3c-0.4 0.4-1 0.4-1.4 0z\"></path><path d=\"M4 14.2c0.6-0.6 4-5.6 4.5-5.3 0.4 0.2 1-0.5 1-0.5l-1.9-1.9c0 0-0.7 0.6-0.5 1 0.3 0.5-4.7 3.9-5.3 4.5 0 0-2.8 2.2-1.4 3.6s3.6-1.4 3.6-1.4z\"></path></g>\n<g id=\"gift\"><path d=\"M10.1 5c2-0.3 3.9-1.1 2.2-3.6-0.7-1-1.4-1.4-2-1.4-1 0-1.7 1.1-2.3 2.2-0.6-1.1-1.3-2.2-2.3-2.2-0.6 0-1.3 0.4-2 1.4-1.8 2.5 0.2 3.3 2.2 3.6h-5.9v3h16v-3h-5.9zM10.3 1c0.1 0 0.5 0.1 1.2 1 0.5 0.7 0.6 1.1 0.5 1.3-0.2 0.3-1.3 0.7-3.3 0.8 0-0.2-0.1-0.4-0.2-0.6 0.6-1.4 1.3-2.5 1.8-2.5zM4 3.3c-0.1-0.2 0-0.6 0.5-1.3 0.7-0.9 1.1-1 1.2-1 0.5 0 1.2 1.1 1.8 2.5-0.1 0.2-0.2 0.4-0.2 0.6-2-0.1-3.1-0.5-3.3-0.8zM7 7v-2h2v2h-2z\"></path><path d=\"M9 15h-2v-6h-6v7h14v-7h-6z\"></path></g>\n<g id=\"glass\"><path d=\"M11 15h-2v-8l6-7h-15l6 7v8h-2c-2 0-2 1-2 1h11c0 0 0-1-2-1zM12.9 1l-1.8 2h-7.2l-1.7-2h10.7zM7 15v-8h1v8h-1z\"></path></g>\n<g id=\"glasses\"><path d=\"M15.5 7h-0.5c-0.1 0-0.1 0-0.2 0-0.4-1.2-1.5-2-2.8-2s-2.4 0.9-2.8 2.1c-0.3-0.4-0.7-0.6-1.2-0.6s-0.9 0.2-1.2 0.6c-0.4-1.2-1.5-2.1-2.8-2.1s-2.4 0.9-2.8 2c-0.1 0-0.1 0-0.2 0h-0.5c-0.3 0-0.5 0.2-0.5 0.5s0.2 0.5 0.5 0.5h0.5c0 1.7 1.3 3 3 3 1.5 0 2.7-1.1 3-2.5 0 0 0 0 0 0 0.3 0 0.5-0.2 0.5-0.5s0.2-0.5 0.5-0.5 0.5 0.2 0.5 0.5c0 0.3 0.2 0.5 0.5 0.5 0 0 0 0 0 0 0.2 1.4 1.5 2.5 3 2.5 1.7 0 3-1.3 3-3h0.5c0.3 0 0.5-0.2 0.5-0.5s-0.2-0.5-0.5-0.5zM4 10c-1.1 0-2-0.9-2-2s0.9-2 2-2 2 0.9 2 2-0.9 2-2 2zM12 10c-1.1 0-2-0.9-2-2s0.9-2 2-2 2 0.9 2 2-0.9 2-2 2z\"></path></g>\n<g id=\"globe-wire\"><path d=\"M8 0c-4.418 0-8 3.582-8 8s3.582 8 8 8c4.418 0 8-3.582 8-8s-3.582-8-8-8zM14.8 9.5c0 0.5-0.7 0.66-2 1 0.124-0.589 0.206-1.277 0.229-1.98l2.001-0.020c0 0.36-0.080 0.5-0.16 1v0zM1.2 9.5v0c-0.1-0.5-0.15-0.64-0.2-1h2c0.024 0.723 0.106 1.411 0.244 2.079-1.344-0.419-2.044-0.579-2.044-1.079zM1.2 6.5c0-0.5 0.7-0.66 2-1-0.115 0.594-0.187 1.284-0.2 1.989l-2 0.011c0-0.36 0.080-0.5 0.16-1v0zM8.5 5c1.13 0.013 2.226 0.107 3.298 0.277 0.047 0.643 0.165 1.41 0.201 2.199l-3.499 0.025v-2.5zM8.5 4v-2.94c1.17 0.27 2.2 1.47 2.84 3.15-0.836-0.116-1.819-0.192-2.817-0.21zM7.5 1.060v2.94c-1.017 0.015-2.001 0.087-2.968 0.214 0.768-1.684 1.798-2.884 2.968-3.154zM7.5 5v2.5h-3.5c0.031-0.806 0.142-1.571 0.326-2.307 0.932-0.080 2.035-0.177 3.158-0.193zM4 8.5h3.5v2.5c-1.13-0.013-2.226-0.107-3.298-0.277-0.047-0.643-0.165-1.41-0.201-2.199zM7.5 12v2.94c-1.17-0.27-2.2-1.47-2.84-3.15 0.836 0.116 1.819 0.192 2.817 0.21zM8.5 14.94v-2.94c1.017-0.015 2.001-0.087 2.968-0.214-0.768 1.684-1.798 2.884-2.968 3.154zM8.5 11v-2.5h3.5c-0.031 0.806-0.142 1.571-0.326 2.307-0.932 0.080-2.035 0.177-3.158 0.193zM15 7.5h-2c-0.024-0.723-0.106-1.411-0.244-2.079 1.354 0.399 2.014 0.559 2.014 1.079v0c0.13 0.5 0.18 0.64 0.23 1zM14.3 4.91c-0.506-0.204-1.106-0.38-1.726-0.5-0.361-1.019-0.809-1.898-1.389-2.672 1.355 0.726 2.413 1.811 3.067 3.131zM4.84 1.76c-0.568 0.752-1.019 1.631-1.305 2.581-0.699 0.189-1.299 0.365-1.874 0.593 0.751-1.39 1.823-2.475 3.139-3.156zM1.73 11.090c0.506 0.204 1.106 0.38 1.726 0.5 0.361 1.019 0.809 1.898 1.389 2.672-1.367-0.722-2.436-1.807-3.097-3.131zM11.17 14.24c0.564-0.753 1.012-1.631 1.295-2.581 0.699-0.189 1.299-0.365 1.874-0.593-0.751 1.39-1.823 2.475-3.139 3.156z\"></path></g>\n<g id=\"globe\"><path d=\"M8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zM13.2 5.3c0.4 0 0.7 0.3 1.1 0.3-0.3 0.4-1.6 0.4-2-0.1 0.3-0.1 0.5-0.2 0.9-0.2zM1 8c0-0.4 0-0.8 0.1-1.3 0.1 0 0.2 0.1 0.3 0.1 0 0 0.1 0.1 0.1 0.2 0 0.3 0.3 0.5 0.5 0.5 0.8 0.1 1.1 0.8 1.8 1 0.2 0.1 0.1 0.3 0 0.5-0.6 0.8-0.1 1.4 0.4 1.9 0.5 0.4 0.5 0.8 0.6 1.4 0 0.7 0.1 1.5 0.4 2.2-2.5-1.2-4.2-3.6-4.2-6.5zM8 15c-0.7 0-1.5-0.1-2.1-0.3-0.1-0.2-0.1-0.4 0-0.6 0.4-0.8 0.8-1.5 1.3-2.2 0.2-0.2 0.4-0.4 0.4-0.7 0-0.2 0.1-0.5 0.2-0.7 0.3-0.5 0.2-0.8-0.2-0.9-0.8-0.2-1.2-0.9-1.8-1.2s-1.2-0.5-1.7-0.2c-0.2 0.1-0.5 0.2-0.5-0.1 0-0.4-0.5-0.7-0.4-1.1-0.1 0-0.2 0-0.3 0.1s-0.2 0.2-0.4 0.1c-0.2-0.2-0.1-0.4-0.1-0.6 0.1-0.2 0.2-0.3 0.4-0.4 0.4-0.1 0.8-0.1 1 0.4 0.3-0.9 0.9-1.4 1.5-1.8 0 0 0.8-0.7 0.9-0.7s0.2 0.2 0.4 0.3c0.2 0 0.3 0 0.3-0.2 0.1-0.5-0.2-1.1-0.6-1.2 0-0.1 0.1-0.1 0.1-0.1 0.3-0.1 0.7-0.3 0.6-0.6 0-0.4-0.4-0.6-0.8-0.6-0.2 0-0.4 0-0.6 0.1-0.4 0.2-0.9 0.4-1.5 0.4 1.1-0.8 2.5-1.2 3.9-1.2 0.3 0 0.5 0 0.8 0-0.6 0.1-1.2 0.3-1.6 0.5 0.6 0.1 0.7 0.4 0.5 0.9-0.1 0.2 0 0.4 0.2 0.5s0.4 0.1 0.5-0.1c0.2-0.3 0.6-0.4 0.9-0.5 0.4-0.1 0.7-0.3 1-0.7 0-0.1 0.1-0.1 0.2-0.2 0.6 0.2 1.2 0.6 1.8 1-0.1 0-0.1 0.1-0.2 0.1-0.2 0.2-0.5 0.3-0.2 0.7 0.1 0.2 0 0.3-0.1 0.4-0.2 0.1-0.3 0-0.4-0.1s-0.1-0.3-0.4-0.3c-0.1 0.2-0.4 0.3-0.4 0.6 0.5 0 0.4 0.4 0.5 0.7-0.6 0.1-0.8 0.4-0.5 0.9 0.1 0.2-0.1 0.3-0.2 0.4-0.4 0.6-0.8 1-0.8 1.7s0.5 1.4 1.3 1.3c0.9-0.1 0.9-0.1 1.2 0.7 0 0.1 0.1 0.2 0.1 0.3 0.1 0.2 0.2 0.4 0.1 0.6-0.3 0.8 0.1 1.4 0.4 2 0.1 0.2 0.2 0.3 0.3 0.4-1.3 1.4-3 2.2-5 2.2z\"></path></g>\n<g id=\"golf\"><path d=\"M7 2c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path><path d=\"M9.8 1.8c-0.2-0.5-1.7-0.1-2 0.5-0.2 0.3-0.2 1.2-1.2 1.9-0.8 0.5-1.6 0.5-1.6 0.5-0.3 0.6-0.1 1.1 0.2 1.6 0.5 0.9 0.6 1.8 0.7 2.8 0.1 1.3-0.5 2.4-2.3 3.2-0.8 0.3-1.3 0.9-1 1.9 0 0 2-0.3 3.1-1.2 1.5-1.2 1.8-2.3 1.8-2.3s0.1 0.7 0 1.9c-0.1 1-0.2 1.5-0.4 2.2s0.3 1.2 0.9 1.2 1-0.4 1-1l0.3-1.9c0.3-2.1 0-4.3-0.8-6.3 0-0.1-0.1-0.1-0.1-0.2-0.6-1.6 0.2-2.6 0.6-3 0.3-0.4 1.2-1.2 0.8-1.8z\"></path><path d=\"M12 0v10h1v-6l3-2z\"></path><path d=\"M16 10c0 0.552-0.448 1-1 1s-1-0.448-1-1c0-0.552 0.448-1 1-1s1 0.448 1 1z\"></path><path d=\"M1 8.4l3.7-3.7-0.7-0.3-3.8 3.6c0 0-0.4 0.7 0.1 1.7s1.6 0.3 1.6 0.3c0.4-0.2 0.2-0.4 0-0.6s-0.9-1-0.9-1z\"></path></g>\n<g id=\"google-plus-square\"><path d=\"M5 3.4c-0.8 0-1.3 0.8-1.2 1.8 0.1 1.1 0.9 1.9 1.7 2 0.8 0 1.3-0.8 1.2-1.9-0.1-1-0.9-1.9-1.7-1.9z\"></path><path d=\"M5.4 9.3c-1.2 0-2.3 0.7-2.3 1.6s0.9 1.7 2.1 1.7c1.7 0 2.3-0.7 2.3-1.6 0-0.1 0-0.2 0-0.3-0.1-0.5-0.6-0.8-1.3-1.2-0.2-0.2-0.5-0.2-0.8-0.2z\"></path><path d=\"M0 0v16h16v-16h-16zM7.9 5.3c0 0.7-0.4 1.2-0.9 1.6s-0.6 0.6-0.6 0.9c0 0.3 0.5 0.8 0.8 1 0.8 0.6 1.1 1.1 1.1 2 0 1.1-1.1 2.3-3.1 2.3-1.7 0-3.2-0.7-3.2-1.8 0-1.2 1.3-2.3 3.1-2.3 0.2 0 0.4 0 0.5 0-0.2-0.3-0.4-0.6-0.4-0.9 0-0.2 0.1-0.4 0.2-0.6-0.1 0-0.2 0-0.3 0-1.4 0-2.4-1-2.4-2.3 0-1.2 1.3-2.3 2.7-2.3 0.8 0 3.1 0 3.1 0l-0.7 0.6h-1c0.7 0.2 1.1 1 1.1 1.8zM14 5.5h-2.1v2h-0.5v-2h-2v-0.5h2v-2h0.5v2h2.1v0.5z\"></path></g>\n<g id=\"google-plus\"><path d=\"M16 3.9h-2.8v-2.6h-0.6v2.6h-2.7v0.8h2.7v2.6h0.6v-2.6h2.8z\"></path><path d=\"M6.9 9c-0.4-0.2-1.1-0.9-1.1-1.3s0.1-0.7 0.8-1.2c0.7-0.5 1.2-1.2 1.2-2.1 0-1.1-0.5-2.1-1.3-2.4h1.3l0.9-0.7c0 0-3.1 0-4.2 0-1.9 0-3.6 1.4-3.6 3.1s1.3 3 3.2 3c0.1 0 0.3 0 0.4 0-0.2 0.2-0.2 0.4-0.2 0.7 0 0.5 0.3 0.8 0.6 1.2-0.2 0-0.5 0-0.7 0-2.3 0-4.1 1.5-4.1 3s2 2.5 4.3 2.5c2.6 0 4.1-1.5 4.1-3-0.1-1.3-0.5-2-1.6-2.8zM4.7 6.9c-1.1 0-2.1-1.2-2.3-2.6s0.5-2.5 1.6-2.5c1.1 0 2.1 1.2 2.3 2.6s-0.5 2.6-1.6 2.5zM4.3 14.1c-1.6 0-2.8-1-2.8-2.2s1.4-2.2 3-2.2c0.4 0 0.7 0.1 1 0.2 0.9 0.6 1.5 0.9 1.7 1.6 0 0.1 0.1 0.3 0.1 0.4 0 1.2-0.8 2.2-3 2.2z\"></path></g>\n<g id=\"grab\"><path d=\"M12.6 4c-0.2 0-0.4 0-0.6 0 0-0.2-0.2-0.6-0.4-0.8s-0.5-0.4-1.1-0.4c-0.2 0-0.4 0-0.6 0.1-0.1-0.2-0.2-0.3-0.3-0.5-0.2-0.2-0.5-0.4-1.1-0.4-0.8 0-1.2 0.5-1.4 1-0.1 0-0.3-0.1-0.5-0.1-0.5 0-0.8 0.2-1.1 0.4-0.5 0.6-0.5 1.4-0.5 1.5v0.4c-0.6 0-1.1 0.2-1.4 0.5-0.6 0.7-0.6 1.6-0.6 2.8 0 0.2 0 0.5 0 0.7 0 1.4 0.7 2.1 1.4 2.8l0.3 0.4c1.3 1.2 2.5 1.6 5.1 1.6 2.9 0 4.2-1.6 4.2-5.1v-2.5c0-0.7-0.2-2.1-1.4-2.4zM10.5 3.8c0.4 0 0.5 0.4 0.5 0.6v0.8c0 0.3 0.2 0.5 0.4 0.5 0.3 0 0.5-0.1 0.5-0.4 0 0 0-0.4 0.4-0.3 0.6 0.2 0.7 1.1 0.7 1.3 0 0 0 0 0 0v2.6c0 3.4-1.3 4.1-3.2 4.1-2.4 0-3.3-0.3-4.3-1.3-0.1-0.1-0.2-0.2-0.4-0.4-0.7-0.7-1.1-1.1-1.1-2.1 0-0.2 0-0.3 0-0.6 0-1 0-1.8 0.3-2.1 0.1-0.2 0.4-0.3 0.7-0.3v0.8l-0.3 1.2c0 0.1 0 0.1 0.1 0.1 0.1 0.1 0.2 0 0.2 0l1-1.2c0 0 0-0.1 0-0.1v-2c0-0.1 0-0.6 0.2-0.8 0.1-0.1 0.2-0.2 0.4-0.2 0.3 0 0.4 0.2 0.4 0.4v0.4c0 0.2 0.2 0.5 0.5 0.5s0.5-0.3 0.5-0.5v-1.3c0-0.1 0-0.5 0.5-0.5 0.3 0 0.5 0.2 0.5 0.5v1.2c0 0.3 0.2 0.6 0.5 0.6s0.5-0.3 0.5-0.5v-0.5c0-0.3 0.2-0.5 0.5-0.5z\"></path></g>\n<g id=\"grid-bevel\"><path d=\"M14 2v-1h-13v13h1v1h13v-13h-1zM5 13h-3v-3h3v3zM5 9h-3v-3h3v3zM5 5h-3v-3h3v3zM9 13h-3v-3h3v3zM9 9h-3v-3h3v3zM9 5h-3v-3h3v3zM13 13h-3v-3h3v3zM13 9h-3v-3h3v3zM13 5h-3v-3h3v3z\"></path></g>\n<g id=\"grid-big-o\"><path d=\"M0 7h7v-7h-7v7zM1 1h5v5h-5v-5z\"></path><path d=\"M9 0v7h7v-7h-7zM15 6h-5v-5h5v5z\"></path><path d=\"M0 16h7v-7h-7v7zM1 10h5v5h-5v-5z\"></path><path d=\"M9 16h7v-7h-7v7zM10 10h5v5h-5v-5z\"></path></g>\n<g id=\"grid-big\"><path d=\"M0 0h7v7h-7v-7z\"></path><path d=\"M9 0h7v7h-7v-7z\"></path><path d=\"M0 9h7v7h-7v-7z\"></path><path d=\"M9 9h7v7h-7v-7z\"></path></g>\n<g id=\"grid-h\"><path d=\"M0 0v16h16v-16h-16zM5 15h-4v-14h4v14zM10 15h-4v-14h4v14zM15 15h-4v-14h4v14z\"></path></g>\n<g id=\"grid-small-o\"><path d=\"M0 4h4v-4h-4v4zM1 1h2v2h-2v-2z\"></path><path d=\"M0 10h4v-4h-4v4zM1 7h2v2h-2v-2z\"></path><path d=\"M0 16h4v-4h-4v4zM1 13h2v2h-2v-2z\"></path><path d=\"M6 4h4v-4h-4v4zM7 1h2v2h-2v-2z\"></path><path d=\"M6 10h4v-4h-4v4zM7 7h2v2h-2v-2z\"></path><path d=\"M6 16h4v-4h-4v4zM7 13h2v2h-2v-2z\"></path><path d=\"M12 0v4h4v-4h-4zM15 3h-2v-2h2v2z\"></path><path d=\"M12 10h4v-4h-4v4zM13 7h2v2h-2v-2z\"></path><path d=\"M12 16h4v-4h-4v4zM13 13h2v2h-2v-2z\"></path></g>\n<g id=\"grid-small\"><path d=\"M0 0h4v4h-4v-4z\"></path><path d=\"M0 6h4v4h-4v-4z\"></path><path d=\"M0 12h4v4h-4v-4z\"></path><path d=\"M6 0h4v4h-4v-4z\"></path><path d=\"M6 6h4v4h-4v-4z\"></path><path d=\"M6 12h4v4h-4v-4z\"></path><path d=\"M12 0h4v4h-4v-4z\"></path><path d=\"M12 6h4v4h-4v-4z\"></path><path d=\"M12 12h4v4h-4v-4z\"></path></g>\n<g id=\"grid-v\"><path d=\"M16 0h-16v16h16v-16zM1 5v-4h14v4h-14zM1 10v-4h14v4h-14zM1 15v-4h14v4h-14z\"></path></g>\n<g id=\"grid\"><path d=\"M0 0v16h16v-16h-16zM5 15h-4v-4h4v4zM5 10h-4v-4h4v4zM5 5h-4v-4h4v4zM10 15h-4v-4h4v4zM10 10h-4v-4h4v4zM10 5h-4v-4h4v4zM15 15h-4v-4h4v4zM15 10h-4v-4h4v4zM15 5h-4v-4h4v4z\"></path></g>\n<g id=\"group\"><path d=\"M5 16v-5.3c-0.6-0.3-1-1-1-1.7v-4c0-0.7 0.4-1.3 1-1.7 0-0.1 0-0.2 0-0.3 0-1.1-0.9-2-2-2s-2 0.9-2 2c0 1.1 0.9 2 2 2h-2c-0.5 0-1 0.5-1 1v4c0 0.5 0.5 1 1 1v5h4z\"></path><path d=\"M15 5h-2c1.1 0 2-0.9 2-2s-0.9-2-2-2-2 0.9-2 2c0 0.1 0 0.2 0 0.3 0.6 0.4 1 1 1 1.7v4c0 0.7-0.4 1.4-1 1.7v5.3h4v-5c0.5 0 1-0.5 1-1v-4c0-0.5-0.5-1-1-1z\"></path><path d=\"M10 2c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path><path d=\"M10 4h-4c-0.5 0-1 0.5-1 1v4c0 0.5 0.5 1 1 1v6h4v-6c0.5 0 1-0.5 1-1v-4c0-0.5-0.5-1-1-1z\"></path></g>\n<g id=\"hammer\"><path d=\"M6 2l7 7 3-3-4.48-4.48s-2.97 1.030-4.52-0.52z\"></path><path d=\"M8.8 5.79l-8.53 8.52c-0.165 0.178-0.267 0.417-0.267 0.68s0.101 0.502 0.267 0.681c0.181 0.183 0.433 0.297 0.711 0.297 0.253 0 0.484-0.094 0.66-0.248l8.569-8.519z\"></path></g>\n<g id=\"hand\"><path d=\"M13.5 2.4c-0.4-0.4-1-0.5-1.5-0.3 0-0.3-0.1-0.6-0.4-0.9-0.2-0.2-0.6-0.4-1.1-0.4-0.3 0-0.5 0.1-0.7 0.1 0-0.2-0.1-0.3-0.2-0.5-0.5-0.6-1.5-0.6-2 0-0.2 0.2-0.4 0.4-0.4 0.6-0.2 0-0.4-0.1-0.6-0.1-0.5 0-0.8 0.2-1.1 0.5-0.5 0.5-0.5 1.3-0.5 1.3v3.8c-0.3-0.3-0.8-0.8-1.5-0.8-0.2 0-0.5 0.1-0.7 0.2-0.4 0.2-0.6 0.5-0.7 0.9-0.3 1 0.6 2.4 0.6 2.5 0.1 0.1 1.2 2.7 2.2 3.8 1 1.2 2.1 1.9 4.9 1.9 2.9 0 4.2-1.6 4.2-5.1v-5.5c0-0.1 0.1-1.3-0.5-2zM8 2c0-0.3-0.1-1 0.5-1 0.5 0 0.5 0.5 0.5 1v4c0 0.3 0.2 0.5 0.5 0.5s0.5-0.2 0.5-0.5v-3.8c0 0 0-0.4 0.5-0.4 0.6 0 0.5 0.9 0.5 0.9v3.3c0 0.3 0.2 0.5 0.5 0.5s0.5-0.2 0.5-0.5v-2.4c0-0.1 0-0.6 0.5-0.6s0.5 1 0.5 1v5.9c0 3.4-1.3 4.1-3.2 4.1-2.4 0-3.3-0.5-4.1-1.6-0.9-1-2.1-3.6-2.1-3.7-0.3-0.3-0.7-1.2-0.6-1.6 0-0.1 0.1-0.2 0.2-0.3 0.1 0 0.2-0.1 0.2-0.1 0.4 0 0.8 0.5 0.9 0.7l0.6 0.9c0.1 0.2 0.4 0.3 0.6 0.2 0.4 0 0.5-0.2 0.5-0.4v-5.2c0-0.4 0-1 0.5-1 0.4 0 0.5 0.3 0.5 0.8v3.3c0 0.3 0.2 0.5 0.5 0.5s0.5-0.2 0.5-0.5z\"></path></g>\n<g id=\"handle-corner\"><path d=\"M6.7 16l9.3-9.3v-1.4l-10.7 10.7z\"></path><path d=\"M9.7 16l6.3-6.3v-1.4l-7.7 7.7z\"></path><path d=\"M12.7 16l3.3-3.3v-1.4l-4.7 4.7z\"></path><path d=\"M15.7 16l0.3-0.3v-1.4l-1.7 1.7z\"></path></g>\n<g id=\"hands-up\"><path d=\"M10 2c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path><path d=\"M6 16h1.5v-5h1v5h1.5v-9c-0-0.016-0.001-0.034-0.001-0.052 0-0.521 0.194-0.997 0.513-1.36l3.278-3.318c0.216-0.129 0.358-0.362 0.358-0.628 0-0.403-0.327-0.73-0.73-0.73-0.266 0-0.499 0.142-0.626 0.355l-2.362 2.383c-0.212 0.216-0.508 0.35-0.835 0.35-0.002 0-0.004 0-0.006-0h-3.18c-0.002 0-0.004 0-0.005 0-0.327 0-0.622-0.134-0.834-0.35l-2.32-2.39c-0.129-0.216-0.362-0.358-0.628-0.358-0.403 0-0.73 0.327-0.73 0.73 0 0.266 0.142 0.499 0.355 0.626l3.243 3.332c0.317 0.361 0.511 0.836 0.511 1.358 0 0.018-0 0.037-0.001 0.055l0 8.997z\"></path></g>\n<g id=\"handshake\"><path d=\"M13 3c-0.538 0.515-1.185 0.92-1.902 1.178-0.748 0.132-2.818-0.828-3.838 0.152-0.17 0.17-0.38 0.34-0.6 0.51-0.48-0.21-1.22-0.53-1.76-0.84s-1.9-1-1.9-1l-3 3.5s0.74 1 1.2 1.66c0.3 0.44 0.67 1.11 0.91 1.56l-0.34 0.4c-0.058 0.115-0.093 0.25-0.093 0.393 0 0.235 0.092 0.449 0.243 0.607 0.138 0.103 0.311 0.165 0.5 0.165s0.362-0.062 0.502-0.167c-0.094 0.109-0.149 0.249-0.149 0.402 0 0.193 0.088 0.365 0.226 0.479 0.144 0.085 0.317 0.135 0.501 0.135s0.357-0.050 0.505-0.137c-0.112 0.139-0.177 0.313-0.177 0.503s0.065 0.364 0.174 0.502c0.099 0.035 0.214 0.056 0.334 0.056 0.207 0 0.399-0.063 0.558-0.17-0.043 0.095-0.065 0.203-0.065 0.317 0 0.234 0.096 0.445 0.252 0.595 0.13 0.059 0.283 0.093 0.443 0.093 0.226 0 0.437-0.068 0.611-0.185l0.516-0.467c0.472 0.47 1.123 0.761 1.842 0.761 0.020 0 0.041-0 0.061-0.001 0.494-0.042 0.908-0.356 1.094-0.791 0.146 0.056 0.312 0.094 0.488 0.094 0.236 0 0.455-0.068 0.64-0.185 0.585-0.387 0.445-0.687 0.445-0.687 0.125 0.055 0.27 0.087 0.423 0.087 0.321 0 0.61-0.142 0.806-0.366 0.176-0.181 0.283-0.427 0.283-0.697 0-0.19-0.053-0.367-0.145-0.518 0.008 0.005 0.015 0.005 0.021 0.005 0.421 0 0.787-0.232 0.978-0.574 0.068-0.171 0.105-0.363 0.105-0.563 0-0.342-0.11-0.659-0.296-0.917l0.003 0.005c0.82-0.16 0.79-0.57 1.19-1.17 0.384-0.494 0.852-0.902 1.387-1.208zM12.95 10.060c-0.44 0.44-0.78 0.25-1.53-0.32s-2.24-1.64-2.24-1.64c0.061 0.305 0.202 0.57 0.401 0.781 0.319 0.359 1.269 1.179 1.719 1.599 0.28 0.26 1 0.78 0.58 1.18s-0.75 0-1.44-0.56-2.23-1.94-2.23-1.94c-0.001 0.018-0.002 0.038-0.002 0.059 0 0.258 0.104 0.491 0.272 0.661 0.17 0.2 1.12 1.12 1.52 1.54s0.75 0.67 0.41 1-1.030-0.19-1.41-0.58c-0.59-0.57-1.76-1.63-1.76-1.63-0.001 0.016-0.001 0.034-0.001 0.053 0 0.284 0.098 0.544 0.263 0.75 0.288 0.378 0.848 0.868 1.188 1.248s0.54 0.7 0 1-1.34-0.44-1.69-0.8c0-0.001 0-0.001 0-0.002 0-0.103-0.038-0.197-0.1-0.269-0.159-0.147-0.374-0.238-0.609-0.238-0.104 0-0.204 0.018-0.297 0.050 0.128-0.114 0.204-0.274 0.204-0.452s-0.076-0.338-0.198-0.45c-0.126-0.095-0.284-0.152-0.455-0.152s-0.33 0.057-0.457 0.153c0.117-0.113 0.189-0.268 0.189-0.441 0-0.213-0.109-0.4-0.274-0.509-0.153-0.097-0.336-0.153-0.532-0.153-0.244 0-0.468 0.088-0.642 0.233 0.095-0.114 0.151-0.26 0.151-0.42 0-0.195-0.085-0.37-0.219-0.491-0.178-0.165-0.417-0.266-0.679-0.266-0.185 0-0.358 0.050-0.507 0.138l-0.665-1.123c-0.46-0.73-1-1.49-1-1.49l2.28-2.77s0.81 0.5 1.48 0.88c0.33 0.19 0.9 0.44 1.33 0.64-0.68 0.51-1.25 1-1.080 1.34 0.297 0.214 0.668 0.343 1.069 0.343 0.376 0 0.726-0.113 1.018-0.307 0.373-0.251 0.84-0.403 1.343-0.403 0.347 0 0.677 0.072 0.976 0.203 0.554 0.374 1.574 1.294 2.504 1.874v0c1.17 0.85 1.4 1.4 1.12 1.68z\"></path></g>\n<g id=\"harddrive-o\"><path d=\"M2 12h1v1h-1v-1z\"></path><path d=\"M4 12h3v1h-3v-1z\"></path><path d=\"M13 1h-10l-3 9v5h16v-5l-3-9zM3.7 2h8.6l2.7 8h-13.9l2.6-8zM1 14v-3h14v3h-14z\"></path></g>\n<g id=\"harddrive\"><path d=\"M13 1h-10l-2.7 8h15.4z\"></path><path d=\"M0 10v5h16v-5h-16zM3 13h-1v-1h1v1zM7 13h-3v-1h3v1z\"></path></g>\n<g id=\"hash\"><path d=\"M15 6v-2h-2.6l0.6-2.8-2-0.4-0.7 3.2h-3l0.7-2.8-2-0.4-0.7 3.2h-3.3v2h2.9l-0.9 4h-3v2h2.6l-0.6 2.8 2 0.4 0.7-3.2h3l-0.7 2.8 2 0.4 0.7-3.2h3.3v-2h-2.9l0.9-4h3zM9 10h-3l1-4h3l-1 4z\"></path></g>\n<g id=\"header\"><path d=\"M11 0v7h-6v-7h-3v16h3v-7h6v7h3v-16z\"></path></g>\n<g id=\"headphones\"><path d=\"M14 8.3v-2.3c0-3.3-2.7-6-6-6s-6 2.7-6 6v2.3c-1.2 0.5-2 1.7-2 3.1v1.2c0 1.8 1.3 3.2 3 3.4h2v-8h-1v-2c0-2.2 1.8-4 4-4s4 1.8 4 4v2h-1v8h2c1.7-0.2 3-1.7 3-3.4v-1.2c0-1.4-0.8-2.6-2-3.1zM4 15h-1v-6h1v6zM13 15h-1v-6h1v6z\"></path></g>\n<g id=\"headset\"><path d=\"M14.82 8c-0.309-0.851-0.969-1.511-1.799-1.813l-0.021-1.687c0-2.5-2.47-4.5-5.5-4.5s-5.5 2-5.5 4.5v1.68c-1.173 0.423-1.996 1.525-2 2.82v1c0 1.657 1.343 3 3 3h1v-7h-1v-1.5c0-1.93 2-3.5 4.5-3.5s4.5 1.57 4.5 3.5v1.5h-1v7h1c1.657 0 3-1.343 3-3v1.73c0 1.806-1.464 3.27-3.27 3.27h-1.73c0-0.552-0.448-1-1-1h-1c-0.552 0-1 0.448-1 1s0.448 1 1 1h3.73c2.358 0 4.27-1.912 4.27-4.27v-3.73h-1.18z\"></path></g>\n<g id=\"health-card\"><path d=\"M15 3v10h-14v-10h14zM16 2h-16v12h16v-12z\"></path><path d=\"M9 5h5v1h-5v-1z\"></path><path d=\"M9 7h5v1h-5v-1z\"></path><path d=\"M9 9h2v1h-2v-1z\"></path><path d=\"M6.5 5c0 0 0 0 0 0-0.6 0-1.1 0.6-1.5 1-0.4-0.4-0.9-1-1.5-1 0 0 0 0 0 0-1.5 0-2.1 1.9-1 2.9l2.5 2.1 2.5-2.1c1.1-1 0.5-2.9-1-2.9z\"></path></g>\n<g id=\"heart-o\"><path d=\"M11.7 2c-0.9 0-2.7 0.5-3.7 2.1-1-1.6-2.8-2.1-3.8-2.1-2.3 0-4.2 1.9-4.2 4.2 0 4 7.4 8.5 7.7 8.7l0.3 0.2 0.3-0.2c0.3-0.2 7.7-4.8 7.7-8.7 0-2.3-1.9-4.2-4.3-4.2zM8 13.9c-2.2-1.4-7-5-7-7.7 0-1.8 1.5-3.2 3.2-3.2 0.1 0 2.5 0.1 3.3 2.4l0.5 1.4 0.5-1.4c0.8-2.3 3.2-2.4 3.3-2.4 1.7 0 3.2 1.4 3.2 3.2 0 2.7-4.8 6.3-7 7.7z\"></path></g>\n<g id=\"heart\"><path d=\"M12 2c0 0-3 0-4 3-1-3-4-3-4-3-2.2 0-4 1.8-4 4 0 4.1 8 9 8 9s8-5 8-9c0-2.2-1.8-4-4-4z\"></path></g>\n<g id=\"home-o\"><path d=\"M16 6.6l-8-5.2-2 1.3v-1.7h-2v3l-4 2.6 1.9 2.7 0.1-0.1v5.8h5v-4h2v4h5v-5.8l0.1 0.1 1.9-2.7zM1.4 6.9l6.6-4.3 6.6 4.3-0.7 1-5.9-3.9-5.9 3.9-0.7-1zM13 14h-3v-4h-4v4h-3v-5.4l5-3.3 5 3.3v5.4z\"></path></g>\n<g id=\"home\"><path d=\"M8 1.4l-2 1.3v-1.7h-2v3l-4 2.6 0.6 0.8 7.4-4.8 7.4 4.8 0.6-0.8z\"></path><path d=\"M8 4l-6 4v7h5v-3h2v3h5v-7z\"></path></g>\n<g id=\"hospital\"><path d=\"M15 4v-4h-7v4h-8v12h6v-3h4v3h6v-12h-1zM4 11h-2v-2h2v2zM4 8h-2v-2h2v2zM7 11h-2v-2h2v2zM7 8h-2v-2h2v2zM10 3v-1h1v-1h1v1h1v1h-1v1h-1v-1h-1zM11 11h-2v-2h2v2zM11 8h-2v-2h2v2zM14 11h-2v-2h2v2zM14 8h-2v-2h2v2z\"></path></g>\n<g id=\"hourglass-empty\"><path d=\"M11.18 6.060c1.107-0.808 1.819-2.101 1.82-3.56v-0.5h1v-2h-12v2h1v0.5c0.001 1.459 0.713 2.752 1.808 3.551 0.672 0.43 1.121 1.13 1.192 1.939-0.093 0.848-0.551 1.564-1.209 2.003-1.081 0.814-1.772 2.078-1.79 3.503l-0 0.503h-1v2h12v-2h-1v-0.5c-0.018-1.429-0.709-2.692-1.769-3.492-0.68-0.454-1.138-1.169-1.23-1.996 0.071-0.831 0.52-1.532 1.169-1.946zM9 8c0.072 1.142 0.655 2.136 1.519 2.763 0.877 0.623 1.445 1.61 1.481 2.732l0 0.505h-8v-0.5c0.036-1.127 0.604-2.114 1.459-2.723 0.886-0.642 1.468-1.635 1.54-2.766-0.063-1.124-0.641-2.091-1.498-2.683-0.914-0.633-1.499-1.662-1.502-2.827v-0.5h8v0.5c-0.003 1.166-0.587 2.195-1.479 2.813-0.88 0.607-1.458 1.574-1.521 2.678z\"></path></g>\n<g id=\"hourglass-end\"><path d=\"M11.18 6.060c1.107-0.808 1.819-2.101 1.82-3.56v-0.5h1v-2h-12v2h1v0.5c0.001 1.459 0.713 2.752 1.808 3.551 0.672 0.43 1.121 1.13 1.192 1.939-0.093 0.848-0.551 1.564-1.209 2.003-1.081 0.814-1.772 2.078-1.79 3.503l-0 0.503h-1v2h12v-2h-1v-0.5c-0.018-1.429-0.709-2.692-1.769-3.492-0.68-0.454-1.138-1.169-1.23-1.996 0.071-0.831 0.52-1.532 1.169-1.946zM9 8c0.072 1.142 0.655 2.136 1.519 2.763 0.877 0.623 1.445 1.61 1.481 2.732l0 0.505h-1s-1.62-3.5-3-3.5-3 3.5-3 3.5h-1v-0.5c0.036-1.127 0.604-2.114 1.459-2.723 0.886-0.642 1.468-1.635 1.54-2.766-0.063-1.124-0.641-2.091-1.498-2.683-0.914-0.633-1.499-1.662-1.502-2.827v-0.5h8v0.5c-0.003 1.166-0.587 2.195-1.479 2.813-0.88 0.607-1.458 1.574-1.521 2.678z\"></path></g>\n<g id=\"hourglass-start\"><path d=\"M6.16 4.6c1.114 0.734 1.84 1.979 1.84 3.394 0 0.002 0 0.004 0 0.006v-0c0-0.002 0-0.004 0-0.006 0-1.415 0.726-2.66 1.825-3.384 0.573-0.385 0.984-0.939 1.17-1.589l-5.995-0.020c0.191 0.67 0.603 1.225 1.15 1.594z\"></path><path d=\"M11.18 6.060c1.107-0.808 1.819-2.101 1.82-3.56v-0.5h1v-2h-12v2h1v0.5c0.001 1.459 0.713 2.752 1.808 3.551 0.672 0.43 1.121 1.13 1.192 1.939-0.093 0.848-0.551 1.564-1.209 2.003-1.081 0.814-1.772 2.078-1.79 3.503l-0 0.503h-1v2h12v-2h-1v-0.5c-0.018-1.429-0.709-2.692-1.769-3.492-0.68-0.454-1.138-1.169-1.23-1.996 0.071-0.831 0.52-1.532 1.169-1.946zM9 8c0.072 1.142 0.655 2.136 1.519 2.763 0.877 0.623 1.445 1.61 1.481 2.732l0 0.505h-8v-0.5c0.036-1.127 0.604-2.114 1.459-2.723 0.886-0.642 1.468-1.635 1.54-2.766-0.063-1.124-0.641-2.091-1.498-2.683-0.914-0.633-1.499-1.662-1.502-2.827v-0.5h8v0.5c-0.003 1.166-0.587 2.195-1.479 2.813-0.88 0.607-1.458 1.574-1.521 2.678z\"></path></g>\n<g id=\"hourglass\"><path d=\"M6.16 4.6c1.114 0.734 1.84 1.979 1.84 3.394 0 0.002 0 0.004 0 0.006v-0c0-0.002 0-0.004 0-0.006 0-1.415 0.726-2.66 1.825-3.384 0.23-0.199 0.426-0.395 0.609-0.602l-4.874-0.007c0.19 0.214 0.386 0.41 0.593 0.594z\"></path><path d=\"M11.18 6.060c1.107-0.808 1.819-2.101 1.82-3.56v-0.5h1v-2h-12v2h1v0.5c0.001 1.459 0.713 2.752 1.808 3.551 0.672 0.43 1.121 1.13 1.192 1.939-0.093 0.848-0.551 1.564-1.209 2.003-1.081 0.814-1.772 2.078-1.79 3.503l-0 0.503h-1v2h12v-2h-1v-0.5c-0.018-1.429-0.709-2.692-1.769-3.492-0.68-0.454-1.138-1.169-1.23-1.996 0.071-0.831 0.52-1.532 1.169-1.946zM9 8c0.072 1.142 0.655 2.136 1.519 2.763 0.877 0.623 1.445 1.61 1.481 2.732l0 0.505h-1.77c-0.7-0.87-1.71-2-2.23-2s-1.53 1.13-2.23 2h-1.77v-0.5c0.036-1.127 0.604-2.114 1.459-2.723 0.886-0.642 1.468-1.635 1.54-2.766-0.063-1.124-0.641-2.091-1.498-2.683-0.914-0.633-1.499-1.662-1.502-2.827v-0.5h8v0.5c-0.003 1.166-0.587 2.195-1.479 2.813-0.88 0.607-1.458 1.574-1.521 2.678z\"></path></g>\n<g id=\"inbox\"><path d=\"M10 6v-6h-4v6h-2l4 5 4-5z\"></path><path d=\"M13 1h-2v1h1.3l2.6 8h-3.9v2h-6v-2h-3.9l2.6-8h1.3v-1h-2l-3 9v5h16v-5z\"></path></g>\n<g id=\"indent\"><path d=\"M0 0h16v3h-16v-3z\"></path><path d=\"M6 4h10v3h-10v-3z\"></path><path d=\"M6 8h10v3h-10v-3z\"></path><path d=\"M0 12h16v3h-16v-3z\"></path><path d=\"M0 4.5v6l4-3z\"></path></g>\n<g id=\"info-circle-o\"><path d=\"M8 1c3.9 0 7 3.1 7 7s-3.1 7-7 7-7-3.1-7-7 3.1-7 7-7zM8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8v0z\"></path><path d=\"M7 6h2v7h-2v-7z\"></path><path d=\"M7 3h2v2h-2v-2z\"></path></g>\n<g id=\"info-circle\"><path d=\"M8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zM9 13h-2v-7h2v7zM9 5h-2v-2h2v2z\"></path></g>\n<g id=\"info\"><path d=\"M6 5h4v11h-4v-11z\"></path><path d=\"M10 2c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path></g>\n<g id=\"input\"><path d=\"M16 5c0-0.6-0.4-1-1-1h-14c-0.6 0-1 0.4-1 1v6c0 0.6 0.4 1 1 1h14c0.6 0 1-0.4 1-1v-6zM15 11h-14v-6h14v6z\"></path><path d=\"M2 6h1v4h-1v-4z\"></path></g>\n<g id=\"insert\"><path d=\"M14 16v-11l-1 1v9h-12v-12h9l1-1h-11v14z\"></path><path d=\"M16 1.4l-1.4-1.4-6.8 6.8-1.8-1.8v5h5l-1.8-1.8z\"></path></g>\n<g id=\"institution\"><path d=\"M8 0l-8 3v2h16v-2z\"></path><path d=\"M0 14h16v2h-16v-2z\"></path><path d=\"M16 7v-1h-16v1h1v5h-1v1h16v-1h-1v-5h1zM4 12h-1v-5h1v5zM7 12h-1v-5h1v5zM10 12h-1v-5h1v5zM13 12h-1v-5h1v5z\"></path></g>\n<g id=\"invoice\"><path d=\"M4.4 10.2c-0.6 0.1-1.4-0.3-1.7-0.4l-0.5 0.9c0 0 0.9 0.4 1.7 0.5v0.8h1v-0.9c0.9-0.3 1.4-1.1 1.5-1.8 0-0.8-0.6-1.4-1.9-1.9-0.4-0.2-1.1-0.5-1.1-0.9 0-0.5 0.4-0.8 1-0.8 0.7 0 1.4 0.3 1.4 0.3l0.4-0.9c0 0-0.5-0.2-1.2-0.4v-0.7h-1v0.7c-0.9 0.2-1.5 0.8-1.6 1.7 0 1.2 1.3 1.7 1.8 1.9 0.6 0.2 1.3 0.6 1.3 0.9 0 0.4-0.4 0.9-1.1 1z\"></path><path d=\"M0 2v12h16v-12h-16zM15 13h-14v-10h14v10z\"></path><path d=\"M8 5h6v1h-6v-1z\"></path><path d=\"M8 7h6v1h-6v-1z\"></path><path d=\"M8 9h3v1h-3v-1z\"></path></g>\n<g id=\"italic\"><path d=\"M8 0h3l-3 16h-3z\"></path></g>\n<g id=\"key-o\"><path d=\"M13 0l-7 6.1c-0.3-0.1-0.6-0.1-1-0.1-2.8 0-5 2.2-5 5s2.3 5 5 5 5-2.2 5-5c0-0.3 0-0.6-0.1-0.9l1.1-1.1v-2h2v-2h2l1-1v-4h-3zM12 6h-1.7l1.7-1.4v1.4zM15 3.6l-0.4 0.4h-1.9l2.3-2v1.6zM7.3 7.6l0.7 0.4 2-1.7v2.3l-0.8 0.8-0.3 0.4 0.1 0.5c0 0.2 0.1 0.5 0.1 0.7 0 2.2-1.8 4-4 4s-4-1.8-4-4 1.8-4 4-4c0.3 0 0.5 0 0.8 0.1l0.5 0.1 0.4-0.3 6.6-5.9h1.6l-7.7 6.6z\"></path><path d=\"M6 11.5c0 0.828-0.672 1.5-1.5 1.5s-1.5-0.672-1.5-1.5c0-0.828 0.672-1.5 1.5-1.5s1.5 0.672 1.5 1.5z\"></path></g>\n<g id=\"key\"><path d=\"M8.1 7c-0.2-0.1-0.4-0.2-0.6-0.3l7.5-6.7h-2l-7 6.1c-0.3-0.1-0.6-0.1-1-0.1-2.8 0-5 2.2-5 5s2.3 5 5 5 5-2.2 5-5c0-0.6-0.1-1.2-0.3-1.7l1.3-1.3v-2h2v-2h2l1-1v-3l-7.9 7zM4 13.2c-0.7 0-1.2-0.6-1.2-1.2s0.6-1.2 1.2-1.2 1.2 0.6 1.2 1.2-0.5 1.2-1.2 1.2z\"></path></g>\n<g id=\"keyboard-o\"><path d=\"M15 5v7h-14v-7h14zM16 4h-16v9h16v-9z\"></path><path d=\"M4 10h8v1h-8v-1z\"></path><path d=\"M2 10h1v1h-1v-1z\"></path><path d=\"M13 10h1v1h-1v-1z\"></path><path d=\"M11 8h1v1h-1v-1z\"></path><path d=\"M9 8h1v1h-1v-1z\"></path><path d=\"M7 8h1v1h-1v-1z\"></path><path d=\"M5 8h1v1h-1v-1z\"></path><path d=\"M3 8h1v1h-1v-1z\"></path><path d=\"M10 6h1v1h-1v-1z\"></path><path d=\"M12 6v1h1v2h1v-3z\"></path><path d=\"M8 6h1v1h-1v-1z\"></path><path d=\"M6 6h1v1h-1v-1z\"></path><path d=\"M4 6h1v1h-1v-1z\"></path><path d=\"M2 6h1v1h-1v-1z\"></path></g>\n<g id=\"keyboard\"><path d=\"M0 4v9h16v-9h-16zM10 6h1v1h-1v-1zM8 6h1v1h-1v-1zM10 8v1h-1v-1h1zM6 6h1v1h-1v-1zM8 8v1h-1v-1h1zM4 6h1v1h-1v-1zM6 8v1h-1v-1h1zM2 6h1v1h-1v-1zM3 11h-1v-1h1v1zM3 8h1v1h-1v-1zM12 11h-8v-1h8v1zM12 9h-1v-1h1v1zM14 11h-1v-1h1v1zM14 9h-1v-2h-1v-1h2v3z\"></path></g>\n<g id=\"laptop\"><path d=\"M14 11v-9h-12v9h-2v2h16v-2h-2zM10 12h-4v-1h4v1zM13 10h-10v-7h10v7z\"></path></g>\n<g id=\"layout\"><path d=\"M0 0v16h16v-16h-16zM1 3h4v12h-4v-12zM15 15h-9v-12h9v12z\"></path></g>\n<g id=\"level-down-bold\"><path d=\"M9 16l4-7h-3v-9h-7l2 3h2v6h-3z\"></path></g>\n<g id=\"level-down\"><path d=\"M5 1h6v11h2l-3 3-3-3h2v-9h-6z\"></path></g>\n<g id=\"level-left-bold\"><path d=\"M0 7l7-4v3h9v7l-3-2v-2h-6v3z\"></path></g>\n<g id=\"level-left\"><path d=\"M15 12v-6h-11v-2l-3 3 3 3v-2h9v6z\"></path></g>\n<g id=\"level-right-bold\"><path d=\"M16 7l-7-4v3h-9v7l3-2v-2h6v3z\"></path></g>\n<g id=\"level-right\"><path d=\"M1 12v-6h11v-2l3 3-3 3v-2h-9v6z\"></path></g>\n<g id=\"level-up-bold\"><path d=\"M9 0l4 7h-3v9h-7l2-3h2v-6h-3z\"></path></g>\n<g id=\"level-up\"><path d=\"M11 15h-6v-11h-2l3-3 3 3h-2v9h6z\"></path></g>\n<g id=\"lifebuoy\"><path d=\"M8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zM4 8c0-2.2 1.8-4 4-4s4 1.8 4 4c0 2.2-1.8 4-4 4s-4-1.8-4-4zM12.6 9.8c0.3-0.5 0.4-1.2 0.4-1.8s-0.1-1.3-0.4-1.8l1.5-1.5c0.6 1 0.9 2.1 0.9 3.3s-0.3 2.3-0.8 3.3l-1.6-1.5zM11.3 1.8l-1.5 1.6c-0.5-0.3-1.2-0.4-1.8-0.4s-1.3 0.1-1.8 0.4l-1.5-1.6c1-0.5 2.1-0.8 3.3-0.8s2.3 0.3 3.3 0.8zM1.8 4.7l1.5 1.5c-0.2 0.5-0.3 1.2-0.3 1.8s0.1 1.3 0.4 1.8l-1.5 1.5c-0.6-1-0.9-2.1-0.9-3.3s0.3-2.3 0.8-3.3zM4.7 14.2l1.5-1.5c0.5 0.2 1.2 0.3 1.8 0.3s1.3-0.1 1.8-0.4l1.5 1.5c-1 0.6-2.1 0.9-3.3 0.9s-2.3-0.3-3.3-0.8z\"></path></g>\n<g id=\"lightbulb\"><path d=\"M8 0c-2.761 0-5 2.239-5 5 0.013 1.672 0.878 3.138 2.182 3.989l0.818 2.011c-0.276 0-0.5 0.224-0.5 0.5s0.224 0.5 0.5 0.5c-0.276 0-0.5 0.224-0.5 0.5s0.224 0.5 0.5 0.5c-0.276 0-0.5 0.224-0.5 0.5s0.224 0.5 0.5 0.5c-0.276 0-0.5 0.224-0.5 0.5s0.224 0.5 0.5 0.5h0.41c0.342 0.55 0.915 0.929 1.581 0.999 0.684-0.071 1.258-0.449 1.594-0.99l0.415-0.009c0.276 0 0.5-0.224 0.5-0.5s-0.224-0.5-0.5-0.5c0.276 0 0.5-0.224 0.5-0.5s-0.224-0.5-0.5-0.5c0.276 0 0.5-0.224 0.5-0.5s-0.224-0.5-0.5-0.5c0.276 0 0.5-0.224 0.5-0.5s-0.224-0.5-0.5-0.5l0.8-2c1.322-0.862 2.187-2.328 2.2-3.998 0-2.763-2.239-5.002-5-5.002zM10.25 8.21l-0.25 0.17-0.11 0.29-0.89 2.14c-0.042 0.111-0.147 0.189-0.27 0.19h-1.51c-0.103-0.020-0.186-0.093-0.219-0.188l-0.871-2.142-0.13-0.29-0.25-0.18c-1.045-0.7-1.729-1.868-1.75-3.197-0-2.212 1.791-4.003 4-4.003s4 1.791 4 4c-0.017 1.336-0.702 2.509-1.736 3.201z\"></path><path d=\"M10.29 3c-0.574-0.612-1.387-0.995-2.289-1l-0.001 1c0.585 0.002 1.115 0.238 1.5 0.62 0.278 0.386 0.459 0.858 0.499 1.37l1.001 0.009c-0.045-0.756-0.305-1.443-0.718-2.011z\"></path></g>\n<g id=\"line-bar-chart\"><path d=\"M5 11h3v5h-3v-5z\"></path><path d=\"M1 14h3v2h-3v-2z\"></path><path d=\"M13 12h3v4h-3v-4z\"></path><path d=\"M9 9h3v7h-3v-7z\"></path><path d=\"M16 0.070l-5.68 4.97-5.47-1.7-4.85 3.76v1.9l5.15-4 5.53 1.72 5.32-4.66v-1.99z\"></path></g>\n<g id=\"line-chart\"><path d=\"M1 15v-15h-1v16h16v-1h-15z\"></path><path d=\"M9 8l-3-3-4 4v2l4-4 3 3 7-7v-2z\"></path></g>\n<g id=\"line-h\"><path d=\"M0 7h16v1h-16v-1z\"></path></g>\n<g id=\"line-v\"><path d=\"M8 0h1v16h-1v-16z\"></path></g>\n<g id=\"lines-list\"><path d=\"M0 1h3v2h-3v-2z\"></path><path d=\"M0 5h3v2h-3v-2z\"></path><path d=\"M0 9h3v2h-3v-2z\"></path><path d=\"M0 13h3v2h-3v-2z\"></path><path d=\"M4 1h12v2h-12v-2z\"></path><path d=\"M4 5h12v2h-12v-2z\"></path><path d=\"M4 9h12v2h-12v-2z\"></path><path d=\"M4 13h12v2h-12v-2z\"></path></g>\n<g id=\"lines\"><path d=\"M0 1h16v2h-16v-2z\"></path><path d=\"M0 5h16v2h-16v-2z\"></path><path d=\"M0 9h16v2h-16v-2z\"></path><path d=\"M0 13h16v2h-16v-2z\"></path></g>\n<g id=\"link\"><path d=\"M14.9 1.1c-1.4-1.4-3.7-1.4-5.1 0l-4.4 4.3c-1.4 1.5-1.4 3.7 0 5.2 0.1 0.1 0.3 0.2 0.4 0.3l1.5-1.5c-0.1-0.1-0.3-0.2-0.4-0.3-0.6-0.6-0.6-1.6 0-2.2l4.4-4.4c0.6-0.6 1.6-0.6 2.2 0s0.6 1.6 0 2.2l-1.3 1.3c0.4 0.8 0.5 1.7 0.4 2.5l2.3-2.3c1.5-1.4 1.5-3.7 0-5.1z\"></path><path d=\"M10.2 5.1l-1.5 1.5c0 0 0.3 0.2 0.4 0.3 0.6 0.6 0.6 1.6 0 2.2l-4.4 4.4c-0.6 0.6-1.6 0.6-2.2 0s-0.6-1.6 0-2.2l1.3-1.3c-0.4-0.8-0.1-1.3-0.4-2.5l-2.3 2.3c-1.4 1.4-1.4 3.7 0 5.1s3.7 1.4 5.1 0l4.4-4.4c1.4-1.4 1.4-3.7 0-5.1-0.2-0.1-0.4-0.3-0.4-0.3z\"></path></g>\n<g id=\"list-ol\"><path d=\"M4 0h12v4h-12v-4z\"></path><path d=\"M4 6h12v4h-12v-4z\"></path><path d=\"M4 12h12v4h-12v-4z\"></path><path d=\"M1 0l-0.9 0.5 0.2 0.7 0.7-0.3v3.1h1v-4z\"></path><path d=\"M2.2 13.9c0.3-0.2 0.5-0.5 0.5-0.8 0-0.5-0.4-1-1.3-1-0.5 0-1 0.1-1.2 0.3h-0.1l0.2 0.8 0.1-0.1c0.1-0.1 0.4-0.2 0.7-0.2s0.4 0.1 0.4 0.3c0 0.4-0.5 0.4-0.6 0.4h-0.4v0.7h0.4c0.3 0 0.6 0.1 0.6 0.4 0 0.2-0.2 0.4-0.6 0.4s-0.7-0.2-0.8-0.2l-0.1-0.1v0.9h0.1c0.2 0.2 0.6 0.3 1.1 0.3 1 0 1.6-0.5 1.6-1.2 0-0.4-0.2-0.8-0.6-0.9z\"></path><path d=\"M0.1 6.4l0.3 1c0 0 0.7-0.6 1.2-0.3 1.1 0.8-1.6 2.4-1.6 2.4v0.5h3v-1h-1.2c0.6-0.5 1.2-1.2 1-1.9-0.5-1.9-2.7-0.7-2.7-0.7z\"></path></g>\n<g id=\"list-select\"><path d=\"M1 0h12v2h-12v-2z\"></path><path d=\"M1 8h13v2h-13v-2z\"></path><path d=\"M1 11h11v2h-11v-2z\"></path><path d=\"M1 14h14v2h-14v-2z\"></path><path d=\"M0 3v4h16v-4h-16zM11 6h-10v-2h10v2z\"></path></g>\n<g id=\"list-ul\"><path d=\"M0 1h3v3h-3v-3z\"></path><path d=\"M0 6h3v3h-3v-3z\"></path><path d=\"M0 11h3v3h-3v-3z\"></path><path d=\"M5 1h11v3h-11v-3z\"></path><path d=\"M5 6h11v3h-11v-3z\"></path><path d=\"M5 11h11v3h-11v-3z\"></path></g>\n<g id=\"list\"><path d=\"M0 0h4v3h-4v-3z\"></path><path d=\"M0 4h4v3h-4v-3z\"></path><path d=\"M0 12h4v3h-4v-3z\"></path><path d=\"M0 8h4v3h-4v-3z\"></path><path d=\"M5 0h11v3h-11v-3z\"></path><path d=\"M5 4h11v3h-11v-3z\"></path><path d=\"M5 12h11v3h-11v-3z\"></path><path d=\"M5 8h11v3h-11v-3z\"></path></g>\n<g id=\"location-arrow-circle-o\"><path d=\"M1 8c0-3.9 3.1-7 7-7s7 3.1 7 7-3.1 7-7 7-7-3.1-7-7zM0 8c0 4.4 3.6 8 8 8s8-3.6 8-8-3.6-8-8-8-8 3.6-8 8v0z\"></path><path d=\"M2 9l10-5-5 10v-5z\"></path></g>\n<g id=\"location-arrow-circle\"><path d=\"M8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zM7 14v-5h-5l10-5-5 10z\"></path></g>\n<g id=\"location-arrow\"><path d=\"M0 9l16-9-9 16v-7z\"></path></g>\n<g id=\"lock\"><path d=\"M12 8v-3.1c0-2.2-1.6-3.9-3.8-3.9h-0.3c-2.1 0-3.9 1.7-3.9 3.9v3.1h-1l0.1 5c0 0-0.1 3 4.9 3s5-3 5-3v-5h-1zM9 14h-1v-2c-0.6 0-1-0.4-1-1s0.4-1 1-1 1 0.4 1 1v3zM10 8h-4v-3.1c0-1.1 0.9-1.9 1.9-1.9h0.3c1 0 1.8 0.8 1.8 1.9v3.1z\"></path></g>\n<g id=\"magic\"><path d=\"M0 5h3v1h-3v-1z\"></path><path d=\"M5 0h1v3h-1v-3z\"></path><path d=\"M6 11h-1v-2.5l1 1z\"></path><path d=\"M11 6h-1.5l-1-1h2.5z\"></path><path d=\"M3.131 7.161l0.707 0.707-2.97 2.97-0.707-0.707 2.97-2.97z\"></path><path d=\"M10.131 0.161l0.707 0.707-2.97 2.97-0.707-0.707 2.97-2.97z\"></path><path d=\"M0.836 0.199l3.465 3.465-0.707 0.707-3.465-3.465 0.707-0.707z\"></path><path d=\"M6.1 4.1l-2.1 2 9.8 9.9 2.2-2.1-9.9-9.8zM6.1 5.5l2.4 2.5-0.6 0.6-2.5-2.5 0.7-0.6z\"></path></g>\n<g id=\"magnet\"><path d=\"M11 0h5v4h-5v-4z\"></path><path d=\"M11 5v3c0 1.6-1.4 3-3 3s-3-1.4-3-3v-3h-5v3c0 4.4 3.6 8 8 8s8-3.6 8-8v-3h-5z\"></path><path d=\"M0 0h5v4h-5v-4z\"></path></g>\n<g id=\"mailbox\"><path d=\"M13 1h-10l-3 9v5h16v-5l-3-9zM11 10v2h-6v-2h-3.9l2.7-8h8.6l2.7 8h-4.1z\"></path></g>\n<g id=\"male\"><path d=\"M10 2c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path><path d=\"M12.79 7.32l-2.6-2.63c-0.421-0.426-1.004-0.69-1.65-0.69h-1.070c-0 0-0 0-0.001 0-0.648 0-1.235 0.264-1.659 0.69l-2.6 2.63c-0.216 0.129-0.358 0.362-0.358 0.628 0 0.403 0.327 0.73 0.73 0.73 0.266 0 0.499-0.142 0.626-0.355l1.792-1.793v9.47h1.5v-5h1v5h1.5v-9.47l1.75 1.8c0.135 0.175 0.344 0.287 0.58 0.287 0.403 0 0.73-0.327 0.73-0.73 0-0.228-0.105-0.432-0.269-0.566z\"></path></g>\n<g id=\"map-marker\"><path d=\"M8 0c-2.8 0-5 2.2-5 5s4 11 5 11c1 0 5-8.2 5-11s-2.2-5-5-5zM8 8c-1.7 0-3-1.3-3-3s1.3-3 3-3 3 1.3 3 3-1.3 3-3 3z\"></path></g>\n<g id=\"margin-bottom\"><path d=\"M0 0v14h1v-1h1v1h1v-1h1v1h1v-1h1v1h1v-1h1v1h1v-1h1v1h1v-1h1v1h1v-1h1v1h1v-1h1v-13h-16zM15 12h-14v-11h14v11z\"></path><path d=\"M0 15h1v1h-1v-1z\"></path><path d=\"M1 14h1v1h-1v-1z\"></path><path d=\"M2 15h1v1h-1v-1z\"></path><path d=\"M3 14h1v1h-1v-1z\"></path><path d=\"M4 15h1v1h-1v-1z\"></path><path d=\"M5 14h1v1h-1v-1z\"></path><path d=\"M6 15h1v1h-1v-1z\"></path><path d=\"M7 14h1v1h-1v-1z\"></path><path d=\"M8 15h1v1h-1v-1z\"></path><path d=\"M9 14h1v1h-1v-1z\"></path><path d=\"M10 15h1v1h-1v-1z\"></path><path d=\"M11 14h1v1h-1v-1z\"></path><path d=\"M12 15h1v1h-1v-1z\"></path><path d=\"M13 14h1v1h-1v-1z\"></path><path d=\"M14 15h1v1h-1v-1z\"></path><path d=\"M15 14h1v1h-1v-1z\"></path></g>\n<g id=\"margin-left\"><path d=\"M2 0v1h1v1h-1v1h1v1h-1v1h1v1h-1v1h1v1h-1v1h1v1h-1v1h1v1h-1v1h1v1h-1v1h1v1h13v-16h-14zM15 15h-11v-14h11v14z\"></path><path d=\"M0 0h1v1h-1v-1z\"></path><path d=\"M1 1h1v1h-1v-1z\"></path><path d=\"M0 2h1v1h-1v-1z\"></path><path d=\"M1 3h1v1h-1v-1z\"></path><path d=\"M0 4h1v1h-1v-1z\"></path><path d=\"M1 5h1v1h-1v-1z\"></path><path d=\"M0 6h1v1h-1v-1z\"></path><path d=\"M1 7h1v1h-1v-1z\"></path><path d=\"M0 8h1v1h-1v-1z\"></path><path d=\"M1 9h1v1h-1v-1z\"></path><path d=\"M0 10h1v1h-1v-1z\"></path><path d=\"M1 11h1v1h-1v-1z\"></path><path d=\"M0 12h1v1h-1v-1z\"></path><path d=\"M1 13h1v1h-1v-1z\"></path><path d=\"M0 14h1v1h-1v-1z\"></path><path d=\"M1 15h1v1h-1v-1z\"></path></g>\n<g id=\"margin-right\"><path d=\"M14 2v-1h-1v-1h-13v16h14v-1h-1v-1h1v-1h-1v-1h1v-1h-1v-1h1v-1h-1v-1h1v-1h-1v-1h1v-1h-1v-1h1v-1h-1v-1h1zM12 15h-11v-14h11v14z\"></path><path d=\"M15 15h1v1h-1v-1z\"></path><path d=\"M14 14h1v1h-1v-1z\"></path><path d=\"M15 13h1v1h-1v-1z\"></path><path d=\"M14 12h1v1h-1v-1z\"></path><path d=\"M15 11h1v1h-1v-1z\"></path><path d=\"M14 10h1v1h-1v-1z\"></path><path d=\"M15 9h1v1h-1v-1z\"></path><path d=\"M14 8h1v1h-1v-1z\"></path><path d=\"M15 7h1v1h-1v-1z\"></path><path d=\"M14 6h1v1h-1v-1z\"></path><path d=\"M15 5h1v1h-1v-1z\"></path><path d=\"M14 4h1v1h-1v-1z\"></path><path d=\"M15 3h1v1h-1v-1z\"></path><path d=\"M14 2h1v1h-1v-1z\"></path><path d=\"M15 1h1v1h-1v-1z\"></path><path d=\"M14 0h1v1h-1v-1z\"></path></g>\n<g id=\"margin-top\"><path d=\"M15 2v1h-1v-1h-1v1h-1v-1h-1v1h-1v-1h-1v1h-1v-1h-1v1h-1v-1h-1v1h-1v-1h-1v1h-1v-1h-1v1h-1v13h16v-14h-1zM15 15h-14v-11h14v11z\"></path><path d=\"M15 0h1v1h-1v-1z\"></path><path d=\"M14 1h1v1h-1v-1z\"></path><path d=\"M13 0h1v1h-1v-1z\"></path><path d=\"M12 1h1v1h-1v-1z\"></path><path d=\"M11 0h1v1h-1v-1z\"></path><path d=\"M10 1h1v1h-1v-1z\"></path><path d=\"M9 0h1v1h-1v-1z\"></path><path d=\"M8 1h1v1h-1v-1z\"></path><path d=\"M7 0h1v1h-1v-1z\"></path><path d=\"M6 1h1v1h-1v-1z\"></path><path d=\"M5 0h1v1h-1v-1z\"></path><path d=\"M4 1h1v1h-1v-1z\"></path><path d=\"M3 0h1v1h-1v-1z\"></path><path d=\"M2 1h1v1h-1v-1z\"></path><path d=\"M1 0h1v1h-1v-1z\"></path><path d=\"M0 1h1v1h-1v-1z\"></path></g>\n<g id=\"margin\"><path d=\"M0 0h1v1h-1v-1z\"></path><path d=\"M2 0h1v1h-1v-1z\"></path><path d=\"M1 1h1v1h-1v-1z\"></path><path d=\"M0 2h1v1h-1v-1z\"></path><path d=\"M2 2h1v1h-1v-1z\"></path><path d=\"M1 3h1v1h-1v-1z\"></path><path d=\"M0 4h1v1h-1v-1z\"></path><path d=\"M1 5h1v1h-1v-1z\"></path><path d=\"M0 6h1v1h-1v-1z\"></path><path d=\"M1 7h1v1h-1v-1z\"></path><path d=\"M0 8h1v1h-1v-1z\"></path><path d=\"M1 9h1v1h-1v-1z\"></path><path d=\"M0 10h1v1h-1v-1z\"></path><path d=\"M1 11h1v1h-1v-1z\"></path><path d=\"M0 12h1v1h-1v-1z\"></path><path d=\"M1 13h1v1h-1v-1z\"></path><path d=\"M0 14h1v1h-1v-1z\"></path><path d=\"M2 14h1v1h-1v-1z\"></path><path d=\"M1 15h1v1h-1v-1z\"></path><path d=\"M3 15h1v1h-1v-1z\"></path><path d=\"M5 15h1v1h-1v-1z\"></path><path d=\"M4 0h1v1h-1v-1z\"></path><path d=\"M3 1h1v1h-1v-1z\"></path><path d=\"M5 1h1v1h-1v-1z\"></path><path d=\"M4 14h1v1h-1v-1z\"></path><path d=\"M6 0h1v1h-1v-1z\"></path><path d=\"M8 0h1v1h-1v-1z\"></path><path d=\"M7 1h1v1h-1v-1z\"></path><path d=\"M6 14h1v1h-1v-1z\"></path><path d=\"M8 14h1v1h-1v-1z\"></path><path d=\"M7 15h1v1h-1v-1z\"></path><path d=\"M9 15h1v1h-1v-1z\"></path><path d=\"M11 15h1v1h-1v-1z\"></path><path d=\"M10 0h1v1h-1v-1z\"></path><path d=\"M9 1h1v1h-1v-1z\"></path><path d=\"M11 1h1v1h-1v-1z\"></path><path d=\"M10 14h1v1h-1v-1z\"></path><path d=\"M12 0h1v1h-1v-1z\"></path><path d=\"M14 0h1v1h-1v-1z\"></path><path d=\"M13 1h1v1h-1v-1z\"></path><path d=\"M13 2h-1v1h-1v-1h-1v1h-1v-1h-1v1h-1v-1h-1v1h-1v-1h-1v1h-1v1h-1v1h1v1h-1v1h1v1h-1v1h1v1h-1v1h1v1h-1v1h1v1h1v-1h1v1h1v-1h1v1h1v-1h1v1h1v-1h1v1h1v-1h1v-1h1v-1h-1v-1h1v-1h-1v-1h1v-1h-1v-1h1v-1h-1v-1h1v-1h-1v-1zM12 12h-8v-8h8v8z\"></path><path d=\"M14 2h1v1h-1v-1z\"></path><path d=\"M14 4h1v1h-1v-1z\"></path><path d=\"M14 6h1v1h-1v-1z\"></path><path d=\"M14 8h1v1h-1v-1z\"></path><path d=\"M14 10h1v1h-1v-1z\"></path><path d=\"M14 12h1v1h-1v-1z\"></path><path d=\"M13 13h1v1h-1v-1z\"></path><path d=\"M12 14h1v1h-1v-1z\"></path><path d=\"M14 14h1v1h-1v-1z\"></path><path d=\"M13 15h1v1h-1v-1z\"></path><path d=\"M15 15h1v1h-1v-1z\"></path><path d=\"M15 1h1v1h-1v-1z\"></path><path d=\"M15 3h1v1h-1v-1z\"></path><path d=\"M15 5h1v1h-1v-1z\"></path><path d=\"M15 7h1v1h-1v-1z\"></path><path d=\"M15 9h1v1h-1v-1z\"></path><path d=\"M15 11h1v1h-1v-1z\"></path><path d=\"M15 13h1v1h-1v-1z\"></path></g>\n<g id=\"medal\"><path d=\"M10 12.2c-0.3 0-0.5-0.1-0.8-0.2l-1.2-0.5-1.2 0.5c-0.2 0.1-0.5 0.2-0.8 0.2-0.2 0-0.3 0-0.5-0.1l-0.5 3.9 3-2 3 2-0.6-3.9c-0.1 0.1-0.3 0.1-0.4 0.1z\"></path><path d=\"M12.9 5.9c-0.1-0.2-0.1-0.5 0-0.7l0.6-1.2c0.2-0.4 0-0.9-0.5-1.1l-1.3-0.5c-0.2-0.1-0.4-0.3-0.5-0.5l-0.5-1.3c-0.1-0.4-0.4-0.6-0.7-0.6-0.1 0-0.3 0-0.4 0.1l-1.3 0.6c-0.1 0-0.2 0-0.3 0s-0.2 0-0.3-0.1l-1.3-0.5c-0.1-0.1-0.3-0.1-0.4-0.1-0.3 0-0.6 0.2-0.8 0.5l-0.5 1.4c0 0.2-0.2 0.4-0.4 0.5l-1.4 0.5c-0.4 0.1-0.6 0.6-0.4 1.1l0.6 1.3c0.1 0.2 0.1 0.5 0 0.7l-0.6 1.2c-0.2 0.4 0 0.9 0.5 1.1l1.3 0.5c0.2 0.1 0.4 0.3 0.5 0.5l0.5 1.3c0.1 0.4 0.4 0.6 0.7 0.6 0.1 0 0.2 0 0.3-0.1l1.3-0.6c0.1 0 0.2-0.1 0.3-0.1s0.2 0 0.3 0.1l1.3 0.6c0.1 0.1 0.2 0.1 0.3 0.1 0.3 0 0.6-0.2 0.8-0.5l0.5-1.3c0.1-0.2 0.3-0.4 0.5-0.5l1.3-0.5c0.4-0.2 0.7-0.7 0.5-1.1l-0.5-1.4zM8 9.6c-2.2 0-4-1.8-4-4s1.8-4 4-4 4 1.8 4 4c0 2.2-1.8 4-4 4z\"></path><path d=\"M11 5.6c0 1.657-1.343 3-3 3s-3-1.343-3-3c0-1.657 1.343-3 3-3s3 1.343 3 3z\"></path></g>\n<g id=\"megafone\"><path d=\"M15.5 5.4l-0.5-0.4v-4c0-0.6-0.4-1-1-1s-1 0.4-1 1v0.5c-2 0.9-5 2.5-8 2.5h-2.5c-1.4 0-2.5 1.2-2.5 2.5 0 0.9 0.5 1.7 1.2 2.1l1.1 5.9c0 0.3 0.3 0.5 0.7 0.5 0.1 0 0.1 0 0.2 0l3.6-0.7c0.4-0.1 0.6-0.4 0.5-0.7-0.3-0.6-0.8-1.5-1.2-1.8-0.2-0.1-0.5-0.9-0.7-1.8h0.6v-0.9c2.7 0.3 6 1.6 7 2.4v0.5c0 0.6 0.4 1 1 1s1-0.4 1-1v-4l0.4-0.3c0.4-0.3 0.6-0.7 0.6-1.1v-0.2c0-0.4-0.2-0.7-0.5-1zM2 5h3v1h-3v-1zM5.6 12.6c0.1 0 0.3 0.3 0.5 0.7l-2.8 0.7-1-5h1.9c0.2 1.3 0.6 3.2 1.4 3.6zM13 10.3c-1.6-0.8-4.4-2-7-2.3v-3c2.6-0.3 5.4-1.4 7-2.3v7.6z\"></path></g>\n<g id=\"meh-o\"><path d=\"M8 1c3.9 0 7 3.1 7 7s-3.1 7-7 7-7-3.1-7-7 3.1-7 7-7zM8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8v0z\"></path><path d=\"M7 6c0 0.552-0.448 1-1 1s-1-0.448-1-1c0-0.552 0.448-1 1-1s1 0.448 1 1z\"></path><path d=\"M11 6c0 0.552-0.448 1-1 1s-1-0.448-1-1c0-0.552 0.448-1 1-1s1 0.448 1 1z\"></path><path d=\"M4 10h8v1h-8v-1z\"></path></g>\n<g id=\"menu\"><path d=\"M0 1h16v3h-16v-3z\"></path><path d=\"M0 6h16v3h-16v-3z\"></path><path d=\"M0 11h16v3h-16v-3z\"></path></g>\n<g id=\"microphone\"><path d=\"M8 10v0c-1.7 0-3-1.3-3-3v-4c0-1.6 1.3-3 3-3v0c1.6 0 3 1.3 3 3v4c0 1.6-1.4 3-3 3z\"></path><path d=\"M12 5v2.5c0 1.9-1.8 3.5-3.8 3.5h-0.4c-2 0-3.8-1.6-3.8-3.5v-2.5c-0.6 0-1 0.4-1 1v1.5c0 2.2 1.8 4.1 4 4.4v2.1c-3 0-2.5 2-2.5 2h7c0 0 0.5-2-2.5-2v-2.1c2.2-0.4 4-2.2 4-4.4v-1.5c0-0.6-0.4-1-1-1z\"></path></g>\n<g id=\"minus-circle-o\"><path d=\"M8 1c3.9 0 7 3.1 7 7s-3.1 7-7 7-7-3.1-7-7 3.1-7 7-7zM8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8v0z\"></path><path d=\"M3 7h10v2h-10v-2z\"></path></g>\n<g id=\"minus-circle\"><path d=\"M8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zM13 9h-10v-2h10v2z\"></path></g>\n<g id=\"minus-square-o\"><path d=\"M4 7h8v2h-8v-2z\"></path><path d=\"M15 1h-14v14h14v-14zM14 14h-12v-12h12v12z\"></path></g>\n<g id=\"minus\"><path d=\"M2 7h12v2h-12v-2z\"></path></g>\n<g id=\"mobile-browser\"><path d=\"M16 0h-13v5h-3v11h7v-3h9v-13zM6 1h9v1h-9v-1zM4 1h1v1h-1v-1zM4 15h-1v-1h1v1zM6 13h-5v-7h5v7zM15 12h-8v-7h-3v-2h11v9z\"></path></g>\n<g id=\"mobile-retro\"><path d=\"M11 0h-1v2h-6v14h7v-16zM6 14h-1v-1h1v1zM6 12h-1v-1h1v1zM6 10h-1v-1h1v1zM8 14h-1v-1h1v1zM8 12h-1v-1h1v1zM8 10h-1v-1h1v1zM10 14h-1v-1h1v1zM10 12h-1v-1h1v1zM10 10h-1v-1h1v1zM10 8h-5v-4h5v4z\"></path></g>\n<g id=\"mobile\"><path d=\"M4 1v14h8v-14h-8zM9 14h-2v-1h2v1zM11 12h-6v-9h6v9z\"></path></g>\n<g id=\"modal-list\"><path d=\"M3 6h2v1h-2v-1z\"></path><path d=\"M6 6h7v1h-7v-1z\"></path><path d=\"M3 8h2v1h-2v-1z\"></path><path d=\"M6 8h7v1h-7v-1z\"></path><path d=\"M3 10h2v1h-2v-1z\"></path><path d=\"M6 10h7v1h-7v-1z\"></path><path d=\"M0 1v14h16v-14h-16zM15 14h-14v-10h14v10zM15 3h-1v-1h1v1z\"></path></g>\n<g id=\"modal\"><path d=\"M0 1v14h16v-14h-16zM15 14h-14v-10h14v10zM15 3h-1v-1h1v1z\"></path></g>\n<g id=\"money-deposit\"><path d=\"M8 16l-2-3h1v-2h2v2h1l-2 3z\"></path><path d=\"M15 1v8h-14v-8h14zM16 0h-16v10h16v-10z\"></path><path d=\"M8 2c1.657 0 3 1.343 3 3s-1.343 3-3 3h5v-1h1v-4h-1v-1h-5z\"></path><path d=\"M5 5c0-1.657 1.343-3 3-3h-5v1h-1v4h1v1h5c-1.657 0-3-1.343-3-3z\"></path></g>\n<g id=\"money-exchange\"><path d=\"M16 14l-3 2v-1h-4.75l2-2h2.75v-1l3 2z\"></path><path d=\"M0 2l3-2v1h4.75l-2 2h-2.75v1l-3-2z\"></path><path d=\"M9.74 0l-9.74 9.74 6.26 6.26 9.74-9.74zM1.39 9.74l8.35-8.35 4.87 4.87-8.35 8.35z\"></path><path d=\"M4.17 9.74l-0.7 0.7 2.090 2.090 0.7-0.7 0.74 0.69 2.74-2.78c-0.445 0.445-1.060 0.721-1.74 0.721-1.359 0-2.461-1.102-2.461-2.461 0-0.68 0.275-1.295 0.721-1.74l-2.78 2.74z\"></path><path d=\"M12.52 5.57l-2.090-2.090-0.7 0.7-0.73-0.7-2.74 2.78c0.445-0.445 1.060-0.721 1.74-0.721 1.359 0 2.461 1.102 2.461 2.461 0 0.68-0.275 1.295-0.721 1.74l2.78-2.74-0.7-0.7z\"></path></g>\n<g id=\"money-withdraw\"><path d=\"M8 0l2 3h-1v2h-2v-2h-1l2-3z\"></path><path d=\"M15 7v8h-14v-8h14zM16 6h-16v10h16v-10z\"></path><path d=\"M8 8c1.657 0 3 1.343 3 3s-1.343 3-3 3h5v-1h1v-4h-1v-1h-5z\"></path><path d=\"M5 11c0-1.657 1.343-3 3-3h-5v1h-1v4h1v1h5c-1.657 0-3-1.343-3-3z\"></path></g>\n<g id=\"money\"><path d=\"M15 4v8h-14v-8h14zM16 3h-16v10h16v-10z\"></path><path d=\"M8 5c1.7 0 3 1.3 3 3s-1.3 3-3 3h5v-1h1v-4h-1v-1h-5z\"></path><path d=\"M5 8c0-1.7 1.3-3 3-3h-5v1h-1v4h1v1h5c-1.7 0-3-1.3-3-3z\"></path></g>\n<g id=\"moon-o\"><path d=\"M13.2 11.9c-4.5 0-8.1-3.6-8.1-8.1 0-1.4 0.3-2.7 0.9-3.8-3.4 0.9-6 4.1-6 7.9 0 4.5 3.6 8.1 8.1 8.1 3.1 0 5.8-1.8 7.2-4.4-0.6 0.2-1.3 0.3-2.1 0.3zM8.1 15c-3.9 0-7.1-3.2-7.1-7.1 0-2.5 1.3-4.7 3.3-6-0.2 0.6-0.2 1.2-0.2 1.9 0 5 4.1 9.1 9.1 9.2-1.4 1.2-3.2 2-5.1 2z\"></path></g>\n<g id=\"moon\"><path d=\"M8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zM8 15c-3.9 0-7-3.1-7-7 0-2.4 1.2-4.6 3.2-5.9-0.1 0.6-0.2 1.3-0.2 1.9 0 4.9 4 8.9 8.9 9-1.3 1.3-3 2-4.9 2z\"></path></g>\n<g id=\"morning\"><path d=\"M14 10l-1.58-1.18 0.78-1.82-2-0.23-0.2-1.97-1.82 0.78-1.18-1.58-1.18 1.58-1.82-0.78-0.23 2-1.97 0.2 0.78 1.82-1.58 1.18h-2v1h16v-1h-2zM4 10c0.075-2.178 1.822-3.925 3.993-4 2.185 0.075 3.932 1.821 4.007 3.993l-8 0.007z\"></path></g>\n<g id=\"movie\"><path d=\"M12 7v-3h-12v9h12v-3l4 2v-7l-4 2zM9 11h-7v-5h7v5z\"></path><path d=\"M5 8.4c0 0.552-0.448 1-1 1s-1-0.448-1-1c0-0.552 0.448-1 1-1s1 0.448 1 1z\"></path><path d=\"M8 8.4c0 0.552-0.448 1-1 1s-1-0.448-1-1c0-0.552 0.448-1 1-1s1 0.448 1 1z\"></path></g>\n<g id=\"music\"><path d=\"M4 3v9.4c-0.4-0.2-0.9-0.4-1.5-0.4-1.4 0-2.5 0.9-2.5 2s1.1 2 2.5 2 2.5-0.9 2.5-2v-7.3l7-2.3v5.1c-0.4-0.3-0.9-0.5-1.5-0.5-1.4 0-2.5 0.9-2.5 2s1.1 2 2.5 2 2.5-0.9 2.5-2v-11l-9 3z\"></path></g>\n<g id=\"mute\"><path d=\"M15.2 0l-4.2 4.2v-1.2c0-1.7-1.3-3-3-3s-3 1.3-3 3v4c0 0.9 0.4 1.7 1 2.2l-0.8 0.8c-0.7-0.6-1.2-1.5-1.2-2.5v-2.5c-0.6 0-1 0.4-1 1v1.5c0 1.3 0.6 2.4 1.5 3.2l-4.5 4.6v0.7h0.7l15.3-15.4v-0.6h-0.8z\"></path><path d=\"M12.5 5.1l-0.5 0.5v1.9c0 1.9-1.8 3.5-3.8 3.5h-0.4c-0.3 0-0.6-0.1-0.9-0.1l-0.9 0.7c0.3 0.1 0.6 0.2 1 0.3v2.1c-3 0-2.5 2-2.5 2h7c0 0 0.5-2-2.5-2v-2.1c2.2-0.4 4-2.2 4-4.4v-1.5c0-0.4-0.2-0.7-0.5-0.9z\"></path><path d=\"M11 7v-0.4l-3.3 3.4c0.1 0 0.2 0 0.3 0 1.7 0 3-1.4 3-3z\"></path></g>\n<g id=\"native-button\"><path d=\"M15 12h-14c-0.6 0-1-0.4-1-1v-6c0-0.6 0.4-1 1-1h14c0.6 0 1 0.4 1 1v6c0 0.6-0.4 1-1 1z\"></path></g>\n<g id=\"newspaper\"><path d=\"M2 4h11v4h-11v-4z\"></path><path d=\"M2 2h11v1h-11v-1z\"></path><path d=\"M8 13h3v1h-3v-1z\"></path><path d=\"M8 11h5v1h-5v-1z\"></path><path d=\"M8 9h5v1h-5v-1z\"></path><path d=\"M2 13h5v1h-5v-1z\"></path><path d=\"M2 11h5v1h-5v-1z\"></path><path d=\"M2 9h5v1h-5v-1z\"></path><path d=\"M15 2v-2h-15v14.5c0 0.828 0.672 1.5 1.5 1.5h13c0.828 0 1.5-0.672 1.5-1.5v-12.5h-1zM1.5 15c-0.276 0-0.5-0.224-0.5-0.5v-13.5h13v12.5c0 1.5 1 1.5 1 1.5h-13.5z\"></path></g>\n<g id=\"notebook\"><path d=\"M2 0v1h-0.52c-0.265 0-0.48 0.215-0.48 0.48v0c-0.001 0.012-0.002 0.026-0.002 0.040 0 0.265 0.215 0.48 0.48 0.48 0.001 0 0.001 0 0.002 0h0.52v1h-0.52c-0.265 0-0.48 0.215-0.48 0.48v0c-0.001 0.012-0.002 0.026-0.002 0.040 0 0.265 0.215 0.48 0.48 0.48 0.001 0 0.001 0 0.002 0h0.52v1h-0.52c-0.265 0-0.48 0.215-0.48 0.48 0 0 0 0 0 0v0c-0.001 0.012-0.002 0.026-0.002 0.040 0 0.265 0.215 0.48 0.48 0.48 0.001 0 0.001 0 0.002 0h0.52v1h-0.52c-0.265 0-0.48 0.215-0.48 0.48 0 0 0 0 0 0v0c-0.001 0.012-0.002 0.026-0.002 0.040 0 0.265 0.215 0.48 0.48 0.48 0.001 0 0.001 0 0.002 0h0.52v1h-0.52c-0.265 0-0.48 0.215-0.48 0.48 0 0 0 0 0 0v0c0 0.265 0.215 0.48 0.48 0.48 0 0 0 0 0 0h0.52v1h-0.52c-0.265 0-0.48 0.215-0.48 0.48 0 0 0 0 0 0v0c0 0.265 0.215 0.48 0.48 0.48 0 0 0 0 0 0h0.52v1h-0.52c-0.265 0-0.48 0.215-0.48 0.48 0 0 0 0 0 0v0c0 0.265 0.215 0.48 0.48 0.48 0 0 0 0 0 0h0.52v2h12v-15.88h-12zM3.5 14c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5zM3.5 12c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5zM3.5 10c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5zM3.5 8c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5zM3.5 6c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5zM3.5 4c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5zM3.5 2c-0.276 0-0.5-0.224-0.5-0.5s0.224-0.5 0.5-0.5c0.276 0 0.5 0.224 0.5 0.5s-0.224 0.5-0.5 0.5zM12 6h-6v-3h6v3z\"></path></g>\n<g id=\"nurse\"><path d=\"M15.2 12c-0.658-1.414-2.067-2.376-3.701-2.376-0.077 0-0.154 0.002-0.23 0.006l-3.269 3.9-3.28-3.9c-0.049-0.002-0.106-0.003-0.163-0.003-1.648 0-3.072 0.958-3.746 2.348-0.422 0.9-0.707 1.917-0.808 2.988l1.997 0.037v1h12v-1h2c-0.104-1.107-0.388-2.124-0.824-3.057z\"></path><path d=\"M6.57 8.73c-0.038 0.374-0.322 0.671-0.685 0.729l2.115 2.541 2.12-2.52c-0.368-0.059-0.652-0.356-0.69-0.727-0-0.613 0.8-0.413 1.43-1.453 0-0.030 2.88-7.3-2.86-7.3s-2.86 7.27-2.86 7.27c0.63 1.050 1.44 0.85 1.43 1.46z\"></path></g>\n<g id=\"office\"><path d=\"M14 15v-11h-3v-3h-9v14h-2v1h7v-3h2v3h7v-1h-2zM6 11h-2v-2h2v2zM6 8h-2v-2h2v2zM6 5h-2v-2h2v2zM9 11h-2v-2h2v2zM9 8h-2v-2h2v2zM9 5h-2v-2h2v2zM13 11h-2v-2h2v2zM13 8h-2v-2h2v2z\"></path></g>\n<g id=\"open-book\"><path d=\"M15 4.7v-0.7c-1.159-1.163-2.734-1.91-4.484-1.999-0.112-0.012-0.222-0.018-0.334-0.018-0.874 0-1.657 0.394-2.179 1.013-0.556-0.617-1.357-1.007-2.249-1.007-0.090 0-0.178 0.004-0.266 0.012-1.754 0.089-3.33 0.836-4.488 1.999l-0 0.7-1 0.3v10l6.7-1.4 0.3 0.4h2l0.3-0.4 6.7 1.4v-10zM5.48 11.31c-1.275 0.037-2.467 0.358-3.526 0.902l0.046-7.792c0.885-0.835 2.066-1.365 3.369-1.42 0.806 0.054 1.534 0.303 2.159 0.701l-0.019 7.869c-0.555-0.166-1.193-0.262-1.854-0.262-0.062 0-0.124 0.001-0.185 0.003zM14 12.19c-1.013-0.522-2.205-0.843-3.468-0.88-0.056-0.001-0.108-0.002-0.161-0.002-0.66 0-1.297 0.096-1.899 0.274l0.047-7.902c0.601-0.381 1.322-0.627 2.096-0.679 1.324 0.055 2.501 0.586 3.386 1.422l-0.003 7.768z\"></path></g>\n<g id=\"option-a\"><path d=\"M12.5 10h-1.5v-4h1.5c1.381 0 2.5-1.119 2.5-2.5s-1.119-2.5-2.5-2.5c-1.381 0-2.5 1.119-2.5 2.5v1.5h-4v-1.5c0-1.381-1.119-2.5-2.5-2.5s-2.5 1.119-2.5 2.5c0 1.381 1.119 2.5 2.5 2.5h1.5v4h-1.5c-1.381 0-2.5 1.119-2.5 2.5s1.119 2.5 2.5 2.5c1.381 0 2.5-1.119 2.5-2.5v-1.5h4v1.5c0 1.381 1.119 2.5 2.5 2.5s2.5-1.119 2.5-2.5c0-1.381-1.119-2.5-2.5-2.5zM11 3.5c0-0.828 0.672-1.5 1.5-1.5s1.5 0.672 1.5 1.5c0 0.828-0.672 1.5-1.5 1.5h-1.5v-1.5zM5 12.5c0 0.828-0.672 1.5-1.5 1.5s-1.5-0.672-1.5-1.5c0-0.828 0.672-1.5 1.5-1.5h1.5v1.5zM5 5h-1.5c-0.828 0-1.5-0.672-1.5-1.5s0.672-1.5 1.5-1.5c0.828 0 1.5 0.672 1.5 1.5v1.5zM10 10h-4v-4h4v4zM12.5 14c-0.828 0-1.5-0.672-1.5-1.5v-1.5h1.5c0.828 0 1.5 0.672 1.5 1.5s-0.672 1.5-1.5 1.5z\"></path></g>\n<g id=\"option\"><path d=\"M4 11c0 0.552 0.448 1 1 1s1-0.448 1-1v-1h-1c-0.552 0-1 0.448-1 1z\"></path><path d=\"M0 0v16h16v-16h-16zM11 9c1.105 0 2 0.895 2 2s-0.895 2-2 2c-1.105 0-2-0.895-2-2v-1h-2v1c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2h1v-2h-1c-1.105 0-2-0.895-2-2s0.895-2 2-2c1.105 0 2 0.895 2 2v1h2v-1c0-1.105 0.895-2 2-2s2 0.895 2 2c0 1.105-0.895 2-2 2h-1v2h1z\"></path><path d=\"M12 5c0-0.552-0.448-1-1-1s-1 0.448-1 1v1h1c0.552 0 1-0.448 1-1z\"></path><path d=\"M5 4c-0.552 0-1 0.448-1 1s0.448 1 1 1h1v-1c0-0.552-0.448-1-1-1z\"></path><path d=\"M7 7h2v2h-2v-2z\"></path><path d=\"M10 11c0 0.552 0.448 1 1 1s1-0.448 1-1c0-0.552-0.448-1-1-1h-1v1z\"></path></g>\n<g id=\"options\"><path d=\"M5 3.5c0 0.828-0.672 1.5-1.5 1.5s-1.5-0.672-1.5-1.5c0-0.828 0.672-1.5 1.5-1.5s1.5 0.672 1.5 1.5z\"></path><path d=\"M3.5 0c-1.9 0-3.5 1.6-3.5 3.5s1.6 3.5 3.5 3.5 3.5-1.6 3.5-3.5-1.6-3.5-3.5-3.5zM3.5 6c-1.4 0-2.5-1.1-2.5-2.5s1.1-2.5 2.5-2.5 2.5 1.1 2.5 2.5c0 1.4-1.1 2.5-2.5 2.5z\"></path><path d=\"M3.5 8c-1.9 0-3.5 1.6-3.5 3.5s1.6 3.5 3.5 3.5 3.5-1.6 3.5-3.5c0-1.9-1.6-3.5-3.5-3.5zM3.5 14c-1.4 0-2.5-1.1-2.5-2.5s1.1-2.5 2.5-2.5 2.5 1.1 2.5 2.5c0 1.4-1.1 2.5-2.5 2.5z\"></path><path d=\"M8 2h8v3h-8v-3z\"></path><path d=\"M8 10h8v3h-8v-3z\"></path></g>\n<g id=\"orientation\"><path d=\"M11 2.1c2 0 3 1.3 3 2.9h-1l1.5 2 1.5-2h-1c0-2.2-2-3.9-4-3.9v-1.1l-2 1.5 2 1.5v-0.9z\"></path><path d=\"M9 9h6v6h-7v-15h-8v16h16v-8h-7v1zM7 8h-1v1h1v6h-6v-14h6v7z\"></path><path d=\"M2 8h1v1h-1v-1z\"></path><path d=\"M4 8h1v1h-1v-1z\"></path></g>\n<g id=\"out\"><path d=\"M3.5 8c0.3 0 0.5 0.2 0.5 0.5v2c0 0.3-0.2 0.5-0.5 0.5s-0.5-0.2-0.5-0.5v-2c0-0.3 0.2-0.5 0.5-0.5v0zM3.5 7v0c-0.8 0-1.5 0.7-1.5 1.5v2c0 0.8 0.7 1.5 1.5 1.5v0c0.8 0 1.5-0.7 1.5-1.5v-2c0-0.8-0.7-1.5-1.5-1.5v0z\"></path><path d=\"M8 7v3.5c0 0.3-0.2 0.5-0.5 0.5s-0.5-0.2-0.5-0.5v-3.5h-1v3.5c0 0.8 0.7 1.5 1.5 1.5v0c0.8 0 1.5-0.7 1.5-1.5v-3.5h-1z\"></path><path d=\"M13 7h-3v1h1v4h1v-4h1z\"></path><path d=\"M15 6v-1h-2.4l-3.7-3c0.1-0.2 0.1-0.3 0.1-0.5 0-0.8-0.7-1.5-1.5-1.5s-1.5 0.7-1.5 1.5c0 0.2 0 0.3 0.1 0.5l-3.7 3h-2.4v9h1v1h15v-9h-1zM6.7 2.8c0.3 0.1 0.5 0.2 0.8 0.2s0.5-0.1 0.8-0.2l2.7 2.2h-7l2.7-2.2zM14 13h-13v-7h13v7z\"></path></g>\n<g id=\"outbox\"><path d=\"M6 5v6h4v-6h2l-4-5-4 5z\"></path><path d=\"M13 2h-2l0.9 1h0.4l2.6 8h-3.9v2h-6v-2h-3.9l2.6-8h0.4l0.9-1h-2l-3 9v5h16v-5z\"></path></g>\n<g id=\"package\"><path d=\"M8 0l-8 2v10l8 4 8-4v-10l-8-2zM8 1l2.1 0.5-5.9 1.9-2.3-0.8 6.1-1.6zM8 14.9l-7-3.5v-8.1l3 1v3.4l1 0.3v-3.3l3 1v9.2zM8.5 4.8l-2.7-0.9 6.2-1.9 2.4 0.6-5.9 2.2z\"></path></g>\n<g id=\"padding-bottom\"><path d=\"M16 16v-16h-16v16h16zM1 13h1v-1h-1v-11h14v12h-1v1h1v1h-1v-1h-1v1h-1v-1h-1v1h-1v-1h-1v1h-1v-1h-1v1h-1v-1h-1v1h-1v-1h-1v1h-1v-1h-1v-1z\"></path><path d=\"M12 13h1v1h-1v-1z\"></path><path d=\"M13 12h1v1h-1v-1z\"></path><path d=\"M11 12h1v1h-1v-1z\"></path><path d=\"M9 12h1v1h-1v-1z\"></path><path d=\"M10 13h1v1h-1v-1z\"></path><path d=\"M8 13h1v1h-1v-1z\"></path><path d=\"M6 13h1v1h-1v-1z\"></path><path d=\"M7 12h1v1h-1v-1z\"></path><path d=\"M5 12h1v1h-1v-1z\"></path><path d=\"M3 12h1v1h-1v-1z\"></path><path d=\"M4 13h1v1h-1v-1z\"></path><path d=\"M2 13h1v1h-1v-1z\"></path></g>\n<g id=\"padding-left\"><path d=\"M0 16h16v-16h-16v16zM3 1v1h1v-1h11v14h-12v-1h-1v1h-1v-1h1v-1h-1v-1h1v-1h-1v-1h1v-1h-1v-1h1v-1h-1v-1h1v-1h-1v-1h1v-1h-1v-1h1v-1h1z\"></path><path d=\"M2 12h1v1h-1v-1z\"></path><path d=\"M3 13h1v1h-1v-1z\"></path><path d=\"M3 11h1v1h-1v-1z\"></path><path d=\"M3 9h1v1h-1v-1z\"></path><path d=\"M2 10h1v1h-1v-1z\"></path><path d=\"M2 8h1v1h-1v-1z\"></path><path d=\"M2 6h1v1h-1v-1z\"></path><path d=\"M3 7h1v1h-1v-1z\"></path><path d=\"M3 5h1v1h-1v-1z\"></path><path d=\"M3 3h1v1h-1v-1z\"></path><path d=\"M2 4h1v1h-1v-1z\"></path><path d=\"M2 2h1v1h-1v-1z\"></path></g>\n<g id=\"padding-right\"><path d=\"M16 0h-16v16h16v-16zM13 15v-1h-1v1h-11v-14h12v1h1v-1h1v1h-1v1h1v1h-1v1h1v1h-1v1h1v1h-1v1h1v1h-1v1h1v1h-1v1h1v1h-1v1h-1z\"></path><path d=\"M13 3h1v1h-1v-1z\"></path><path d=\"M12 2h1v1h-1v-1z\"></path><path d=\"M12 4h1v1h-1v-1z\"></path><path d=\"M12 6h1v1h-1v-1z\"></path><path d=\"M13 5h1v1h-1v-1z\"></path><path d=\"M13 7h1v1h-1v-1z\"></path><path d=\"M13 9h1v1h-1v-1z\"></path><path d=\"M12 8h1v1h-1v-1z\"></path><path d=\"M12 10h1v1h-1v-1z\"></path><path d=\"M12 12h1v1h-1v-1z\"></path><path d=\"M13 11h1v1h-1v-1z\"></path><path d=\"M13 13h1v1h-1v-1z\"></path></g>\n<g id=\"padding-top\"><path d=\"M0 0v16h16v-16h-16zM15 3h-1v1h1v11h-14v-12h1v-1h-1v-1h1v1h1v-1h1v1h1v-1h1v1h1v-1h1v1h1v-1h1v1h1v-1h1v1h1v-1h1v1h1v1z\"></path><path d=\"M3 2h1v1h-1v-1z\"></path><path d=\"M2 3h1v1h-1v-1z\"></path><path d=\"M4 3h1v1h-1v-1z\"></path><path d=\"M6 3h1v1h-1v-1z\"></path><path d=\"M5 2h1v1h-1v-1z\"></path><path d=\"M7 2h1v1h-1v-1z\"></path><path d=\"M9 2h1v1h-1v-1z\"></path><path d=\"M8 3h1v1h-1v-1z\"></path><path d=\"M10 3h1v1h-1v-1z\"></path><path d=\"M12 3h1v1h-1v-1z\"></path><path d=\"M11 2h1v1h-1v-1z\"></path><path d=\"M13 2h1v1h-1v-1z\"></path></g>\n<g id=\"padding\"><path d=\"M0 0v16h16v-16h-16zM15 3h-1v1h1v1h-1v1h1v1h-1v1h1v1h-1v1h1v1h-1v1h1v1h-1v1h1v1h-1v-1h-1v1h-1v-1h-1v1h-1v-1h-1v1h-1v-1h-1v1h-1v-1h-1v1h-1v-1h-1v1h-1v-1h-1v-1h1v-1h-1v-1h1v-1h-1v-1h1v-1h-1v-1h1v-1h-1v-1h1v-1h-1v-1h1v-1h-1v-1h1v1h1v-1h1v1h1v-1h1v1h1v-1h1v1h1v-1h1v1h1v-1h1v1h1v-1h1v1h1v1z\"></path><path d=\"M3 2h1v1h-1v-1z\"></path><path d=\"M4 3h1v1h-1v-1z\"></path><path d=\"M6 3h1v1h-1v-1z\"></path><path d=\"M5 2h1v1h-1v-1z\"></path><path d=\"M7 2h1v1h-1v-1z\"></path><path d=\"M9 2h1v1h-1v-1z\"></path><path d=\"M8 3h1v1h-1v-1z\"></path><path d=\"M10 3h1v1h-1v-1z\"></path><path d=\"M12 3h1v1h-1v-1z\"></path><path d=\"M11 2h1v1h-1v-1z\"></path><path d=\"M13 2h1v1h-1v-1z\"></path><path d=\"M12 5h1v1h-1v-1z\"></path><path d=\"M13 4h1v1h-1v-1z\"></path><path d=\"M12 7h1v1h-1v-1z\"></path><path d=\"M13 6h1v1h-1v-1z\"></path><path d=\"M12 9h1v1h-1v-1z\"></path><path d=\"M13 8h1v1h-1v-1z\"></path><path d=\"M12 11h1v1h-1v-1z\"></path><path d=\"M13 10h1v1h-1v-1z\"></path><path d=\"M12 13h1v1h-1v-1z\"></path><path d=\"M13 12h1v1h-1v-1z\"></path><path d=\"M2 3h1v1h-1v-1z\"></path><path d=\"M3 4h1v1h-1v-1z\"></path><path d=\"M2 5h1v1h-1v-1z\"></path><path d=\"M3 6h1v1h-1v-1z\"></path><path d=\"M2 7h1v1h-1v-1z\"></path><path d=\"M3 8h1v1h-1v-1z\"></path><path d=\"M2 9h1v1h-1v-1z\"></path><path d=\"M3 10h1v1h-1v-1z\"></path><path d=\"M2 11h1v1h-1v-1z\"></path><path d=\"M2 13h1v1h-1v-1z\"></path><path d=\"M3 12h1v1h-1v-1z\"></path><path d=\"M4 11h1v1h-1v-1z\"></path><path d=\"M4 13h1v1h-1v-1z\"></path><path d=\"M5 12h1v1h-1v-1z\"></path><path d=\"M6 13h1v1h-1v-1z\"></path><path d=\"M7 12h1v1h-1v-1z\"></path><path d=\"M9 12h1v1h-1v-1z\"></path><path d=\"M8 13h1v1h-1v-1z\"></path><path d=\"M11 12h1v1h-1v-1z\"></path><path d=\"M10 13h1v1h-1v-1z\"></path></g>\n<g id=\"paint-roll\"><path d=\"M16 6.9v-4.9h-2v-2h-13v1h-1v3h1v1h13v-2h1v3.1l-8 1v1.9h-1v0.9c0 0 0.5 0 0.5 0.9s-0.5 0.6-0.5 1.5v2.8c0 0 0 0.9 1.5 0.9s1.5-0.9 1.5-0.9v-2.8c0-0.9-0.5-0.7-0.5-1.5s0.5-0.9 0.5-0.9v-0.9h-1v-1.1l8-1z\"></path></g>\n<g id=\"paintbrush\"><path d=\"M5.6 11.6l-1.2-1.2c-0.8-0.2-2-0.1-2.7 1-0.8 1.1-0.3 2.8-1.7 4.6 0 0 3.5 0 4.8-1.3 1.2-1.2 1.2-2.2 1-3l-0.2-0.1z\"></path><path d=\"M5.8 8.1c-0.2 0.3-0.5 0.7-0.7 1 0 0.2-0.1 0.3-0.2 0.4l1.5 1.5c0.1-0.1 0.3-0.2 0.4-0.3 0.3-0.2 0.7-0.4 1-0.7 0.4 0 0.6-0.2 0.8-0.4l-2.2-2.2c-0.2 0.2-0.4 0.4-0.6 0.7z\"></path><path d=\"M15.8 0.2c-0.3-0.3-0.7-0.3-1-0.1 0 0-3 2.5-5.9 5.1-0.4 0.4-0.7 0.7-1.1 1-0.2 0.2-0.4 0.4-0.6 0.5l2.1 2.1c0.2-0.2 0.4-0.4 0.5-0.7 0.3-0.4 0.6-0.7 0.9-1.1 2.5-3 5.1-5.9 5.1-5.9 0.3-0.2 0.3-0.6 0-0.9z\"></path></g>\n<g id=\"palete\"><path d=\"M8.25 0c-6.38 0-9.11 7.38-8.010 9.92 0.82 1.89 2.62 0.080 3.34 1 1.88 2.46-2.11 3.81 0.090 4.68 2.59 1.060 12.33 0.4 12.33-8.53 0-2.69-1.34-7.070-7.75-7.070zM4.47 9c-0.815-0.017-1.47-0.682-1.47-1.5 0-0.828 0.672-1.5 1.5-1.5s1.5 0.671 1.5 1.5c0 0 0 0 0 0 0 0.828-0.672 1.5-1.5 1.5-0.011 0-0.021-0-0.032-0zM6 3.5c0-0.828 0.672-1.5 1.5-1.5s1.5 0.672 1.5 1.5-0.672 1.5-1.5 1.5c-0.011 0-0.021-0-0.032-0-0.814-0.017-1.468-0.682-1.468-1.5 0-0 0-0 0-0zM8.47 14c-0.815-0.017-1.47-0.682-1.47-1.5 0-0.828 0.672-1.5 1.5-1.5s1.5 0.671 1.5 1.5c0 0 0 0 0 0 0 0.828-0.672 1.5-1.5 1.5-0.011 0-0.021-0-0.032-0zM12.47 11c-0.815-0.017-1.47-0.682-1.47-1.5 0-0.828 0.672-1.5 1.5-1.5s1.5 0.671 1.5 1.5c0 0 0 0 0 0 0 0.828-0.672 1.5-1.5 1.5-0.011 0-0.021-0-0.032-0zM12.47 6c-0.815-0.017-1.47-0.682-1.47-1.5 0-0.828 0.672-1.5 1.5-1.5s1.5 0.671 1.5 1.5c0 0 0 0 0 0 0 0.828-0.672 1.5-1.5 1.5-0.011 0-0.021-0-0.032-0z\"></path></g>\n<g id=\"panel\"><path d=\"M0 0v16h16v-16h-16zM13 15h-12v-12h12v12zM15 15h-1v-1h1v1zM15 13h-1v-8h1v8zM15 4h-1v-1h1v1z\"></path></g>\n<g id=\"paperclip\"><path d=\"M2.7 15.3c-0.7 0-1.4-0.3-1.9-0.8-0.9-0.9-1.2-2.5 0-3.7l8.9-8.9c1.4-1.4 3.8-1.4 5.2 0s1.4 3.8 0 5.2l-7.4 7.4c-0.2 0.2-0.5 0.2-0.7 0s-0.2-0.5 0-0.7l7.4-7.4c1-1 1-2.7 0-3.7s-2.7-1-3.7 0l-8.9 8.9c-0.8 0.8-0.6 1.7 0 2.2 0.6 0.6 1.5 0.8 2.2 0l8.9-8.9c0.2-0.2 0.2-0.5 0-0.7s-0.5-0.2-0.7 0l-7.4 7.4c-0.2 0.2-0.5 0.2-0.7 0s-0.2-0.5 0-0.7l7.4-7.4c0.6-0.6 1.6-0.6 2.2 0s0.6 1.6 0 2.2l-8.9 8.9c-0.6 0.4-1.3 0.7-1.9 0.7z\"></path></g>\n<g id=\"paperplane-o\"><path d=\"M16 0l-16 8 4.7 1.6 0.3 5.4 2.5-2.8 2.5 3.8 6-16zM7.5 10.4l4.3-5.9-6.2 4.3-3-1 11.6-5.8-4.5 11.8-2.2-3.4z\"></path></g>\n<g id=\"paperplane\"><path d=\"M0 8l4.9 1.4h0.1v-0.1l7.1-5.3-1.1 1.2-6.2 6.6 0.2 3.2 2.9-3.2 2.1 4.2 6-16z\"></path></g>\n<g id=\"paragraph\"><path d=\"M5.5 0c-2.5 0-4.5 2-4.5 4.5s2 4.5 4.5 4.5h2.5v7h2v-14h1v14h2v-14h2v-2h-9.5z\"></path></g>\n<g id=\"password\"><path d=\"M16 5c0-0.6-0.4-1-1-1h-14c-0.6 0-1 0.4-1 1v6c0 0.6 0.4 1 1 1h14c0.6 0 1-0.4 1-1v-6zM15 11h-14v-6h14v6z\"></path><path d=\"M6 8c0 0.552-0.448 1-1 1s-1-0.448-1-1c0-0.552 0.448-1 1-1s1 0.448 1 1z\"></path><path d=\"M9 8c0 0.552-0.448 1-1 1s-1-0.448-1-1c0-0.552 0.448-1 1-1s1 0.448 1 1z\"></path><path d=\"M12 8c0 0.552-0.448 1-1 1s-1-0.448-1-1c0-0.552 0.448-1 1-1s1 0.448 1 1z\"></path></g>\n<g id=\"paste\"><path d=\"M13 4h-3v-4h-10v14h6v2h10v-9l-3-3zM3 1h4v1h-4v-1zM15 15h-8v-10h5v3h3v7zM13 7v-2l2 2h-2z\"></path></g>\n<g id=\"pause\"><path d=\"M0 1h7v14h-7v-14z\"></path><path d=\"M9 1h7v14h-7v-14z\"></path></g>\n<g id=\"pencil\"><path d=\"M1 11.9l-1 4.1 4.1-1 9.2-9.2-3.1-3.1-9.2 9.2zM1.5 15l-0.4-0.5 0.4-2 2 2-2 0.5zM10.9 4.4l-8.1 8-0.6-0.6 8.1-8 0.6 0.6z\"></path><path d=\"M15.3 0.7c-1.1-1.1-2.6-0.5-2.6-0.5l-1.5 1.5 3.1 3.1 1.5-1.5c0-0.1 0.6-1.5-0.5-2.6zM13.4 1.6l-0.5-0.5c0.6-0.6 1.1-0.1 1.1-0.1l-0.6 0.6z\"></path></g>\n<g id=\"phone-landline\"><path d=\"M15.88 3.86l-0.61-1.31c-0.155-0.326-0.443-0.568-0.792-0.658-1.938-0.528-4.161-0.851-6.453-0.891-2.342 0.041-4.565 0.363-6.687 0.934-0.165 0.048-0.453 0.29-0.605 0.609l-0.613 1.317c-0.075 0.152-0.119 0.331-0.12 0.52v0.87c-0.001 0.012-0.001 0.026-0.001 0.041 0 0.392 0.318 0.71 0.71 0.71 0.011 0 0.022-0 0.033-0.001l2.518 0c0.412-0.010 0.742-0.346 0.742-0.76 0-0.018-0.001-0.035-0.002-0.053l0-0.838c-0-0.004-0-0.008-0-0.012 0-0.229 0.119-0.43 0.298-0.546 0.947-0.508 2.069-0.806 3.26-0.806 0.156 0 0.31 0.005 0.464 0.015 0.122-0.011 0.288-0.017 0.456-0.017 1.178 0 2.287 0.291 3.261 0.805 0.143 0.099 0.262 0.3 0.262 0.529 0 0.004-0 0.009-0 0.013l0 0.859c-0.001 0.015-0.002 0.033-0.002 0.050 0 0.413 0.33 0.75 0.741 0.76l2.521 0c0.009 0 0.020 0.001 0.031 0.001 0.392 0 0.71-0.318 0.71-0.71 0-0.014-0-0.029-0.001-0.043l0-0.868c-0.001-0.189-0.045-0.368-0.123-0.527z\"></path><path d=\"M12 8.3c-0.624-0.797-1.001-1.815-1.001-2.92 0-0.028 0-0.056 0.001-0.084l-0-0.296h-1v1h-4v-1h-1v0.33c0 0.024 0.001 0.052 0.001 0.080 0 1.105-0.377 2.122-1.009 2.93l-2.992 3.66v3h14v-3zM8 13c-1.657 0-3-1.343-3-3s1.343-3 3-3c1.657 0 3 1.343 3 3s-1.343 3-3 3z\"></path><path d=\"M10 10c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path></g>\n<g id=\"phone\"><path d=\"M12.2 10c-1.1-0.1-1.7 1.4-2.5 1.8-1.3 0.7-3.7-1.8-3.7-1.8s-2.5-2.4-1.9-3.7c0.5-0.8 2-1.4 1.9-2.5-0.1-1-2.3-4.6-3.4-3.6-2.4 2.2-2.6 3.1-2.6 4.9-0.1 3.1 3.9 7 3.9 7 0.4 0.4 3.9 4 7 3.9 1.8 0 2.7-0.2 4.9-2.6 1-1.1-2.5-3.3-3.6-3.4z\"></path></g>\n<g id=\"picture\"><path d=\"M16 14h-16v-12h16v12zM1 13h14v-10h-14v10z\"></path><path d=\"M2 10v2h12v-1c0 0 0.2-1.7-2-2-1.9-0.3-2.2 0.6-3.8 0.6-1.1 0-0.9-1.6-3.2-1.6-1.7 0-3 2-3 2z\"></path><path d=\"M13 6c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path></g>\n<g id=\"pie-bar-chart\"><path d=\"M5 11h3v5h-3v-5z\"></path><path d=\"M1 14h3v2h-3v-2z\"></path><path d=\"M13 12h3v4h-3v-4z\"></path><path d=\"M9 9h3v7h-3v-7z\"></path><path d=\"M5 0c-2.761 0-5 2.239-5 5s2.239 5 5 5c2.761 0 5-2.239 5-5s-2.239-5-5-5zM5 9c-2.209 0-4-1.791-4-4s1.791-4 4-4v4h4c0 2.209-1.791 4-4 4z\"></path></g>\n<g id=\"pie-chart\"><path d=\"M9 1c3.2 0.2 5.7 2.8 6 6h-6v-6zM8.5 0c-0.2 0-0.3 0-0.5 0v8h8c0-0.2 0-0.3 0-0.5 0-4.1-3.4-7.5-7.5-7.5v0z\"></path><path d=\"M7 9v-8c-3.9 0.3-7 3.5-7 7.5 0 4.1 3.4 7.5 7.5 7.5 4 0 7.2-3.1 7.5-7h-8z\"></path></g>\n<g id=\"piggy-bank-coin\"><path d=\"M15.93 7.75c-0.061-0.2-0.165-0.371-0.3-0.51-0.105-0.113-0.241-0.197-0.394-0.238 0.074 0.117 0.141 0.252 0.191 0.396 0.056 0.147 0.092 0.304 0.103 0.467 0.008 0.067 0.012 0.138 0.012 0.21s-0.004 0.143-0.012 0.214c-0.035-0.115-0.083-0.208-0.142-0.292-0.123-0.166-0.288-0.299-0.48-0.383-0.119-0.053-0.248-0.082-0.384-0.082-0.346 0-0.648 0.186-0.811 0.464-0.050 0.082-0.090 0.171-0.12 0.266-1.182-1.968-3.309-3.271-5.741-3.271-0.124 0-0.247 0.003-0.369 0.010-0.763 0.001-1.517 0.11-2.231 0.313-0.062-0.434-0.632-1.314-3.252-1.314l0.8 2.51c-0.507 0.411-0.927 0.905-1.247 1.465l-1.553 0.025s-0.17 4 1 4h0.54c0.379 0.638 0.868 1.171 1.445 1.589l0.015 2.411h1.080c1.31 0 1.92 0 1.92-0.75v-0.39c0.451 0.088 0.97 0.139 1.5 0.139s1.049-0.051 1.551-0.147l-0.051 0.398c0 0.75 0.62 0.75 1.94 0.75h1.060v-2.39c0.932-0.651 1.613-1.605 1.903-2.717 0.057-0.027 0.114-0.024 0.172-0.024s0.115-0.003 0.172-0.010c0.251-0.046 0.48-0.144 0.679-0.283 0.266-0.188 0.474-0.454 0.591-0.765 0.028-0.093 0.049-0.191 0.063-0.292l0.001-0.010c0.221-0.262 0.372-0.59 0.419-0.951 0.012-0.084 0.019-0.171 0.019-0.259 0-0.197-0.032-0.386-0.091-0.563zM3.51 7.75c0.414 0 0.75 0.336 0.75 0.75s-0.336 0.75-0.75 0.75c-0.414 0-0.75-0.336-0.75-0.75s0.336-0.75 0.75-0.75zM5.88 7c-0.046 0.015-0.099 0.024-0.154 0.024-0.194 0-0.362-0.11-0.445-0.271-0.013-0.038-0.019-0.078-0.019-0.12 0-0.19 0.136-0.348 0.315-0.383 0.571-0.141 1.224-0.221 1.896-0.221 0.038 0 0.075 0 0.113 0.001 0.026-0 0.064-0.001 0.101-0.001 0.672 0 1.324 0.080 1.949 0.232 0.126 0.024 0.262 0.182 0.262 0.372 0 0.042-0.007 0.082-0.019 0.119-0.070 0.129-0.197 0.223-0.346 0.247l-0.153 0c-0.512-0.127-1.101-0.2-1.706-0.2-0.016 0-0.031 0-0.047 0-0.011-0-0.026-0-0.042-0-0.605 0-1.193 0.073-1.756 0.211zM14.58 9.93c-0.13 0.095-0.285 0.165-0.453 0.199l-0.127 0.001s0-0.13 0-0.13 0-0.21 0-0.31c0.165 0.125 0.374 0.2 0.6 0.2 0.007 0 0.014-0 0.021-0zM14.66 9.25c-0.018 0.003-0.040 0.004-0.061 0.004-0.176 0-0.327-0.103-0.398-0.252-0.044-0.084-0.069-0.18-0.069-0.283s0.025-0.199 0.070-0.283c0.059-0.082 0.157-0.138 0.269-0.138 0.059 0 0.113 0.015 0.161 0.042 0.181 0.070 0.308 0.244 0.308 0.448 0 0 0 0.001 0 0.001 0.009 0.062 0.014 0.133 0.014 0.205s-0.005 0.143-0.015 0.213c-0.066 0.012-0.144 0.024-0.224 0.024-0.019 0-0.039-0.001-0.058-0.002z\"></path><path d=\"M8 3h-1v-0.17h0.25v-1.090h-0.25l0.55-0.55h0.2v1.64h0.25v0.17z\"></path><path d=\"M7.5 0.75c0.828 0 1.5 0.672 1.5 1.5s-0.672 1.5-1.5 1.5c-0.828 0-1.5-0.672-1.5-1.5s0.672-1.5 1.5-1.5zM7.5 0c-1.243 0-2.25 1.007-2.25 2.25s1.007 2.25 2.25 2.25c1.243 0 2.25-1.007 2.25-2.25s-1.007-2.25-2.25-2.25v0z\"></path></g>\n<g id=\"piggy-bank\"><path d=\"M15.93 5.75c-0.061-0.2-0.165-0.371-0.3-0.51-0.105-0.113-0.241-0.197-0.394-0.238 0.074 0.117 0.141 0.252 0.191 0.396 0.056 0.147 0.092 0.304 0.103 0.467 0.008 0.067 0.012 0.138 0.012 0.21s-0.004 0.143-0.012 0.214c-0.035-0.115-0.083-0.208-0.142-0.292-0.123-0.166-0.288-0.299-0.48-0.383-0.119-0.053-0.248-0.082-0.384-0.082-0.346 0-0.648 0.186-0.811 0.464-0.050 0.082-0.090 0.171-0.12 0.266-1.182-1.968-3.309-3.271-5.741-3.271-0.124 0-0.247 0.003-0.369 0.010-0.763 0.001-1.517 0.11-2.231 0.313-0.062-0.434-0.632-1.314-3.252-1.314l0.8 2.51c-0.507 0.411-0.927 0.905-1.247 1.465l-1.553 0.025s-0.17 4 1 4h0.54c0.379 0.638 0.868 1.171 1.445 1.589l0.015 2.41h1.080c1.31 0 1.92 0 1.92-0.75v-0.39c0.451 0.088 0.97 0.139 1.5 0.139s1.049-0.051 1.551-0.147l-0.051 0.398c0 0.75 0.62 0.75 1.94 0.75h1.060v-2.39c0.932-0.651 1.613-1.605 1.903-2.717 0.057-0.027 0.114-0.024 0.172-0.024s0.115-0.003 0.172-0.010c0.251-0.046 0.48-0.144 0.679-0.283 0.266-0.188 0.474-0.454 0.591-0.765 0.028-0.093 0.049-0.191 0.063-0.292l0.001-0.010c0.221-0.262 0.372-0.59 0.419-0.951 0.012-0.084 0.019-0.171 0.019-0.259 0-0.197-0.032-0.386-0.091-0.563zM3.51 5.75c0.414 0 0.75 0.336 0.75 0.75s-0.336 0.75-0.75 0.75c-0.414 0-0.75-0.336-0.75-0.75s0.336-0.75 0.75-0.75zM5.88 5c-0.046 0.015-0.099 0.024-0.154 0.024-0.194 0-0.362-0.11-0.445-0.271-0.013-0.038-0.019-0.078-0.019-0.12 0-0.19 0.136-0.348 0.315-0.383 0.571-0.141 1.224-0.221 1.896-0.221 0.038 0 0.075 0 0.113 0.001 0.026-0 0.064-0.001 0.101-0.001 0.672 0 1.324 0.080 1.949 0.232 0.126 0.024 0.262 0.182 0.262 0.372 0 0.042-0.007 0.082-0.019 0.119-0.070 0.129-0.197 0.223-0.346 0.247l-0.153 0c-0.512-0.127-1.101-0.2-1.706-0.2-0.016 0-0.031 0-0.047 0-0.011-0-0.026-0-0.042-0-0.605 0-1.193 0.073-1.756 0.211zM14.58 7.93c-0.13 0.095-0.285 0.165-0.453 0.199l-0.127 0.011s0-0.14 0-0.14 0-0.21 0-0.31c0.165 0.125 0.374 0.2 0.6 0.2 0.007 0 0.014-0 0.021-0zM14.66 7.25c-0.018 0.003-0.040 0.004-0.061 0.004-0.176 0-0.327-0.103-0.398-0.252-0.044-0.084-0.069-0.18-0.069-0.283s0.025-0.199 0.070-0.283c0.059-0.082 0.157-0.138 0.269-0.138 0.059 0 0.113 0.015 0.161 0.042 0.181 0.070 0.308 0.244 0.308 0.448 0 0 0 0.001 0 0.001 0.009 0.062 0.014 0.133 0.014 0.205s-0.005 0.143-0.015 0.213c-0.066 0.012-0.144 0.024-0.224 0.024-0.019 0-0.039-0.001-0.058-0.002z\"></path></g>\n<g id=\"pill\"><path d=\"M14.8 1.4l-0.2-0.2c-0.7-0.8-1.8-1.2-2.8-1.2s-2.1 0.4-2.9 1.2l-7.7 7.7c-1.6 1.6-1.6 4.1 0 5.7l0.2 0.2c0.7 0.8 1.8 1.2 2.8 1.2s2.1-0.4 2.9-1.2l7.8-7.8c1.5-1.5 1.5-4.1-0.1-5.6zM14.1 6.4l-3.9 3.9-3.5-3.6-3.8 3.8c-1.1 1.1-1.1 2.5-1 3.5v0c-1.2-1.2-1.2-3.1 0-4.3l7.8-7.8c0.5-0.6 1.3-0.9 2.1-0.9s1.6 0.3 2.2 0.9l0.2 0.2c0.5 0.5 0.8 1.3 0.8 2.1s-0.3 1.6-0.9 2.2z\"></path></g>\n<g id=\"pills\"><path d=\"M3.5 8l6.3-6.3c0.4-0.4 1-0.7 1.7-0.7s1.3 0.3 1.8 0.7c1 1 1 2.6 0 3.5l-2.8 2.8h1.4l2-2c1.4-1.4 1.4-3.6 0-4.9-0.7-0.7-1.6-1-2.5-1s-1.7 0.2-2.4 0.9l-6.3 6.4c-0.3 0.2-0.5 0.5-0.7 0.9 0.5-0.2 1-0.3 1.5-0.3z\"></path><path d=\"M7.3 5.6l-2.4 2.4h4.7z\"></path><path d=\"M12.5 9h-9c-1.9 0-3.5 1.6-3.5 3.5s1.6 3.5 3.5 3.5h9c1.9 0 3.5-1.6 3.5-3.5s-1.6-3.5-3.5-3.5zM12.5 15h-4.5v-4h-4.5c-1.1 0-2 0.6-2.5 1.2 0.2-1.2 1.2-2.2 2.5-2.2h9c1.4 0 2.5 1.1 2.5 2.5s-1.1 2.5-2.5 2.5z\"></path></g>\n<g id=\"pin-post\"><path d=\"M15 4v-1h-6c0-1.69 1-2 1-2v-1h-5v1s1 0.31 1 2h-6v12h2v1h14v-12h-1zM14 14h-13v-10h4v1h2v2h1v-2h2v-1h4v10z\"></path></g>\n<g id=\"pin\"><path d=\"M11 6.5v-5.5h1v-1h-8v1h1v5.5c0 0-2 1.5-2 3.5 0 0.5 1.9 0.7 4 0.7v2.2c0 0.7 0.2 1.4 0.5 2.1l0.5 1 0.5-1c0.3-0.6 0.5-1.3 0.5-2.1v-2.2c2.1 0 4-0.3 4-0.7 0-2-2-3.5-2-3.5zM7 6.6c0 0-0.5 0.3-1.6 1.4-1 1-1.5 1.9-1.5 1.9s0.1-1 0.8-1.9c0.9-1.1 1.3-1.4 1.3-1.4v-5.6h1v5.6z\"></path></g>\n<g id=\"play-circle-o\"><path d=\"M8 1c3.9 0 7 3.1 7 7s-3.1 7-7 7-7-3.1-7-7 3.1-7 7-7zM8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8v0z\"></path><path d=\"M6 4v8l6-4z\"></path></g>\n<g id=\"play-circle\"><path d=\"M8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zM6 12v-8l6 4-6 4z\"></path></g>\n<g id=\"play\"><path d=\"M2 1v14l12-7z\"></path></g>\n<g id=\"plug\"><path d=\"M14.7 3.1c-0.4-0.4-1-0.4-1.4 0l-2.8 2.8-1.5-1.4 2.8-2.8c0.4-0.4 0.4-1 0-1.4s-1-0.4-1.4 0l-2.8 2.8-1.4-1.4-1.4 1.4 0.7 0.7-1.4 1.4c-1.4 1.4-1.5 3.5-0.5 5.1-1.7 1.5-2.6 3.8-2.6 5.7h2c0-1.3 0.4-3.2 2.1-4.4 1.5 0.8 3.4 0.5 4.6-0.7l1.4-1.4 0.7 0.7 1.4-1.4-1.4-1.4 2.8-2.8c0.5-0.5 0.5-1.1 0.1-1.5z\"></path></g>\n<g id=\"plus-circle-o\"><path d=\"M8 1c3.9 0 7 3.1 7 7s-3.1 7-7 7-7-3.1-7-7 3.1-7 7-7zM8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8v0z\"></path><path d=\"M13 7h-4v-4h-2v4h-4v2h4v4h2v-4h4z\"></path></g>\n<g id=\"plus-circle\"><path d=\"M8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zM13 9h-4v4h-2v-4h-4v-2h4v-4h2v4h4v2z\"></path></g>\n<g id=\"plus-minus\"><path d=\"M10 7h6v2h-6v-2z\"></path><path d=\"M4 5h-2v2h-2v2h2v2h2v-2h2v-2h-2z\"></path><path d=\"M6 2l3 12h1l-3-12z\"></path></g>\n<g id=\"plus-square-o\"><path d=\"M12 7h-3v-3h-2v3h-3v2h3v3h2v-3h3z\"></path><path d=\"M15 1h-14v14h14v-14zM14 14h-12v-12h12v12z\"></path></g>\n<g id=\"plus\"><path d=\"M14 7h-5v-5h-2v5h-5v2h5v5h2v-5h5v-2z\"></path></g>\n<g id=\"pointer\"><path d=\"M12.6 5c-0.2 0-0.5 0-0.6 0 0-0.2-0.2-0.6-0.4-0.8s-0.6-0.4-1.1-0.4c-0.2 0-0.4 0-0.6 0.1-0.1-0.2-0.2-0.3-0.3-0.5-0.2-0.2-0.5-0.4-1.1-0.4-0.2 0-0.4 0-0.5 0.1v-1.7c0-0.6-0.4-1.4-1.4-1.4-0.4 0-0.8 0.2-1.1 0.4-0.5 0.6-0.5 1.4-0.5 1.4v4.3c-0.6 0.1-1.1 0.3-1.4 0.6-0.6 0.7-0.6 1.6-0.6 2.8 0 0.2 0 0.5 0 0.7 0 1.4 0.7 2.1 1.4 2.8l0.3 0.4c1.3 1.2 2.4 1.6 5.1 1.6 2.9 0 4.2-1.6 4.2-5.1v-2.5c0-0.7-0.2-2.1-1.4-2.4zM13 7.4v2.6c0 3.4-1.3 4.1-3.2 4.1-2.4 0-3.3-0.3-4.3-1.3-0.1-0.1-0.2-0.2-0.4-0.4-0.7-0.8-1.1-1.2-1.1-2.2 0-0.2 0-0.5 0-0.7 0-1 0-1.7 0.3-2.1 0.1-0.1 0.4-0.2 0.7-0.2v0.5l-0.3 1.5c0 0.1 0 0.1 0.1 0.2s0.2 0 0.2 0l1-1.2c0-0.1 0-0.2 0-0.2v-6.2c0-0.1 0-0.5 0.2-0.7 0.1 0 0.2-0.1 0.4-0.1 0.3 0 0.4 0.3 0.4 0.4v3.1c0 0 0 0 0 0v1.2c0 0.3 0.2 0.6 0.5 0.6s0.5-0.3 0.5-0.5v-1.3c0 0 0 0 0 0 0-0.1 0.1-0.5 0.5-0.5 0.3 0 0.5 0.1 0.5 0.4v1.3c0 0.3 0.2 0.6 0.5 0.6s0.5-0.3 0.5-0.5v-0.7c0-0.1 0.1-0.3 0.5-0.3 0.2 0 0.3 0.1 0.3 0.1 0.2 0.1 0.2 0.4 0.2 0.4v0.8c0 0.3 0.2 0.5 0.4 0.5 0.3 0 0.5-0.1 0.5-0.4 0-0.1 0.1-0.2 0.2-0.3 0 0 0.1 0 0.2 0 0.6 0.2 0.7 1.2 0.7 1.5 0-0.1 0-0.1 0 0z\"></path></g>\n<g id=\"power-off\"><path d=\"M10 2.3v3.3c1.2 0.7 2 2 2 3.4 0 2.2-1.8 4-4 4s-4-1.8-4-4c0-1.5 0.8-2.8 2-3.4v-3.3c-2.9 0.9-5 3.5-5 6.7 0 3.9 3.1 7 7 7s7-3.1 7-7c0-3.2-2.1-5.8-5-6.7z\"></path><path d=\"M7 1h2v7h-2v-7z\"></path></g>\n<g id=\"presentation\"><path d=\"M16 1h-7v-1h-2v1h-7v11h5l-2 4h2.2l2-4h1.5l2 4h2.3l-2-4h5v-11zM15 11h-14v-9h14v9z\"></path><path d=\"M6 4v5l4-2.5z\"></path></g>\n<g id=\"print\"><path d=\"M0 10v4h2v2h12v-2h2v-4h-16zM13 15h-10v-3h10v3z\"></path><path d=\"M12 6v-4l-2.7-2h-5.3v6h-4v3h16v-3h-4zM9 1l1.3 1h-1.3v-1zM11 7h-6v-6h3v2h3v4zM15 8h-1v-1h1v1z\"></path></g>\n<g id=\"progressbar\"><path d=\"M0 5v6h16v-6h-16zM15 10h-14v-4h14v4z\"></path><path d=\"M2 7h7v2h-7v-2z\"></path></g>\n<g id=\"puzzle-piece\"><path d=\"M14.9 0.9c-1.1-1-2.5-1.3-3.1-0.4-0.7 1.1 0.5 1.7-0.3 2.5-0.5 0.6-2-0.8-2-0.8l-0.8-0.8-1.4 1.4c-0.6 0.7-2.1 1.5-2.6 1.1-0.7-0.6 0.1-1.8-0.5-2.6-0.7-1-2.1-0.8-3 0.3-1 1.1-1.4 2.4-0.5 3 1.1 0.7 1.9-0.3 2.7 0.5 0.4 0.4-0.2 1.7-0.5 2.1l-2.3 2.3 6.5 6.5 1.7-1.7c0.7-0.7 1.5-2 1.1-2.4-0.6-0.7-1.7 0.1-2.5-0.4-1-0.7-0.8-2 0.3-3s2.5-1.3 3.1-0.4c0.7 1.1-0.4 1.8 0.4 2.6 0.4 0.4 1.6-0.2 2-0.6l2.1-2.1-1.1-1.1c-0.6-0.6-1.9-2-1.4-2.5 0.6-0.7 1.7 0.2 2.5-0.4 0.9-0.8 0.6-2.1-0.4-3.1z\"></path></g>\n<g id=\"pyramid-chart\"><path d=\"M10.29 5l-2.29-4-2.29 4h4.58z\"></path><path d=\"M2.29 11l-2.29 4h16l-2.29-4h-11.42z\"></path><path d=\"M13.14 10l-2.28-4h-5.72l-2.28 4h10.28z\"></path></g>\n<g id=\"qrcode\"><path d=\"M6 0h-6v6h6v-6zM5 5h-4v-4h4v4z\"></path><path d=\"M2 2h2v2h-2v-2z\"></path><path d=\"M0 16h6v-6h-6v6zM1 11h4v4h-4v-4z\"></path><path d=\"M2 12h2v2h-2v-2z\"></path><path d=\"M10 0v6h6v-6h-6zM15 5h-4v-4h4v4z\"></path><path d=\"M12 2h2v2h-2v-2z\"></path><path d=\"M2 7h-2v2h3v-1h-1z\"></path><path d=\"M7 9h2v2h-2v-2z\"></path><path d=\"M3 7h2v1h-2v-1z\"></path><path d=\"M9 12h-2v1h1v1h1v-1z\"></path><path d=\"M6 7v1h-1v1h2v-2z\"></path><path d=\"M8 4h1v2h-1v-2z\"></path><path d=\"M9 8v1h2v-2h-3v1z\"></path><path d=\"M7 6h1v1h-1v-1z\"></path><path d=\"M9 14h2v2h-2v-2z\"></path><path d=\"M7 14h1v2h-1v-2z\"></path><path d=\"M9 11h1v1h-1v-1z\"></path><path d=\"M9 3v-2h-1v-1h-1v4h1v-1z\"></path><path d=\"M12 14h1v2h-1v-2z\"></path><path d=\"M12 12h2v1h-2v-1z\"></path><path d=\"M11 13h1v1h-1v-1z\"></path><path d=\"M10 12h1v1h-1v-1z\"></path><path d=\"M14 10v1h1v1h1v-2h-1z\"></path><path d=\"M15 13h-1v3h2v-2h-1z\"></path><path d=\"M10 10v1h3v-2h-2v1z\"></path><path d=\"M12 7v1h2v1h2v-2h-2z\"></path></g>\n<g id=\"question-circle-o\"><path d=\"M9 10h-2c0-2 1.2-2.6 2-3 0.3-0.1 0.5-0.2 0.7-0.4 0.1-0.1 0.3-0.3 0.1-0.7-0.2-0.5-0.8-1-1.7-1-1.4 0-1.6 1.2-1.7 1.5l-2-0.3c0.1-1.1 1-3.2 3.6-3.2 1.6 0 3 0.9 3.6 2.2 0.4 1.1 0.2 2.2-0.6 3-0.4 0.4-0.8 0.6-1.2 0.7-0.6 0.4-0.8 0.2-0.8 1.2z\"></path><path d=\"M8 1c3.9 0 7 3.1 7 7s-3.1 7-7 7-7-3.1-7-7 3.1-7 7-7zM8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8v0z\"></path><path d=\"M6.9 11h2v2h-2v-2z\"></path></g>\n<g id=\"question-circle\"><path d=\"M8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zM8.9 13h-2v-2h2v2zM11 8.1c-0.4 0.4-0.8 0.6-1.2 0.7-0.6 0.4-0.8 0.2-0.8 1.2h-2c0-2 1.2-2.6 2-3 0.3-0.1 0.5-0.2 0.7-0.4 0.1-0.1 0.3-0.3 0.1-0.7-0.2-0.5-0.8-1-1.7-1-1.4 0-1.6 1.2-1.7 1.5l-2-0.3c0.1-1.1 1-3.2 3.6-3.2 1.6 0 3 0.9 3.6 2.2 0.4 1.1 0.2 2.2-0.6 3z\"></path></g>\n<g id=\"question\"><path d=\"M9 11h-3c0-3 1.6-4 2.7-4.6 0.4-0.2 0.7-0.4 0.9-0.6 0.5-0.5 0.3-1.2 0.2-1.4-0.3-0.7-1-1.4-2.3-1.4-2.1 0-2.5 1.9-2.5 2.3l-3-0.4c0.2-1.7 1.7-4.9 5.5-4.9 2.3 0 4.3 1.3 5.1 3.2 0.7 1.7 0.4 3.5-0.8 4.7-0.5 0.5-1.1 0.8-1.6 1.1-0.9 0.5-1.2 1-1.2 2z\"></path><path d=\"M9.5 14c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path></g>\n<g id=\"quote-left\"><path d=\"M7 7v7h-7v-7.1c0-4.8 4.5-5.4 4.5-5.4l0.6 1.4c0 0-2 0.3-2.4 1.9-0.4 1.2 0.4 2.2 0.4 2.2h3.9z\"></path><path d=\"M16 7v7h-7v-7.1c0-4.8 4.5-5.4 4.5-5.4l0.6 1.4c0 0-2 0.3-2.4 1.9-0.4 1.2 0.4 2.2 0.4 2.2h3.9z\"></path></g>\n<g id=\"quote-right\"><path d=\"M9 9v-7h7v7.1c0 4.8-4.5 5.4-4.5 5.4l-0.6-1.4c0 0 2-0.3 2.4-1.9 0.4-1.2-0.4-2.2-0.4-2.2h-3.9z\"></path><path d=\"M0 9v-7h7v7.1c0 4.8-4.5 5.4-4.5 5.4l-0.6-1.4c0 0 2-0.3 2.4-1.9 0.4-1.2-0.4-2.2-0.4-2.2h-3.9z\"></path></g>\n<g id=\"random\"><path d=\"M13 12h-2c-1 0-1.7-1.2-2.4-2.7-0.3 0.7-0.6 1.5-1 2.3 0.8 1.4 1.8 2.4 3.4 2.4h2v2l3-3-3-3v2z\"></path><path d=\"M5.4 6.6c0.3-0.7 0.6-1.5 1-2.2-0.8-1.4-1.9-2.4-3.4-2.4h-3v2h3c1 0 1.7 1.2 2.4 2.6z\"></path><path d=\"M16 3l-3-3v2h-2c-2.7 0-3.9 3-5 5.7-0.8 2.1-1.7 4.3-3 4.3h-3v2h3c2.6 0 3.8-2.8 4.9-5.6 0.9-2.2 1.8-4.4 3.1-4.4h2v2l3-3z\"></path></g>\n<g id=\"raster-lower-left\"><path d=\"M15 7h1v1h-1v-1z\"></path><path d=\"M13 7h1v1h-1v-1z\"></path><path d=\"M11 7h1v1h-1v-1z\"></path><path d=\"M9 7h1v1h-1v-1z\"></path><path d=\"M14 6h1v1h-1v-1z\"></path><path d=\"M12 6h1v1h-1v-1z\"></path><path d=\"M10 6h1v1h-1v-1z\"></path><path d=\"M15 5h1v1h-1v-1z\"></path><path d=\"M13 5h1v1h-1v-1z\"></path><path d=\"M11 5h1v1h-1v-1z\"></path><path d=\"M14 4h1v1h-1v-1z\"></path><path d=\"M12 4h1v1h-1v-1z\"></path><path d=\"M15 3h1v1h-1v-1z\"></path><path d=\"M13 3h1v1h-1v-1z\"></path><path d=\"M14 2h1v1h-1v-1z\"></path><path d=\"M15 1h1v1h-1v-1z\"></path><path d=\"M7 15h1v1h-1v-1z\"></path><path d=\"M5 15h1v1h-1v-1z\"></path><path d=\"M3 15h1v1h-1v-1z\"></path><path d=\"M1 15h1v1h-1v-1z\"></path><path d=\"M6 14h1v1h-1v-1z\"></path><path d=\"M4 14h1v1h-1v-1z\"></path><path d=\"M2 14h1v1h-1v-1z\"></path><path d=\"M7 13h1v1h-1v-1z\"></path><path d=\"M5 13h1v1h-1v-1z\"></path><path d=\"M3 13h1v1h-1v-1z\"></path><path d=\"M6 12h1v1h-1v-1z\"></path><path d=\"M4 12h1v1h-1v-1z\"></path><path d=\"M7 11h1v1h-1v-1z\"></path><path d=\"M5 11h1v1h-1v-1z\"></path><path d=\"M6 10h1v1h-1v-1z\"></path><path d=\"M7 9h1v1h-1v-1z\"></path><path d=\"M15 15h1v1h-1v-1z\"></path><path d=\"M13 15h1v1h-1v-1z\"></path><path d=\"M11 15h1v1h-1v-1z\"></path><path d=\"M9 15h1v1h-1v-1z\"></path><path d=\"M14 14h1v1h-1v-1z\"></path><path d=\"M12 14h1v1h-1v-1z\"></path><path d=\"M10 14h1v1h-1v-1z\"></path><path d=\"M8 14h1v1h-1v-1z\"></path><path d=\"M15 13h1v1h-1v-1z\"></path><path d=\"M13 13h1v1h-1v-1z\"></path><path d=\"M11 13h1v1h-1v-1z\"></path><path d=\"M9 13h1v1h-1v-1z\"></path><path d=\"M14 12h1v1h-1v-1z\"></path><path d=\"M12 12h1v1h-1v-1z\"></path><path d=\"M10 12h1v1h-1v-1z\"></path><path d=\"M8 12h1v1h-1v-1z\"></path><path d=\"M15 11h1v1h-1v-1z\"></path><path d=\"M13 11h1v1h-1v-1z\"></path><path d=\"M11 11h1v1h-1v-1z\"></path><path d=\"M9 11h1v1h-1v-1z\"></path><path d=\"M14 10h1v1h-1v-1z\"></path><path d=\"M12 10h1v1h-1v-1z\"></path><path d=\"M10 10h1v1h-1v-1z\"></path><path d=\"M8 10h1v1h-1v-1z\"></path><path d=\"M15 9h1v1h-1v-1z\"></path><path d=\"M13 9h1v1h-1v-1z\"></path><path d=\"M11 9h1v1h-1v-1z\"></path><path d=\"M9 9h1v1h-1v-1z\"></path><path d=\"M14 8h1v1h-1v-1z\"></path><path d=\"M12 8h1v1h-1v-1z\"></path><path d=\"M10 8h1v1h-1v-1z\"></path><path d=\"M8 8h1v1h-1v-1z\"></path></g>\n<g id=\"raster\"><path d=\"M7 7h1v1h-1v-1z\"></path><path d=\"M5 7h1v1h-1v-1z\"></path><path d=\"M3 7h1v1h-1v-1z\"></path><path d=\"M1 7h1v1h-1v-1z\"></path><path d=\"M6 6h1v1h-1v-1z\"></path><path d=\"M4 6h1v1h-1v-1z\"></path><path d=\"M2 6h1v1h-1v-1z\"></path><path d=\"M0 6h1v1h-1v-1z\"></path><path d=\"M7 5h1v1h-1v-1z\"></path><path d=\"M5 5h1v1h-1v-1z\"></path><path d=\"M3 5h1v1h-1v-1z\"></path><path d=\"M1 5h1v1h-1v-1z\"></path><path d=\"M6 4h1v1h-1v-1z\"></path><path d=\"M4 4h1v1h-1v-1z\"></path><path d=\"M2 4h1v1h-1v-1z\"></path><path d=\"M0 4h1v1h-1v-1z\"></path><path d=\"M7 3h1v1h-1v-1z\"></path><path d=\"M5 3h1v1h-1v-1z\"></path><path d=\"M3 3h1v1h-1v-1z\"></path><path d=\"M1 3h1v1h-1v-1z\"></path><path d=\"M6 2h1v1h-1v-1z\"></path><path d=\"M4 2h1v1h-1v-1z\"></path><path d=\"M2 2h1v1h-1v-1z\"></path><path d=\"M0 2h1v1h-1v-1z\"></path><path d=\"M7 1h1v1h-1v-1z\"></path><path d=\"M5 1h1v1h-1v-1z\"></path><path d=\"M3 1h1v1h-1v-1z\"></path><path d=\"M1 1h1v1h-1v-1z\"></path><path d=\"M6 0h1v1h-1v-1z\"></path><path d=\"M4 0h1v1h-1v-1z\"></path><path d=\"M2 0h1v1h-1v-1z\"></path><path d=\"M0 0h1v1h-1v-1z\"></path><path d=\"M15 7h1v1h-1v-1z\"></path><path d=\"M13 7h1v1h-1v-1z\"></path><path d=\"M11 7h1v1h-1v-1z\"></path><path d=\"M9 7h1v1h-1v-1z\"></path><path d=\"M14 6h1v1h-1v-1z\"></path><path d=\"M12 6h1v1h-1v-1z\"></path><path d=\"M10 6h1v1h-1v-1z\"></path><path d=\"M8 6h1v1h-1v-1z\"></path><path d=\"M15 5h1v1h-1v-1z\"></path><path d=\"M13 5h1v1h-1v-1z\"></path><path d=\"M11 5h1v1h-1v-1z\"></path><path d=\"M9 5h1v1h-1v-1z\"></path><path d=\"M14 4h1v1h-1v-1z\"></path><path d=\"M12 4h1v1h-1v-1z\"></path><path d=\"M10 4h1v1h-1v-1z\"></path><path d=\"M8 4h1v1h-1v-1z\"></path><path d=\"M15 3h1v1h-1v-1z\"></path><path d=\"M13 3h1v1h-1v-1z\"></path><path d=\"M11 3h1v1h-1v-1z\"></path><path d=\"M9 3h1v1h-1v-1z\"></path><path d=\"M14 2h1v1h-1v-1z\"></path><path d=\"M12 2h1v1h-1v-1z\"></path><path d=\"M10 2h1v1h-1v-1z\"></path><path d=\"M8 2h1v1h-1v-1z\"></path><path d=\"M15 1h1v1h-1v-1z\"></path><path d=\"M13 1h1v1h-1v-1z\"></path><path d=\"M11 1h1v1h-1v-1z\"></path><path d=\"M9 1h1v1h-1v-1z\"></path><path d=\"M14 0h1v1h-1v-1z\"></path><path d=\"M12 0h1v1h-1v-1z\"></path><path d=\"M10 0h1v1h-1v-1z\"></path><path d=\"M8 0h1v1h-1v-1z\"></path><path d=\"M7 15h1v1h-1v-1z\"></path><path d=\"M5 15h1v1h-1v-1z\"></path><path d=\"M3 15h1v1h-1v-1z\"></path><path d=\"M1 15h1v1h-1v-1z\"></path><path d=\"M6 14h1v1h-1v-1z\"></path><path d=\"M4 14h1v1h-1v-1z\"></path><path d=\"M2 14h1v1h-1v-1z\"></path><path d=\"M0 14h1v1h-1v-1z\"></path><path d=\"M7 13h1v1h-1v-1z\"></path><path d=\"M5 13h1v1h-1v-1z\"></path><path d=\"M3 13h1v1h-1v-1z\"></path><path d=\"M1 13h1v1h-1v-1z\"></path><path d=\"M6 12h1v1h-1v-1z\"></path><path d=\"M4 12h1v1h-1v-1z\"></path><path d=\"M2 12h1v1h-1v-1z\"></path><path d=\"M0 12h1v1h-1v-1z\"></path><path d=\"M7 11h1v1h-1v-1z\"></path><path d=\"M5 11h1v1h-1v-1z\"></path><path d=\"M3 11h1v1h-1v-1z\"></path><path d=\"M1 11h1v1h-1v-1z\"></path><path d=\"M6 10h1v1h-1v-1z\"></path><path d=\"M4 10h1v1h-1v-1z\"></path><path d=\"M2 10h1v1h-1v-1z\"></path><path d=\"M0 10h1v1h-1v-1z\"></path><path d=\"M7 9h1v1h-1v-1z\"></path><path d=\"M5 9h1v1h-1v-1z\"></path><path d=\"M3 9h1v1h-1v-1z\"></path><path d=\"M1 9h1v1h-1v-1z\"></path><path d=\"M6 8h1v1h-1v-1z\"></path><path d=\"M4 8h1v1h-1v-1z\"></path><path d=\"M2 8h1v1h-1v-1z\"></path><path d=\"M0 8h1v1h-1v-1z\"></path><path d=\"M15 15h1v1h-1v-1z\"></path><path d=\"M13 15h1v1h-1v-1z\"></path><path d=\"M11 15h1v1h-1v-1z\"></path><path d=\"M9 15h1v1h-1v-1z\"></path><path d=\"M14 14h1v1h-1v-1z\"></path><path d=\"M12 14h1v1h-1v-1z\"></path><path d=\"M10 14h1v1h-1v-1z\"></path><path d=\"M8 14h1v1h-1v-1z\"></path><path d=\"M15 13h1v1h-1v-1z\"></path><path d=\"M13 13h1v1h-1v-1z\"></path><path d=\"M11 13h1v1h-1v-1z\"></path><path d=\"M9 13h1v1h-1v-1z\"></path><path d=\"M14 12h1v1h-1v-1z\"></path><path d=\"M12 12h1v1h-1v-1z\"></path><path d=\"M10 12h1v1h-1v-1z\"></path><path d=\"M8 12h1v1h-1v-1z\"></path><path d=\"M15 11h1v1h-1v-1z\"></path><path d=\"M13 11h1v1h-1v-1z\"></path><path d=\"M11 11h1v1h-1v-1z\"></path><path d=\"M9 11h1v1h-1v-1z\"></path><path d=\"M14 10h1v1h-1v-1z\"></path><path d=\"M12 10h1v1h-1v-1z\"></path><path d=\"M10 10h1v1h-1v-1z\"></path><path d=\"M8 10h1v1h-1v-1z\"></path><path d=\"M15 9h1v1h-1v-1z\"></path><path d=\"M13 9h1v1h-1v-1z\"></path><path d=\"M11 9h1v1h-1v-1z\"></path><path d=\"M9 9h1v1h-1v-1z\"></path><path d=\"M14 8h1v1h-1v-1z\"></path><path d=\"M12 8h1v1h-1v-1z\"></path><path d=\"M10 8h1v1h-1v-1z\"></path><path d=\"M8 8h1v1h-1v-1z\"></path></g>\n<g id=\"records\"><path d=\"M4 9h4v2h-4v-2z\"></path><path d=\"M16 2h-1v-2h-10v2h-2v1.25l-0.6 0.75h-1.4v1.75l-1 1.25v9h12l4-5v-9zM2 5h8v2h-8v-2zM11 15h-10v-7h10v7zM12 7h-1v-3h-7v-1h8v4zM14 4.5l-1 1.25v-3.75h-7v-1h8v3.5z\"></path></g>\n<g id=\"recycle\"><path d=\"M8 3.1l1.4 2.2-1.6 1.1 1.3 0.3 2.8 0.6 0.6-2.7 0.4-1.4-1.8 1.1-2-3.3h-2.2l-2.6 4.3 1.7 1z\"></path><path d=\"M16 12l-2.7-4.3-1.7 1 2 3.3h-2.6v-2l-3 3 3 3v-2h3.7z\"></path><path d=\"M2.4 12v0l1.4-2.3 1.7 1.1-0.9-4.2-2.8 0.7-1.3 0.3 1.6 1-2.1 3.4 1.3 2h5.7v-2z\"></path></g>\n<g id=\"refresh\"><path d=\"M2.6 5.6c0.9-2.1 3-3.6 5.4-3.6 3 0 5.4 2.2 5.9 5h2c-0.5-3.9-3.8-7-7.9-7-3 0-5.6 1.6-6.9 4.1l-1.1-1.1v4h4l-1.4-1.4z\"></path><path d=\"M16 9h-4.1l1.5 1.4c-0.9 2.1-3 3.6-5.5 3.6-2.9 0-5.4-2.2-5.9-5h-2c0.5 3.9 3.9 7 7.9 7 3 0 5.6-1.7 7-4.1l1.1 1.1v-4z\"></path></g>\n<g id=\"reply-all\"><path d=\"M16 8c0-5-4.9-5-4.9-5h-2.1v-3l-6 6 6 6v-3h2.2c3.5 0 1.8 7 1.8 7s3-4.1 3-8z\"></path><path d=\"M0 6l6 6v-1.5l-4.5-4.5 4.5-4.5v-1.5z\"></path></g>\n<g id=\"reply\"><path d=\"M16 8c0-5-4.9-5-4.9-5h-5.1v-3l-6 6 6 6v-3h5.2c3.5 0 1.8 7 1.8 7s3-4.1 3-8z\"></path></g>\n<g id=\"resize-h\"><path d=\"M0 7h16v2h-16v-2z\"></path><path d=\"M7 6h2v-3h2l-3-3-3 3h2z\"></path><path d=\"M9 10h-2v3h-2l3 3 3-3h-2z\"></path></g>\n<g id=\"resize-v\"><path d=\"M7 0h2v16h-2v-16z\"></path><path d=\"M3 5l-3 3 3 3v-2h3v-2h-3z\"></path><path d=\"M16 8l-3-3v2h-3v2h3v2z\"></path></g>\n<g id=\"retweet\"><path d=\"M2 1h12v5h2l-3 3-3-3h2v-3h-8v2h-2z\"></path><path d=\"M14 14h-12v-5h-2l3-3 3 3h-2v3h8v-2h2z\"></path></g>\n<g id=\"rhombus\"><path d=\"M8 0l-8 8 8 8 8-8-8-8zM2 8l6-6 6 6-6 6-6-6z\"></path></g>\n<g id=\"road-branch\"><path d=\"M16 4h-16v3h3.2l3.8 3.6c1.6 1.5 3.6 2.4 5.8 2.4h3.2v-3h-3.2c-1.4 0-2.7-0.5-3.7-1.5l-1.6-1.5h8.5v-3z\"></path></g>\n<g id=\"road-branches\"><path d=\"M16 4v-3h-16v3h1.7l7.7 9.5c1.3 1.6 3.1 2.5 5 2.5h1.6v-3h-1.5c-1 0-1.9-0.5-2.7-1.4l-1.3-1.6h5.5v-3h-8l-2.4-3h10.4z\"></path></g>\n<g id=\"road-split\"><path d=\"M14 13v-1c0-0.2 0-4.1-2.8-5.4-2.2-1-2.2-3.5-2.2-3.6v-3h-2v3c0 0.1 0 2.6-2.2 3.6-2.8 1.3-2.8 5.2-2.8 5.4v1h-2l3 3 3-3h-2v-1c0 0 0-2.8 1.7-3.6 1.1-0.5 1.8-1.3 2.3-2 0.5 0.8 1.2 1.5 2.3 2 1.7 0.8 1.7 3.6 1.7 3.6v1h-2l3 3 3-3h-2z\"></path></g>\n<g id=\"road\"><path d=\"M9 11v4h7l-4-14h-3v3h-2v-3h-3l-4 14h7v-4h2zM7 6h2v3h-2v-3z\"></path></g>\n<g id=\"rocket\"><path d=\"M16 0c0 0-3.5-0.4-6.7 2.8-1.6 1.5-2.9 3.5-3.9 5.3l-2.5-0.6-1.6 1.6 2.8 1.4c-0.3 0.6-0.4 1-0.4 1l0.8 0.8c0 0 0.4-0.2 1-0.4l1.4 2.8 1.6-1.6-0.5-2.5c1.7-1 3.8-2.3 5.3-3.8 3.1-3.2 2.7-6.8 2.7-6.8zM12.8 4.8c-0.4 0.4-1.1 0.4-1.6 0-0.4-0.4-0.4-1.1 0-1.6 0.4-0.4 1.1-0.4 1.6 0 0.4 0.4 0.4 1.1 0 1.6z\"></path><path d=\"M4 14.2c-0.8 0.8-2.6 0.4-2.6 0.4s-0.4-1.8 0.4-2.6c0.8-0.8 1.5-0.9 1.5-0.9s-1.3-0.3-2.1 0.6c-1.6 1.6-1 4.2-1 4.2s2.6 0.6 4.2-1c0.9-0.9 0.6-2.2 0.6-2.2s-0.2 0.7-1 1.5z\"></path></g>\n<g id=\"rotate-left\"><path d=\"M8 0c-3 0-5.6 1.6-6.9 4.1l-1.1-1.1v4h4l-1.5-1.5c1-2 3.1-3.5 5.5-3.5 3.3 0 6 2.7 6 6s-2.7 6-6 6c-1.8 0-3.4-0.8-4.5-2.1l-1.5 1.3c1.4 1.7 3.6 2.8 6 2.8 4.4 0 8-3.6 8-8s-3.6-8-8-8z\"></path></g>\n<g id=\"rotate-right\"><path d=\"M16 7v-4l-1.1 1.1c-1.3-2.5-3.9-4.1-6.9-4.1-4.4 0-8 3.6-8 8s3.6 8 8 8c2.4 0 4.6-1.1 6-2.8l-1.5-1.3c-1.1 1.3-2.7 2.1-4.5 2.1-3.3 0-6-2.7-6-6s2.7-6 6-6c2.4 0 4.5 1.5 5.5 3.5l-1.5 1.5h4z\"></path></g>\n<g id=\"rss-square\"><path d=\"M0 0v16h16v-16h-16zM3.6 14c-0.9 0-1.6-0.7-1.6-1.6s0.7-1.6 1.6-1.6 1.6 0.7 1.6 1.6-0.6 1.6-1.6 1.6zM7.6 14c0-3.1-2.5-5.6-5.6-5.6v-2.4c4.4 0 8 3.6 8 8h-2.4zM11.6 14c0-5.3-4.3-9.6-9.6-9.6v-2.4c6.6 0 12 5.4 12 12h-2.4z\"></path></g>\n<g id=\"rss\"><path d=\"M4.4 13.8c0 1.215-0.985 2.2-2.2 2.2s-2.2-0.985-2.2-2.2c0-1.215 0.985-2.2 2.2-2.2s2.2 0.985 2.2 2.2z\"></path><path d=\"M10.6 16h-3.1c0-4.1-3.4-7.5-7.5-7.5v0-3.1c5.9 0 10.6 4.7 10.6 10.6z\"></path><path d=\"M12.8 16c0-7.1-5.7-12.8-12.8-12.8v-3.2c8.8 0 16 7.2 16 16h-3.2z\"></path></g>\n<g id=\"safe-lock\"><path d=\"M8 0c-4.418 0-8 3.582-8 8s3.582 8 8 8c4.418 0 8-3.582 8-8s-3.582-8-8-8zM11.13 14.25l-0.37-0.9-0.92 0.38 0.37 0.9c-0.659 0.23-1.419 0.363-2.21 0.363s-1.551-0.133-2.259-0.378l0.419-0.885-0.92-0.38-0.37 0.9c-1.355-0.69-2.43-1.765-3.102-3.080l0.882-0.41-0.38-0.93-0.9 0.37c-0.23-0.659-0.363-1.419-0.363-2.21s0.133-1.551 0.378-2.259l0.885 0.419 0.38-0.92-0.9-0.37c0.691-1.351 1.766-2.423 3.080-3.092l0.41 0.882 0.92-0.38-0.37-0.9c0.659-0.23 1.419-0.363 2.21-0.363s1.551 0.133 2.259 0.378l-0.419 0.885 0.92 0.38 0.37-0.9c1.355 0.69 2.43 1.765 3.102 3.080l-0.882 0.41 0.38 0.92 0.9-0.37c0.23 0.659 0.363 1.419 0.363 2.21s-0.133 1.551-0.378 2.259l-0.885-0.419-0.38 0.92 0.9 0.37c-0.69 1.355-1.765 2.43-3.080 3.102z\"></path><path d=\"M10.36 3.62l-1.16 2.79c-0.329-0.253-0.746-0.407-1.199-0.41h0.279l1.15-2.77c-0.426-0.14-0.917-0.223-1.427-0.23-0.023-0-0.047-0-0.071-0-2.795 0-5.060 2.265-5.060 5.060s2.265 5.060 5.060 5.060c2.795 0 5.060-2.265 5.060-5.060 0-1.904-1.052-3.563-2.606-4.426z\"></path></g>\n<g id=\"safe\"><path d=\"M1 0v16h3v-1h8v1h3v-16h-14zM14 10h-1v-5h1v5zM14 3h-1v-1h-10v11h10v-1h1v2h-12v-13h12v2zM8.5 7.5c0 1.1-0.9 2-2 2s-2-0.9-2-2 0.9-2 2-2 2 0.9 2 2z\"></path><path d=\"M7.5 7.5c0 0.552-0.448 1-1 1s-1-0.448-1-1c0-0.552 0.448-1 1-1s1 0.448 1 1z\"></path></g>\n<g id=\"scale-unbalance\"><path d=\"M15.81 9l-2.47-4.93 0.83-0.15c0.239-0.044 0.418-0.251 0.418-0.5 0-0.281-0.227-0.508-0.508-0.508-0.032 0-0.063 0.003-0.093 0.009l-0.777 0.14c-0.993-0.755-2.25-1.21-3.613-1.21-0.21 0-0.418 0.011-0.623 0.032-0.036-0.5-0.457-0.882-0.967-0.882-0.003 0-0.005 0-0.008 0-0.552 0-1 0.448-1 1v0.2c-1.714 0.336-3.151 1.327-4.066 2.697l-0.754 0.153c-0.257 0.024-0.457 0.239-0.457 0.5 0 0.277 0.225 0.502 0.502 0.502 0.016 0 0.032-0.001 0.047-0.002l0.088 0 0.35-0.050-2.52 5h-0.19c0 1.1 1.34 2 3 2s3-0.9 3-2h-0.19l-2.56-5.12h0.1c0.172-0.031 0.311-0.144 0.379-0.297 0.021-0.093 0.701-1.583 3.271-2.363v10.78h-1v1h-2v1h8v-1h-2v-1h-1v-11.12c0.201-0.031 0.434-0.049 0.67-0.049 1.152 0 2.205 0.419 3.016 1.114l-0.006-0.005-2.49 5.060h-0.19c0 1.1 1.34 2 3 2s3-0.9 3-2h-0.19zM5 11h-4l2-3.94zM11 9l2-3.94 2 3.94h-4z\"></path></g>\n<g id=\"scale\"><path d=\"M15.81 10l-2.5-5h0.69c0.276 0 0.5-0.224 0.5-0.5s-0.224-0.5-0.5-0.5h-0.79c-1.056-1.145-2.541-1.881-4.198-1.95l-0.012-0.050c0-0.552-0.448-1-1-1s-1 0.448-1 1v0.050c-1.681 0.073-3.178 0.807-4.247 1.947l-0.753 0.003c-0.276 0-0.5 0.224-0.5 0.5s0.224 0.5 0.5 0.5h0.69l-2.5 5h-0.19c0 1.1 1.34 2 3 2s3-0.9 3-2h-0.19l-2.55-5.090c0.064-0.039 0.118-0.089 0.159-0.148 0.873-1.019 2.148-1.669 3.575-1.702l0.006 10.94h-1v1h-2v1h8v-1h-2v-1h-1v-10.94c1.418 0.030 2.679 0.682 3.524 1.693 0.053 0.084 0.117 0.145 0.193 0.186l-2.527 5.061h-0.19c0 1.1 1.34 2 3 2s3-0.9 3-2h-0.19zM5 10h-4l2-3.94zM11 10l2-3.94 2 3.94h-4z\"></path></g>\n<g id=\"scatter-chart\"><path d=\"M1 15v-15h-1v16h16v-1h-15z\"></path><path d=\"M5 11c0 0.552-0.448 1-1 1s-1-0.448-1-1c0-0.552 0.448-1 1-1s1 0.448 1 1z\"></path><path d=\"M8 6c0 0.552-0.448 1-1 1s-1-0.448-1-1c0-0.552 0.448-1 1-1s1 0.448 1 1z\"></path><path d=\"M14 5c0 0.552-0.448 1-1 1s-1-0.448-1-1c0-0.552 0.448-1 1-1s1 0.448 1 1z\"></path><path d=\"M11 10c0 0.552-0.448 1-1 1s-1-0.448-1-1c0-0.552 0.448-1 1-1s1 0.448 1 1z\"></path></g>\n<g id=\"scissors\"><path d=\"M16 3.1c0 0-2.1-1.1-3.5-1-0.3 0-0.5 0.1-0.7 0.2l-4.3 3.4-1.8-1.5c0.1-0.3 0.2-0.6 0.3-1 0.1-1.8-1.4-3.4-3.3-3.2-1.2 0.1-2.3 1-2.6 2.2-0.3 1.3 0.2 2.5 1.2 3.2l3.3 2.6-3.3 2.6c-1 0.7-1.5 1.9-1.2 3.2 0.3 1.2 1.4 2 2.6 2.2 1.9 0.2 3.4-1.4 3.2-3.2 0-0.3-0.1-0.7-0.3-1l1.8-1.5 4.3 3.4c0.2 0.1 0.4 0.2 0.7 0.2 1.4 0.1 3.5-1 3.5-1l-5.7-4.9 5.8-4.9zM2.8 4.6c-0.9-0.1-1.6-0.9-1.5-1.8s0.9-1.6 1.8-1.5c0.9 0.1 1.6 0.9 1.5 1.8 0 0.9-0.9 1.6-1.8 1.5zM3.1 14.7c-0.9 0.1-1.7-0.6-1.8-1.5s0.6-1.7 1.5-1.8c0.9-0.1 1.7 0.6 1.8 1.5s-0.6 1.7-1.5 1.8zM12.4 3.2c0 0 0.1 0 0.2 0 0.4 0 0.9 0.1 1.4 0.2l-6.8 5.7-0.9-1.1 6.1-4.8zM14 12.6c-0.5 0.2-1 0.3-1.4 0.2-0.1 0-0.2 0-0.2 0l-4-3.2 1-0.9 4.6 3.9z\"></path></g>\n<g id=\"screwdriver\"><path d=\"M8 10.8l0.9-0.8-0.9-0.9 5.7-5.7 1.2-0.4 1.1-2.2-0.7-0.7-2.3 1-0.5 1.2-5.6 5.7-0.9-0.9-0.8 0.9c0 0 0.8 0.6-0.1 1.5-0.5 0.5-1.3-0.1-2.8 1.4-0.5 0.5-2.1 2.1-2.1 2.1s-0.6 1 0.6 2.2 2.2 0.6 2.2 0.6 1.6-1.6 2.1-2.1c1.4-1.4 0.9-2.3 1.3-2.7 0.9-0.9 1.6-0.2 1.6-0.2zM4.9 10.4l0.7 0.7-3.8 3.8-0.7-0.7z\"></path></g>\n<g id=\"search-minus\"><path d=\"M15.7 14.3l-4.2-4.2c-0.2-0.2-0.5-0.3-0.8-0.3 0.8-1 1.3-2.4 1.3-3.8 0-3.3-2.7-6-6-6s-6 2.7-6 6 2.7 6 6 6c1.4 0 2.8-0.5 3.8-1.4 0 0.3 0 0.6 0.3 0.8l4.2 4.2c0.2 0.2 0.5 0.3 0.7 0.3s0.5-0.1 0.7-0.3c0.4-0.3 0.4-0.9 0-1.3zM6 10.5c-2.5 0-4.5-2-4.5-4.5s2-4.5 4.5-4.5 4.5 2 4.5 4.5-2 4.5-4.5 4.5z\"></path><path d=\"M3 5h6v2h-6v-2z\"></path></g>\n<g id=\"search-plus\"><path d=\"M15.7 14.3l-4.2-4.2c-0.2-0.2-0.5-0.3-0.8-0.3 0.8-1 1.3-2.4 1.3-3.8 0-3.3-2.7-6-6-6s-6 2.7-6 6 2.7 6 6 6c1.4 0 2.8-0.5 3.8-1.4 0 0.3 0 0.6 0.3 0.8l4.2 4.2c0.2 0.2 0.5 0.3 0.7 0.3s0.5-0.1 0.7-0.3c0.4-0.3 0.4-0.9 0-1.3zM6 10.5c-2.5 0-4.5-2-4.5-4.5s2-4.5 4.5-4.5 4.5 2 4.5 4.5-2 4.5-4.5 4.5z\"></path><path d=\"M7 3h-2v2h-2v2h2v2h2v-2h2v-2h-2z\"></path></g>\n<g id=\"search\"><path d=\"M15.7 14.3l-4.2-4.2c-0.2-0.2-0.5-0.3-0.8-0.3 0.8-1 1.3-2.4 1.3-3.8 0-3.3-2.7-6-6-6s-6 2.7-6 6 2.7 6 6 6c1.4 0 2.8-0.5 3.8-1.4 0 0.3 0 0.6 0.3 0.8l4.2 4.2c0.2 0.2 0.5 0.3 0.7 0.3s0.5-0.1 0.7-0.3c0.4-0.3 0.4-0.9 0-1.3zM6 10.5c-2.5 0-4.5-2-4.5-4.5s2-4.5 4.5-4.5 4.5 2 4.5 4.5-2 4.5-4.5 4.5z\"></path></g>\n<g id=\"select\"><path d=\"M15 4h-14c-0.6 0-1 0.4-1 1v6c0 0.6 0.4 1 1 1h14c0.6 0 1-0.4 1-1v-6c0-0.6-0.4-1-1-1zM12 9l-2-2h4l-2 2z\"></path></g>\n<g id=\"server\"><path d=\"M3 5v3h10v-3h-10zM7 7h-3v-1h3v1z\"></path><path d=\"M3 4h10l-2-4h-6z\"></path><path d=\"M3 12h10v-3h-10v3zM11 10h1v1h-1v-1zM9 10h1v1h-1v-1z\"></path><path d=\"M3 16h10v-3h-10v3zM4 14h3v1h-3v-1z\"></path></g>\n<g id=\"share-square\"><path d=\"M11 3h-3.6c0 0-4.4-0.2-4.4 4.3 0 3.5 2 6.7 2 6.7s-0.4-7 2.3-7h3.7v3l5-5-5-5v3z\"></path><path d=\"M14 9v6h-13v-13h9v-1h-10v15h15v-8z\"></path></g>\n<g id=\"share\"><path d=\"M10 3h-5.1c0 0-4.9 0-4.9 5 0 3.9 3 8 3 8s-1.7-7 1.8-7h5.2v3l6-6-6-6v3z\"></path></g>\n<g id=\"shield\"><path d=\"M1 0c0 0 0 3.2 0 7 0 5.6 7 9 7 9s7-3.4 7-9c0-3.8 0-7 0-7h-14zM14 7c0 4.2-4.6 7.1-6 7.9v-13.9h6v6z\"></path></g>\n<g id=\"shift-arrow\"><path d=\"M8 2l-7 7h4v5h6v-5h4zM10 8v5h-4v-5h-2.5l4.5-4.58 4.5 4.58h-2.5z\"></path></g>\n<g id=\"shift\"><path d=\"M0 2v12h16v-12h-16zM6 8v3h-2v-3h-2l3-3 3 3h-2z\"></path></g>\n<g id=\"shop\"><path d=\"M0 15h16v1h-16v-1z\"></path><path d=\"M0 0v6c0.005 0.732 0.401 1.37 0.991 1.715l0.009 6.285h9v-5h3v5h2v-6.28c0.599-0.35 0.995-0.988 1-1.719v-6.001h-16zM4 2h2v4c0 0.552-0.448 1-1 1s-1-0.448-1-1v-4zM2 7c-0.552 0-1-0.448-1-1v-4h2v4c0 0.552-0.448 1-1 1zM8 12h-5v-3h5v3zM9 6c0 0.552-0.448 1-1 1s-1-0.448-1-1v-4h2v4zM12 6c0 0.552-0.448 1-1 1s-1-0.448-1-1v-4h2v4zM15 6c0 0.552-0.448 1-1 1s-1-0.448-1-1v-4h2v4z\"></path></g>\n<g id=\"sign-in-alt\"><path d=\"M0 0h2v16h-2v-16z\"></path><path d=\"M3 10h8v3l5-5-5-5v3h-8z\"></path></g>\n<g id=\"sign-in\"><path d=\"M7 1v2l1 1v-2h7v12h-7v-2l-1 1v2h9v-14z\"></path><path d=\"M10 8l-5-4v2h-5v4h5v2z\"></path></g>\n<g id=\"sign-out-alt\"><path d=\"M14 0h2v16h-2v-16z\"></path><path d=\"M8 6h-8v4h8v3l5-5-5-5z\"></path></g>\n<g id=\"sign-out\"><path d=\"M9 4v-3h-9v14h9v-3h-1v2h-7v-12h7v2z\"></path><path d=\"M16 8l-5-4v2h-5v4h5v2z\"></path></g>\n<g id=\"signal\"><path d=\"M6.9 13.2l1.1 1.1 1.1-1.1c-0.3-0.3-0.7-0.5-1.1-0.5s-0.9 0.2-1.1 0.5z\"></path><path d=\"M8 4.6c2.7 0 5.1 1.1 6.9 2.8l1.1-1.1c-2-2-4.9-3.3-8-3.3s-6 1.3-8 3.3l1.1 1.1c1.8-1.7 4.2-2.8 6.9-2.8z\"></path><path d=\"M2.3 8.6l1.1 1.1c1.2-1.1 2.8-1.8 4.6-1.8s3.4 0.7 4.6 1.9l1.1-1.1c-1.4-1.6-3.5-2.5-5.7-2.5s-4.3 0.9-5.7 2.4z\"></path><path d=\"M4.6 10.9l1.1 1.1c0.6-0.6 1.4-0.9 2.3-0.9s1.7 0.4 2.3 0.9l1.1-1.1c-0.8-0.9-2.1-1.4-3.4-1.4s-2.6 0.5-3.4 1.4z\"></path></g>\n<g id=\"sitemap\"><path d=\"M14.5 12v-4.5h-6v-3.5h1.5v-4h-4v4h1.5v3.5h-6v4.5h-1.5v4h4v-4h-1.5v-3.5h5v3.5h-1.5v4h4v-4h-1.5v-3.5h5v3.5h-1.5v4h4v-4z\"></path></g>\n<g id=\"slider\"><path d=\"M16 6h-3.6c-0.7-1.2-2-2-3.4-2s-2.8 0.8-3.4 2h-5.6v4h5.6c0.7 1.2 2 2 3.4 2s2.8-0.8 3.4-2h3.6v-4zM1 9v-2h4.1c0 0.3-0.1 0.7-0.1 1s0.1 0.7 0.1 1h-4.1zM9 11c-1.7 0-3-1.3-3-3s1.3-3 3-3 3 1.3 3 3c0 1.7-1.3 3-3 3z\"></path></g>\n<g id=\"sliders\"><path d=\"M7 0h2v3h-2v-3z\"></path><path d=\"M6 4v3h1v9h2v-9h1v-3z\"></path><path d=\"M2 0h2v8h-2v-8z\"></path><path d=\"M1 9v3h1v4h2v-4h1v-3z\"></path><path d=\"M12 0h2v10h-2v-10z\"></path><path d=\"M11 11v3h1v2h2v-2h1v-3z\"></path></g>\n<g id=\"smiley-o\"><path d=\"M8 1c3.9 0 7 3.1 7 7s-3.1 7-7 7-7-3.1-7-7 3.1-7 7-7zM8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8v0z\"></path><path d=\"M8 13.2c-2 0-3.8-1.2-4.6-3.1l0.9-0.4c0.6 1.5 2.1 2.4 3.7 2.4s3.1-1 3.7-2.4l0.9 0.4c-0.8 2-2.6 3.1-4.6 3.1z\"></path><path d=\"M7 6c0 0.552-0.448 1-1 1s-1-0.448-1-1c0-0.552 0.448-1 1-1s1 0.448 1 1z\"></path><path d=\"M11 6c0 0.552-0.448 1-1 1s-1-0.448-1-1c0-0.552 0.448-1 1-1s1 0.448 1 1z\"></path></g>\n<g id=\"sort\"><path d=\"M11 7h-6l3-4z\"></path><path d=\"M5 9h6l-3 4z\"></path></g>\n<g id=\"sound-disable\"><path d=\"M4 5h-4v6h4l5 4v-14z\"></path><path d=\"M15.9 5.6l-0.8-0.7-2.3 2.4-2.4-2.4-0.8 0.7 2.4 2.4-2.4 2.4 0.8 0.7 2.4-2.4 2.3 2.4 0.8-0.7-2.4-2.4z\"></path></g>\n<g id=\"spark-line\"><path d=\"M14 6c-1.105 0-2 0.895-2 2 0 0.060 0 0.11 0 0.16l-0.81 0.25-2.3-3.48-1.73 4.32-1.16-5.81-2.3 4.78-1.64-1.31-2.060 1.090v1.080l1.94-1 2.11 1.7 1.56-3.22 1.23 6.19 2.27-5.68 1.68 2.52 1.55-0.48c0.364 0.54 0.973 0.89 1.664 0.89 1.105 0 2-0.895 2-2s-0.895-2-2-2c-0.001 0-0.003 0-0.004 0zM14 9c-0.552 0-1-0.448-1-1s0.448-1 1-1c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path></g>\n<g id=\"specialist\"><path d=\"M4.1 8c0.2 0.6 0.3 1.1 0.3 1.1 0.8 1.3 1.8 1.1 1.8 1.8 0 0.3-0.2 0.6-0.5 0.7l2.3 1.8 2.3-1.7c-0.3-0.2-0.5-0.4-0.5-0.7 0-0.8 1-0.5 1.8-1.8 0 0 0.2-0.4 0.3-1.1v0c0.3-1.1 0.6-3.1 0.5-4.1h-1.5c0-0.3 0.1-0.6 0.1-1h1.1c-0.3-1.4-1-2-2.2-2.3-0.5-0.4-1.2-0.7-1.9-0.7s-1.4 0.3-1.9 0.7c-1.2 0.3-1.8 0.9-2.2 2.3h1.1c0 0.4 0.1 0.7 0.2 1h-1.6c-0.1 1 0.2 3 0.5 4v0zM11.2 8.5c-0.1 0.1-0.2 0.2-0.3 0.3l-0.5 0.6c-0.4 0.5-0.8 0.8-1.4 0.9l-0.4 0.1c-0.4 0.1-0.9 0.1-1.4 0l-0.4-0.1c-0.6-0.2-1.1-0.5-1.5-1.1l-0.2-0.4c-0.1-0.1-0.2-0.2-0.3-0.3l-0.7-0.5 3.1-0.9c0.5-0.1 1-0.2 1.5 0l3.2 0.9-0.7 0.5zM6 3c0-1.1 0.9-2 2-2s2 0.9 2 2c0 1.1-0.9 2-2 2s-2-0.9-2-2z\"></path><path d=\"M15.5 14.2c-1.3-2.4-2.6-2-3.9-2.2 0 0 0 0-0.1 0l-3.5 2.6-3.5-2.6c0 0 0 0-0.1 0-1.4 0.1-2.6-0.2-3.9 2.2-0.2 0.4-0.4 1.1-0.5 1.8h16c-0.1-0.7-0.3-1.4-0.5-1.8z\"></path></g>\n<g id=\"spinner-arc\"><path d=\"M15 8c0 3.9-3.1 7-7 7s-7-3-7-7h-1c0 4 3.6 8 8 8s8-3.6 8-8h-1z\"></path></g>\n<g id=\"spinner-third\"><path d=\"M12.9 3.1c1.3 1.2 2.1 3 2.1 4.9 0 3.9-3.1 7-7 7s-7-3.1-7-7c0-1.9 0.8-3.7 2.1-4.9l-0.8-0.8c-1.4 1.5-2.3 3.5-2.3 5.7 0 4.4 3.6 8 8 8s8-3.6 8-8c0-2.2-0.9-4.2-2.3-5.7l-0.8 0.8z\"></path></g>\n<g id=\"spinner\"><path d=\"M9.9 0.2l-0.2 1c3 0.8 5.3 3.5 5.3 6.8 0 3.9-3.1 7-7 7s-7-3.1-7-7c0-3.3 2.3-6 5.3-6.8l-0.2-1c-3.5 0.9-6.1 4.1-6.1 7.8 0 4.4 3.6 8 8 8s8-3.6 8-8c0-3.7-2.6-6.9-6.1-7.8z\"></path></g>\n<g id=\"spline-area-chart\"><path d=\"M1 15v-15h-1v16h16v-1h-15z\"></path><path d=\"M10 7c-2 0-2.080-1-4-1-2.34 0-4 3-4 3v5h14v-12c-2 0-3.86 5-6 5z\"></path></g>\n<g id=\"spline-chart\"><path d=\"M1 15v-15h-1v16h16v-1h-15z\"></path><path d=\"M12 5c-0.69 1-1.41 2-2 2-0.026 0.001-0.056 0.001-0.087 0.001-0.601 0-1.164-0.16-1.65-0.44-0.623-0.35-1.387-0.562-2.2-0.562-0.022 0-0.045 0-0.067 0-1.6 0.116-3.009 0.864-3.991 1.993l-0.006 2.347c0.77-1.12 2.32-2.84 4-2.84 0.014-0 0.031-0 0.048-0 0.579 0 1.121 0.156 1.587 0.428 0.643 0.358 1.429 0.573 2.264 0.573 0.035 0 0.071-0 0.106-0.001 1.395 0 2.335-1.32 3.245-2.6s1.75-2.4 2.75-2.4v-1.5c-1.81 0-3 1.61-4 3z\"></path></g>\n<g id=\"split-h\"><path d=\"M0 1v14h16v-14h-16zM1 4h6.5v10h-6.5v-10zM15 14h-6.5v-10h6.5v10zM15 3h-1v-1h1v1z\"></path></g>\n<g id=\"split-v\"><path d=\"M0 1v14h16v-14h-16zM14 2h1v1h-1v-1zM15 4v4.5h-14v-4.5h14zM1 14v-4.5h14v4.5h-14z\"></path></g>\n<g id=\"split\"><path d=\"M0 11h6v5h-6v-5z\"></path><path d=\"M11 10v-2l-0.64 0.64c-0.851-0.81-1.38-1.952-1.38-3.217 0-0.149 0.007-0.296 0.022-0.441l1.999 0.018v-5h-6v5h2c0.013 0.127 0.020 0.274 0.020 0.423 0 1.265-0.529 2.407-1.378 3.216l-0.642-0.638v2h2l-0.65-0.65c1.028-0.991 1.667-2.38 1.667-3.919 0-0.152-0.006-0.302-0.018-0.45-0.010 0.149-0.016 0.299-0.016 0.45 0 1.539 0.639 2.928 1.665 3.917l-0.648 0.652h2z\"></path><path d=\"M10 11h6v5h-6v-5z\"></path></g>\n<g id=\"spoon\"><path d=\"M10.5 4.8c0-1.8-0.9-4.8-3-4.8s-3 3-3 4.8c0 1.5 0.8 2.8 2.2 3.1-0.5 1.6-0.7 4.6-0.7 4.6v2c0 0.8 0.7 1.5 1.5 1.5s1.5-0.7 1.5-1.5v-2c0-0.6-0.2-3.2-0.7-4.6 1.4-0.3 2.2-1.6 2.2-3.1z\"></path></g>\n<g id=\"square-shadow\"><path d=\"M14 2v-2h-14v14h2v2h14v-14h-2zM13 13h-12v-12h12v12z\"></path></g>\n<g id=\"star-half-left-o\"><path d=\"M15.9 6.2l-5.5-0.8-2.4-5-2.4 5-5.5 0.8 3.9 3.8-0.9 5.4 4.9-2.5 4.9 2.6-0.9-5.5 3.9-3.8zM8 11.8v-9.1l1.8 3.6 4 0.6-2.9 2.8 0.7 4-3.6-1.9z\"></path></g>\n<g id=\"star-half-left\"><path d=\"M5.6 5.4l-5.5 0.8 3.9 3.8-0.9 5.5 4.9-2.6v-12.5z\"></path></g>\n<g id=\"star-half-right-o\"><path d=\"M15.9 6.2l-5.5-0.8-2.4-5-2.4 5-5.5 0.8 3.9 3.8-0.9 5.4 4.9-2.5 4.9 2.6-0.9-5.5 3.9-3.8zM4.4 13.7l0.7-4-2.9-2.8 4-0.6 1.8-3.6v9.1l-3.6 1.9z\"></path></g>\n<g id=\"star-half-right\"><path d=\"M10.5 5.4l5.5 0.8-4 3.8 0.9 5.5-4.9-2.6v-12.5z\"></path></g>\n<g id=\"star-o\"><path d=\"M15.9 6.2l-5.5-0.8-2.4-5-2.4 5-5.5 0.8 3.9 3.8-0.9 5.4 4.9-2.5 4.9 2.6-0.9-5.5 3.9-3.8zM8 11.8l-3.6 1.9 0.7-4-2.9-2.8 4-0.6 1.8-3.6 1.8 3.6 4 0.6-2.9 2.8 0.7 4-3.6-1.9z\"></path></g>\n<g id=\"star\"><path d=\"M12.9 15.4l-4.9-2.6-4.9 2.6 0.9-5.4-4-3.9 5.5-0.8 2.4-5 2.4 5 5.5 0.8-3.8 3.9 0.9 5.4z\"></path></g>\n<g id=\"start-cog\"><path d=\"M4 0v6h1.7l0.2 0.7 0.2 0.6c0 0 0.1 0 0.1 0l1.2-0.6 1.8 1.8-0.6 1.2c0 0 0 0.1 0 0.1l0.6 0.2 0.7 0.2v0.2l6.1-3.4-12-7z\"></path><path d=\"M4.5 10.5c-0.2 0-0.4 0.1-0.5 0.2-0.3 0.2-0.5 0.5-0.5 0.8s0.2 0.7 0.5 0.8c0.1 0.1 0.3 0.2 0.5 0.2 0.6 0 1-0.4 1-1s-0.4-1-1-1z\"></path><path d=\"M9 12v-1l-1.1-0.4c-0.1-0.3-0.2-0.6-0.4-0.9l0.5-1-0.7-0.7-1 0.5c-0.3-0.2-0.6-0.3-0.9-0.4l-0.4-1.1h-1l-0.4 1.1c-0.3 0.1-0.6 0.2-0.9 0.4l-1-0.5-0.7 0.7 0.5 1.1c-0.2 0.3-0.3 0.6-0.4 0.9l-1.1 0.3v1l1.1 0.4c0.1 0.3 0.2 0.6 0.4 0.9l-0.5 1 0.7 0.7 1.1-0.5c0.3 0.2 0.6 0.3 0.9 0.4l0.3 1.1h1l0.4-1.1c0.3-0.1 0.6-0.2 0.9-0.4l1 0.5 0.7-0.7-0.5-1.1c0.2-0.3 0.3-0.6 0.4-0.9l1.1-0.3zM4.5 13.5c-1.1 0-2-0.9-2-2s0.9-2 2-2 2 0.9 2 2c0 1.1-0.9 2-2 2z\"></path></g>\n<g id=\"step-backward\"><path d=\"M14 15v-14l-10 7z\"></path><path d=\"M2 1h2v14h-2v-14z\"></path></g>\n<g id=\"step-forward\"><path d=\"M2 1v14l10-7z\"></path><path d=\"M12 1h2v14h-2v-14z\"></path></g>\n<g id=\"stethoscope\"><path d=\"M5.7 15.2c0.3 0.3 1 0.8 1.8 0.8 2.7 0 3.3-2 3.4-3.6 0.2-2.3 0.8-2.2 1.1-2.2 0.7 0 0.9 0.4 0.9 1.1-0.6 0.4-1 1-1 1.7 0 1.1 0.9 2 2 2s2-0.9 2-2-0.9-2-2-2c-0.1 0-0.1 0-0.2 0-0.2-0.9-0.7-1.8-1.8-1.8-1.6 0-2 1.4-2.1 2.9-0.1 2.1-0.8 2.9-2.3 2.9-0.4 0-0.8-0.2-1-0.4-0.6-0.5-0.5-2.3-0.5-2.3 2 0 4-1.8 4.7-4.8l-0.2-0.1c0.3-1.2 0.5-2.6 0.5-3.6 0-1.1-0.3-1.9-1-2.5s-1.5-0.8-2.1-0.8c-0.2-0.3-0.5-0.5-0.9-0.5-0.5 0-1 0.4-1 1s0.4 1 1 1c0.4 0 0.7-0.2 0.8-0.5 0.5 0 1 0.2 1.5 0.6s0.7 0.9 0.7 1.7c0 0.9-0.2 2.2-0.5 3.5l-0.2-0.1c-0.3 1.1-1.3 3.6-3.3 3.6h-1c-2 0-3-2.5-3.3-3.6l-0.2 0.1c-0.3-1.3-0.5-2.6-0.5-3.5 0-0.8 0.2-1.3 0.7-1.7 0.4-0.4 1-0.5 1.5-0.6 0.1 0.3 0.4 0.5 0.8 0.5 0.6 0 1-0.4 1-1s-0.4-1-1-1c-0.4 0-0.7 0.2-0.9 0.5-0.6 0-1.4 0.2-2.1 0.8s-1 1.4-1 2.5c0 1 0.2 2.4 0.5 3.7l-0.2 0.1c0.7 2.9 2.7 4.7 4.7 4.7 0 0-0.1 2.2 0.7 2.9zM14 14c-0.6 0-1-0.4-1-1s0.4-1 1-1 1 0.4 1 1-0.5 1-1 1z\"></path></g>\n<g id=\"stock\"><path d=\"M12 6v-6h-8v6h-4v7h16v-7h-4zM7 12h-6v-5h2v1h2v-1h2v5zM5 6v-5h2v1h2v-1h2v5h-6zM15 12h-6v-5h2v1h2v-1h2v5z\"></path><path d=\"M0 16h3v-1h10v1h3v-2h-16v2z\"></path></g>\n<g id=\"stop-cog\"><path d=\"M1 0v7.2l0.5-0.5 1.2 0.6c0 0 0.1 0 0.1 0l0.2-0.6 0.3-0.7h2.4l0.2 0.7 0.2 0.6c0 0 0.1 0 0.1 0l1.2-0.6 1.8 1.8-0.6 1.2c0 0 0 0.1 0 0.1l0.6 0.2 0.7 0.2v2.4l-0.7 0.2-0.6 0.2c0 0 0 0.1 0 0.1l0.6 1.2-0.4 0.7h7.2v-15h-15z\"></path><path d=\"M5.5 11.5c0 0.552-0.448 1-1 1s-1-0.448-1-1c0-0.552 0.448-1 1-1s1 0.448 1 1z\"></path><path d=\"M7.9 12.4l1.1-0.4v-1l-1.1-0.4c-0.1-0.3-0.2-0.6-0.4-0.9l0.5-1-0.7-0.7-1 0.5c-0.3-0.2-0.6-0.3-0.9-0.4l-0.4-1.1h-1l-0.4 1.1c-0.3 0.1-0.6 0.2-0.9 0.4l-1-0.5-0.7 0.7 0.5 1.1c-0.2 0.3-0.3 0.6-0.4 0.9l-1.1 0.3v1l1.1 0.4c0.1 0.3 0.2 0.6 0.4 0.9l-0.5 1 0.7 0.7 1.1-0.5c0.3 0.2 0.6 0.3 0.9 0.4l0.3 1.1h1l0.4-1.1c0.3-0.1 0.6-0.2 0.9-0.4l1 0.5 0.7-0.7-0.5-1.1c0.2-0.2 0.3-0.5 0.4-0.8zM4.5 13.5c-1.1 0-2-0.9-2-2s0.9-2 2-2 2 0.9 2 2c0 1.1-0.9 2-2 2z\"></path></g>\n<g id=\"stop\"><path d=\"M1 1h14v14h-14v-14z\"></path></g>\n<g id=\"stopwatch\"><path d=\"M8.5 8.14v-3.64h-1v3.64c-0.301 0.176-0.5 0.498-0.5 0.866 0 0.552 0.448 1 1 1s1-0.448 1-1c0-0.368-0.199-0.69-0.495-0.863z\"></path><path d=\"M8 2c-3.866 0-7 3.134-7 7s3.134 7 7 7c3.866 0 7-3.134 7-7s-3.134-7-7-7zM8 14.5c-3.038 0-5.5-2.462-5.5-5.5s2.462-5.5 5.5-5.5c3.038 0 5.5 2.462 5.5 5.5-0.006 3.035-2.465 5.494-5.499 5.5z\"></path><path d=\"M6 0h4v1.5h-4v-1.5z\"></path><path d=\"M0.005 4.438l2.713-2.939 1.102 1.017-2.713 2.939-1.102-1.017z\"></path><path d=\"M12.186 2.519l1.102-1.017 2.713 2.939-1.102 1.017-2.713-2.939z\"></path></g>\n<g id=\"storage\"><path d=\"M16 4l-8.060-4-7.94 4v1h1v11h2v-9h10v9h2v-11h1v-1zM4 6v-1h2v1h-2zM7 6v-1h2v1h-2zM10 6v-1h2v1h-2z\"></path><path d=\"M6 9h-1v-1h-1v3h3v-3h-1v1z\"></path><path d=\"M6 13h-1v-1h-1v3h3v-3h-1v1z\"></path><path d=\"M10 13h-1v-1h-1v3h3v-3h-1v1z\"></path></g>\n<g id=\"strikethrough\"><path d=\"M10.5 7c-0.5-0.3-1-0.5-1.4-0.7-2-0.9-2.1-1.1-2-1.9s0.4-1 0.6-1.2c0.9-0.5 2.8-0.1 3.5 0.2l1.1-2.8c-0.4-0.2-3.7-1.4-6.1 0-0.8 0.5-1.9 1.5-2.1 3.4-0.2 1.3 0.1 2.3 0.7 3h-4.8v1h16v-1h-5.5z\"></path><path d=\"M7.7 9c0 0 0.1 0 0.1 0.1 2 0.9 2.4 1.2 2.2 2.5-0.2 0.9-0.5 1.1-0.8 1.3-1.1 0.6-3.3 0-4.4-0.5l-1.2 2.6c0.3 0.1 2.3 1 4.5 1 0.9 0 1.8-0.2 2.6-0.6 0.9-0.5 2-1.4 2.4-3.4 0.2-1.3 0-2.3-0.4-3.1h-5z\"></path></g>\n<g id=\"subscript\"><path d=\"M16 15v1h-4v-1c0 0 3.3-1.6 2.6-3.2-0.5-1.1-2-0.2-2-0.2l-0.5-0.9c0 0 1.9-1.4 3.1-0.2 2.4 2.3-1.4 4.5-1.4 4.5h2.2z\"></path><path d=\"M12 3h-3.4l-2.6 3-2.6-3h-3.4l4.3 5-4.3 5h3.4l2.6-3 2.6 3h3.4l-4.3-5z\"></path></g>\n<g id=\"suitcase\"><path d=\"M11 3v-2h-6v2h-5v12h16v-12h-5zM4 14h-1v-10h1v10zM10 3h-4v-1h4v1zM13 14h-1v-10h1v10z\"></path></g>\n<g id=\"sun-down\"><path d=\"M10 3h-1v-2h-2v2h-1l2 3 2-3z\"></path><path d=\"M14 13l-1.58-1.18 0.78-1.82-2-0.23-0.2-1.97-1.82 0.78-1.18-1.58-1.18 1.58-1.82-0.78-0.23 2-1.97 0.2 0.78 1.82-1.58 1.18h-2v1h16v-1h-2zM4 13c0.075-2.178 1.822-3.925 3.993-4 2.185 0.075 3.932 1.821 4.007 3.993l-8 0.007z\"></path></g>\n<g id=\"sun-o\"><path d=\"M16 8l-2.2-1.6 1.1-2.4-2.7-0.2-0.2-2.7-2.4 1.1-1.6-2.2-1.6 2.2-2.4-1.1-0.2 2.7-2.7 0.2 1.1 2.4-2.2 1.6 2.2 1.6-1.1 2.4 2.7 0.2 0.2 2.7 2.4-1.1 1.6 2.2 1.6-2.2 2.4 1.1 0.2-2.7 2.7-0.2-1.1-2.4 2.2-1.6zM8 13c-2.8 0-5-2.2-5-5s2.2-5 5-5 5 2.2 5 5-2.2 5-5 5z\"></path></g>\n<g id=\"sun-rise\"><path d=\"M6 4h1v2h2v-2h1l-2-3-2 3z\"></path><path d=\"M12.42 11.82l0.78-1.82-2-0.23-0.2-1.97-1.82 0.78-1.18-1.58-1.18 1.58-1.82-0.78-0.23 2-1.97 0.2 0.78 1.82-1.58 1.18h-2v1h16v-1h-2zM4 13c0.075-2.178 1.822-3.925 3.993-4 2.185 0.075 3.932 1.821 4.007 3.993l-8 0.007z\"></path></g>\n<g id=\"superscript\"><path d=\"M16 5v1h-4v-1c0 0 3.3-1.6 2.6-3.2-0.5-1.1-2-0.2-2-0.2l-0.5-0.9c0 0 1.9-1.4 3.1-0.2 2.4 2.3-1.4 4.5-1.4 4.5h2.2z\"></path><path d=\"M12 3h-3.4l-2.6 3-2.6-3h-3.4l4.3 5-4.3 5h3.4l2.6-3 2.6 3h3.4l-4.3-5z\"></path></g>\n<g id=\"sword\"><path d=\"M15.8 0.5l-0.1-0.2-0.2-0.1c-0.1 0-2.5-0.8-4.2 0.9l-6.7 6.6c-0.9-0.6-1.7-1.2-1.8-1l-0.4 0.3c-0.2 0.2 0.9 1.7 1.8 2.7l-2.5 3.4c-0.3-0.3-0.8-0.3-1.1 0l-0.3 0.3c-0.3 0.3-0.3 0.8 0 1.1l1 1c0.3 0.3 0.8 0.3 1.1 0l0.3-0.3c0.3-0.3 0.3-0.8 0-1.1v0l3.5-2.5c1 0.9 2.5 2 2.7 1.8l0.4-0.4c0.1-0.1-0.4-1-1.1-1.8l6.7-6.7c1.7-1.5 0.9-3.9 0.9-4zM7.7 10.5l-0.8-0.8 6.2-6.9-6.9 6.2-0.7-0.7 6.5-6.5c1-1 2.3-0.8 2.9-0.7 0.1 0.6 0.3 1.9-0.7 2.8l-6.5 6.6z\"></path></g>\n<g id=\"tab-a\"><path d=\"M9 10h-9v-4h9v-2l5 4-5 4v-2z\"></path><path d=\"M14 4h2v8h-2v-8z\"></path></g>\n<g id=\"tab\"><path d=\"M0 2v12h16v-12h-16zM13 11h-1v-3l-3 3v-2h-6v-2h6v-2l3 3v-3h1v6z\"></path></g>\n<g id=\"table\"><path d=\"M0 1v15h16v-15h-16zM5 15h-4v-2h4v2zM5 12h-4v-2h4v2zM5 9h-4v-2h4v2zM5 6h-4v-2h4v2zM10 15h-4v-2h4v2zM10 12h-4v-2h4v2zM10 9h-4v-2h4v2zM10 6h-4v-2h4v2zM15 15h-4v-2h4v2zM15 12h-4v-2h4v2zM15 9h-4v-2h4v2zM15 6h-4v-2h4v2z\"></path></g>\n<g id=\"tablet\"><path d=\"M0 2v12h16v-12h-16zM13 13h-11v-10h11v10zM15 9h-1v-2h1v2z\"></path></g>\n<g id=\"tabs\"><path d=\"M14 4v-2h-14v12h16v-10h-2zM10 3h3v1h-3v-1zM6 3h3v1h-3v-1zM15 13h-14v-10h4v2h10v8z\"></path></g>\n<g id=\"tag\"><path d=\"M8 1h-7v7l7 7 7-7zM3.75 5c-0.69 0-1.25-0.56-1.25-1.25s0.56-1.25 1.25-1.25c0.69 0 1.25 0.56 1.25 1.25s-0.56 1.25-1.25 1.25z\"></path></g>\n<g id=\"tags\"><path d=\"M9 2h-1.5l7 7-5.3 5.2 0.8 0.8 6-6z\"></path><path d=\"M6 2h-6v6l7 7 6-6-7-7zM2.8 6c-0.7 0-1.3-0.6-1.3-1.2s0.6-1.2 1.2-1.2 1.3 0.5 1.3 1.2-0.6 1.2-1.2 1.2z\"></path></g>\n<g id=\"tasks\"><path d=\"M6 0h10v4h-10v-4z\"></path><path d=\"M6 6h10v4h-10v-4z\"></path><path d=\"M6 12h10v4h-10v-4z\"></path><path d=\"M3 1v2h-2v-2h2zM4 0h-4v4h4v-4z\"></path><path d=\"M3 13v2h-2v-2h2zM4 12h-4v4h4v-4z\"></path><path d=\"M5.3 5.9l-0.6-0.8-0.9 0.9h-3.8v4h4v-2.8l1.3-1.3zM2.7 7l-0.7 0.7-0.8-0.7h1.5zM1 8.2l0.9 0.8h-0.9v-0.8zM3 9h-0.9l0.9-0.9v0.9z\"></path></g>\n<g id=\"taxi\"><path d=\"M15 6.1l-1.4-2.9c-0.4-0.7-1.1-1.2-2-1.2h-0.6v-1.3c0-0.4-0.3-0.7-0.7-0.7h-4.6c-0.4 0-0.7 0.3-0.7 0.7v1.3h-0.7c-0.8 0-1.6 0.5-1.9 1.2l-1.4 2.9c-0.6 0.1-1 0.6-1 1.1v3.5c0 0.6 0 1.1 1 1.2v2c0 0.6 0.4 1.1 1 1.1h0.9c0.6 0 1.1-0.5 1.1-1.1v-1.9h8v1.9c0 0.6 0.4 1.1 1 1.1h0.9c0.6 0 1.1-0.5 1.1-1.1v-2c1-0.1 1-0.6 1-1.2v-3.5c0-0.5-0.4-1-1-1.1zM4 8.4c0 0.3-0.3 0.6-0.6 0.6h-1.8c-0.3 0-0.6-0.3-0.6-0.6v-0.8c0-0.3 0.3-0.6 0.6-0.6h1.8c0.3 0 0.6 0.3 0.6 0.6v0.8zM10 11h-4v-1h4v1zM2.1 6l1.2-2.4c0.2-0.4 0.6-0.6 1-0.6h7.4c0.4 0 0.8 0.2 1 0.6l1.2 2.4h-11.8zM15 8.4c0 0.3-0.3 0.6-0.6 0.6h-1.8c-0.3 0-0.6-0.3-0.6-0.6v-0.8c0-0.3 0.3-0.6 0.6-0.6h1.8c0.3 0 0.6 0.3 0.6 0.6v0.8z\"></path></g>\n<g id=\"teeth\"><path d=\"M4.6 7.6c-0.1 0.1-0.5 0.4-1.6 0.4 1.1 0 1.5 0.3 1.6 0.4 0.2-0.2 0.6-0.4 1.5-0.4-0.9 0-1.3-0.2-1.5-0.4z\"></path><path d=\"M8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8c4.4 0 8-3.6 8-8s-3.6-8-8-8zM13.1 11.6c-1 0-1.4-0.8-1.6-1.6-0.2 0.9-0.6 2-1.8 2-1.1 0-1.5-1.1-1.7-2-0.2 1-0.6 2-1.7 2s-1.6-1.1-1.8-2c-0.2 0.8-0.6 1.6-1.6 1.6-2 0-1.9-3-1.9-3s0.2-0.6 1.7-0.6c-1.5 0-1.7-0.5-1.7-0.5s-0.1-3 1.9-3c1 0 1.4 0.8 1.6 1.6 0.2-0.9 0.6-2 1.8-2 1.1-0.1 1.5 1 1.7 1.9 0.2-1 0.6-2 1.7-2s1.6 1.1 1.8 2c0.2-0.8 0.6-1.6 1.6-1.6 2 0 1.9 3 1.9 3s-0.3 0.6-1.8 0.6c-1.2 0-1.6-0.3-1.8-0.4-0.2 0.2-0.7 0.4-1.6 0.4-1.2 0-1.6-0.2-1.8-0.4-0.1 0.1-0.6 0.4-1.6 0.4 1 0 1.4 0.3 1.6 0.4 0.2-0.2 0.6-0.4 1.8-0.4 1 0 1.4 0.2 1.7 0.4 0-0.1 0.5-0.4 1.7-0.4 1.5 0 1.8 0.6 1.8 0.6s0.1 3-1.9 3z\"></path></g>\n<g id=\"terminal\"><path d=\"M6 12h9v1h-9v-1z\"></path><path d=\"M1.1 13h1.2l3.7-5-3.7-5h-1.3l3.8 5z\"></path></g>\n<g id=\"text-height\"><path d=\"M15 3h1l-1.5-3-1.5 3h1v10h-1l1.5 3 1.5-3h-1z\"></path><path d=\"M1 0v3h4v13h3v-13h4v-3z\"></path></g>\n<g id=\"text-input\"><path d=\"M2 2h1v4h-1v-4z\"></path><path d=\"M1 0c-0.6 0-1 0.4-1 1v14c0 0.6 0.4 1 1 1h15v-16h-15zM13 15h-12v-14h12v14zM15 15v0h-1v-1h1v1zM15 13h-1v-10h1v10zM15 2h-1v-1h1v1z\"></path></g>\n<g id=\"text-label\"><path d=\"M12.5 4.9c-1.4 0-2.5 0.8-2.6 0.9l1.2 1.6c0 0 0.7-0.5 1.4-0.5 1.4 0 1.5 1.2 1.5 1.6-0.4-0.1-1.1-0.3-2-0.1-1.4 0.3-2.8 2-2.1 3.9 0.7 1.8 3.1 2.1 4.1 0.6v1h2v-5.3c0-2.7-1.9-3.7-3.5-3.7zM11.5 11.4c-0.1-1.9 1.5-1.9 2.5-1.8v1c0 1.2-2.3 2.3-2.5 0.8z\"></path><path d=\"M6.9 14h2.1l-3.2-12h-2.7l-3.1 12h2.1l1-4h2.7l1.1 4zM3.6 8l0.8-3.2 0.9 3.2h-1.7z\"></path></g>\n<g id=\"text-width\"><path d=\"M15 14.5l-3-1.5v1h-9v-1l-3 1.5 3 1.5v-1h9v1z\"></path><path d=\"M0 0v3h6v9h3v-9h6v-3z\"></path></g>\n<g id=\"thin-square\"><path d=\"M15 1h-14v14h14v-14zM14 14h-12v-12h12v12z\"></path></g>\n<g id=\"thumbs-down-o\"><path d=\"M15.6 7.3c0.1-0.3 0.3-0.7 0.2-1.2 0-0.6-0.3-1.1-0.5-1.3 0.1-0.3 0.1-0.6 0-1.1s-0.4-0.8-0.6-1c0.1-0.3 0.1-0.8-0.3-1.4-0.4-1-1.2-1.3-3.6-1.3-1.7 0-3.3 0.8-4.6 1.5-0.4 0.2-1 0.5-1.2 0.5v0h-5v9h5v-0.9l2.7 2.7 1 2.8c0.2 0.2 0.4 0.4 0.8 0.4h0.1c0 0 0 0 0 0 0.5 0 2-0.1 2.4-1.9 0.2-0.9-0.1-2.2-0.5-3.1h2.3c0.7-0.1 2.1-0.6 2.2-2.1 0-0.7-0.2-1.3-0.4-1.6zM2.5 7.5c0.6 0 1 0.4 1 1s-0.4 1-1 1-1-0.4-1-1c0-0.6 0.4-1 1-1zM13.8 10h-2.5c-0.3 0-0.5 0.1-0.7 0.4-0.2 0.2-0.2 0.5-0.1 0.8 0.5 1.2 0.7 2.2 0.6 2.8-0.2 0.9-0.9 1.1-1.4 1.1l-1-2.7c0-0.1-0.1-0.2-0.2-0.3l-2.9-2.9c-0.1-0.1-0.3-0.2-0.5-0.2h-0.1v-6c0.4 0 0.8-0.2 1.7-0.6 1.1-0.6 2.7-1.4 4.1-1.4 2.5 0 2.7 0.4 2.9 0.7 0.3 0.5 0.1 0.9 0.1 0.9l-0.2 0.4 0.4 0.3c0 0 0.4 0.2 0.5 0.7 0.1 0.4 0 0.7 0 0.7l-0.3 0.3 0.3 0.3c0 0 0.4 0.3 0.4 0.9 0 0.5-0.2 0.7-0.2 0.7l-0.4 0.3 0.4 0.4c0 0 0.4 0.4 0.3 1.2 0 1.1-1.1 1.2-1.2 1.2z\"></path></g>\n<g id=\"thumbs-down\"><path d=\"M15.6 7.8c0 0 0.5 0.5 0.4 1.6 0 1.5-1.6 1.6-1.6 1.6h-2.4c-0.2 0-0.3 0.2-0.3 0.4 0.3 0.7 0.8 2.1 0.6 3.1-0.3 1.4-1.5 1.5-1.9 1.5-0.1 0-0.2-0.1-0.2-0.2l-1-2.8c0 0 0-0.1-0.1-0.1l-2.6-2.8c-0.1-0.1-0.2-0.1-0.3-0.1h-0.2v-7h0.2c0.7 0 3.2-2 5.4-2s2.7 0.3 3.1 1c0.4 0.7 0.1 1.3 0.1 1.3s0.5 0.3 0.6 1c0.1 0.7-0.1 1.1-0.1 1.1s0.5 0.4 0.5 1.2c0.1 0.9-0.2 1.2-0.2 1.2z\"></path><path d=\"M0 11h5v-8h-5v8zM2.5 7.5c0.6 0 1 0.4 1 1s-0.4 1-1 1-1-0.4-1-1c0-0.6 0.4-1 1-1z\"></path></g>\n<g id=\"thumbs-up-o\"><path d=\"M16 7.1c0-1.5-1.4-2.1-2.2-2.1h-2.2c0.4-1 0.7-2.2 0.5-3.1-0.5-1.8-2-1.9-2.5-1.9h-0.1c-0.4 0-0.6 0.2-0.8 0.5l-1 2.8-2.7 2.7h-5v9h5v-1c0.2 0 0.7 0.3 1.2 0.6 1.2 0.6 2.9 1.5 4.5 1.5 2.4 0 3.2-0.3 3.8-1.3 0.3-0.6 0.3-1.1 0.3-1.4 0.2-0.2 0.5-0.5 0.6-1s0.1-0.8 0-1.1c0.2-0.3 0.4-0.7 0.5-1.3 0-0.5-0.1-0.9-0.2-1.2 0.1-0.4 0.3-0.9 0.3-1.7zM2.5 13.5c-0.6 0-1-0.4-1-1s0.4-1 1-1 1 0.4 1 1c0 0.6-0.4 1-1 1zM14.7 9.1c0 0 0.2 0.2 0.2 0.7 0 0.6-0.4 0.9-0.4 0.9l-0.3 0.3 0.2 0.3c0 0 0.2 0.3 0 0.7-0.1 0.4-0.5 0.7-0.5 0.7l-0.3 0.3 0.2 0.4c0 0 0.2 0.4-0.1 0.9-0.2 0.4-0.4 0.7-2.9 0.7-1.4 0-3-0.8-4.1-1.4-0.8-0.4-1.3-0.6-1.7-0.6v0-6h0.1c0.2 0 0.4-0.1 0.6-0.2l2.8-2.8c0.1-0.1 0.1-0.2 0.2-0.3l1-2.7c0.5 0 1.2 0.2 1.4 1.1 0.1 0.6-0.1 1.6-0.6 2.8-0.1 0.3-0.1 0.5 0.1 0.8 0.1 0.2 0.4 0.3 0.7 0.3h2.5c0.1 0 1.2 0.2 1.2 1.1 0 0.8-0.3 1.2-0.3 1.2l-0.3 0.4 0.3 0.4z\"></path></g>\n<g id=\"thumbs-up\"><path d=\"M15.6 8.2c0 0 0.5-0.5 0.4-1.6 0-1.5-1.6-1.6-1.6-1.6h-2.4c-0.2 0-0.3-0.2-0.3-0.4 0.3-0.7 0.8-2.1 0.6-3.1-0.3-1.4-1.5-1.5-1.9-1.5-0.1 0-0.2 0.1-0.2 0.2l-1 2.8c0 0 0 0.1-0.1 0.1l-2.6 2.8c-0.1 0.1-0.2 0.1-0.3 0.1h-0.2v7h0.2c0.7 0 3.2 2 5.4 2s2.7-0.3 3.1-1c0.4-0.7 0.1-1.3 0.1-1.3s0.5-0.3 0.6-1c0.1-0.7-0.1-1.1-0.1-1.1s0.5-0.4 0.5-1.2c0.1-0.9-0.2-1.2-0.2-1.2z\"></path><path d=\"M0 14h5v-8h-5v8zM2.5 10.5c0.6 0 1 0.4 1 1s-0.4 1-1 1-1-0.4-1-1c0-0.6 0.4-1 1-1z\"></path></g>\n<g id=\"ticket\"><path d=\"M14 3h-12c0 1.1-0.9 2-2 2v6c1.1 0 2 0.9 2 2h12c0-1.1 0.9-2 2-2v0-6c-1.1 0-2-0.9-2-2zM13 12h-10v-8h10v8z\"></path><path d=\"M4 5h8v6h-8v-6z\"></path></g>\n<g id=\"time-backward\"><path d=\"M8 4h-1v5h4v-1h-3z\"></path><path d=\"M8 0c-3 0-5.6 1.6-6.9 4.1l-1.1-1.1v4h4l-1.5-1.5c1-2 3.1-3.5 5.5-3.5 3.3 0 6 2.7 6 6s-2.7 6-6 6c-1.8 0-3.4-0.8-4.5-2.1l-1.5 1.3c1.4 1.7 3.6 2.8 6 2.8 4.4 0 8-3.6 8-8s-3.6-8-8-8z\"></path></g>\n<g id=\"time-forward\"><path d=\"M8 4h-1v5h4v-1h-3z\"></path><path d=\"M16 7v-4l-1.1 1.1c-1.3-2.5-3.9-4.1-6.9-4.1-4.4 0-8 3.6-8 8s3.6 8 8 8c2.4 0 4.6-1.1 6-2.8l-1.5-1.3c-1.1 1.3-2.7 2.1-4.5 2.1-3.3 0-6-2.7-6-6s2.7-6 6-6c2.4 0 4.5 1.5 5.5 3.5l-1.5 1.5h4z\"></path></g>\n<g id=\"timer\"><path d=\"M9.060 9.060c0.271-0.271 0.439-0.646 0.439-1.060s-0.168-0.789-0.439-1.060c-0.59-0.59-6.72-4.6-6.72-4.6s4 6.13 4.59 6.72c0.272 0.274 0.649 0.444 1.065 0.444s0.793-0.17 1.065-0.444z\"></path><path d=\"M8 0v3h1v-1.41c3.153 0.495 5.536 3.192 5.536 6.445 0 3.601-2.919 6.52-6.52 6.52s-6.52-2.919-6.52-6.52c0-1.256 0.355-2.428 0.97-3.423l-0.916-1.322c-0.958 1.303-1.533 2.939-1.533 4.71 0 4.418 3.582 8 8 8s8-3.582 8-8c0-4.418-3.582-8-8-8-0.006 0-0.012 0-0.017 0z\"></path></g>\n<g id=\"toolbox\"><path d=\"M0 8h6v2h4v-2h6v6h-16z\"></path><path d=\"M7 7h2v2h-2v-2z\"></path><path d=\"M11 4v-2h-6v2h-5v3h6v-1h4v1h6v-3h-5zM6 4v-1h4v1h-4z\"></path></g>\n<g id=\"tools\"><path d=\"M10.3 8.2l-0.9 0.9 0.9 0.9-1.2 1.2 4.3 4.3c0.6 0.6 1.5 0.6 2.1 0s0.6-1.5 0-2.1l-5.2-5.2zM14.2 15c-0.4 0-0.8-0.3-0.8-0.8 0-0.4 0.3-0.8 0.8-0.8s0.8 0.3 0.8 0.8c0 0.5-0.3 0.8-0.8 0.8z\"></path><path d=\"M3.6 8l0.9-0.6 1.5-1.7 0.9 0.9 0.9-0.9-0.1-0.1c0.2-0.5 0.3-1 0.3-1.6 0-2.2-1.8-4-4-4-0.6 0-1.1 0.1-1.6 0.3l2.9 2.9-2.1 2.1-2.9-2.9c-0.2 0.5-0.3 1-0.3 1.6 0 2.1 1.6 3.7 3.6 4z\"></path><path d=\"M8 10.8l0.9-0.8-0.9-0.9 5.7-5.7 1.2-0.4 1.1-2.2-0.7-0.7-2.3 1-0.5 1.2-5.6 5.7-0.9-0.9-0.8 0.9c0 0 0.8 0.6-0.1 1.5-0.5 0.5-1.3-0.1-2.8 1.4-0.5 0.5-2.1 2.1-2.1 2.1s-0.6 1 0.6 2.2 2.2 0.6 2.2 0.6 1.6-1.6 2.1-2.1c1.4-1.4 0.9-2.3 1.3-2.7 0.9-0.9 1.6-0.2 1.6-0.2zM4.9 10.4l0.7 0.7-3.8 3.8-0.7-0.7z\"></path></g>\n<g id=\"tooth\"><path d=\"M11.3 16c-1.2 0-1.7-3.9-1.7-4.1-0.1-1.3-1-2.1-1.6-2.2-0.6 0-1.4 0.9-1.6 2.2 0 0.2-0.5 4.1-1.7 4.1s-1.8-4.4-1.9-4.4c-0.2-1.4 0.1-3.4 0.2-4-0.4-1.2-1.8-5.6-0.5-7 0.5-0.4 1.1-0.6 1.9-0.6 0.6 0 1.3 0.1 2 0.3 0.6 0.1 1.1 0.2 1.6 0.2s1-0.1 1.6-0.2c0.7-0.2 1.4-0.3 2-0.3 0.8 0 1.4 0.2 1.8 0.7 1.3 1.4-0.1 5.8-0.5 7 0.1 0.5 0.4 2.5 0.2 3.9 0.1 0-0.5 4.4-1.8 4.4zM8 8.7c1.3 0.1 2.4 1.4 2.6 3.1 0.1 1.2 0.5 2.4 0.7 2.9 0.3-0.6 0.7-2.1 0.9-3.3 0.2-1.4-0.2-3.7-0.2-3.7v-0.2c0.7-2.1 1.4-5.3 0.8-6.1-0.3-0.3-0.7-0.4-1.2-0.4s-1.2 0.1-1.8 0.3c-0.6 0.1-1.2 0.2-1.8 0.2s-1.2-0.1-1.8-0.2c-0.6-0.2-1.3-0.3-1.8-0.3s-0.9 0.1-1.1 0.4c-0.7 0.7 0 4 0.8 6.1v0.2c0 0-0.4 2.3-0.2 3.7 0.2 1.2 0.6 2.7 0.9 3.3 0.2-0.6 0.6-1.7 0.7-2.9 0.1-1.6 1.2-3 2.5-3.1z\"></path></g>\n<g id=\"touch\"><path d=\"M12.62 6c-0.093-0.023-0.2-0.036-0.31-0.036s-0.217 0.013-0.319 0.038c-0.045-0.33-0.192-0.616-0.402-0.843-0.257-0.259-0.614-0.42-1.008-0.42-0.018 0-0.036 0-0.053 0.001-0-0-0.004-0-0.007-0-0.22 0-0.43 0.044-0.621 0.124-0.062-0.183-0.163-0.336-0.29-0.464-0.261-0.25-0.617-0.403-1.008-0.403-0.036 0-0.072 0.001-0.107 0.004l0.005-0c0.315-0.414 0.505-0.938 0.505-1.506 0-1.381-1.119-2.5-2.5-2.5s-2.5 1.119-2.5 2.5c0 0.813 0.388 1.535 0.989 1.992l0.006 2.664c-0.554 0.015-1.054 0.233-1.432 0.581-0.568 0.619-0.568 1.579-0.568 2.779 0 0.23 0 0.47 0 0.72 0.032 1.127 0.573 2.121 1.402 2.764l0.358 0.356c1.24 1.27 2.38 1.65 5.020 1.65 2.88 0 4.22-1.61 4.22-5.060v-2.51c0-0.77-0.22-2.12-1.38-2.43zM13 8.35v2.59c0 3.37-1.29 4.060-3.22 4.060-2.6 0-3.4-0.39-4.3-1.33l-0.36-0.37c-0.657-0.468-1.088-1.215-1.12-2.065-0-0.265-0-0.505-0-0.735-0.033-0.178-0.053-0.383-0.053-0.592 0-0.538 0.126-1.047 0.351-1.498 0.186-0.132 0.431-0.228 0.698-0.24l0.003 0.7v-0.22l-0.34 1.5c-0.010 0.022-0.016 0.048-0.016 0.075 0 0.103 0.083 0.186 0.186 0.186 0.075 0 0.14-0.045 0.17-0.11l1-1.211c0.003-0.014 0.005-0.029 0.005-0.045s-0.002-0.031-0.005-0.046l0-5.609c-0-0.012-0.001-0.026-0.001-0.039 0-0.256 0.083-0.492 0.223-0.684 0.091-0.096 0.223-0.158 0.369-0.158 0.010 0 0.020 0 0.030 0.001-0.001-0-0.001-0-0.001-0 0.21 0 0.38 0.17 0.38 0.38 0 0.004-0 0.007-0 0.011l0 3.869c0 0.276 0.224 0.5 0.5 0.5s0.5-0.224 0.5-0.5v-1.32c0.010-0.251 0.217-0.451 0.47-0.451 0.011 0 0.021 0 0.032 0.001 0.023-0.005 0.051-0.008 0.079-0.008 0.232 0 0.42 0.188 0.42 0.42 0 0.010-0 0.020-0.001 0.029l0 1.329c0 0.276 0.224 0.5 0.5 0.5s0.5-0.224 0.5-0.5v-0.64c0.034-0.218 0.22-0.383 0.445-0.383 0.019 0 0.038 0.001 0.057 0.004 0.013-0.002 0.030-0.003 0.047-0.003 0.112 0 0.214 0.043 0.291 0.113 0.1 0.129 0.16 0.294 0.16 0.473 0 0.006-0 0.012-0 0.017l0 0.819c0.003 0.252 0.193 0.459 0.438 0.49 0.021 0.003 0.043 0.004 0.066 0.004 0.241 0 0.442-0.166 0.496-0.39 0.026-0.112 0.082-0.204 0.16-0.273 0.033-0.015 0.071-0.024 0.111-0.024s0.078 0.009 0.112 0.024c0.38 0.249 0.628 0.674 0.628 1.157 0 0.057-0.003 0.113-0.010 0.169l0.001-0.007z\"></path></g>\n<g id=\"train\"><path d=\"M13 11.2v-7.4c0-1-0.8-1.8-1.8-1.8h-2.2v-1h2v-1h-6v1h2v1h-2.2c-1 0-1.8 0.8-1.8 1.8v7.4c0 1 0.8 1.8 1.8 1.8h0.2l-0.7 1h-1.3v1h0.7l-0.7 1h2l0.6-1h4.9l0.6 1h2l-0.7-1h0.6v-1h-1.3l-0.7-1h0.2c1 0 1.8-0.8 1.8-1.8zM4 3.9c0-0.5 0.4-0.9 0.9-0.9h6.1c0.6 0 1 0.4 1 0.9v2.1c0 0.6-0.4 1-0.9 1h-6.2c-0.5 0-0.9-0.4-0.9-0.9v-2.2zM4 11c0-0.6 0.4-1 1-1s1 0.4 1 1c0 0.6-0.4 1-1 1s-1-0.4-1-1zM9.9 14h-3.8l0.6-1h2.6l0.6 1zM10 11c0-0.6 0.4-1 1-1s1 0.4 1 1c0 0.6-0.4 1-1 1s-1-0.4-1-1z\"></path></g>\n<g id=\"trash\"><path d=\"M13 3s0-0.51-2-0.8v-0.7c-0.017-0.832-0.695-1.5-1.53-1.5-0 0-0 0-0 0h-3c-0.815 0.017-1.47 0.682-1.47 1.5 0 0 0 0 0 0v0.7c-0.765 0.068-1.452 0.359-2.007 0.806l-0.993-0.006v1h12v-1h-1zM6 1.5c0.005-0.274 0.226-0.495 0.499-0.5l3.001-0c0 0 0.001 0 0.001 0 0.282 0 0.513 0.22 0.529 0.499l0 0.561c-0.353-0.042-0.763-0.065-1.178-0.065-0.117 0-0.233 0.002-0.349 0.006-0.553-0-2.063-0-2.503 0.070v-0.57z\"></path><path d=\"M2 5v1h1v9c1.234 0.631 2.692 1 4.236 1 0.002 0 0.003 0 0.005 0h1.52c0.001 0 0.003 0 0.004 0 1.544 0 3.002-0.369 4.289-1.025l-0.054-8.975h1v-1h-12zM6 13.92q-0.51-0.060-1-0.17v-6.75h1v6.92zM9 14h-2v-7h2v7zM11 13.72c-0.267 0.070-0.606 0.136-0.95 0.184l-0.050-6.904h1v6.72z\"></path></g>\n<g id=\"tree-table\"><path d=\"M6 10v-2h-2v-1h1v-2h-3v2h1v6h3v-2h-2v-1z\"></path><path d=\"M0 0v16h16v-16h-16zM7 15h-6v-12h6v12zM11 15h-3v-12h3v12zM15 15h-3v-12h3v12z\"></path></g>\n<g id=\"trendind-down\"><path d=\"M16 14h-4l1.29-1.29-4.29-4.3-3 3-6-6v-2.82l6 6 3-3 5.71 5.7 1.28-1.29 0.010 4z\"></path></g>\n<g id=\"trending-up\"><path d=\"M16 2h-4l1.29 1.29-4.29 4.3-3-3-6 6v2.82l6-6 3 3 5.71-5.7 1.28 1.29 0.010-4z\"></path></g>\n<g id=\"trophy\"><path d=\"M11.7 8c4.2-0.3 4.3-2.7 4.3-5h-3v-3h-10v3h-3c0 2.3 0.1 4.7 4.3 5 0.9 1.4 2.1 2 2.7 2v4c-3 0-3 2-3 2h8c0 0 0-2-3-2v-4c0.6 0 1.8-0.6 2.7-2zM13 4h2c-0.1 1.6-0.4 2.7-2.7 2.9 0.3-0.8 0.6-1.7 0.7-2.9zM1 4h2c0.1 1.2 0.4 2.1 0.7 2.9-2.2-0.2-2.6-1.3-2.7-2.9zM4.5 6.1c-0.5-1.7-0.5-3.1-0.5-3.1v-2h1v2c0 0 0 1.7 0.4 3.1 0.5 1.7 1.6 2.9 1.6 2.9s-1.8-0.2-2.5-2.9z\"></path></g>\n<g id=\"truck\"><path d=\"M6 3h10v7h-10v-7z\"></path><path d=\"M15 14c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path><path d=\"M13 11c1.3 0 2.4 0.8 2.8 2h0.2v-2h-3z\"></path><path d=\"M5 5h-4l-1 4v4h1.2c0.4-1.2 1.5-2 2.8-2s2.4 0.8 2.8 2h3.4c0.4-1.2 1.5-2 2.8-2h-8v-6zM4 9h-3l0.8-3h2.2v3z\"></path><path d=\"M6 14c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"></path></g>\n<g id=\"twin-col-select\"><path d=\"M0 2v12h16v-12h-16zM7 13h-6v-10h6v10zM15 13h-6v-10h6v10z\"></path><path d=\"M10 4h4v1h-4v-1z\"></path><path d=\"M2 4h4v1h-4v-1z\"></path><path d=\"M2 6h4v1h-4v-1z\"></path><path d=\"M2 8h4v1h-4v-1z\"></path></g>\n<g id=\"twitter-square\"><path d=\"M0 0v16h16v-16h-16zM12.8 5.6c0 0.1 0 0.2 0 0.3 0 3.3-2.5 7-7 7-1.4 0-2.7-0.4-3.8-1.1 0.2 0 0.4 0 0.6 0 1.2 0 2.2-0.4 3.1-1.1-1.1 0-2-0.7-2.3-1.7 0.2 0 0.3 0 0.5 0s0.4 0 0.6-0.1c-1.1-0.2-2-1.2-2-2.4 0 0 0 0 0 0 0.3 0.2 0.7 0.3 1.1 0.3-0.7-0.4-1.1-1.2-1.1-2 0-0.5 0.1-0.9 0.3-1.2 1.2 1.5 3.1 2.4 5.1 2.5 0-0.2-0.1-0.4-0.1-0.6 0-1.4 1.1-2.5 2.5-2.5 0.7 0 1.3 0.3 1.8 0.8 0.6-0.1 1.1-0.3 1.6-0.6-0.2 0.6-0.6 1.1-1.1 1.4 0.5-0.1 1-0.2 1.4-0.4-0.3 0.6-0.7 1-1.2 1.4z\"></path></g>\n<g id=\"twitter\"><path d=\"M16 3c-0.6 0.3-1.2 0.4-1.9 0.5 0.7-0.4 1.2-1 1.4-1.8-0.6 0.4-1.3 0.6-2.1 0.8-0.6-0.6-1.5-1-2.4-1-1.7 0-3.2 1.5-3.2 3.3 0 0.3 0 0.5 0.1 0.7-2.7-0.1-5.2-1.4-6.8-3.4-0.3 0.5-0.4 1-0.4 1.7 0 1.1 0.6 2.1 1.5 2.7-0.5 0-1-0.2-1.5-0.4 0 0 0 0 0 0 0 1.6 1.1 2.9 2.6 3.2-0.3 0.1-0.6 0.1-0.9 0.1-0.2 0-0.4 0-0.6-0.1 0.4 1.3 1.6 2.3 3.1 2.3-1.1 0.9-2.5 1.4-4.1 1.4-0.3 0-0.5 0-0.8 0 1.5 0.9 3.2 1.5 5 1.5 6 0 9.3-5 9.3-9.3 0-0.1 0-0.3 0-0.4 0.7-0.5 1.3-1.1 1.7-1.8z\"></path></g>\n<g id=\"umbrella\"><path d=\"M5.36 0.9l-0.27-0.57c-0.083-0.197-0.275-0.333-0.499-0.333-0.1 0-0.193 0.027-0.274 0.074-0.217 0.074-0.372 0.279-0.372 0.52 0 0.087 0.020 0.169 0.056 0.242l0.319 0.577c-6.2 3.49-3.9 10.59-3.9 10.59h0.060c0.25-0.12 0.8-1.64 2.050-2.25s2.78-0.090 3-0.21l0.12-0.060c0.477-0.742 0.998-1.387 1.58-1.97l3.37 7.070c0.246 0.619 0.729 1.098 1.334 1.335 0.168 0.053 0.343 0.080 0.524 0.080 0.254 0 0.495-0.053 0.713-0.149l0.359-0.176c0.263-0.145 0.462-0.38 0.558-0.662 0.117-0.276 0.183-0.586 0.183-0.913 0-0.401-0.1-0.778-0.277-1.108-0.102-0.189-0.311-0.324-0.551-0.324-0.076 0-0.149 0.014-0.217 0.038-0.182 0.089-0.308 0.277-0.308 0.495 0 0.093 0.023 0.18 0.064 0.257s0.529 1.067-0.101 1.337-1.19-0.73-1.19-0.73l-3.42-7.060c0.372-0.043 0.803-0.067 1.24-0.067s0.868 0.024 1.292 0.072l0.068-0.065c0.25-0.12 0.8-1.64 2.050-2.25s2.78-0.090 3-0.21h0.060s-3.98-6.41-10.62-3.58zM7.36 6.36c-1.034 0.399-1.834 1.209-2.211 2.224-0.55-1.082-0.909-2.375-1.007-3.74-0.142-2.244 0.608-2.924 0.608-2.924l0.77-0.32c1.084 0.101 2.052 0.534 2.816 1.195 0.976 0.895 1.747 2.009 2.233 3.265-0.339-0.021-0.752-0.067-1.175-0.067-0.724 0-1.417 0.134-2.054 0.379z\"></path></g>\n<g id=\"underline\"><path d=\"M2 15h12v1h-12v-1z\"></path><path d=\"M11 0v8.4c0 1.5-1.1 2.6-2.6 2.6h-0.8c-1.5 0-2.6-1.1-2.6-2.6v-8.4h-3v8.4c0 3.1 2.5 5.6 5.6 5.6h0.9c3.1 0 5.6-2.5 5.6-5.6v-8.4h-3.1z\"></path></g>\n<g id=\"unlink\"><path d=\"M8 0h1v4h-1v-4z\"></path><path d=\"M8 12h1v4h-1v-4z\"></path><path d=\"M7 9h-4c-0.552 0-1-0.448-1-1s0.448-1 1-1h4v-2h-4c-1.657 0-3 1.343-3 3s1.343 3 3 3h4v-2z\"></path><path d=\"M13 5h-4v2h4c0.552 0 1 0.448 1 1s-0.448 1-1 1h-4v2h4c1.657 0 3-1.343 3-3s-1.343-3-3-3z\"></path><path d=\"M4.51 15.44l2.49-3.44h-1.23l-2.080 2.88 0.82 0.56z\"></path><path d=\"M12.49 15.44l-2.49-3.44h1.23l2.080 2.88-0.82 0.56z\"></path><path d=\"M12.49 0.99l-2.49 3.010h1.23l2.080-2.66-0.82-0.35z\"></path><path d=\"M4.51 0.99l2.49 3.010h-1.23l-2.080-2.66 0.82-0.35z\"></path></g>\n<g id=\"unlock\"><path d=\"M8 8v-3.1c0-2.2-1.8-3.9-3.9-3.9h-0.3c-2.2 0-3.8 1.7-3.8 3.9v2.1h2v-2.1c0-1.1 0.7-1.9 1.8-1.9h0.3c1 0 1.9 0.8 1.9 1.9v3.1h-1l0.1 5c0 0-0.1 3 4.9 3s5-3 5-3v-5h-7zM11 14h-1v-1.8c-0.6 0-1-0.6-1-1.1 0-0.6 0.4-1.1 1-1.1s1 0.4 1 0.9v3.1z\"></path></g>\n<g id=\"upload-alt\"><path d=\"M0 14h16v2h-16v-2z\"></path><path d=\"M8 0l-5 5h3v8h4v-8h3z\"></path></g>\n<g id=\"upload\"><path d=\"M11 10v2h-6v-2h-5v6h16v-6h-5zM4 14h-2v-2h2v2z\"></path><path d=\"M13 5l-5-5-5 5h3v6h4v-6z\"></path></g>\n<g id=\"user-card\"><path d=\"M15 3v10h-14v-10h14zM16 2h-16v12h16v-12z\"></path><path d=\"M8 5h6v1h-6v-1z\"></path><path d=\"M8 7h6v1h-6v-1z\"></path><path d=\"M8 9h3v1h-3v-1z\"></path><path d=\"M5.4 7h-0.4v-0.1c0.6-0.2 1-0.8 1-1.4 0-0.8-0.7-1.5-1.5-1.5s-1.5 0.7-1.5 1.5c0 0.7 0.4 1.2 1 1.4v0.1h-0.4c-0.9 0-1.6 0.7-1.6 1.6v2.4h5v-2.4c0-0.9-0.7-1.6-1.6-1.6z\"></path></g>\n<g id=\"user-check\"><path d=\"M7.5 14.4c-0.8-0.8-0.8-2 0-2.8s2-0.8 2.8 0l0.6 0.6 1.9-2.1c-0.7-0.4-1.3-0.4-2-0.4-0.7-0.1-1.4-0.3-1.4-0.9s0.8-0.4 1.4-1.5c0 0 2.7-7.3-2.9-7.3-5.5 0-2.8 7.3-2.8 7.3 0.6 1 1.4 0.8 1.4 1.5s-0.7 0.7-1.4 0.8c-1.1 0.1-2.1-0.1-3.1 1.7-0.6 1.1-0.9 4.7-0.9 4.7h8l-1.6-1.6z\"></path><path d=\"M12.8 16h2.1c0 0-0.1-0.9-0.2-2l-1.9 2z\"></path><path d=\"M11 16c-0.3 0-0.5-0.1-0.7-0.3l-2-2c-0.4-0.4-0.4-1 0-1.4s1-0.4 1.4 0l1.3 1.3 3.3-3.6c0.4-0.4 1-0.4 1.4-0.1 0.4 0.4 0.4 1 0.1 1.4l-4 4.3c-0.3 0.3-0.5 0.4-0.8 0.4 0 0 0 0 0 0z\"></path></g>\n<g id=\"user-clock\"><path d=\"M14 13h-3v-3h1v2h2z\"></path><path d=\"M16 12.5c0-2.5-2-4.5-4.5-4.5-0.7 0-1.4 0.2-2 0.5 0.2-0.3 0.8-0.3 1.4-1.2 0 0 2.7-7.3-2.9-7.3s-2.9 7.3-2.9 7.3c0.6 1 1.4 0.8 1.4 1.5s-0.7 0.7-1.4 0.8c-1.1 0.1-2.1-0.1-3.1 1.7-0.6 1.1-0.9 4.7-0.9 4.7h10.4c-1.9 0-3.5-1.6-3.5-3.5s1.6-3.5 3.5-3.5 3.5 1.6 3.5 3.5c0 1.9-1.6 3.5-3.5 3.5h3.4c0 0 0-0.2 0-0.5 0.6-0.8 1.1-1.8 1.1-3z\"></path></g>\n<g id=\"user-heart\"><path d=\"M14.2 16h0.6c0 0 0-0.2 0-0.6l-0.6 0.6z\"></path><path d=\"M8.6 13.9c-0.7-0.7-1-1.8-0.8-2.8s0.8-1.8 1.7-2.1c0-0.1-0.1-0.2-0.1-0.2 0-0.6 0.8-0.4 1.4-1.5 0 0 2.7-7.3-2.9-7.3-5.5 0-2.8 7.3-2.8 7.3 0.6 1 1.4 0.8 1.4 1.5s-0.7 0.7-1.4 0.8c-1.1 0.1-2.1-0.1-3.1 1.7-0.6 1.1-0.9 4.7-0.9 4.7h9.6l-2.1-2.1z\"></path><path d=\"M14.9 10.1c-0.2-0.1-0.5-0.1-0.7-0.1-0.7 0-1.3 0.6-1.7 1.1-0.4-0.5-1-1.1-1.7-1.1-0.3 0-0.5 0-0.7 0.1-1.2 0.4-1.4 2-0.5 2.9l3 2.9 3-2.9c0.8-0.9 0.5-2.5-0.7-2.9z\"></path></g>\n<g id=\"user-star\"><path d=\"M8.92 13.67l-1.61-1.53-1.5-1.42 2-0.29 2.25-0.32 0.29-0.57c-0.006 0-0.013 0-0.020 0-0.482 0-0.884-0.34-0.979-0.794-0.001-0.617 0.799-0.417 1.429-1.457 0.080-0.020 2.82-7.29-2.78-7.29s-2.86 7.27-2.86 7.27c0.63 1 1.44 0.85 1.43 1.45s-0.74 0.8-1.43 0.87c-1.14 0.13-2.14-0.13-3.14 1.76-0.6 1.090-0.85 4.65-0.85 4.65h7.36v-0.17z\"></path><path d=\"M11.72 16h0.56l-0.28-0.14-0.28 0.14z\"></path><path d=\"M12 14.73l2.47 1.27-0.47-2.69 2-1.9-2.76-0.39-1.24-2.45-1.24 2.45-2.76 0.39 2 1.9-0.47 2.69 2.47-1.27z\"></path></g>\n<g id=\"user\"><path d=\"M8 0c-5.6 0-2.9 7.3-2.9 7.3 0.6 1 1.4 0.8 1.4 1.5 0 0.6-0.7 0.8-1.4 0.9-1.1 0-2.1-0.2-3.1 1.6-0.6 1.1-0.9 4.7-0.9 4.7h13.7c0 0-0.3-3.6-0.8-4.7-1-1.9-2-1.6-3.1-1.7-0.7-0.1-1.4-0.3-1.4-0.9s0.8-0.4 1.4-1.5c0 0.1 2.7-7.2-2.9-7.2z\"></path></g>\n<g id=\"users\"><path d=\"M5.3 9.7c-0.4 0-0.9-0.2-0.9-0.6s0.5-0.3 0.9-1c0 0 1.8-4.9-1.8-4.9s-1.8 4.9-1.8 4.9c0.4 0.7 0.9 0.6 0.9 1s-0.5 0.6-0.9 0.6c-0.6 0.1-1.1 0-1.7 0.6v5.7h5c0.2-1.7 0.7-5.2 1.1-6.1 0 0 0.1-0.1 0.1-0.1-0.2-0.1-0.5-0.1-0.9-0.1z\"></path><path d=\"M16 9.5c-0.7-0.8-1.3-0.7-2-0.8-0.5-0.1-1.1-0.2-1.1-0.7s0.6-0.3 1.1-1.2c0 0 2.1-5.9-2.2-5.9-4.4 0.1-2.3 6-2.3 6 0.5 0.8 1.1 0.7 1.1 1.1 0 0.5-0.6 0.6-1.1 0.7-0.9 0.1-1.7 0-2.5 1.5-0.4 0.9-1 5.8-1 5.8h10v-6.5z\"></path></g>\n<g id=\"vaadin-h\"><path d=\"M15.21 0.35c-0.436 0-0.79 0.354-0.79 0.79v0 0.46c0 0.5-0.32 0.85-1.070 0.85h-3.55c-1.61 0-1.73 1.19-1.8 1.83v0c-0.060-0.64-0.18-1.83-1.79-1.83h-3.57c-0.75 0-1.090-0.37-1.090-0.86v-0.45c0-0.006 0-0.013 0-0.020 0-0.425-0.345-0.77-0.77-0.77-0 0-0 0-0 0h0c-0 0-0 0-0 0-0.431 0-0.78 0.349-0.78 0.78 0 0.004 0 0.007 0 0.011v-0.001 1.32c0 1.54 0.7 2.31 2.34 2.31h3.66c1.090 0 1.19 0.46 1.19 0.9 0 0 0 0.090 0 0.13 0.048 0.428 0.408 0.758 0.845 0.758s0.797-0.33 0.845-0.754l0-0.004s0-0.080 0-0.13c0-0.44 0.1-0.9 1.19-0.9h3.61c1.61 0 2.32-0.77 2.32-2.31v-1.32c0-0.436-0.354-0.79-0.79-0.79v0z\"></path><path d=\"M11.21 7.38c-0.012-0-0.026-0.001-0.040-0.001-0.453 0-0.835 0.301-0.958 0.714l-0.002 0.007-2.21 4.21-2.3-4.2c-0.122-0.425-0.507-0.731-0.963-0.731-0.013 0-0.026 0-0.039 0.001l0.002-0c-0.012-0-0.025-0.001-0.039-0.001-0.58 0-1.050 0.47-1.050 1.050 0 0.212 0.063 0.41 0.171 0.575l-0.002-0.004 3.29 6.1c0.15 0.333 0.478 0.561 0.86 0.561s0.71-0.228 0.858-0.555l0.002-0.006 3.34-6.1c0.090-0.152 0.144-0.335 0.144-0.53 0-0.58-0.47-1.050-1.050-1.050-0.005 0-0.010 0-0.014 0h0.001z\"></path></g>\n<g id=\"vaadin-v\"><path d=\"M5.8 7.16h-0.13c-0.44 0-0.9-0.1-0.9-1.19v-3.62c0-1.64-0.77-2.35-2.31-2.35h-1.32c-0.436 0-0.79 0.354-0.79 0.79v0c0 0.436 0.354 0.79 0.79 0.79v0h0.46c0.5 0 0.85 0.32 0.85 1.070v3.55c0 1.61 1.19 1.73 1.83 1.8v0c-0.64 0.060-1.83 0.18-1.83 1.79v3.55c0 0.75-0.37 1.090-0.86 1.090h-0.45c-0.006-0-0.013-0-0.020-0-0.425 0-0.77 0.345-0.77 0.77 0 0 0 0 0 0v-0c0 0 0 0 0 0 0 0.431 0.349 0.78 0.78 0.78 0.004 0 0.007-0 0.011-0h1.319c1.54 0 2.31-0.7 2.31-2.34v-3.59c0-1.090 0.46-1.19 0.9-1.19h0.13c0.428-0.048 0.758-0.408 0.758-0.845s-0.33-0.797-0.754-0.845l-0.004-0z\"></path><path d=\"M15.1 7.19v0l-6.1-3.32c-0.152-0.090-0.335-0.144-0.53-0.144-0.58 0-1.050 0.47-1.050 1.050 0 0.005 0 0.010 0 0.014v-0.001c-0 0.012-0.001 0.026-0.001 0.040 0 0.453 0.301 0.835 0.714 0.958l0.007 0.002 4.21 2.26-4.24 2.25c-0.425 0.122-0.731 0.507-0.731 0.963 0 0.013 0 0.026 0.001 0.039l-0-0.002c-0 0.012-0.001 0.025-0.001 0.039 0 0.58 0.47 1.050 1.050 1.050 0.212 0 0.41-0.063 0.575-0.171l-0.004 0.002 6.1-3.29c0.333-0.15 0.561-0.478 0.561-0.86s-0.228-0.71-0.555-0.858l-0.006-0.002z\"></path></g>\n<g id=\"viewport\"><path d=\"M1 4h-1v-4h4v1h-3z\"></path><path d=\"M12 1v-1h4v4h-1v-3z\"></path><path d=\"M15 12h1v4h-4v-1h3z\"></path><path d=\"M4 15v1h-4v-4h1v3z\"></path><path d=\"M13 3v10h-10v-10h10zM14 2h-12v12h12v-12z\"></path></g>\n<g id=\"vimeo-square\"><path d=\"M0 0v16h16v-16h-16zM13.9 5.3c-0.7 3.8-4.4 7-5.5 7.7s-2.2-0.3-2.5-1.1c-0.4-0.9-1.7-5.7-2-6.1-0.4-0.3-1.4 0.5-1.4 0.5l-0.5-0.7c0 0 2-2.4 3.6-2.7s1.6 2.5 2 4.1c0.4 1.5 0.6 2.4 1 2.4 0.3 0 1-0.9 1.7-2.2s0-2.5-1.4-1.6c0.5-3.3 5.7-4.1 5-0.3z\"></path></g>\n<g id=\"vimeo\"><path d=\"M15.9 4.4c-0.9 5-5.9 9.3-7.4 10.3s-2.9-0.4-3.4-1.4c-0.5-1.3-2.2-7.6-2.7-8.2-0.4-0.5-1.8 0.6-1.8 0.6l-0.6-0.9c0 0 2.7-3.3 4.8-3.7 2.2-0.4 2.2 3.4 2.7 5.5 0.5 2 0.9 3.2 1.3 3.2s1.3-1.1 2.2-2.9c0.9-1.7 0-3.3-1.9-2.2 0.8-4.3 7.7-5.4 6.8-0.3z\"></path></g>\n<g id=\"volume-down\"><path d=\"M10.8 4.4l-0.5 1.1c0.5 0.9 0.8 1.9 0.8 3 0 1-0.3 2-0.7 2.9l0.7 0.9c0.6-1.1 1-2.4 1-3.7-0.1-1.6-0.5-3-1.3-4.2z\"></path><path d=\"M4 5h-4v6h4l5 4v-14z\"></path></g>\n<g id=\"volume-off\"><path d=\"M4 5h-4v6h4l5 4v-14z\"></path></g>\n<g id=\"volume-up\"><path d=\"M15 8.5c0 2.3-0.8 4.5-2 6.2l0.7 0.8c1.5-1.9 2.4-4.4 2.4-7 0-3.1-1.2-5.9-3.2-8l-0.5 1c1.6 1.8 2.6 4.3 2.6 7z\"></path><path d=\"M11.8 2.4l-0.5 1c1.1 1.4 1.7 3.2 1.7 5.1 0 1.7-0.5 3.2-1.3 4.6l0.7 0.8c1.1-1.5 1.7-3.4 1.7-5.4-0.1-2.3-0.9-4.4-2.3-6.1z\"></path><path d=\"M10.8 4.4l-0.5 1.1c0.5 0.9 0.8 1.9 0.8 3 0 1-0.3 2-0.7 2.9l0.7 0.9c0.6-1.1 1-2.4 1-3.7-0.1-1.6-0.5-3-1.3-4.2z\"></path><path d=\"M4 5h-4v6h4l5 4v-14z\"></path></g>\n<g id=\"volume\"><path d=\"M11.8 2.4l-0.5 1c1.1 1.4 1.7 3.2 1.7 5.1 0 1.7-0.5 3.2-1.3 4.6l0.7 0.8c1.1-1.5 1.7-3.4 1.7-5.4-0.1-2.3-0.9-4.4-2.3-6.1z\"></path><path d=\"M10.8 4.4l-0.5 1.1c0.5 0.9 0.8 1.9 0.8 3 0 1-0.3 2-0.7 2.9l0.7 0.9c0.6-1.1 1-2.4 1-3.7-0.1-1.6-0.5-3-1.3-4.2z\"></path><path d=\"M4 5h-4v6h4l5 4v-14z\"></path></g>\n<g id=\"wallet\"><path d=\"M14.5 4h-12.12c-0.057 0.012-0.123 0.018-0.19 0.018-0.552 0-1-0.448-1-1 0-0.006 0-0.013 0-0.019l12.81-0.499v-1.19c0.005-0.041 0.008-0.089 0.008-0.138 0-0.652-0.528-1.18-1.18-1.18-0.049 0-0.097 0.003-0.144 0.009l-11.374 1.849c-0.771 0.289-1.31 1.020-1.31 1.877 0 0.011 0 0.023 0 0.034l-0 10.728c-0 0.003-0 0.006-0 0.010 0 0.828 0.672 1.5 1.5 1.5 0 0 0 0 0 0h13c0 0 0 0 0 0 0.828 0 1.5-0.672 1.5-1.5 0-0.004-0-0.007-0-0.011v-8.999c0-0.012 0.001-0.027 0.001-0.041 0-0.801-0.649-1.45-1.45-1.45-0.018 0-0.036 0-0.053 0.001zM13 11c-0.828 0-1.5-0.672-1.5-1.5s0.672-1.5 1.5-1.5c0.828 0 1.5 0.672 1.5 1.5s-0.672 1.5-1.5 1.5z\"></path></g>\n<g id=\"warning\"><path d=\"M8 1l-8 14h16l-8-14zM8 13c-0.6 0-1-0.4-1-1s0.4-1 1-1 1 0.4 1 1c0 0.6-0.4 1-1 1zM7 10v-4h2v4h-2z\"></path></g>\n<g id=\"workplace\"><path d=\"M11,3 L11,0 L2,0 L2,14 L0,14 L0,15 L7,15 L7,10 L9,10 L9,8 L14,8 L14,3 L11,3 Z M6,10 L4,10 L4,8 L6,8 L6,10 Z M6,7 L4,7 L4,5 L6,5 L6,7 Z M6,4 L4,4 L4,2 L6,2 L6,4 Z M9,7 L7,7 L7,5 L9,5 L9,7 Z M9,4 L7,4 L7,2 L9,2 L9,4 Z M13,7 L11,7 L11,5 L13,5 L13,7 Z M14,11 L16,11 L16,16 L8,16 L8,11 L10,11 L10,9 L14,9 L14,11 Z\" fill-rule=\"nonzero\"></path></g>\n<g id=\"wrench\"><path d=\"M15.5 13.4l-7.8-7.8c0.2-0.5 0.3-1 0.3-1.6 0-2.2-1.8-4-4-4-0.6 0-1.1 0.1-1.6 0.3l2.9 2.9-2.1 2.1-2.9-2.9c-0.2 0.5-0.3 1-0.3 1.6 0 2.2 1.8 4 4 4 0.6 0 1.1-0.1 1.6-0.3l7.8 7.8c0.6 0.6 1.5 0.6 2.1 0s0.6-1.5 0-2.1zM6.8 7.6l-1.4-1.4 0.9-0.9 1.4 1.4-0.9 0.9zM14.2 15c-0.4 0-0.8-0.3-0.8-0.8 0-0.4 0.3-0.8 0.8-0.8s0.8 0.3 0.8 0.8c0 0.5-0.3 0.8-0.8 0.8z\"></path></g>\n<g id=\"youtube-square\"><path d=\"M7.9 6c0.2 0 0.3-0.2 0.3-0.5v-1.4c0-0.3-0.1-0.5-0.3-0.5s-0.3 0.2-0.3 0.5v1.4c0 0.3 0.1 0.5 0.3 0.5z\"></path><path d=\"M7.1 11.9c-0.1 0.2-0.3 0.3-0.4 0.3s-0.1 0-0.1-0.1c0 0 0-0.1 0-0.2v-2.5h-0.6v2.6c0 0.2 0 0.4 0.1 0.5 0.1 0.2 0.2 0.2 0.4 0.2s0.4-0.1 0.7-0.4v0.4h0.6v-3.3h-0.7v2.5z\"></path><path d=\"M3.8 8.9h0.7v3.8h0.7v-3.8h0.7v-0.7h-2.1z\"></path><path d=\"M9.4 9.3c-0.2 0-0.4 0.2-0.6 0.4v-1.5h-0.6v4.4h0.6v-0.3c0.2 0.2 0.4 0.4 0.6 0.4s0.4-0.1 0.5-0.4c0-0.1 0.1-0.4 0.1-0.7v-1.3c0-0.3 0-0.5-0.1-0.7-0.1-0.1-0.2-0.3-0.5-0.3zM9.4 11.7c0 0.3-0.1 0.4-0.3 0.4-0.1 0-0.2 0-0.3-0.1v-2c0.1-0.1 0.2-0.1 0.3-0.1 0.2 0 0.3 0.2 0.3 0.5v1.3z\"></path><path d=\"M11.3 9.3c-0.3 0-0.5 0.1-0.7 0.3-0.1 0.2-0.2 0.4-0.2 0.8v1.2c0 0.4 0.1 0.6 0.2 0.8 0.2 0.2 0.4 0.3 0.7 0.3s0.6-0.1 0.7-0.4c0.1-0.1 0.1-0.2 0.1-0.4 0-0.1 0-0.2 0-0.4v-0.1h-0.6c0 0.2 0 0.4 0 0.4 0 0.2-0.1 0.2-0.3 0.2s-0.3-0.2-0.3-0.5v-0.6h1.2v-0.7c0-0.4-0.1-0.6-0.2-0.8 0 0.1-0.3-0.1-0.6-0.1zM11.6 10.6h-0.6v-0.3c0-0.3 0.1-0.5 0.3-0.5s0.3 0.2 0.3 0.5v0.3z\"></path><path d=\"M0 0v16h16v-16h-16zM9.3 3.1h0.6v2.5c0 0.1 0 0.2 0 0.2 0 0.1 0 0.2 0.1 0.2s0.2-0.1 0.4-0.3v-2.6h0.6v3.3h-0.6v-0.3c-0.2 0.3-0.5 0.4-0.7 0.4s-0.3-0.1-0.4-0.2c0-0.1-0.1-0.3-0.1-0.5v-2.7zM7 4.2c0-0.3 0-0.6 0.2-0.8s0.4-0.3 0.7-0.3c0.3 0 0.5 0.1 0.7 0.3 0.1 0.2 0.2 0.4 0.2 0.8v1.2c0 0.4-0.1 0.6-0.2 0.8-0.2 0.2-0.4 0.3-0.7 0.3s-0.5-0.1-0.7-0.3c-0.2-0.2-0.2-0.4-0.2-0.8v-1.2zM5.3 2l0.5 1.8 0.5-1.8h0.7l-0.8 2.7v1.8h-0.7v-1.8c-0.1-0.4-0.2-0.8-0.4-1.5-0.2-0.4-0.3-0.8-0.5-1.2h0.7zM12.8 12.9c-0.1 0.5-0.6 0.9-1.1 1-1.2 0.1-2.5 0.1-3.7 0.1s-2.5 0-3.7-0.1c-0.5-0.1-1-0.4-1.1-1-0.2-0.8-0.2-1.6-0.2-2.4 0-0.7 0-1.5 0.2-2.3 0.1-0.5 0.6-0.9 1.1-1 1.2-0.1 2.5-0.1 3.7-0.1s2.5 0 3.7 0.1c0.5 0.1 1 0.4 1.1 1 0.2 0.8 0.2 1.6 0.2 2.3 0 0.8 0 1.6-0.2 2.4z\"></path></g>\n<g id=\"youtube\"><path d=\"M6.6 0h-0.9l-0.6 2.3-0.6-2.3h-1c0.2 0.6 0.4 1.1 0.6 1.7 0.3 0.8 0.5 1.5 0.5 1.9v2.4h0.9v-2.4l1.1-3.6zM9 4.5v-1.5c0-0.5-0.1-0.8-0.3-1.1s-0.5-0.4-0.9-0.4c-0.4 0-0.7 0.2-0.9 0.5-0.2 0.2-0.3 0.5-0.3 1v1.6c0 0.5 0.1 0.8 0.3 1 0.2 0.3 0.5 0.4 0.9 0.4s0.7-0.2 0.9-0.5c0.2-0.1 0.3-0.5 0.3-1zM8.2 4.7c0 0.4-0.1 0.6-0.4 0.6s-0.4-0.2-0.4-0.6v-1.9c0-0.4 0.1-0.6 0.4-0.6s0.4 0.2 0.4 0.6v1.9zM12 6v-4.5h-0.8v3.4c-0.2 0.3-0.3 0.4-0.5 0.4-0.1 0-0.2-0.1-0.2-0.2 0 0 0-0.1 0-0.3v-3.3h-0.8v3.5c0 0.3 0 0.5 0.1 0.7 0 0.2 0.2 0.3 0.5 0.3s0.6-0.2 0.9-0.5v0.5h0.8z\"></path><path d=\"M12.4 10.5c-0.3 0-0.4 0.2-0.4 0.6v0.4h0.8v-0.4c0-0.4-0.1-0.6-0.4-0.6z\"></path><path d=\"M9.5 10.5c-0.1 0-0.3 0.1-0.4 0.2v2.7c0.1 0.1 0.3 0.2 0.4 0.2 0.2 0 0.3-0.2 0.3-0.6v-1.9c0-0.4-0.1-0.6-0.3-0.6z\"></path><path d=\"M14.4 8.3c-0.2-0.7-0.8-1.3-1.4-1.3-1.6-0.2-3.3-0.2-5-0.2s-3.3 0-5 0.2c-0.6 0-1.2 0.6-1.4 1.3-0.2 1-0.2 2.1-0.2 3.1s0 2.1 0.2 3.1c0.2 0.7 0.7 1.2 1.4 1.3 1.7 0.2 3.3 0.2 5 0.2s3.3 0 5-0.2c0.7-0.1 1.3-0.6 1.4-1.3 0.2-1 0.2-2.1 0.2-3.1s0-2.1-0.2-3.1zM5.2 9.2h-1v5.1h-0.9v-5.1h-0.9v-0.9h2.8v0.9zM7.6 14.3h-0.8v-0.5c-0.3 0.4-0.6 0.5-0.9 0.5s-0.4-0.1-0.5-0.3c0-0.1-0.1-0.3-0.1-0.7v-3.5h0.8v3.2c0 0.2 0 0.3 0 0.3 0 0.1 0.1 0.2 0.2 0.2 0.2 0 0.3-0.1 0.5-0.4v-3.3h0.8v4.5zM10.6 12.9c0 0.4 0 0.7-0.1 0.9-0.1 0.3-0.3 0.5-0.6 0.5s-0.6-0.2-0.8-0.5v0.4h-0.8v-5.9h0.8v1.9c0.3-0.3 0.5-0.5 0.8-0.5s0.5 0.2 0.6 0.5c0.1 0.2 0.1 0.5 0.1 0.9v1.8zM13.6 12.2h-1.6v0.8c0 0.4 0.1 0.6 0.4 0.6 0.2 0 0.3-0.1 0.4-0.3 0 0 0-0.2 0-0.5h0.8v0.1c0 0.3 0 0.4 0 0.5 0 0.2-0.1 0.3-0.2 0.5-0.2 0.3-0.5 0.5-1 0.5-0.4 0-0.7-0.2-1-0.5-0.2-0.2-0.3-0.6-0.3-1v-1.5c0-0.5 0.1-0.8 0.2-1 0.2-0.3 0.5-0.5 1-0.5 0.4 0 0.7 0.2 0.9 0.5 0.2 0.2 0.2 0.6 0.2 1v0.8z\"></path></g>\n</defs></svg>\n</iron-iconset-svg>`;\n\ndocument.head.appendChild($_documentContainer.content);\n\n/* NOTICE: Generated with 'gulp icons' */\n/**\n@license\nCopyright (c) 2019 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\n;\n"
      }
     ]
    },
    {
     "id": 180,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-lumo-styles@1.6.1/node_modules/@vaadin/vaadin-lumo-styles/icons.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-lumo-styles@1.6.1/node_modules/@vaadin/vaadin-lumo-styles/icons.js",
       "source": "import './version.js';\nimport '@polymer/iron-icon/iron-icon.js';\nimport './iconset.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-lumo-styles@1.6.1/node_modules/@vaadin/vaadin-lumo-styles/iconset.js",
       "source": "import './version.js';\nimport '@polymer/iron-iconset-svg/iron-iconset-svg.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<iron-iconset-svg size=\"1000\" name=\"lumo\">\n<svg xmlns=\"http://www.w3.org/2000/svg\">\n<defs>\n<g id=\"angle-down\"><path d=\"M283 391c-18-16-46-15-63 4-16 18-15 46 3 63l244 224c17 15 43 15 60 0l250-229c18-16 20-45 3-63-16-18-45-20-63-4l-220 203-214-198z\"></path></g>\n<g id=\"angle-left\"><path d=\"M601 710c16 18 15 46-3 63-18 16-46 15-63-4l-224-244c-15-17-15-43 0-59l229-250c16-18 45-20 63-4 18 16 20 45 3 63l-203 220 198 215z\"></path></g>\n<g id=\"angle-right\"><path d=\"M399 275c-16-18-15-46 3-63 18-16 46-15 63 4l224 244c15 17 15 43 0 59l-229 250c-16 18-45 20-63 4-18-16-20-45-3-63l203-220-198-215z\"></path></g>\n<g id=\"angle-up\"><path d=\"M283 635c-18 16-46 15-63-3-16-18-15-46 3-63l244-224c17-15 43-15 60 0l250 229c18 16 20 45 3 63-16 18-45 20-63 3l-220-202L283 635z\"></path></g>\n<g id=\"arrow-down\"><path d=\"M538 646l125-112c15-14 39-12 53 4 14 15 12 39-4 53l-187 166c0 0 0 0 0 0-14 13-36 12-50 0l-187-166c-15-14-17-37-4-53 14-15 37-17 53-4L462 646V312c0-21 17-38 38-37s38 17 37 37v334z\"></path></g>\n<g id=\"arrow-left\"><path d=\"M375 538l111 125c14 15 12 39-3 53-15 14-39 12-53-4l-166-187c0 0 0 0 0 0-13-14-12-36 0-50l166-187c14-15 37-17 53-4 15 14 17 37 3 53L375 463h333c21 0 38 17 38 37 0 21-17 38-38 38h-333z\"></path></g>\n<g id=\"arrow-right\"><path d=\"M625 538h-333c-21 0-38-17-38-38 0-21 17-38 38-37h333l-111-126c-14-15-12-39 3-53 15-14 39-12 53 4l166 187c13 14 13 36 0 50 0 0 0 0 0 0l-166 187c-14 15-37 17-53 4-15-14-17-37-3-53l111-125z\"></path></g>\n<g id=\"arrow-up\"><path d=\"M538 354V688c0 21-17 38-38 37s-38-17-38-38V354l-125 112c-15 14-39 12-53-4-14-15-12-39 4-53l187-166c14-13 36-13 50 0 0 0 0 0 0 0l187 166c15 14 17 37 4 53-14 15-37 17-53 4L538 354z\"></path></g>\n<g id=\"bar-chart\"><path d=\"M175 500h108c28 0 50 22 50 50v233c0 28-22 50-50 50H175c-28 0-50-22-50-50v-233c0-28 22-50 50-50z m33 67c-9 0-17 7-16 16v167c0 9 7 17 16 17h42c9 0 17-7 17-17v-167c0-9-7-17-17-16H208zM446 167h108c28 0 50 22 50 50v566c0 28-22 50-50 50h-108c-28 0-50-22-50-50V217c0-28 22-50 50-50z m33 66c-9 0-17 7-17 17v500c0 9 7 17 17 17h42c9 0 17-7 16-17V250c0-9-7-17-16-17h-42zM717 333h108c28 0 50 22 50 50v400c0 28-22 50-50 50h-108c-28 0-50-22-50-50V383c0-28 22-50 50-50z m33 67c-9 0-17 7-17 17v333c0 9 7 17 17 17h42c9 0 17-7 16-17v-333c0-9-7-17-16-17h-42z\"></path></g>\n<g id=\"bell\"><path d=\"M367 675H292v-258C292 325 366 250 459 250H458V208c0-23 18-42 42-41 23 0 42 18 42 41v42h-1C634 250 708 325 708 417V675h-75v-258c0-51-41-92-91-92h-84C408 325 367 366 367 417V675z m-159 37c0-21 17-38 38-37h508c21 0 37 17 38 37 0 21-17 38-38 38H246C225 750 208 733 208 713z m230 71h125v32c0 17-14 31-32 31h-62c-17 0-32-14-31-31v-32z\"></path></g>\n<g id=\"calendar\"><path d=\"M375 208h250v-20C625 176 634 167 646 167h41C699 167 708 176 708 188V208h74c23 0 41 19 41 42v42C823 315 804 333 782 333H218C196 333 177 315 177 292V250C177 227 196 208 218 208H292v-20C292 176 301 167 313 167h41C366 167 375 176 375 188V208zM229 375h42C283 375 292 384 292 396v41C292 449 282 458 271 458h-42C217 458 208 449 208 437v-41C208 384 218 375 229 375z m125 0h42C408 375 417 384 417 396v41C417 449 407 458 396 458h-42C342 458 333 449 333 437v-41C333 384 343 375 354 375z m125 0h42C533 375 542 384 542 396v41C542 449 532 458 521 458h-42C467 458 458 449 458 437v-41C458 384 468 375 479 375z m-250 125h42C283 500 292 509 292 521v41C292 574 282 583 271 583h-42C217 583 208 574 208 562v-41C208 509 218 500 229 500z m125 0h42C408 500 417 509 417 521v41C417 574 407 583 396 583h-42C342 583 333 574 333 562v-41C333 509 343 500 354 500z m125 0h42c12 0 21 9 21 21v41C542 574 532 583 521 583h-42C467 583 458 574 458 562v-41C458 509 468 500 479 500z m-250 125h42C283 625 292 634 292 646v41C292 699 282 708 271 708h-42C217 708 208 699 208 687v-41C208 634 218 625 229 625z m125 0h42C408 625 417 634 417 646v41C417 699 407 708 396 708h-42C342 708 333 699 333 687v-41C333 634 343 625 354 625z m125 0h42c12 0 21 9 21 21v41C542 699 532 708 521 708h-42C467 708 458 699 458 687v-41C458 634 468 625 479 625z m125-250h42C658 375 667 384 667 396v41C667 449 657 458 646 458h-42C592 458 583 449 583 437v-41C583 384 593 375 604 375z m0 125h42c12 0 21 9 21 21v41C667 574 657 583 646 583h-42C592 583 583 574 583 562v-41C583 509 593 500 604 500z m0 125h42c12 0 21 9 21 21v41C667 699 657 708 646 708h-42C592 708 583 699 583 687v-41C583 634 593 625 604 625z m125 0h42c12 0 21 9 21 21v41C792 699 782 708 771 708h-42C717 708 708 699 708 687v-41C708 634 718 625 729 625z m-500 125h42C283 750 292 759 292 771v41C292 824 282 833 271 833h-42C217 833 208 824 208 812v-41C208 759 218 750 229 750z m125 0h42C408 750 417 759 417 771v41C417 824 407 833 396 833h-42C342 833 333 824 333 812v-41C333 759 343 750 354 750z m125 0h42c12 0 21 9 21 21v41C542 824 532 833 521 833h-42C467 833 458 824 458 812v-41C458 759 468 750 479 750z m125 0h42c12 0 21 9 21 21v41C667 824 657 833 646 833h-42C592 833 583 824 583 812v-41C583 759 593 750 604 750z m125 0h42c12 0 21 9 21 21v41C792 824 782 833 771 833h-42C717 833 708 824 708 812v-41C708 759 718 750 729 750z m0-250h42c12 0 21 9 21 21v41C792 574 782 583 771 583h-42C717 583 708 574 708 562v-41C708 509 718 500 729 500z m0-125h42C783 375 792 384 792 396v41C792 449 782 458 771 458h-42C717 458 708 449 708 437v-41C708 384 718 375 729 375z\"></path></g>\n<g id=\"checkmark\"><path d=\"M318 493c-15-15-38-15-53 0-15 15-15 38 0 53l136 136c15 15 38 15 53 0l323-322c15-15 15-38 0-53-15-15-38-15-54 0l-295 296-110-110z\"></path></g>\n<g id=\"chevron-down\"><path d=\"M533 654l210-199c9-9 9-23 0-32C739 419 733 417 726 417H274C261 417 250 427 250 439c0 6 2 12 7 16l210 199c18 17 48 17 66 0z\"></path></g>\n<g id=\"chevron-left\"><path d=\"M346 533l199 210c9 9 23 9 32 0 4-4 7-10 6-17V274C583 261 573 250 561 250c-6 0-12 2-16 7l-199 210c-17 18-17 48 0 66z\"></path></g>\n<g id=\"chevron-right\"><path d=\"M654 533L455 743c-9 9-23 9-32 0C419 739 417 733 417 726V274C417 261 427 250 439 250c6 0 12 2 16 7l199 210c17 18 17 48 0 66z\"></path></g>\n<g id=\"chevron-up\"><path d=\"M533 346l210 199c9 9 9 23 0 32-4 4-10 7-17 6H274C261 583 250 573 250 561c0-6 2-12 7-16l210-199c18-17 48-17 66 0z\"></path></g>\n<g id=\"clock\"><path d=\"M538 489l85 85c15 15 15 38 0 53-15 15-38 15-53 0l-93-93a38 38 0 0 1-2-2C467 525 462 515 462 504V308c0-21 17-38 38-37 21 0 38 17 37 37v181zM500 833c-184 0-333-149-333-333s149-333 333-333 333 149 333 333-149 333-333 333z m0-68c146 0 265-118 265-265 0-146-118-265-265-265-146 0-265 118-265 265 0 146 118 265 265 265z\"></path></g>\n<g id=\"cog\"><path d=\"M833 458l-81-18c-8-25-17-50-29-75L767 292 708 233l-72 49c-21-12-46-25-75-30L542 167h-84l-19 79c-25 8-50 17-71 30L296 233 233 296l47 69c-12 21-21 46-29 71L167 458v84l84 25c8 25 17 50 29 75L233 708 292 767l76-44c21 12 46 25 75 29L458 833h84l19-81c25-8 50-17 75-29L708 767l59-59-44-66c12-21 25-46 29-75L833 542v-84z m-333 217c-96 0-175-79-175-175 0-96 79-175 175-175 96 0 175 79 175 175 0 96-79 175-175 175z\"></path></g>\n<g id=\"cross\"><path d=\"M445 500l-142-141c-15-15-15-40 0-56 15-15 40-15 56 0L500 445l141-142c15-15 40-15 56 0 15 15 15 40 0 56L555 500l142 141c15 15 15 40 0 56-15 15-40 15-56 0L500 555l-141 142c-15 15-40 15-56 0-15-15-15-40 0-56L445 500z\"></path></g>\n<g id=\"download\"><path d=\"M538 521l125-112c15-14 39-12 53 4 14 15 12 39-4 53l-187 166a38 38 0 0 1 0 0c-14 13-36 12-50 0l-187-166c-15-14-17-37-4-53 14-15 37-17 53-4L462 521V188c0-21 17-38 38-38s38 17 37 38v333zM758 704c0-21 17-38 38-37 21 0 38 17 37 37v92c0 21-17 38-37 37H204c-21 0-38-17-37-37v-92c0-21 17-38 37-37s38 17 38 37v54h516v-54z\"></path></g>\n<g id=\"dropdown\"><path d=\"M317 393c-15-14-39-13-53 3-14 15-13 39 3 53l206 189c14 13 36 13 50 0l210-193c15-14 17-38 3-53-14-15-38-17-53-3l-185 171L317 393z\"></path></g>\n<g id=\"edit\"><path d=\"M673 281l62 56-205 233c-9 10-38 24-85 39a8 8 0 0 1-5 0c-4-1-7-6-6-10l0 0c14-47 25-76 35-86l204-232z m37-42l52-59c15-17 41-18 58-2 17 16 18 42 3 59L772 295l-62-56zM626 208l-67 75h-226C305 283 283 306 283 333v334C283 695 306 717 333 717h334c28 0 50-22 50-50v-185L792 398v269C792 736 736 792 667 792H333C264 792 208 736 208 667V333C208 264 264 208 333 208h293z\"></path></g>\n<g id=\"error\"><path d=\"M500 833c-184 0-333-149-333-333s149-333 333-333 333 149 333 333-149 333-333 333z m0-68c146 0 265-118 265-265 0-146-118-265-265-265-146 0-265 118-265 265 0 146 118 265 265 265zM479 292h42c12 0 21 9 20 20l-11 217c0 8-6 13-13 13h-34c-7 0-13-6-13-13l-11-217C459 301 468 292 479 292zM483 608h34c12 0 21 9 20 21v33c0 12-9 21-20 21h-34c-12 0-21-9-21-21v-33c0-12 9-21 21-21z\"></path></g>\n<g id=\"eye\"><path d=\"M500 750c-187 0-417-163-417-250s230-250 417-250 417 163 417 250-230 250-417 250z m-336-231c20 22 47 46 78 69C322 644 411 678 500 678s178-34 258-90c31-22 59-46 78-69 6-7 12-14 16-19-4-6-9-12-16-19-20-22-47-46-78-69C678 356 589 322 500 322s-178 34-258 90c-31 22-59 46-78 69-6 7-12 14-16 19 4 6 9 12 16 19zM500 646c-81 0-146-65-146-146s65-146 146-146 146 65 146 146-65 146-146 146z m0-75c39 0 71-32 71-71 0-39-32-71-71-71-39 0-71 32-71 71 0 39 32 71 71 71z\"></path></g>\n<g id=\"eye-disabled\"><path d=\"M396 735l60-60c15 2 30 3 44 3 89 0 178-34 258-90 31-22 59-46 78-69 6-7 12-14 16-19-4-6-9-12-16-19-20-22-47-46-78-69-8-5-15-11-23-15l50-51C862 397 917 458 917 500c0 87-230 250-417 250-34 0-69-5-104-15zM215 654C138 603 83 542 83 500c0-87 230-250 417-250 34 0 69 5 104 15l-59 60c-15-2-30-3-45-3-89 0-178 34-258 90-31 22-59 46-78 69-6 7-12 14-16 19 4 6 9 12 16 19 20 22 47 46 78 69 8 5 16 11 24 16L215 654z m271-9l159-159c0 5 1 9 1 14 0 81-65 146-146 146-5 0-9 0-14-1z m-131-131C354 510 354 505 354 500c0-81 65-146 146-146 5 0 10 0 14 1l-159 159z m-167 257L780 179c12-12 32-12 44 0 12 12 12 32 0 44L232 815c-12 12-32 12-44 0s-12-32 0-44z\"></path></g>\n<g id=\"menu\"><path d=\"M167 292c0-23 19-42 41-42h584C815 250 833 268 833 292c0 23-19 42-41 41H208C185 333 167 315 167 292z m0 208c0-23 19-42 41-42h584C815 458 833 477 833 500c0 23-19 42-41 42H208C185 542 167 523 167 500z m0 208c0-23 19-42 41-41h584C815 667 833 685 833 708c0 23-19 42-41 42H208C185 750 167 732 167 708z\"></path></g>\n<g id=\"minus\"><path d=\"M261 461c-22 0-39 18-39 39 0 22 18 39 39 39h478c22 0 39-18 39-39 0-22-18-39-39-39H261z\"></path></g>\n<g id=\"ordered-list\"><path d=\"M138 333V198H136l-43 28v-38l45-31h45V333H138z m-61 128c0-35 27-59 68-59 39 0 66 21 66 53 0 20-11 37-43 64l-29 27v2h74V583H80v-30l55-52c26-24 32-33 33-43 0-13-10-22-24-22-15 0-26 10-26 25v1h-41v-1zM123 759v-31h21c15 0 25-8 25-21 0-13-10-21-25-21-15 0-26 9-26 23h-41c1-34 27-56 68-57 39 0 66 20 66 49 0 20-14 36-33 39v3c24 3 40 19 39 41 0 32-30 54-73 54-41 0-69-22-70-57h43c1 13 11 22 28 22 16 0 27-9 27-22 0-14-10-22-28-22h-21zM333 258c0-18 15-33 34-33h516c18 0 33 15 34 33 0 18-15 33-34 34H367c-18 0-33-15-34-34z m0 250c0-18 15-33 34-33h516c18 0 33 15 34 33s-15 33-34 34H367c-18 0-33-15-34-34z m0 250c0-18 15-33 34-33h516c18 0 33 15 34 33s-15 33-34 34H367c-18 0-33-15-34-34z\"></path></g>\n<g id=\"phone\"><path d=\"M296 208l42-37c17-15 44-13 58 4a42 42 0 0 1 5 7L459 282c12 20 5 45-15 57l-7 4c-17 10-25 30-19 48l20 66a420 420 0 0 0 93 157l41 45c13 14 35 17 51 8l7-5c20-12 45-5 57 16L745 777c12 20 5 45-15 57a42 42 0 0 1-8 4l-52 17c-61 21-129 4-174-43l-50-52c-81-85-141-189-175-302l-24-78c-19-62 0-129 49-172z\"></path></g>\n<g id=\"photo\"><path d=\"M208 167h584c69 0 125 56 125 125v416c0 69-56 125-125 125H208c-69 0-125-56-125-125V292c0-69 56-125 125-125z m584 75H208c-28 0-50 22-50 50v416c0 28 22 50 50 50h584c28 0 50-22 50-50V292c0-28-22-50-50-50zM239 740l167-167c12-12 31-14 45-6l73 43 172-201c13-15 34-18 50-7l95 67v92l-111-78-169 199c-12 14-32 17-47 8l-76-43-111 111H229c2-7 5-13 10-18zM458 427C458 490 407 542 344 542S229 490 229 427c0-63 51-115 115-115S458 364 458 427z m-62 0C396 398 373 375 344 375S292 398 292 427c0 29 23 52 52 52s52-23 52-52z\"></path></g>\n<g id=\"play\"><path d=\"M689 528l-298 175c-13 8-34 8-48 0-6-4-10-9-10-14V311C333 300 348 292 367 292c9 0 17 2 24 5l298 175c26 15 26 40 0 56z\"></path></g>\n<g id=\"plus\"><path d=\"M461 461H261c-22 0-39 18-39 39 0 22 18 39 39 39h200v200c0 22 18 39 39 39 22 0 39-18 39-39v-200h200c22 0 39-18 39-39 0-22-18-39-39-39h-200V261c0-22-18-39-39-39-22 0-39 18-39 39v200z\"></path></g>\n<g id=\"redo\"><path d=\"M290 614C312 523 393 458 491 458c55 0 106 22 144 57l-88 88c-3 3-5 7-5 11 0 8 6 15 15 15l193-5c17 0 31-15 31-32l5-192c0-4-1-8-4-11-6-6-16-6-22 0l-66 67C641 406 570 375 491 375c-136 0-248 90-281 215-1 2-1 5-1 8-8 44 45 68 73 32 4-5 7-11 8-16z\"></path></g>\n<g id=\"reload\"><path d=\"M500 233V137c0-9 7-16 15-16 4 0 8 2 10 4l133 140c12 12 12 32 0 45l-133 140c-6 6-15 6-21 0C502 447 500 443 500 438V308c-117 0-212 95-212 213 0 117 95 212 212 212 117 0 212-95 212-212 0-21 17-38 38-38s38 17 37 38c0 159-129 288-287 287-159 0-288-129-288-287 0-159 129-288 288-288z\"></path></g>\n<g id=\"search\"><path d=\"M662 603l131 131c16 16 16 42 0 59-16 16-43 16-59 0l-131-131C562 691 512 708 458 708c-138 0-250-112-250-250 0-138 112-250 250-250 138 0 250 112 250 250 0 54-17 104-46 145zM458 646c104 0 188-84 188-188S562 271 458 271 271 355 271 458s84 188 187 188z\"></path></g>\n<g id=\"undo\"><path d=\"M710 614C688 523 607 458 509 458c-55 0-106 22-144 57l88 88c3 3 5 7 5 11 0 8-6 15-15 15l-193-5c-17 0-31-15-31-32L214 400c0-4 1-8 4-11 6-6 16-6 22 0l66 67C359 406 430 375 509 375c136 0 248 90 281 215 1 2 1 5 1 8 8 44-45 68-73 32-4-5-7-11-8-16z\"></path></g>\n<g id=\"unordered-list\"><path d=\"M146 325c-42 0-67-26-67-63 0-37 25-63 67-63 42 0 67 26 67 63 0 37-25 63-67 63z m0 250c-42 0-67-26-67-63 0-37 25-63 67-63 42 0 67 26 67 63 0 37-25 63-67 63z m0 250c-42 0-67-26-67-63 0-37 25-63 67-63 42 0 67 26 67 63 0 37-25 63-67 63zM333 258c0-18 15-33 34-33h516c18 0 33 15 34 33 0 18-15 33-34 34H367c-18 0-33-15-34-34z m0 250c0-18 15-33 34-33h516c18 0 33 15 34 33s-15 33-34 34H367c-18 0-33-15-34-34z m0 250c0-18 15-33 34-33h516c18 0 33 15 34 33s-15 33-34 34H367c-18 0-33-15-34-34z\"></path></g>\n<g id=\"upload\"><path d=\"M454 271V604c0 21-17 38-37 38s-38-17-38-38V271L254 382c-15 14-39 12-53-3-14-15-12-39 3-53L391 160c14-13 36-13 51-1 0 0 0 0 0 1l187 166c15 14 17 37 3 53-14 15-37 17-53 3L454 271zM675 704c0-21 17-38 37-37 21 0 38 17 38 37v92c0 21-17 38-38 37H121c-21 0-38-17-38-37v-92c0-21 17-38 38-37s38 17 37 37v54h517v-54z\"></path></g>\n<g id=\"user\"><path d=\"M500 500c-69 0-125-56-125-125s56-125 125-125 125 56 125 125-56 125-125 125z m-292 292c0-115 131-208 292-209s292 93 292 209H208z\"></path></g>\n</defs>\n</svg>\n</iron-iconset-svg>`;\n\ndocument.head.appendChild($_documentContainer.content);\n\n/* NOTICE: Generated with 'gulp icons' */\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\n;\n"
      }
     ]
    }
   ]
  },
  {
   "id": 2,
   "names": [],
   "files": [
    "VAADIN/build/vaadin-2-a75f9b4b63eff3762198.cache.js"
   ],
   "hash": "05c1cf7e81722d54a1e3",
   "modules": [
    {
     "id": 63,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-combo-box@6.0.1/node_modules/@vaadin/vaadin-combo-box/src/vaadin-combo-box-placeholder.js",
     "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/*\n * Placeholder object class representing items being loaded.\n *\n * @private\n */\nexport const ComboBoxPlaceholder = class ComboBoxPlaceholder {\n  toString() {\n    return '';\n  }\n};\n"
    },
    {
     "id": 64,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-date-picker@5.0.0/node_modules/@vaadin/vaadin-date-picker/src/vaadin-date-picker-helper.js",
     "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Get ISO 8601 week number for the given date.\n *\n * @param {!Date} Date object\n * @return {number} Week number\n */\nexport function getISOWeekNumber(date) {\n  // Ported from Vaadin Framework method com.vaadin.client.DateTimeService.getISOWeekNumber(date)\n  let dayOfWeek = date.getDay(); // 0 == sunday\n\n  // ISO 8601 use weeks that start on monday so we use\n  // mon=1,tue=2,...sun=7;\n  if (dayOfWeek === 0) {\n    dayOfWeek = 7;\n  }\n  // Find nearest thursday (defines the week in ISO 8601). The week number\n  // for the nearest thursday is the same as for the target date.\n  const nearestThursdayDiff = 4 - dayOfWeek; // 4 is thursday\n  const nearestThursday = new Date(date.getTime() + nearestThursdayDiff * 24 * 3600 * 1000);\n\n  const firstOfJanuary = new Date(0, 0);\n  firstOfJanuary.setFullYear(nearestThursday.getFullYear());\n\n  const timeDiff = nearestThursday.getTime() - firstOfJanuary.getTime();\n\n  // Rounding the result, as the division doesn't result in an integer\n  // when the given date is inside daylight saving time period.\n  const daysSinceFirstOfJanuary = Math.round(timeDiff / (24 * 3600 * 1000));\n\n  return Math.floor(daysSinceFirstOfJanuary / 7 + 1);\n}\n\n/**\n * Check if two dates are equal.\n *\n * @param {Date} date1\n * @param {Date} date2\n * @return {boolean} True if the given date objects refer to the same date\n */\nexport function dateEquals(date1, date2) {\n  return (\n    date1 instanceof Date &&\n    date2 instanceof Date &&\n    date1.getFullYear() === date2.getFullYear() &&\n    date1.getMonth() === date2.getMonth() &&\n    date1.getDate() === date2.getDate()\n  );\n}\n\n/**\n * Check if the given date is in the range of allowed dates.\n *\n * @param {!Date} date The date to check\n * @param {Date} min Range start\n * @param {Date} max Range end\n * @return {boolean} True if the date is in the range\n */\nexport function dateAllowed(date, min, max) {\n  return (!min || date >= min) && (!max || date <= max);\n}\n\n/**\n * Get closest date from array of dates.\n *\n * @param {!Date} date The date to compare dates with\n * @param {!Array<!Date>} dates Array of date objects\n * @return {!Date} Closest date\n */\nexport function getClosestDate(date, dates) {\n  return dates\n    .filter((date) => date !== undefined)\n    .reduce((closestDate, candidate) => {\n      if (!candidate) {\n        return closestDate;\n      }\n\n      if (!closestDate) {\n        return candidate;\n      }\n\n      var candidateDiff = Math.abs(date.getTime() - candidate.getTime());\n      var closestDateDiff = Math.abs(closestDate.getTime() - date.getTime());\n      return candidateDiff < closestDateDiff ? candidate : closestDate;\n    });\n}\n\n/**\n * Extracts the basic component parts of a date (day, month and year)\n * to the expected format.\n * @param {!Date} date\n * @return {{day: number, month: number, year: number}}\n */\nexport function extractDateParts(date) {\n  return {\n    day: date.getDate(),\n    month: date.getMonth(),\n    year: date.getFullYear()\n  };\n}\n"
    },
    {
     "id": 76,
     "name": "../node_modules/.pnpm/@polymer+iron-a11y-keys-behavior@3.0.1/node_modules/@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js",
     "source": "/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\n/**\n * Chrome uses an older version of DOM Level 3 Keyboard Events\n *\n * Most keys are labeled as text, but some are Unicode codepoints.\n * Values taken from:\n * http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/keyset.html#KeySet-Set\n */\nvar KEY_IDENTIFIER = {\n  'U+0008': 'backspace',\n  'U+0009': 'tab',\n  'U+001B': 'esc',\n  'U+0020': 'space',\n  'U+007F': 'del'\n};\n\n/**\n * Special table for KeyboardEvent.keyCode.\n * KeyboardEvent.keyIdentifier is better, and KeyBoardEvent.key is even better\n * than that.\n *\n * Values from:\n * https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent.keyCode#Value_of_keyCode\n */\nvar KEY_CODE = {\n  8: 'backspace',\n  9: 'tab',\n  13: 'enter',\n  27: 'esc',\n  33: 'pageup',\n  34: 'pagedown',\n  35: 'end',\n  36: 'home',\n  32: 'space',\n  37: 'left',\n  38: 'up',\n  39: 'right',\n  40: 'down',\n  46: 'del',\n  106: '*'\n};\n\n/**\n * MODIFIER_KEYS maps the short name for modifier keys used in a key\n * combo string to the property name that references those same keys\n * in a KeyboardEvent instance.\n */\nvar MODIFIER_KEYS = {\n  'shift': 'shiftKey',\n  'ctrl': 'ctrlKey',\n  'alt': 'altKey',\n  'meta': 'metaKey'\n};\n\n/**\n * KeyboardEvent.key is mostly represented by printable character made by\n * the keyboard, with unprintable keys labeled nicely.\n *\n * However, on OS X, Alt+char can make a Unicode character that follows an\n * Apple-specific mapping. In this case, we fall back to .keyCode.\n */\nvar KEY_CHAR = /[a-z0-9*]/;\n\n/**\n * Matches a keyIdentifier string.\n */\nvar IDENT_CHAR = /U\\+/;\n\n/**\n * Matches arrow keys in Gecko 27.0+\n */\nvar ARROW_KEY = /^arrow/;\n\n/**\n * Matches space keys everywhere (notably including IE10's exceptional name\n * `spacebar`).\n */\nvar SPACE_KEY = /^space(bar)?/;\n\n/**\n * Matches ESC key.\n *\n * Value from: http://w3c.github.io/uievents-key/#key-Escape\n */\nvar ESC_KEY = /^escape$/;\n\n/**\n * Transforms the key.\n * @param {string} key The KeyBoardEvent.key\n * @param {Boolean} [noSpecialChars] Limits the transformation to\n * alpha-numeric characters.\n */\nfunction transformKey(key, noSpecialChars) {\n  var validKey = '';\n  if (key) {\n    var lKey = key.toLowerCase();\n    if (lKey === ' ' || SPACE_KEY.test(lKey)) {\n      validKey = 'space';\n    } else if (ESC_KEY.test(lKey)) {\n      validKey = 'esc';\n    } else if (lKey.length == 1) {\n      if (!noSpecialChars || KEY_CHAR.test(lKey)) {\n        validKey = lKey;\n      }\n    } else if (ARROW_KEY.test(lKey)) {\n      validKey = lKey.replace('arrow', '');\n    } else if (lKey == 'multiply') {\n      // numpad '*' can map to Multiply on IE/Windows\n      validKey = '*';\n    } else {\n      validKey = lKey;\n    }\n  }\n  return validKey;\n}\n\nfunction transformKeyIdentifier(keyIdent) {\n  var validKey = '';\n  if (keyIdent) {\n    if (keyIdent in KEY_IDENTIFIER) {\n      validKey = KEY_IDENTIFIER[keyIdent];\n    } else if (IDENT_CHAR.test(keyIdent)) {\n      keyIdent = parseInt(keyIdent.replace('U+', '0x'), 16);\n      validKey = String.fromCharCode(keyIdent).toLowerCase();\n    } else {\n      validKey = keyIdent.toLowerCase();\n    }\n  }\n  return validKey;\n}\n\nfunction transformKeyCode(keyCode) {\n  var validKey = '';\n  if (Number(keyCode)) {\n    if (keyCode >= 65 && keyCode <= 90) {\n      // ascii a-z\n      // lowercase is 32 offset from uppercase\n      validKey = String.fromCharCode(32 + keyCode);\n    } else if (keyCode >= 112 && keyCode <= 123) {\n      // function keys f1-f12\n      validKey = 'f' + (keyCode - 112 + 1);\n    } else if (keyCode >= 48 && keyCode <= 57) {\n      // top 0-9 keys\n      validKey = String(keyCode - 48);\n    } else if (keyCode >= 96 && keyCode <= 105) {\n      // num pad 0-9\n      validKey = String(keyCode - 96);\n    } else {\n      validKey = KEY_CODE[keyCode];\n    }\n  }\n  return validKey;\n}\n\n/**\n * Calculates the normalized key for a KeyboardEvent.\n * @param {KeyboardEvent} keyEvent\n * @param {Boolean} [noSpecialChars] Set to true to limit keyEvent.key\n * transformation to alpha-numeric chars. This is useful with key\n * combinations like shift + 2, which on FF for MacOS produces\n * keyEvent.key = @\n * To get 2 returned, set noSpecialChars = true\n * To get @ returned, set noSpecialChars = false\n */\nfunction normalizedKeyForEvent(keyEvent, noSpecialChars) {\n  // Fall back from .key, to .detail.key for artifical keyboard events,\n  // and then to deprecated .keyIdentifier and .keyCode.\n  if (keyEvent.key) {\n    return transformKey(keyEvent.key, noSpecialChars);\n  }\n  if (keyEvent.detail && keyEvent.detail.key) {\n    return transformKey(keyEvent.detail.key, noSpecialChars);\n  }\n  return transformKeyIdentifier(keyEvent.keyIdentifier) ||\n      transformKeyCode(keyEvent.keyCode) || '';\n}\n\nfunction keyComboMatchesEvent(keyCombo, event) {\n  // For combos with modifiers we support only alpha-numeric keys\n  var keyEvent = normalizedKeyForEvent(event, keyCombo.hasModifiers);\n  return keyEvent === keyCombo.key &&\n      (!keyCombo.hasModifiers ||\n       (!!event.shiftKey === !!keyCombo.shiftKey &&\n        !!event.ctrlKey === !!keyCombo.ctrlKey &&\n        !!event.altKey === !!keyCombo.altKey &&\n        !!event.metaKey === !!keyCombo.metaKey));\n}\n\nfunction parseKeyComboString(keyComboString) {\n  if (keyComboString.length === 1) {\n    return {combo: keyComboString, key: keyComboString, event: 'keydown'};\n  }\n  return keyComboString.split('+')\n      .reduce(function(parsedKeyCombo, keyComboPart) {\n        var eventParts = keyComboPart.split(':');\n        var keyName = eventParts[0];\n        var event = eventParts[1];\n\n        if (keyName in MODIFIER_KEYS) {\n          parsedKeyCombo[MODIFIER_KEYS[keyName]] = true;\n          parsedKeyCombo.hasModifiers = true;\n        } else {\n          parsedKeyCombo.key = keyName;\n          parsedKeyCombo.event = event || 'keydown';\n        }\n\n        return parsedKeyCombo;\n      }, {combo: keyComboString.split(':').shift()});\n}\n\nfunction parseEventString(eventString) {\n  return eventString.trim().split(' ').map(function(keyComboString) {\n    return parseKeyComboString(keyComboString);\n  });\n}\n\n/**\n * `Polymer.IronA11yKeysBehavior` provides a normalized interface for processing\n * keyboard commands that pertain to [WAI-ARIA best\n * practices](http://www.w3.org/TR/wai-aria-practices/#kbd_general_binding). The\n * element takes care of browser differences with respect to Keyboard events and\n * uses an expressive syntax to filter key presses.\n *\n * Use the `keyBindings` prototype property to express what combination of keys\n * will trigger the callback. A key binding has the format\n * `\"KEY+MODIFIER:EVENT\": \"callback\"` (`\"KEY\": \"callback\"` or\n * `\"KEY:EVENT\": \"callback\"` are valid as well). Some examples:\n *\n *      keyBindings: {\n *        'space': '_onKeydown', // same as 'space:keydown'\n *        'shift+tab': '_onKeydown',\n *        'enter:keypress': '_onKeypress',\n *        'esc:keyup': '_onKeyup'\n *      }\n *\n * The callback will receive with an event containing the following information\n * in `event.detail`:\n *\n *      _onKeydown: function(event) {\n *        console.log(event.detail.combo); // KEY+MODIFIER, e.g. \"shift+tab\"\n *        console.log(event.detail.key); // KEY only, e.g. \"tab\"\n *        console.log(event.detail.event); // EVENT, e.g. \"keydown\"\n *        console.log(event.detail.keyboardEvent); // the original KeyboardEvent\n *      }\n *\n * Use the `keyEventTarget` attribute to set up event handlers on a specific\n * node.\n *\n * See the [demo source\n * code](https://github.com/PolymerElements/iron-a11y-keys-behavior/blob/master/demo/x-key-aware.html)\n * for an example.\n *\n * @demo demo/index.html\n * @polymerBehavior\n */\nexport const IronA11yKeysBehavior = {\n  properties: {\n    /**\n     * The EventTarget that will be firing relevant KeyboardEvents. Set it to\n     * `null` to disable the listeners.\n     * @type {?EventTarget}\n     */\n    keyEventTarget: {\n      type: Object,\n      value: function() {\n        return this;\n      }\n    },\n\n    /**\n     * If true, this property will cause the implementing element to\n     * automatically stop propagation on any handled KeyboardEvents.\n     */\n    stopKeyboardEventPropagation: {type: Boolean, value: false},\n\n    _boundKeyHandlers: {\n      type: Array,\n      value: function() {\n        return [];\n      }\n    },\n\n    // We use this due to a limitation in IE10 where instances will have\n    // own properties of everything on the \"prototype\".\n    _imperativeKeyBindings: {\n      type: Object,\n      value: function() {\n        return {};\n      }\n    }\n  },\n\n  observers: ['_resetKeyEventListeners(keyEventTarget, _boundKeyHandlers)'],\n\n\n  /**\n   * To be used to express what combination of keys  will trigger the relative\n   * callback. e.g. `keyBindings: { 'esc': '_onEscPressed'}`\n   * @type {!Object}\n   */\n  keyBindings: {},\n\n  registered: function() {\n    this._prepKeyBindings();\n  },\n\n  attached: function() {\n    this._listenKeyEventListeners();\n  },\n\n  detached: function() {\n    this._unlistenKeyEventListeners();\n  },\n\n  /**\n   * Can be used to imperatively add a key binding to the implementing\n   * element. This is the imperative equivalent of declaring a keybinding\n   * in the `keyBindings` prototype property.\n   *\n   * @param {string} eventString\n   * @param {string} handlerName\n   */\n  addOwnKeyBinding: function(eventString, handlerName) {\n    this._imperativeKeyBindings[eventString] = handlerName;\n    this._prepKeyBindings();\n    this._resetKeyEventListeners();\n  },\n\n  /**\n   * When called, will remove all imperatively-added key bindings.\n   */\n  removeOwnKeyBindings: function() {\n    this._imperativeKeyBindings = {};\n    this._prepKeyBindings();\n    this._resetKeyEventListeners();\n  },\n\n  /**\n   * Returns true if a keyboard event matches `eventString`.\n   *\n   * @param {KeyboardEvent} event\n   * @param {string} eventString\n   * @return {boolean}\n   */\n  keyboardEventMatchesKeys: function(event, eventString) {\n    var keyCombos = parseEventString(eventString);\n    for (var i = 0; i < keyCombos.length; ++i) {\n      if (keyComboMatchesEvent(keyCombos[i], event)) {\n        return true;\n      }\n    }\n    return false;\n  },\n\n  _collectKeyBindings: function() {\n    var keyBindings = this.behaviors.map(function(behavior) {\n      return behavior.keyBindings;\n    });\n\n    if (keyBindings.indexOf(this.keyBindings) === -1) {\n      keyBindings.push(this.keyBindings);\n    }\n\n    return keyBindings;\n  },\n\n  _prepKeyBindings: function() {\n    this._keyBindings = {};\n\n    this._collectKeyBindings().forEach(function(keyBindings) {\n      for (var eventString in keyBindings) {\n        this._addKeyBinding(eventString, keyBindings[eventString]);\n      }\n    }, this);\n\n    for (var eventString in this._imperativeKeyBindings) {\n      this._addKeyBinding(\n          eventString, this._imperativeKeyBindings[eventString]);\n    }\n\n    // Give precedence to combos with modifiers to be checked first.\n    for (var eventName in this._keyBindings) {\n      this._keyBindings[eventName].sort(function(kb1, kb2) {\n        var b1 = kb1[0].hasModifiers;\n        var b2 = kb2[0].hasModifiers;\n        return (b1 === b2) ? 0 : b1 ? -1 : 1;\n      })\n    }\n  },\n\n  _addKeyBinding: function(eventString, handlerName) {\n    parseEventString(eventString).forEach(function(keyCombo) {\n      this._keyBindings[keyCombo.event] =\n          this._keyBindings[keyCombo.event] || [];\n\n      this._keyBindings[keyCombo.event].push([keyCombo, handlerName]);\n    }, this);\n  },\n\n  _resetKeyEventListeners: function() {\n    this._unlistenKeyEventListeners();\n\n    if (this.isAttached) {\n      this._listenKeyEventListeners();\n    }\n  },\n\n  _listenKeyEventListeners: function() {\n    if (!this.keyEventTarget) {\n      return;\n    }\n    Object.keys(this._keyBindings).forEach(function(eventName) {\n      var keyBindings = this._keyBindings[eventName];\n      var boundKeyHandler = this._onKeyBindingEvent.bind(this, keyBindings);\n\n      this._boundKeyHandlers.push(\n          [this.keyEventTarget, eventName, boundKeyHandler]);\n\n      this.keyEventTarget.addEventListener(eventName, boundKeyHandler);\n    }, this);\n  },\n\n  _unlistenKeyEventListeners: function() {\n    var keyHandlerTuple;\n    var keyEventTarget;\n    var eventName;\n    var boundKeyHandler;\n\n    while (this._boundKeyHandlers.length) {\n      // My kingdom for block-scope binding and destructuring assignment..\n      keyHandlerTuple = this._boundKeyHandlers.pop();\n      keyEventTarget = keyHandlerTuple[0];\n      eventName = keyHandlerTuple[1];\n      boundKeyHandler = keyHandlerTuple[2];\n\n      keyEventTarget.removeEventListener(eventName, boundKeyHandler);\n    }\n  },\n\n  _onKeyBindingEvent: function(keyBindings, event) {\n    if (this.stopKeyboardEventPropagation) {\n      event.stopPropagation();\n    }\n\n    // if event has been already prevented, don't do anything\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    for (var i = 0; i < keyBindings.length; i++) {\n      var keyCombo = keyBindings[i][0];\n      var handlerName = keyBindings[i][1];\n      if (keyComboMatchesEvent(keyCombo, event)) {\n        this._triggerKeyHandler(keyCombo, handlerName, event);\n        // exit the loop if eventDefault was prevented\n        if (event.defaultPrevented) {\n          return;\n        }\n      }\n    }\n  },\n\n  _triggerKeyHandler: function(keyCombo, handlerName, keyboardEvent) {\n    var detail = Object.create(keyCombo);\n    detail.keyboardEvent = keyboardEvent;\n    var event =\n        new CustomEvent(keyCombo.event, {detail: detail, cancelable: true});\n    this[handlerName].call(this, event);\n    if (event.defaultPrevented) {\n      keyboardEvent.preventDefault();\n    }\n  }\n};\n"
    },
    {
     "id": 77,
     "name": "../node_modules/.pnpm/@polymer+iron-a11y-announcer@3.2.0/node_modules/@polymer/iron-a11y-announcer/iron-a11y-announcer.js",
     "source": "/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\n`iron-a11y-announcer` is a singleton element that is intended to add a11y\nto features that require on-demand announcement from screen readers. In\norder to make use of the announcer, it is best to request its availability\nin the announcing element.\n\nExample:\n\n    Polymer({\n\n      is: 'x-chatty',\n\n      attached: function() {\n        // This will create the singleton element if it has not\n        // been created yet:\n        Polymer.IronA11yAnnouncer.requestAvailability();\n      }\n    });\n\nAfter the `iron-a11y-announcer` has been made available, elements can\nmake announces by firing bubbling `iron-announce` events.\n\nExample:\n\n    this.fire('iron-announce', {\n      text: 'This is an announcement!'\n    }, { bubbles: true });\n\nNote: announcements are only audible if you have a screen reader enabled.\n\n@demo demo/index.html\n*/\nexport const IronA11yAnnouncer = Polymer({\n  /** @override */\n  _template: html`\n    <style>\n      :host {\n        display: inline-block;\n        position: fixed;\n        clip: rect(0px,0px,0px,0px);\n      }\n    </style>\n    <div aria-live$=\"[[mode]]\">[[_text]]</div>\n`,\n\n  is: 'iron-a11y-announcer',\n\n  properties: {\n\n    /**\n     * The value of mode is used to set the `aria-live` attribute\n     * for the element that will be announced. Valid values are: `off`,\n     * `polite` and `assertive`.\n     */\n    mode: {type: String, value: 'polite'},\n\n    /**\n     * The timeout on refreshing the announcement text. Larger timeouts are\n     * needed for certain screen readers to re-announce the same message.\n     */\n    timeout: {type: Number, value: 150},\n\n    _text: {type: String, value: ''},\n  },\n\n  /** @override */\n  created: function() {\n    if (!IronA11yAnnouncer.instance) {\n      IronA11yAnnouncer.instance = this;\n    }\n\n    document.addEventListener('iron-announce', this._onIronAnnounce.bind(this));\n  },\n\n  /**\n   * Cause a text string to be announced by screen readers.\n   *\n   * @param {string} text The text that should be announced.\n   */\n  announce: function(text) {\n    this._text = '';\n    this.async(function() {\n      this._text = text;\n    }, this.timeout);\n  },\n\n  _onIronAnnounce: function(event) {\n    if (event.detail && event.detail.text) {\n      this.announce(event.detail.text);\n    }\n  }\n});\n\nIronA11yAnnouncer.instance = null;\n\nIronA11yAnnouncer.requestAvailability = function() {\n  if (!IronA11yAnnouncer.instance) {\n    IronA11yAnnouncer.instance = document.createElement('iron-a11y-announcer');\n  }\n\n  if (document.body) {\n    document.body.appendChild(IronA11yAnnouncer.instance);\n  } else {\n    document.addEventListener('load', function() {\n      document.body.appendChild(IronA11yAnnouncer.instance);\n    });\n  }\n};\n"
    },
    {
     "id": 78,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-login@2.0.0/node_modules/@vaadin/vaadin-login/src/vaadin-login-mixin.js",
     "source": "/**\n * @license\n * Vaadin Login\n * Copyright (C) 2020 Vaadin Ltd\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nexport const LoginMixin = (superClass) =>\n  class LoginMixin extends superClass {\n    /**\n     * Fired when user clicks on the \"Forgot password\" button.\n     *\n     * @event forgot-password\n     */\n\n    /**\n     * Fired when an user submits the login.\n     * The event contains `username` and `password` values in the `detail` property.\n     *\n     * @event login\n     */\n\n    static get properties() {\n      return {\n        /**\n         * If set, a synchronous POST call will be fired to the path defined.\n         * The `login` event is also dispatched, so `event.preventDefault()` can be called to prevent the POST call.\n         * @type {string | null}\n         */\n        action: {\n          type: String,\n          value: null,\n          notify: true\n        },\n\n        /**\n         * If set, disable the \"Log in\" button and prevent user from submitting login form.\n         * It is re-enabled automatically, when error is set to true, allowing form resubmission\n         * after user makes changes.\n         * @type {boolean}\n         */\n        disabled: {\n          type: Boolean,\n          value: false,\n          notify: true\n        },\n\n        /**\n         * If set, the error message is shown. The message is hidden by default.\n         * When set, it changes the disabled state of the submit button.\n         * @type {boolean}\n         */\n        error: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          notify: true\n        },\n\n        /**\n         * Whether to hide the forgot password button. The button is visible by default.\n         * @type {boolean}\n         */\n        noForgotPassword: {\n          type: Boolean,\n          value: false,\n          notify: true\n        },\n\n        /**\n       * The object used to localize this component.\n       * For changing the default localization, change the entire\n       * _i18n_ object or just the property you want to modify.\n       *\n       * The object has the following JSON structure (by default it doesn't include `additionalInformation`\n       * and `header` sections, `header` can be added to override `title` and `description` properties\n       * in `vaadin-login-overlay`):\n\n        {\n          header: {\n            title: 'App name',\n            description: 'Inspiring application description'\n          },\n          form: {\n            title: 'Log in',\n            username: 'Username',\n            password: 'Password',\n            submit: 'Log in',\n            forgotPassword: 'Forgot password'\n          },\n          errorMessage: {\n            title: 'Incorrect username or password',\n            message: 'Check that you have entered the correct username and password and try again.'\n          },\n          additionalInformation: 'In case you need to provide some additional info for the user.'\n        }\n       * @type {!LoginI18n}\n       * @default {English/US}\n       */\n        i18n: {\n          type: Object,\n          value: function () {\n            return {\n              form: {\n                title: 'Log in',\n                username: 'Username',\n                password: 'Password',\n                submit: 'Log in',\n                forgotPassword: 'Forgot password'\n              },\n              errorMessage: {\n                title: 'Incorrect username or password',\n                message: 'Check that you have entered the correct username and password and try again.'\n              }\n            };\n          },\n          notify: true\n        },\n\n        /**\n         * If set, prevents auto enabling the component when error property is set to true.\n         * @private\n         */\n        _preventAutoEnable: {\n          type: Boolean,\n          value: false\n        }\n      };\n    }\n\n    /**\n     * @param {!Event} e\n     * @protected\n     */\n    _retargetEvent(e) {\n      e.stopPropagation();\n      const { detail, composed, cancelable, bubbles } = e;\n\n      const firedEvent = this.dispatchEvent(new CustomEvent(e.type, { bubbles, cancelable, composed, detail }));\n      // Check if `eventTarget.preventDefault()` was called to prevent default in the original event\n      if (!firedEvent) {\n        e.preventDefault();\n      }\n    }\n  };\n"
    },
    {
     "id": 80,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-text-field@3.0.2/node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-password-field.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-text-field@3.0.2/node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-password-field.js",
       "source": "import './vaadin-password-field-styles.js';\nimport './vaadin-text-field.js';\nimport '../../src/vaadin-password-field.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-text-field@3.0.2/node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-password-field-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\n\nregisterStyles(\n  'vaadin-password-field',\n  css`\n    [part='reveal-button']::before {\n      content: var(--lumo-icons-eye);\n    }\n\n    :host([password-visible]) [part='reveal-button']::before {\n      content: var(--lumo-icons-eye-disabled);\n    }\n\n    /* Make it easy to hide the button across the whole app */\n    [part='reveal-button'] {\n      display: var(--lumo-password-field-reveal-button-display, block);\n    }\n  `,\n  { moduleId: 'lumo-password-field' }\n);\n"
      }
     ]
    },
    {
     "id": 103,
     "name": "../node_modules/.pnpm/@polymer+iron-list@3.1.0/node_modules/@polymer/iron-list/iron-list.js",
     "source": "/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js';\n\nimport {IronResizableBehavior} from '@polymer/iron-resizable-behavior/iron-resizable-behavior.js';\nimport {IronScrollTargetBehavior} from '@polymer/iron-scroll-target-behavior/iron-scroll-target-behavior.js';\nimport {OptionalMutableDataBehavior} from '@polymer/polymer/lib/legacy/mutable-data-behavior.js';\nimport {Polymer as Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {Templatizer} from '@polymer/polymer/lib/legacy/templatizer-behavior.js';\nimport {animationFrame, idlePeriod, microTask} from '@polymer/polymer/lib/utils/async.js';\nimport {Debouncer} from '@polymer/polymer/lib/utils/debounce.js';\nimport {enqueueDebouncer, flush} from '@polymer/polymer/lib/utils/flush.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\nimport {matches, translate} from '@polymer/polymer/lib/utils/path.js';\nimport {TemplateInstanceBase} from '@polymer/polymer/lib/utils/templatize.js';\n\nvar IOS = navigator.userAgent.match(/iP(?:hone|ad;(?: U;)? CPU) OS (\\d+)/);\nvar IOS_TOUCH_SCROLLING = IOS && IOS[1] >= 8;\nvar DEFAULT_PHYSICAL_COUNT = 3;\nvar HIDDEN_Y = '-10000px';\nvar SECRET_TABINDEX = -100;\n\n/**\n\n`iron-list` displays a virtual, 'infinite' list. The template inside\nthe iron-list element represents the DOM to create for each list item.\nThe `items` property specifies an array of list item data.\n\nFor performance reasons, not every item in the list is rendered at once;\ninstead a small subset of actual template elements *(enough to fill the\nviewport)* are rendered and reused as the user scrolls. As such, it is important\nthat all state of the list template is bound to the model driving it, since the\nview may be reused with a new model at any time. Particularly, any state that\nmay change as the result of a user interaction with the list item must be bound\nto the model to avoid view state inconsistency.\n\n### Sizing iron-list\n\n`iron-list` must either be explicitly sized, or delegate scrolling to an\nexplicitly sized parent. By \"explicitly sized\", we mean it either has an\nexplicit CSS `height` property set via a class or inline style, or else is sized\nby other layout means (e.g. the `flex` or `fit` classes).\n\n#### Flexbox - [jsbin](https://jsbin.com/vejoni/edit?html,output)\n\n```html\n<template is=\"x-list\">\n  <style>\n    :host {\n      display: block;\n      height: 100vh;\n      display: flex;\n      flex-direction: column;\n    }\n\n    iron-list {\n      flex: 1 1 auto;\n    }\n  </style>\n  <app-toolbar>App name</app-toolbar>\n  <iron-list items=\"[[items]]\">\n    <template>\n      <div>\n        ...\n      </div>\n    </template>\n  </iron-list>\n</template>\n```\n#### Explicit size - [jsbin](https://jsbin.com/vopucus/edit?html,output)\n```html\n<template is=\"x-list\">\n  <style>\n    :host {\n      display: block;\n    }\n\n    iron-list {\n      height: 100vh; /* don't use % values unless the parent element is sized.\n*\\/\n    }\n  </style>\n  <iron-list items=\"[[items]]\">\n    <template>\n      <div>\n        ...\n      </div>\n    </template>\n  </iron-list>\n</template>\n```\n#### Main document scrolling -\n[jsbin](https://jsbin.com/wevirow/edit?html,output)\n```html\n<head>\n  <style>\n    body {\n      height: 100vh;\n      margin: 0;\n      display: flex;\n      flex-direction: column;\n    }\n\n    app-toolbar {\n      position: fixed;\n      top: 0;\n      left: 0;\n      right: 0;\n    }\n\n    iron-list {\n      /* add padding since the app-toolbar is fixed at the top *\\/\n      padding-top: 64px;\n    }\n  </style>\n</head>\n<body>\n  <app-toolbar>App name</app-toolbar>\n  <iron-list scroll-target=\"document\">\n    <template>\n      <div>\n        ...\n      </div>\n    </template>\n  </iron-list>\n</body>\n```\n\n`iron-list` must be given a `<template>` which contains exactly one element. In\nthe examples above we used a `<div>`, but you can provide any element (including\ncustom elements).\n\n### Template model\n\nList item templates should bind to template models of the following structure:\n\n```js\n{\n  index: 0,        // index in the item array\n  selected: false, // true if the current item is selected\n  tabIndex: -1,    // a dynamically generated tabIndex for focus management\n  item: {}         // user data corresponding to items[index]\n}\n```\n\nAlternatively, you can change the property name used as data index by changing\nthe `indexAs` property. The `as` property defines the name of the variable to\nadd to the binding scope for the array.\n\nFor example, given the following `data` array:\n\n##### data.json\n\n```js\n[\n  {\"name\": \"Bob\"},\n  {\"name\": \"Tim\"},\n  {\"name\": \"Mike\"}\n]\n```\n\nThe following code would render the list (note the name property is bound from\nthe model object provided to the template scope):\n\n```html\n<iron-ajax url=\"data.json\" last-response=\"{{data}}\" auto></iron-ajax>\n<iron-list items=\"[[data]]\" as=\"item\">\n  <template>\n    <div>\n      Name: [[item.name]]\n    </div>\n  </template>\n</iron-list>\n```\n\n### Grid layout\n\n`iron-list` supports a grid layout in addition to linear layout by setting\nthe `grid` attribute.  In this case, the list template item must have both fixed\nwidth and height (e.g. via CSS). Based on this, the number of items\nper row are determined automatically based on the size of the list viewport.\n\n### Accessibility\n\n`iron-list` automatically manages the focus state for the items. It also\nprovides a `tabIndex` property within the template scope that can be used for\nkeyboard navigation. For example, users can press the up and down keys to move\nto previous and next items in the list:\n\n```html\n<iron-list items=\"[[data]]\" as=\"item\">\n  <template>\n    <div tabindex$=\"[[tabIndex]]\">\n      Name: [[item.name]]\n    </div>\n  </template>\n</iron-list>\n```\n\n### Styling\n\nYou can use the `--iron-list-items-container` mixin to style the container of\nitems:\n\n```css\niron-list {\n --iron-list-items-container: {\n    margin: auto;\n  };\n}\n```\n\n### Resizing\n\n`iron-list` lays out the items when it receives a notification via the\n`iron-resize` event. This event is fired by any element that implements\n`IronResizableBehavior`.\n\nBy default, elements such as `iron-pages`, `paper-tabs` or `paper-dialog` will\ntrigger this event automatically. If you hide the list manually (e.g. you use\n`display: none`) you might want to implement `IronResizableBehavior` or fire\nthis event manually right after the list became visible again. For example:\n\n```js\ndocument.querySelector('iron-list').fire('iron-resize');\n```\n\n### When should `<iron-list>` be used?\n\n`iron-list` should be used when a page has significantly more DOM nodes than the\nones visible on the screen. e.g. the page has 500 nodes, but only 20 are visible\nat a time. This is why we refer to it as a `virtual` list. In this case, a\n`dom-repeat` will still create 500 nodes which could slow down the web app, but\n`iron-list` will only create 20.\n\nHowever, having an `iron-list` does not mean that you can load all the data at\nonce. Say you have a million records in the database, you want to split the data\ninto pages so you can bring in a page at the time. The page could contain 500\nitems, and iron-list will only render 20.\n\n@element iron-list\n@demo demo/index.html\n\n*/\nPolymer({\n  /** @override */\n  _template: html`\n    <style>\n      :host {\n        display: block;\n      }\n\n      @media only screen and (-webkit-max-device-pixel-ratio: 1) {\n        :host {\n          will-change: transform;\n        }\n      }\n\n      #items {\n        @apply --iron-list-items-container;\n        position: relative;\n      }\n\n      :host(:not([grid])) #items > ::slotted(*) {\n        width: 100%;\n      }\n\n      #items > ::slotted(*) {\n        box-sizing: border-box;\n        margin: 0;\n        position: absolute;\n        top: 0;\n        will-change: transform;\n      }\n    </style>\n\n    <array-selector id=\"selector\" items=\"{{items}}\" selected=\"{{selectedItems}}\" selected-item=\"{{selectedItem}}\"></array-selector>\n\n    <div id=\"items\">\n      <slot></slot>\n    </div>\n`,\n\n  is: 'iron-list',\n\n  properties: {\n\n    /**\n     * An array containing items determining how many instances of the template\n     * to stamp and that that each template instance should bind to.\n     */\n    items: {type: Array},\n\n    /**\n     * The name of the variable to add to the binding scope for the array\n     * element associated with a given template instance.\n     */\n    as: {type: String, value: 'item'},\n\n    /**\n     * The name of the variable to add to the binding scope with the index\n     * for the row.\n     */\n    indexAs: {type: String, value: 'index'},\n\n    /**\n     * The name of the variable to add to the binding scope to indicate\n     * if the row is selected.\n     */\n    selectedAs: {type: String, value: 'selected'},\n\n    /**\n     * When true, the list is rendered as a grid. Grid items must have\n     * fixed width and height set via CSS. e.g.\n     *\n     * ```html\n     * <iron-list grid>\n     *   <template>\n     *      <div style=\"width: 100px; height: 100px;\"> 100x100 </div>\n     *   </template>\n     * </iron-list>\n     * ```\n     */\n    grid: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true,\n      observer: '_gridChanged'\n    },\n\n    /**\n     * When true, tapping a row will select the item, placing its data model\n     * in the set of selected items retrievable via the selection property.\n     *\n     * Note that tapping focusable elements within the list item will not\n     * result in selection, since they are presumed to have their * own action.\n     */\n    selectionEnabled: {type: Boolean, value: false},\n\n    /**\n     * When `multiSelection` is false, this is the currently selected item, or\n     * `null` if no item is selected.\n     */\n    selectedItem: {type: Object, notify: true},\n\n    /**\n     * When `multiSelection` is true, this is an array that contains the\n     * selected items.\n     */\n    selectedItems: {type: Object, notify: true},\n\n    /**\n     * When `true`, multiple items may be selected at once (in this case,\n     * `selected` is an array of currently selected items).  When `false`,\n     * only one item may be selected at a time.\n     */\n    multiSelection: {type: Boolean, value: false},\n\n    /**\n     * The offset top from the scrolling element to the iron-list element.\n     * This value can be computed using the position returned by\n     * `getBoundingClientRect()` although it's preferred to use a constant value\n     * when possible.\n     *\n     * This property is useful when an external scrolling element is used and\n     * there's some offset between the scrolling element and the list. For\n     * example: a header is placed above the list.\n     */\n    scrollOffset: {type: Number, value: 0}\n  },\n\n  observers: [\n    '_itemsChanged(items.*)',\n    '_selectionEnabledChanged(selectionEnabled)',\n    '_multiSelectionChanged(multiSelection)',\n    '_setOverflow(scrollTarget, scrollOffset)'\n  ],\n\n  behaviors: [\n    Templatizer,\n    IronResizableBehavior,\n    IronScrollTargetBehavior,\n    OptionalMutableDataBehavior\n  ],\n\n  /**\n   * The ratio of hidden tiles that should remain in the scroll direction.\n   * Recommended value ~0.5, so it will distribute tiles evenly in both\n   * directions.\n   */\n  _ratio: 0.5,\n\n  /**\n   * The padding-top value for the list.\n   */\n  _scrollerPaddingTop: 0,\n\n  /**\n   * This value is a cached value of `scrollTop` from the last `scroll` event.\n   */\n  _scrollPosition: 0,\n\n  /**\n   * The sum of the heights of all the tiles in the DOM.\n   */\n  _physicalSize: 0,\n\n  /**\n   * The average `offsetHeight` of the tiles observed till now.\n   */\n  _physicalAverage: 0,\n\n  /**\n   * The number of tiles which `offsetHeight` > 0 observed until now.\n   */\n  _physicalAverageCount: 0,\n\n  /**\n   * The Y position of the item rendered in the `_physicalStart`\n   * tile relative to the scrolling list.\n   */\n  _physicalTop: 0,\n\n  /**\n   * The number of items in the list.\n   */\n  _virtualCount: 0,\n\n  /**\n   * The estimated scroll height based on `_physicalAverage`\n   */\n  _estScrollHeight: 0,\n\n  /**\n   * The scroll height of the dom node\n   */\n  _scrollHeight: 0,\n\n  /**\n   * The height of the list. This is referred as the viewport in the context of\n   * list.\n   */\n  _viewportHeight: 0,\n\n  /**\n   * The width of the list. This is referred as the viewport in the context of\n   * list.\n   */\n  _viewportWidth: 0,\n\n  /**\n   * An array of DOM nodes that are currently in the tree\n   * @type {?Array<!HTMLElement>}\n   */\n  _physicalItems: null,\n\n  /**\n   * An array of heights for each item in `_physicalItems`\n   * @type {?Array<number>}\n   */\n  _physicalSizes: null,\n\n  /**\n   * A cached value for the first visible index.\n   * See `firstVisibleIndex`\n   * @type {?number}\n   */\n  _firstVisibleIndexVal: null,\n\n  /**\n   * A cached value for the last visible index.\n   * See `lastVisibleIndex`\n   * @type {?number}\n   */\n  _lastVisibleIndexVal: null,\n\n  /**\n   * The max number of pages to render. One page is equivalent to the height of\n   * the list.\n   */\n  _maxPages: 2,\n\n  /**\n   * The currently focused physical item.\n   */\n  _focusedItem: null,\n\n  /**\n   * The virtual index of the focused item.\n   */\n  _focusedVirtualIndex: -1,\n\n  /**\n   * The physical index of the focused item.\n   */\n  _focusedPhysicalIndex: -1,\n\n  /**\n   * The the item that is focused if it is moved offscreen.\n   * @private {?HTMLElement}\n   */\n  _offscreenFocusedItem: null,\n\n  /**\n   * The item that backfills the `_offscreenFocusedItem` in the physical items\n   * list when that item is moved offscreen.\n   * @type {?HTMLElement}\n   */\n  _focusBackfillItem: null,\n\n  /**\n   * The maximum items per row\n   */\n  _itemsPerRow: 1,\n\n  /**\n   * The width of each grid item\n   */\n  _itemWidth: 0,\n\n  /**\n   * The height of the row in grid layout.\n   */\n  _rowHeight: 0,\n\n  /**\n   * The cost of stamping a template in ms.\n   */\n  _templateCost: 0,\n\n  /**\n   * Needed to pass event.model property to declarative event handlers -\n   * see polymer/polymer#4339.\n   */\n  _parentModel: true,\n\n  /**\n   * The bottom of the physical content.\n   */\n  get _physicalBottom() {\n    return this._physicalTop + this._physicalSize;\n  },\n\n  /**\n   * The bottom of the scroll.\n   */\n  get _scrollBottom() {\n    return this._scrollPosition + this._viewportHeight;\n  },\n\n  /**\n   * The n-th item rendered in the last physical item.\n   */\n  get _virtualEnd() {\n    return this._virtualStart + this._physicalCount - 1;\n  },\n\n  /**\n   * The height of the physical content that isn't on the screen.\n   */\n  get _hiddenContentSize() {\n    var size =\n        this.grid ? this._physicalRows * this._rowHeight : this._physicalSize;\n    return size - this._viewportHeight;\n  },\n\n  /**\n   * The parent node for the _userTemplate.\n   */\n  get _itemsParent() {\n    return dom(dom(this._userTemplate).parentNode);\n  },\n\n  /**\n   * The maximum scroll top value.\n   */\n  get _maxScrollTop() {\n    return this._estScrollHeight - this._viewportHeight + this._scrollOffset;\n  },\n\n  /**\n   * The largest n-th value for an item such that it can be rendered in\n   * `_physicalStart`.\n   */\n  get _maxVirtualStart() {\n    var virtualCount = this._convertIndexToCompleteRow(this._virtualCount);\n    return Math.max(0, virtualCount - this._physicalCount);\n  },\n\n  set _virtualStart(val) {\n    val = this._clamp(val, 0, this._maxVirtualStart);\n    if (this.grid) {\n      val = val - (val % this._itemsPerRow);\n    }\n    this._virtualStartVal = val;\n  },\n\n  get _virtualStart() {\n    return this._virtualStartVal || 0;\n  },\n\n  /**\n   * The k-th tile that is at the top of the scrolling list.\n   */\n  set _physicalStart(val) {\n    val = val % this._physicalCount;\n    if (val < 0) {\n      val = this._physicalCount + val;\n    }\n    if (this.grid) {\n      val = val - (val % this._itemsPerRow);\n    }\n    this._physicalStartVal = val;\n  },\n\n  get _physicalStart() {\n    return this._physicalStartVal || 0;\n  },\n\n  /**\n   * The k-th tile that is at the bottom of the scrolling list.\n   */\n  get _physicalEnd() {\n    return (this._physicalStart + this._physicalCount - 1) %\n        this._physicalCount;\n  },\n\n  set _physicalCount(val) {\n    this._physicalCountVal = val;\n  },\n\n  get _physicalCount() {\n    return this._physicalCountVal || 0;\n  },\n\n  /**\n   * An optimal physical size such that we will have enough physical items\n   * to fill up the viewport and recycle when the user scrolls.\n   *\n   * This default value assumes that we will at least have the equivalent\n   * to a viewport of physical items above and below the user's viewport.\n   */\n  get _optPhysicalSize() {\n    return this._viewportHeight === 0 ? Infinity :\n                                        this._viewportHeight * this._maxPages;\n  },\n\n  /**\n   * True if the current list is visible.\n   */\n  get _isVisible() {\n    return Boolean(this.offsetWidth || this.offsetHeight);\n  },\n\n  /**\n   * Gets the index of the first visible item in the viewport.\n   *\n   * @type {number}\n   */\n  get firstVisibleIndex() {\n    var idx = this._firstVisibleIndexVal;\n    if (idx == null) {\n      var physicalOffset = this._physicalTop + this._scrollOffset;\n\n      idx = this._iterateItems(function(pidx, vidx) {\n        physicalOffset += this._getPhysicalSizeIncrement(pidx);\n\n        if (physicalOffset > this._scrollPosition) {\n          return this.grid ? vidx - (vidx % this._itemsPerRow) : vidx;\n        }\n        // Handle a partially rendered final row in grid mode\n        if (this.grid && this._virtualCount - 1 === vidx) {\n          return vidx - (vidx % this._itemsPerRow);\n        }\n      }) ||\n          0;\n      this._firstVisibleIndexVal = idx;\n    }\n    return idx;\n  },\n\n  /**\n   * Gets the index of the last visible item in the viewport.\n   *\n   * @type {number}\n   */\n  get lastVisibleIndex() {\n    var idx = this._lastVisibleIndexVal;\n    if (idx == null) {\n      if (this.grid) {\n        idx = Math.min(\n            this._virtualCount,\n            this.firstVisibleIndex + this._estRowsInView * this._itemsPerRow -\n                1);\n      } else {\n        var physicalOffset = this._physicalTop + this._scrollOffset;\n        this._iterateItems(function(pidx, vidx) {\n          if (physicalOffset < this._scrollBottom) {\n            idx = vidx;\n          }\n          physicalOffset += this._getPhysicalSizeIncrement(pidx);\n        });\n      }\n      this._lastVisibleIndexVal = idx;\n    }\n    return idx;\n  },\n\n  get _defaultScrollTarget() {\n    return this;\n  },\n\n  get _virtualRowCount() {\n    return Math.ceil(this._virtualCount / this._itemsPerRow);\n  },\n\n  get _estRowsInView() {\n    return Math.ceil(this._viewportHeight / this._rowHeight);\n  },\n\n  get _physicalRows() {\n    return Math.ceil(this._physicalCount / this._itemsPerRow);\n  },\n\n  get _scrollOffset() {\n    return this._scrollerPaddingTop + this.scrollOffset;\n  },\n\n  /** @override */\n  ready: function() {\n    this.addEventListener('focus', this._didFocus.bind(this), true);\n  },\n\n  /** @override */\n  attached: function() {\n    this._debounce('_render', this._render, animationFrame);\n    // `iron-resize` is fired when the list is attached if the event is added\n    // before attached causing unnecessary work.\n    this.listen(this, 'iron-resize', '_resizeHandler');\n    this.listen(this, 'keydown', '_keydownHandler');\n  },\n\n  /** @override */\n  detached: function() {\n    this.unlisten(this, 'iron-resize', '_resizeHandler');\n    this.unlisten(this, 'keydown', '_keydownHandler');\n  },\n\n  /**\n   * Set the overflow property if this element has its own scrolling region\n   */\n  _setOverflow: function(scrollTarget) {\n    this.style.webkitOverflowScrolling = scrollTarget === this ? 'touch' : '';\n    this.style.overflowY = scrollTarget === this ? 'auto' : '';\n    // Clear cache.\n    this._lastVisibleIndexVal = null;\n    this._firstVisibleIndexVal = null;\n    this._debounce('_render', this._render, animationFrame);\n  },\n\n  /**\n   * Invoke this method if you dynamically update the viewport's\n   * size or CSS padding.\n   *\n   * @method updateViewportBoundaries\n   */\n  updateViewportBoundaries: function() {\n    var styles = window.getComputedStyle(this);\n    this._scrollerPaddingTop =\n        this.scrollTarget === this ? 0 : parseInt(styles['padding-top'], 10);\n    this._isRTL = Boolean(styles.direction === 'rtl');\n    this._viewportWidth = this.$.items.offsetWidth;\n    this._viewportHeight = this._scrollTargetHeight;\n    this.grid && this._updateGridMetrics();\n  },\n\n  /**\n   * Recycles the physical items when needed.\n   */\n  _scrollHandler: function() {\n    var scrollTop = Math.max(0, Math.min(this._maxScrollTop, this._scrollTop));\n    var delta = scrollTop - this._scrollPosition;\n    var isScrollingDown = delta >= 0;\n    // Track the current scroll position.\n    this._scrollPosition = scrollTop;\n    // Clear indexes for first and last visible indexes.\n    this._firstVisibleIndexVal = null;\n    this._lastVisibleIndexVal = null;\n    // Random access.\n    if (Math.abs(delta) > this._physicalSize && this._physicalSize > 0) {\n      delta = delta - this._scrollOffset;\n      var idxAdjustment =\n          Math.round(delta / this._physicalAverage) * this._itemsPerRow;\n      this._virtualStart = this._virtualStart + idxAdjustment;\n      this._physicalStart = this._physicalStart + idxAdjustment;\n      // Estimate new physical offset based on the virtual start index.\n      // adjusts the physical start position to stay in sync with the clamped\n      // virtual start index. It's critical not to let this value be\n      // more than the scroll position however, since that would result in\n      // the physical items not covering the viewport, and leading to\n      // _increasePoolIfNeeded to run away creating items to try to fill it.\n      this._physicalTop = Math.min(\n          Math.floor(this._virtualStart / this._itemsPerRow) *\n              this._physicalAverage,\n          this._scrollPosition);\n      this._update();\n    } else if (this._physicalCount > 0) {\n      var reusables = this._getReusables(isScrollingDown);\n      if (isScrollingDown) {\n        this._physicalTop = reusables.physicalTop;\n        this._virtualStart = this._virtualStart + reusables.indexes.length;\n        this._physicalStart = this._physicalStart + reusables.indexes.length;\n      } else {\n        this._virtualStart = this._virtualStart - reusables.indexes.length;\n        this._physicalStart = this._physicalStart - reusables.indexes.length;\n      }\n      this._update(\n          reusables.indexes, isScrollingDown ? null : reusables.indexes);\n      this._debounce(\n          '_increasePoolIfNeeded',\n          this._increasePoolIfNeeded.bind(this, 0),\n          microTask);\n    }\n  },\n\n  /**\n   * Returns an object that contains the indexes of the physical items\n   * that might be reused and the physicalTop.\n   *\n   * @param {boolean} fromTop If the potential reusable items are above the scrolling region.\n   */\n  _getReusables: function(fromTop) {\n    var ith, lastIth, offsetContent, physicalItemHeight;\n    var idxs = [];\n    var protectedOffsetContent = this._hiddenContentSize * this._ratio;\n    var virtualStart = this._virtualStart;\n    var virtualEnd = this._virtualEnd;\n    var physicalCount = this._physicalCount;\n    var top = this._physicalTop + this._scrollOffset;\n    var bottom = this._physicalBottom + this._scrollOffset;\n    // This may be called outside of a scrollHandler, so use last cached position\n    var scrollTop = this._scrollPosition;\n    var scrollBottom = this._scrollBottom;\n\n    if (fromTop) {\n      ith = this._physicalStart;\n      lastIth = this._physicalEnd;\n      offsetContent = scrollTop - top;\n    } else {\n      ith = this._physicalEnd;\n      lastIth = this._physicalStart;\n      offsetContent = bottom - scrollBottom;\n    }\n    while (true) {\n      physicalItemHeight = this._getPhysicalSizeIncrement(ith);\n      offsetContent = offsetContent - physicalItemHeight;\n      if (idxs.length >= physicalCount ||\n          offsetContent <= protectedOffsetContent) {\n        break;\n      }\n      if (fromTop) {\n        // Check that index is within the valid range.\n        if (virtualEnd + idxs.length + 1 >= this._virtualCount) {\n          break;\n        }\n        // Check that the index is not visible.\n        if (top + physicalItemHeight >= scrollTop - this._scrollOffset) {\n          break;\n        }\n        idxs.push(ith);\n        top = top + physicalItemHeight;\n        ith = (ith + 1) % physicalCount;\n      } else {\n        // Check that index is within the valid range.\n        if (virtualStart - idxs.length <= 0) {\n          break;\n        }\n        // Check that the index is not visible.\n        if (top + this._physicalSize - physicalItemHeight <= scrollBottom) {\n          break;\n        }\n        idxs.push(ith);\n        top = top - physicalItemHeight;\n        ith = (ith === 0) ? physicalCount - 1 : ith - 1;\n      }\n    }\n    return {indexes: idxs, physicalTop: top - this._scrollOffset};\n  },\n\n  /**\n   * Update the list of items, starting from the `_virtualStart` item.\n   * @param {!Array<number>=} itemSet\n   * @param {!Array<number>=} movingUp\n   */\n  _update: function(itemSet, movingUp) {\n    if ((itemSet && itemSet.length === 0) || this._physicalCount === 0) {\n      return;\n    }\n    this._manageFocus();\n    this._assignModels(itemSet);\n    this._updateMetrics(itemSet);\n    // Adjust offset after measuring.\n    if (movingUp) {\n      while (movingUp.length) {\n        var idx = movingUp.pop();\n        this._physicalTop -= this._getPhysicalSizeIncrement(idx);\n      }\n    }\n    this._positionItems();\n    this._updateScrollerSize();\n  },\n\n  /**\n   * Creates a pool of DOM elements and attaches them to the local dom.\n   *\n   * @param {number} size Size of the pool\n   */\n  _createPool: function(size) {\n    this._ensureTemplatized();\n    var i, inst;\n    var physicalItems = new Array(size);\n    for (i = 0; i < size; i++) {\n      inst = this.stamp(null);\n      // TODO(blasten):\n      // First element child is item; Safari doesn't support children[0]\n      // on a doc fragment. Test this to see if it still matters.\n      physicalItems[i] = inst.root.querySelector('*');\n      this._itemsParent.appendChild(inst.root);\n    }\n    return physicalItems;\n  },\n\n  _isClientFull: function() {\n    return this._scrollBottom != 0 &&\n        this._physicalBottom - 1 >= this._scrollBottom &&\n        this._physicalTop <= this._scrollPosition;\n  },\n\n  /**\n   * Increases the pool size.\n   */\n  _increasePoolIfNeeded: function(count) {\n    var nextPhysicalCount = this._clamp(\n        this._physicalCount + count,\n        DEFAULT_PHYSICAL_COUNT,\n        this._virtualCount - this._virtualStart);\n    nextPhysicalCount = this._convertIndexToCompleteRow(nextPhysicalCount);\n    if (this.grid) {\n      var correction = nextPhysicalCount % this._itemsPerRow;\n      if (correction && nextPhysicalCount - correction <= this._physicalCount) {\n        nextPhysicalCount += this._itemsPerRow;\n      }\n      nextPhysicalCount -= correction;\n    }\n    var delta = nextPhysicalCount - this._physicalCount;\n    var nextIncrease = Math.round(this._physicalCount * 0.5);\n\n    if (delta < 0) {\n      return;\n    }\n    if (delta > 0) {\n      var ts = window.performance.now();\n      // Concat arrays in place.\n      [].push.apply(this._physicalItems, this._createPool(delta));\n      // Push 0s into physicalSizes. Can't use Array.fill because IE11 doesn't\n      // support it.\n      for (var i = 0; i < delta; i++) {\n        this._physicalSizes.push(0);\n      }\n      this._physicalCount = this._physicalCount + delta;\n      // Update the physical start if it needs to preserve the model of the\n      // focused item. In this situation, the focused item is currently rendered\n      // and its model would have changed after increasing the pool if the\n      // physical start remained unchanged.\n      if (this._physicalStart > this._physicalEnd &&\n          this._isIndexRendered(this._focusedVirtualIndex) &&\n          this._getPhysicalIndex(this._focusedVirtualIndex) <\n              this._physicalEnd) {\n        this._physicalStart = this._physicalStart + delta;\n      }\n      this._update();\n      this._templateCost = (window.performance.now() - ts) / delta;\n      nextIncrease = Math.round(this._physicalCount * 0.5);\n    }\n    // The upper bounds is not fixed when dealing with a grid that doesn't\n    // fill it's last row with the exact number of items per row.\n    if (this._virtualEnd >= this._virtualCount - 1 || nextIncrease === 0) {\n      // Do nothing.\n    } else if (!this._isClientFull()) {\n      this._debounce(\n          '_increasePoolIfNeeded',\n          this._increasePoolIfNeeded.bind(this, nextIncrease),\n          microTask);\n    } else if (this._physicalSize < this._optPhysicalSize) {\n      // Yield and increase the pool during idle time until the physical size is\n      // optimal.\n      this._debounce(\n          '_increasePoolIfNeeded',\n          this._increasePoolIfNeeded.bind(\n              this,\n              this._clamp(\n                  Math.round(50 / this._templateCost), 1, nextIncrease)),\n          idlePeriod);\n    }\n  },\n\n  /**\n   * Renders the a new list.\n   */\n  _render: function() {\n    if (!this.isAttached || !this._isVisible) {\n      return;\n    }\n    if (this._physicalCount !== 0) {\n      var reusables = this._getReusables(true);\n      this._physicalTop = reusables.physicalTop;\n      this._virtualStart = this._virtualStart + reusables.indexes.length;\n      this._physicalStart = this._physicalStart + reusables.indexes.length;\n      this._update(reusables.indexes);\n      this._update();\n      this._increasePoolIfNeeded(0);\n    } else if (this._virtualCount > 0) {\n      // Initial render\n      this.updateViewportBoundaries();\n      this._increasePoolIfNeeded(DEFAULT_PHYSICAL_COUNT);\n    }\n  },\n\n  /**\n   * Templetizes the user template.\n   */\n  _ensureTemplatized: function() {\n    if (this.ctor) {\n      return;\n    }\n    this._userTemplate = /** @type {!HTMLTemplateElement} */ (\n        this.queryEffectiveChildren('template'));\n    if (!this._userTemplate) {\n      console.warn('iron-list requires a template to be provided in light-dom');\n    }\n    var instanceProps = {};\n    instanceProps.__key__ = true;\n    instanceProps[this.as] = true;\n    instanceProps[this.indexAs] = true;\n    instanceProps[this.selectedAs] = true;\n    instanceProps.tabIndex = true;\n    this._instanceProps = instanceProps;\n    this.templatize(this._userTemplate, this.mutableData);\n  },\n\n  _gridChanged: function(newGrid, oldGrid) {\n    if (typeof oldGrid === 'undefined')\n      return;\n    this.notifyResize();\n    flush();\n    newGrid && this._updateGridMetrics();\n  },\n\n  /**\n   * Called when the items have changed. That is, reassignments\n   * to `items`, splices or updates to a single item.\n   */\n  _itemsChanged: function(change) {\n    if (change.path === 'items') {\n      this._virtualStart = 0;\n      this._physicalTop = 0;\n      this._virtualCount = this.items ? this.items.length : 0;\n      this._physicalIndexForKey = {};\n      this._firstVisibleIndexVal = null;\n      this._lastVisibleIndexVal = null;\n      this._physicalCount = this._physicalCount || 0;\n      this._physicalItems = this._physicalItems || [];\n      this._physicalSizes = this._physicalSizes || [];\n      this._physicalStart = 0;\n      if (this._scrollTop > this._scrollOffset) {\n        this._resetScrollPosition(0);\n      }\n      this._removeFocusedItem();\n      this._debounce('_render', this._render, animationFrame);\n    } else if (change.path === 'items.splices') {\n      this._adjustVirtualIndex(change.value.indexSplices);\n      this._virtualCount = this.items ? this.items.length : 0;\n      // Only blur if at least one item is added or removed.\n      var itemAddedOrRemoved = change.value.indexSplices.some(function(splice) {\n        return splice.addedCount > 0 || splice.removed.length > 0;\n      });\n      if (itemAddedOrRemoved) {\n        // Only blur activeElement if it is a descendant of the list (#505,\n        // #507).\n        var activeElement = this._getActiveElement();\n        if (this.contains(activeElement)) {\n          activeElement.blur();\n        }\n      }\n      // Render only if the affected index is rendered.\n      var affectedIndexRendered =\n          change.value.indexSplices.some(function(splice) {\n            return splice.index + splice.addedCount >= this._virtualStart &&\n                splice.index <= this._virtualEnd;\n          }, this);\n      if (!this._isClientFull() || affectedIndexRendered) {\n        this._debounce('_render', this._render, animationFrame);\n      }\n    } else if (change.path !== 'items.length') {\n      this._forwardItemPath(change.path, change.value);\n    }\n  },\n\n  _forwardItemPath: function(path, value) {\n    path = path.slice(6);  // 'items.'.length == 6\n    var dot = path.indexOf('.');\n    if (dot === -1) {\n      dot = path.length;\n    }\n    var isIndexRendered;\n    var pidx;\n    var inst;\n    var offscreenInstance = this.modelForElement(this._offscreenFocusedItem);\n    var vidx = parseInt(path.substring(0, dot), 10);\n    isIndexRendered = this._isIndexRendered(vidx);\n    if (isIndexRendered) {\n      pidx = this._getPhysicalIndex(vidx);\n      inst = this.modelForElement(this._physicalItems[pidx]);\n    } else if (offscreenInstance) {\n      inst = offscreenInstance;\n    }\n\n    if (!inst || inst[this.indexAs] !== vidx) {\n      return;\n    }\n    path = path.substring(dot + 1);\n    path = this.as + (path ? '.' + path : '');\n    inst._setPendingPropertyOrPath(path, value, false, true);\n    inst._flushProperties && inst._flushProperties();\n    // TODO(blasten): V1 doesn't do this and it's a bug\n    if (isIndexRendered) {\n      this._updateMetrics([pidx]);\n      this._positionItems();\n      this._updateScrollerSize();\n    }\n  },\n\n  /**\n   * @param {!Array<!Object>} splices\n   */\n  _adjustVirtualIndex: function(splices) {\n    splices.forEach(function(splice) {\n      // deselect removed items\n      splice.removed.forEach(this._removeItem, this);\n      // We only need to care about changes happening above the current position\n      if (splice.index < this._virtualStart) {\n        var delta = Math.max(\n            splice.addedCount - splice.removed.length,\n            splice.index - this._virtualStart);\n        this._virtualStart = this._virtualStart + delta;\n        if (this._focusedVirtualIndex >= 0) {\n          this._focusedVirtualIndex = this._focusedVirtualIndex + delta;\n        }\n      }\n    }, this);\n  },\n\n  _removeItem: function(item) {\n    this.$.selector.deselect(item);\n    // remove the current focused item\n    if (this._focusedItem &&\n        this.modelForElement(this._focusedItem)[this.as] === item) {\n      this._removeFocusedItem();\n    }\n  },\n\n  /**\n   * Executes a provided function per every physical index in `itemSet`\n   * `itemSet` default value is equivalent to the entire set of physical\n   * indexes.\n   *\n   * @param {!function(number, number)} fn\n   * @param {!Array<number>=} itemSet\n   */\n  _iterateItems: function(fn, itemSet) {\n    var pidx, vidx, rtn, i;\n\n    if (arguments.length === 2 && itemSet) {\n      for (i = 0; i < itemSet.length; i++) {\n        pidx = itemSet[i];\n        vidx = this._computeVidx(pidx);\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n    } else {\n      pidx = this._physicalStart;\n      vidx = this._virtualStart;\n      for (; pidx < this._physicalCount; pidx++, vidx++) {\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n      for (pidx = 0; pidx < this._physicalStart; pidx++, vidx++) {\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n    }\n  },\n\n  /**\n   * Returns the virtual index for a given physical index\n   *\n   * @param {number} pidx Physical index\n   * @return {number}\n   */\n  _computeVidx: function(pidx) {\n    if (pidx >= this._physicalStart) {\n      return this._virtualStart + (pidx - this._physicalStart);\n    }\n    return this._virtualStart + (this._physicalCount - this._physicalStart) +\n        pidx;\n  },\n\n  /**\n   * Assigns the data models to a given set of items.\n   * @param {!Array<number>=} itemSet\n   */\n  _assignModels: function(itemSet) {\n    this._iterateItems(function(pidx, vidx) {\n      var el = this._physicalItems[pidx];\n      var item = this.items && this.items[vidx];\n      if (item != null) {\n        var inst = this.modelForElement(el);\n        inst.__key__ = null;\n        this._forwardProperty(inst, this.as, item);\n        this._forwardProperty(\n            inst, this.selectedAs, this.$.selector.isSelected(item));\n        this._forwardProperty(inst, this.indexAs, vidx);\n        this._forwardProperty(\n            inst, 'tabIndex', this._focusedVirtualIndex === vidx ? 0 : -1);\n        this._physicalIndexForKey[inst.__key__] = pidx;\n        inst._flushProperties && inst._flushProperties(true);\n        el.removeAttribute('hidden');\n      } else {\n        el.setAttribute('hidden', '');\n      }\n    }, itemSet);\n  },\n\n  /**\n   * Updates the height for a given set of items.\n   *\n   * @param {!Array<number>=} itemSet\n   */\n  _updateMetrics: function(itemSet) {\n    // Make sure we distributed all the physical items\n    // so we can measure them.\n    flush();\n\n    var newPhysicalSize = 0;\n    var oldPhysicalSize = 0;\n    var prevAvgCount = this._physicalAverageCount;\n    var prevPhysicalAvg = this._physicalAverage;\n\n    this._iterateItems(function(pidx, vidx) {\n      oldPhysicalSize += this._physicalSizes[pidx];\n      this._physicalSizes[pidx] = this._physicalItems[pidx].offsetHeight;\n      newPhysicalSize += this._physicalSizes[pidx];\n      this._physicalAverageCount += this._physicalSizes[pidx] ? 1 : 0;\n    }, itemSet);\n\n    if (this.grid) {\n      this._updateGridMetrics();\n      this._physicalSize =\n          Math.ceil(this._physicalCount / this._itemsPerRow) * this._rowHeight;\n    } else {\n      oldPhysicalSize = (this._itemsPerRow === 1) ?\n          oldPhysicalSize :\n          Math.ceil(this._physicalCount / this._itemsPerRow) * this._rowHeight;\n      this._physicalSize =\n          this._physicalSize + newPhysicalSize - oldPhysicalSize;\n      this._itemsPerRow = 1;\n    }\n    // Update the average if it measured something.\n    if (this._physicalAverageCount !== prevAvgCount) {\n      this._physicalAverage = Math.round(\n          ((prevPhysicalAvg * prevAvgCount) + newPhysicalSize) /\n          this._physicalAverageCount);\n    }\n  },\n\n  _updateGridMetrics: function() {\n    this._itemWidth = this._physicalCount > 0 ?\n        this._physicalItems[0].getBoundingClientRect().width :\n        200;\n    this._rowHeight =\n        this._physicalCount > 0 ? this._physicalItems[0].offsetHeight : 200;\n    this._itemsPerRow = this._itemWidth ?\n        Math.floor(this._viewportWidth / this._itemWidth) :\n        this._itemsPerRow;\n  },\n\n  /**\n   * Updates the position of the physical items.\n   */\n  _positionItems: function() {\n    this._adjustScrollPosition();\n\n    var y = this._physicalTop;\n\n    if (this.grid) {\n      var totalItemWidth = this._itemsPerRow * this._itemWidth;\n      var rowOffset = (this._viewportWidth - totalItemWidth) / 2;\n\n      this._iterateItems(function(pidx, vidx) {\n        var modulus = vidx % this._itemsPerRow;\n        var x = Math.floor((modulus * this._itemWidth) + rowOffset);\n        if (this._isRTL) {\n          x = x * -1;\n        }\n        this.translate3d(x + 'px', y + 'px', 0, this._physicalItems[pidx]);\n        if (this._shouldRenderNextRow(vidx)) {\n          y += this._rowHeight;\n        }\n      });\n    } else {\n      const order = [];\n      this._iterateItems(function(pidx, vidx) {\n        const item = this._physicalItems[pidx];\n        this.translate3d(0, y + 'px', 0, item);\n        y += this._physicalSizes[pidx];\n        const itemId = item.id;\n        if (itemId) {\n          order.push(itemId);\n        }\n      });\n      if (order.length) {\n        this.setAttribute('aria-owns', order.join(' '));\n      }\n    }\n  },\n\n  _getPhysicalSizeIncrement: function(pidx) {\n    if (!this.grid) {\n      return this._physicalSizes[pidx];\n    }\n    if (this._computeVidx(pidx) % this._itemsPerRow !== this._itemsPerRow - 1) {\n      return 0;\n    }\n    return this._rowHeight;\n  },\n\n  /**\n   * Returns, based on the current index,\n   * whether or not the next index will need\n   * to be rendered on a new row.\n   *\n   * @param {number} vidx Virtual index\n   * @return {boolean}\n   */\n  _shouldRenderNextRow: function(vidx) {\n    return vidx % this._itemsPerRow === this._itemsPerRow - 1;\n  },\n\n  /**\n   * Adjusts the scroll position when it was overestimated.\n   */\n  _adjustScrollPosition: function() {\n    var deltaHeight = this._virtualStart === 0 ?\n        this._physicalTop :\n        Math.min(this._scrollPosition + this._physicalTop, 0);\n    // Note: the delta can be positive or negative.\n    if (deltaHeight !== 0) {\n      this._physicalTop = this._physicalTop - deltaHeight;\n      // This may be called outside of a scrollHandler, so use last cached position\n      var scrollTop = this._scrollPosition;\n      // juking scroll position during interial scrolling on iOS is no bueno\n      if (!IOS_TOUCH_SCROLLING && scrollTop > 0) {\n        this._resetScrollPosition(scrollTop - deltaHeight);\n      }\n    }\n  },\n\n  /**\n   * Sets the position of the scroll.\n   */\n  _resetScrollPosition: function(pos) {\n    if (this.scrollTarget && pos >= 0) {\n      this._scrollTop = pos;\n      this._scrollPosition = this._scrollTop;\n    }\n  },\n\n  /**\n   * Sets the scroll height, that's the height of the content,\n   *\n   * @param {boolean=} forceUpdate If true, updates the height no matter what.\n   */\n  _updateScrollerSize: function(forceUpdate) {\n    if (this.grid) {\n      this._estScrollHeight = this._virtualRowCount * this._rowHeight;\n    } else {\n      this._estScrollHeight =\n          (this._physicalBottom +\n           Math.max(\n               this._virtualCount - this._physicalCount - this._virtualStart,\n               0) *\n               this._physicalAverage);\n    }\n    forceUpdate = forceUpdate || this._scrollHeight === 0;\n    forceUpdate = forceUpdate ||\n        this._scrollPosition >= this._estScrollHeight - this._physicalSize;\n    forceUpdate = forceUpdate ||\n        this.grid && this.$.items.style.height < this._estScrollHeight;\n    // Amortize height adjustment, so it won't trigger large repaints too often.\n    if (forceUpdate ||\n        Math.abs(this._estScrollHeight - this._scrollHeight) >=\n            this._viewportHeight) {\n      this.$.items.style.height = this._estScrollHeight + 'px';\n      this._scrollHeight = this._estScrollHeight;\n    }\n  },\n\n  /**\n   * Scroll to a specific item in the virtual list regardless\n   * of the physical items in the DOM tree.\n   *\n   * @method scrollToItem\n   * @param {(Object)} item The item to be scrolled to\n   */\n  scrollToItem: function(item) {\n    return this.scrollToIndex(this.items.indexOf(item));\n  },\n\n  /**\n   * Scroll to a specific index in the virtual list regardless\n   * of the physical items in the DOM tree.\n   *\n   * @method scrollToIndex\n   * @param {number} idx The index of the item\n   */\n  scrollToIndex: function(idx) {\n    if (typeof idx !== 'number' || idx < 0 || idx > this.items.length - 1) {\n      return;\n    }\n    flush();\n    // Items should have been rendered prior scrolling to an index.\n    if (this._physicalCount === 0) {\n      return;\n    }\n    idx = this._clamp(idx, 0, this._virtualCount - 1);\n    // Update the virtual start only when needed.\n    if (!this._isIndexRendered(idx) || idx >= this._maxVirtualStart) {\n      this._virtualStart =\n          this.grid ? (idx - this._itemsPerRow * 2) : (idx - 1);\n    }\n    this._manageFocus();\n    this._assignModels();\n    this._updateMetrics();\n    // Estimate new physical offset.\n    this._physicalTop = Math.floor(this._virtualStart / this._itemsPerRow) *\n        this._physicalAverage;\n\n    var currentTopItem = this._physicalStart;\n    var currentVirtualItem = this._virtualStart;\n    var targetOffsetTop = 0;\n    var hiddenContentSize = this._hiddenContentSize;\n    // scroll to the item as much as we can.\n    while (currentVirtualItem < idx && targetOffsetTop <= hiddenContentSize) {\n      targetOffsetTop =\n          targetOffsetTop + this._getPhysicalSizeIncrement(currentTopItem);\n      currentTopItem = (currentTopItem + 1) % this._physicalCount;\n      currentVirtualItem++;\n    }\n    this._updateScrollerSize(true);\n    this._positionItems();\n    this._resetScrollPosition(\n        this._physicalTop + this._scrollOffset + targetOffsetTop);\n    this._increasePoolIfNeeded(0);\n    // clear cached visible index.\n    this._firstVisibleIndexVal = null;\n    this._lastVisibleIndexVal = null;\n  },\n\n  /**\n   * Reset the physical average and the average count.\n   */\n  _resetAverage: function() {\n    this._physicalAverage = 0;\n    this._physicalAverageCount = 0;\n  },\n\n  /**\n   * A handler for the `iron-resize` event triggered by `IronResizableBehavior`\n   * when the element is resized.\n   */\n  _resizeHandler: function() {\n    this._debounce('_render', function() {\n      // clear cached visible index.\n      this._firstVisibleIndexVal = null;\n      this._lastVisibleIndexVal = null;\n      if (this._isVisible) {\n        this.updateViewportBoundaries();\n        // Reinstall the scroll event listener.\n        this.toggleScrollListener(true);\n        this._resetAverage();\n        this._render();\n      } else {\n        // Uninstall the scroll event listener.\n        this.toggleScrollListener(false);\n      }\n    }, animationFrame);\n  },\n\n  /**\n   * Selects the given item.\n   *\n   * @method selectItem\n   * @param {Object} item The item instance.\n   */\n  selectItem: function(item) {\n    return this.selectIndex(this.items.indexOf(item));\n  },\n\n  /**\n   * Selects the item at the given index in the items array.\n   *\n   * @method selectIndex\n   * @param {number} index The index of the item in the items array.\n   */\n  selectIndex: function(index) {\n    if (index < 0 || index >= this._virtualCount) {\n      return;\n    }\n    if (!this.multiSelection && this.selectedItem) {\n      this.clearSelection();\n    }\n    if (this._isIndexRendered(index)) {\n      var model = this.modelForElement(\n          this._physicalItems[this._getPhysicalIndex(index)]);\n      if (model) {\n        model[this.selectedAs] = true;\n      }\n      this.updateSizeForIndex(index);\n    }\n    this.$.selector.selectIndex(index);\n  },\n\n  /**\n   * Deselects the given item.\n   *\n   * @method deselect\n   * @param {Object} item The item instance.\n   */\n  deselectItem: function(item) {\n    return this.deselectIndex(this.items.indexOf(item));\n  },\n\n  /**\n   * Deselects the item at the given index in the items array.\n   *\n   * @method deselectIndex\n   * @param {number} index The index of the item in the items array.\n   */\n  deselectIndex: function(index) {\n    if (index < 0 || index >= this._virtualCount) {\n      return;\n    }\n    if (this._isIndexRendered(index)) {\n      var model = this.modelForElement(\n          this._physicalItems[this._getPhysicalIndex(index)]);\n      model[this.selectedAs] = false;\n      this.updateSizeForIndex(index);\n    }\n    this.$.selector.deselectIndex(index);\n  },\n\n  /**\n   * Selects or deselects a given item depending on whether the item\n   * has already been selected.\n   *\n   * @method toggleSelectionForItem\n   * @param {Object} item The item object.\n   */\n  toggleSelectionForItem: function(item) {\n    return this.toggleSelectionForIndex(this.items.indexOf(item));\n  },\n\n  /**\n   * Selects or deselects the item at the given index in the items array\n   * depending on whether the item has already been selected.\n   *\n   * @method toggleSelectionForIndex\n   * @param {number} index The index of the item in the items array.\n   */\n  toggleSelectionForIndex: function(index) {\n    var isSelected = this.$.selector.isIndexSelected ?\n        this.$.selector.isIndexSelected(index) :\n        this.$.selector.isSelected(this.items[index]);\n    isSelected ? this.deselectIndex(index) : this.selectIndex(index);\n  },\n\n  /**\n   * Clears the current selection in the list.\n   *\n   * @method clearSelection\n   */\n  clearSelection: function() {\n    this._iterateItems(function(pidx, vidx) {\n      this.modelForElement(this._physicalItems[pidx])[this.selectedAs] = false;\n    });\n    this.$.selector.clearSelection();\n  },\n\n  /**\n   * Add an event listener to `tap` if `selectionEnabled` is true,\n   * it will remove the listener otherwise.\n   */\n  _selectionEnabledChanged: function(selectionEnabled) {\n    var handler = selectionEnabled ? this.listen : this.unlisten;\n    handler.call(this, this, 'tap', '_selectionHandler');\n  },\n\n  /**\n   * Select an item from an event object.\n   */\n  _selectionHandler: function(e) {\n    var model = this.modelForElement(e.target);\n    if (!model) {\n      return;\n    }\n    var modelTabIndex, activeElTabIndex;\n    var target = dom(e).path[0];\n    var activeEl = this._getActiveElement();\n    var physicalItem =\n        this._physicalItems[this._getPhysicalIndex(model[this.indexAs])];\n    // Safari does not focus certain form controls via mouse\n    // https://bugs.webkit.org/show_bug.cgi?id=118043\n    if (target.localName === 'input' || target.localName === 'button' ||\n        target.localName === 'select') {\n      return;\n    }\n    // Set a temporary tabindex\n    modelTabIndex = model.tabIndex;\n    model.tabIndex = SECRET_TABINDEX;\n    activeElTabIndex = activeEl ? activeEl.tabIndex : -1;\n    model.tabIndex = modelTabIndex;\n    // Only select the item if the tap wasn't on a focusable child\n    // or the element bound to `tabIndex`\n    if (activeEl && physicalItem !== activeEl &&\n        physicalItem.contains(activeEl) &&\n        activeElTabIndex !== SECRET_TABINDEX) {\n      return;\n    }\n    this.toggleSelectionForItem(model[this.as]);\n  },\n\n  _multiSelectionChanged: function(multiSelection) {\n    this.clearSelection();\n    this.$.selector.multi = multiSelection;\n  },\n\n  /**\n   * Updates the size of a given list item.\n   *\n   * @method updateSizeForItem\n   * @param {Object} item The item instance.\n   */\n  updateSizeForItem: function(item) {\n    return this.updateSizeForIndex(this.items.indexOf(item));\n  },\n\n  /**\n   * Updates the size of the item at the given index in the items array.\n   *\n   * @method updateSizeForIndex\n   * @param {number} index The index of the item in the items array.\n   */\n  updateSizeForIndex: function(index) {\n    if (!this._isIndexRendered(index)) {\n      return null;\n    }\n    this._updateMetrics([this._getPhysicalIndex(index)]);\n    this._positionItems();\n    return null;\n  },\n\n  /**\n   * Creates a temporary backfill item in the rendered pool of physical items\n   * to replace the main focused item. The focused item has tabIndex = 0\n   * and might be currently focused by the user.\n   *\n   * This dynamic replacement helps to preserve the focus state.\n   */\n  _manageFocus: function() {\n    var fidx = this._focusedVirtualIndex;\n\n    if (fidx >= 0 && fidx < this._virtualCount) {\n      // if it's a valid index, check if that index is rendered\n      // in a physical item.\n      if (this._isIndexRendered(fidx)) {\n        this._restoreFocusedItem();\n      } else {\n        this._createFocusBackfillItem();\n      }\n    } else if (this._virtualCount > 0 && this._physicalCount > 0) {\n      // otherwise, assign the initial focused index.\n      this._focusedPhysicalIndex = this._physicalStart;\n      this._focusedVirtualIndex = this._virtualStart;\n      this._focusedItem = this._physicalItems[this._physicalStart];\n    }\n  },\n\n  /**\n   * Converts a random index to the index of the item that completes it's row.\n   * Allows for better order and fill computation when grid == true.\n   */\n  _convertIndexToCompleteRow: function(idx) {\n    // when grid == false _itemPerRow can be unset.\n    this._itemsPerRow = this._itemsPerRow || 1;\n    return this.grid ? Math.ceil(idx / this._itemsPerRow) * this._itemsPerRow :\n                       idx;\n  },\n\n  _isIndexRendered: function(idx) {\n    return idx >= this._virtualStart && idx <= this._virtualEnd;\n  },\n\n  _isIndexVisible: function(idx) {\n    return idx >= this.firstVisibleIndex && idx <= this.lastVisibleIndex;\n  },\n\n  _getPhysicalIndex: function(vidx) {\n    return (this._physicalStart + (vidx - this._virtualStart)) %\n        this._physicalCount;\n  },\n\n  focusItem: function(idx) {\n    this._focusPhysicalItem(idx);\n  },\n\n  _focusPhysicalItem: function(idx) {\n    if (idx < 0 || idx >= this._virtualCount) {\n      return;\n    }\n    this._restoreFocusedItem();\n    // scroll to index to make sure it's rendered\n    if (!this._isIndexRendered(idx)) {\n      this.scrollToIndex(idx);\n    }\n    var physicalItem = this._physicalItems[this._getPhysicalIndex(idx)];\n    var model = this.modelForElement(physicalItem);\n    var focusable;\n    // set a secret tab index\n    model.tabIndex = SECRET_TABINDEX;\n    // check if focusable element is the physical item\n    if (physicalItem.tabIndex === SECRET_TABINDEX) {\n      focusable = physicalItem;\n    }\n    // search for the element which tabindex is bound to the secret tab index\n    if (!focusable) {\n      focusable = dom(physicalItem)\n                      .querySelector('[tabindex=\"' + SECRET_TABINDEX + '\"]');\n    }\n    // restore the tab index\n    model.tabIndex = 0;\n    // focus the focusable element\n    this._focusedVirtualIndex = idx;\n    focusable && focusable.focus();\n  },\n\n  _removeFocusedItem: function() {\n    if (this._offscreenFocusedItem) {\n      this._itemsParent.removeChild(this._offscreenFocusedItem);\n    }\n    this._offscreenFocusedItem = null;\n    this._focusBackfillItem = null;\n    this._focusedItem = null;\n    this._focusedVirtualIndex = -1;\n    this._focusedPhysicalIndex = -1;\n  },\n\n  _createFocusBackfillItem: function() {\n    var fpidx = this._focusedPhysicalIndex;\n\n    if (this._offscreenFocusedItem || this._focusedVirtualIndex < 0) {\n      return;\n    }\n    if (!this._focusBackfillItem) {\n      // Create a physical item.\n      var inst = this.stamp(null);\n      this._focusBackfillItem =\n          /** @type {!HTMLElement} */ (inst.root.querySelector('*'));\n      this._itemsParent.appendChild(inst.root);\n    }\n    // Set the offcreen focused physical item.\n    this._offscreenFocusedItem = this._physicalItems[fpidx];\n    this.modelForElement(this._offscreenFocusedItem).tabIndex = 0;\n    this._physicalItems[fpidx] = this._focusBackfillItem;\n    this._focusedPhysicalIndex = fpidx;\n    // Hide the focused physical.\n    this.translate3d(0, HIDDEN_Y, 0, this._offscreenFocusedItem);\n  },\n\n  _restoreFocusedItem: function() {\n    if (!this._offscreenFocusedItem || this._focusedVirtualIndex < 0) {\n      return;\n    }\n    // Assign models to the focused index.\n    this._assignModels();\n    // Get the new physical index for the focused index.\n    var fpidx = this._focusedPhysicalIndex =\n        this._getPhysicalIndex(this._focusedVirtualIndex);\n\n    var onScreenItem = this._physicalItems[fpidx];\n    if (!onScreenItem) {\n      return;\n    }\n    var onScreenInstance = this.modelForElement(onScreenItem);\n    var offScreenInstance = this.modelForElement(this._offscreenFocusedItem);\n    // Restores the physical item only when it has the same model\n    // as the offscreen one. Use key for comparison since users can set\n    // a new item via set('items.idx').\n    if (onScreenInstance[this.as] === offScreenInstance[this.as]) {\n      // Flip the focus backfill.\n      this._focusBackfillItem = onScreenItem;\n      onScreenInstance.tabIndex = -1;\n      // Restore the focused physical item.\n      this._physicalItems[fpidx] = this._offscreenFocusedItem;\n      // Hide the physical item that backfills.\n      this.translate3d(0, HIDDEN_Y, 0, this._focusBackfillItem);\n    } else {\n      this._removeFocusedItem();\n      this._focusBackfillItem = null;\n    }\n    this._offscreenFocusedItem = null;\n  },\n\n  _didFocus: function(e) {\n    var targetModel = this.modelForElement(e.target);\n    var focusedModel = this.modelForElement(this._focusedItem);\n    var hasOffscreenFocusedItem = this._offscreenFocusedItem !== null;\n    var fidx = this._focusedVirtualIndex;\n    if (!targetModel) {\n      return;\n    }\n    if (focusedModel === targetModel) {\n      // If the user focused the same item, then bring it into view if it's not\n      // visible.\n      if (!this._isIndexVisible(fidx)) {\n        this.scrollToIndex(fidx);\n      }\n    } else {\n      this._restoreFocusedItem();\n      // Restore tabIndex for the currently focused item.\n      if (focusedModel) {\n        focusedModel.tabIndex = -1;\n      }\n      // Set the tabIndex for the next focused item.\n      targetModel.tabIndex = 0;\n      fidx = targetModel[this.indexAs];\n      this._focusedVirtualIndex = fidx;\n      this._focusedPhysicalIndex = this._getPhysicalIndex(fidx);\n      this._focusedItem = this._physicalItems[this._focusedPhysicalIndex];\n      if (hasOffscreenFocusedItem && !this._offscreenFocusedItem) {\n        this._update();\n      }\n    }\n  },\n\n  _keydownHandler: function(e) {\n    switch (e.keyCode) {\n      case /* ARROW_DOWN */ 40:\n        if (this._focusedVirtualIndex < this._virtualCount - 1)\n          e.preventDefault();\n        this._focusPhysicalItem(\n            this._focusedVirtualIndex + (this.grid ? this._itemsPerRow : 1));\n        break;\n      case /* ARROW_RIGHT */ 39:\n        if (this.grid)\n          this._focusPhysicalItem(\n              this._focusedVirtualIndex + (this._isRTL ? -1 : 1));\n        break;\n      case /* ARROW_UP */ 38:\n        if (this._focusedVirtualIndex > 0)\n          e.preventDefault();\n        this._focusPhysicalItem(\n            this._focusedVirtualIndex - (this.grid ? this._itemsPerRow : 1));\n        break;\n      case /* ARROW_LEFT */ 37:\n        if (this.grid)\n          this._focusPhysicalItem(\n              this._focusedVirtualIndex + (this._isRTL ? 1 : -1));\n        break;\n      case /* ENTER */ 13:\n        this._focusPhysicalItem(this._focusedVirtualIndex);\n        if (this.selectionEnabled)\n          this._selectionHandler(e);\n        break;\n    }\n  },\n\n  _clamp: function(v, min, max) {\n    return Math.min(max, Math.max(min, v));\n  },\n\n  _debounce: function(name, cb, asyncModule) {\n    this._debouncers = this._debouncers || {};\n    this._debouncers[name] =\n        Debouncer.debounce(this._debouncers[name], asyncModule, cb.bind(this));\n    enqueueDebouncer(this._debouncers[name]);\n  },\n\n  _forwardProperty: function(inst, name, value) {\n    inst._setPendingProperty(name, value);\n  },\n\n  /* Templatizer bindings for v2 */\n  _forwardHostPropV2: function(prop, value) {\n    (this._physicalItems || [])\n        .concat([this._offscreenFocusedItem, this._focusBackfillItem])\n        .forEach(function(item) {\n          if (item) {\n            this.modelForElement(item).forwardHostProp(prop, value);\n          }\n        }, this);\n  },\n\n  _notifyInstancePropV2: function(inst, prop, value) {\n    if (matches(this.as, prop)) {\n      var idx = inst[this.indexAs];\n      if (prop == this.as) {\n        this.items[idx] = value;\n      }\n      this.notifyPath(translate(this.as, 'items.' + idx, prop), value);\n    }\n  },\n\n  /* Templatizer bindings for v1 */\n  _getStampedChildren: function() {\n    return this._physicalItems;\n  },\n\n  _forwardInstancePath: function(inst, path, value) {\n    if (path.indexOf(this.as + '.') === 0) {\n      this.notifyPath(\n          'items.' + inst.__key__ + '.' + path.slice(this.as.length + 1),\n          value);\n    }\n  },\n\n  _forwardParentPath: function(path, value) {\n    (this._physicalItems || [])\n        .concat([this._offscreenFocusedItem, this._focusBackfillItem])\n        .forEach(function(item) {\n          if (item) {\n            this.modelForElement(item).notifyPath(path, value);\n          }\n        }, this);\n  },\n\n  _forwardParentProp: function(prop, value) {\n    (this._physicalItems || [])\n        .concat([this._offscreenFocusedItem, this._focusBackfillItem])\n        .forEach(function(item) {\n          if (item) {\n            this.modelForElement(item)[prop] = value;\n          }\n        }, this);\n  },\n\n  /* Gets the activeElement of the shadow root/host that contains the list. */\n  _getActiveElement: function() {\n    var itemsHost = this._itemsParent.node.domHost;\n    return dom(itemsHost ? itemsHost.root : document).activeElement;\n  }\n});\n"
    },
    {
     "id": 104,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-details@1.2.0/node_modules/@vaadin/vaadin-details/theme/lumo/vaadin-details-styles.js",
     "source": "import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-details\" theme-for=\"vaadin-details\">\n  <template>\n    <style>\n      :host {\n        margin: var(--lumo-space-xs) 0;\n        outline: none;\n      }\n\n      [part=\"summary\"] {\n        display: flex;\n        align-items: center;\n        width: 100%;\n        outline: none;\n        padding: var(--lumo-space-s) 0;\n        box-sizing: border-box;\n        font-family: var(--lumo-font-family);\n        font-size: var(--lumo-font-size-m);\n        font-weight: 500;\n        line-height: var(--lumo-line-height-xs);\n        color: var(--lumo-secondary-text-color);\n        background-color: inherit;\n        border-radius: var(--lumo-border-radius-m);\n        cursor: default;\n        -webkit-tap-highlight-color: transparent;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n      }\n\n      :host([focus-ring]) [part=\"summary\"] {\n        box-shadow: 0 0 0 2px var(--lumo-primary-color-50pct);\n      }\n\n      [part=\"toggle\"] {\n        display: block;\n        width: 1em;\n        height: 1em;\n        margin-left: calc(var(--lumo-space-xs) * -1);\n        margin-right: var(--lumo-space-xs);\n        font-size: var(--lumo-icon-size-s);\n        line-height: 1;\n        color: var(--lumo-contrast-60pct);\n        font-family: \"lumo-icons\";\n      }\n\n      :host([disabled]) [part=\"summary\"],\n      :host([disabled]) [part=\"toggle\"] {\n        color: var(--lumo-disabled-text-color);\n      }\n\n      @media (hover: hover) {\n        :host(:not([disabled])) [part=\"summary\"]:hover,\n        :host(:not([disabled])) [part=\"summary\"]:hover [part=\"toggle\"] {\n          color: var(--lumo-contrast-80pct);\n        }\n      }\n\n      [part=\"toggle\"]::before {\n        content: var(--lumo-icons-angle-right);\n      }\n\n      :host([opened]) [part=\"toggle\"] {\n        transform: rotate(90deg);\n      }\n\n      [part=\"content\"] {\n        padding: var(--lumo-space-xs) 0 var(--lumo-space-s);\n        font-size: var(--lumo-font-size-m);\n        line-height: var(--lumo-line-height-m);\n      }\n\n      :host([theme~=\"filled\"]) {\n        background-color: var(--lumo-contrast-5pct);\n        border-radius: var(--lumo-border-radius-m);\n      }\n\n      :host([theme~=\"filled\"]) [part=\"summary\"] {\n        padding: var(--lumo-space-s) calc(var(--lumo-space-s) + var(--lumo-space-xs) / 2);\n      }\n\n      :host([theme~=\"filled\"]) [part=\"content\"] {\n        padding-left: var(--lumo-space-m);\n        padding-right: var(--lumo-space-m);\n      }\n\n      :host([theme~=\"small\"]) [part=\"summary\"] {\n        padding-top: var(--lumo-space-xs);\n        padding-bottom: var(--lumo-space-xs);\n      }\n\n      :host([theme~=\"small\"]) [part=\"toggle\"] {\n        margin-right: calc(var(--lumo-space-xs) / 2);\n      }\n\n      :host([theme~=\"small\"]) [part\\$=\"content\"] {\n        font-size: var(--lumo-font-size-s);\n      }\n\n      :host([theme~=\"reverse\"]) [part=\"summary\"] {\n        justify-content: space-between;\n      }\n\n      :host([theme~=\"reverse\"]) [part=\"toggle\"] {\n        order: 1;\n        margin-right: 0;\n      }\n\n      :host([theme~=\"reverse\"][theme~=\"filled\"]) [part=\"summary\"] {\n        padding-left: var(--lumo-space-m);\n      }\n\n      /* RTL specific styles */\n\n      :host([dir=\"rtl\"]) [part=\"toggle\"] {\n        margin-left: var(--lumo-space-xs);\n        margin-right: calc(var(--lumo-space-xs) * -1);\n      }\n\n      :host([dir=\"rtl\"]) [part=\"toggle\"]::before {\n        content: var(--lumo-icons-angle-left);\n      }\n\n      :host([opened][dir=\"rtl\"]) [part=\"toggle\"] {\n        transform: rotate(-90deg);\n      }\n\n      :host([theme~=\"small\"][dir=\"rtl\"]) [part=\"toggle\"] {\n        margin-left: calc(var(--lumo-space-xs) / 2);\n      }\n\n      :host([theme~=\"reverse\"][dir=\"rtl\"]) [part=\"toggle\"] {\n        margin-left: 0;\n      }\n\n      :host([theme~=\"reverse\"][theme~=\"filled\"][dir=\"rtl\"]) [part=\"summary\"] {\n        padding-right: var(--lumo-space-m);\n      }\n\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
    },
    {
     "id": 105,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-details@1.2.0/node_modules/@vaadin/vaadin-details/src/vaadin-details.js",
     "source": "/**\n@license\nCopyright (c) 2019 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { ControlStateMixin } from '@vaadin/vaadin-control-state-mixin/vaadin-control-state-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\n * `<vaadin-details>` is a Web Component which the creates an\n * expandable panel similar to `<details>` HTML element.\n *\n * ```\n * <vaadin-details>\n *   <div slot=\"summary\">Expandable Details</div>\n *   Toggle using mouse, Enter and Space keys.\n * </vaadin-details>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are exposed for styling:\n *\n * Part name        | Description\n * -----------------|----------------\n * `summary`        | The element used to open and close collapsible content.\n * `toggle`         | The element used as indicator, can represent an icon.\n * `summary-content`| The wrapper for the slotted summary content.\n * `content`        | The wrapper for the collapsible details content.\n *\n * The following attributes are exposed for styling:\n *\n * Attribute    | Description\n * -------------| -----------\n * `opened`     | Set when the collapsible content is expanded and visible.\n * `disabled`   | Set when the element is disabled.\n * `focus-ring` | Set when the element is focused using the keyboard.\n * `focused`    | Set when the element is focused.\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends PolymerElement\n * @mixes ControlStateMixin\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @demo demo/index.html\n */\nclass DetailsElement extends\n  ControlStateMixin(\n    ElementMixin(\n      ThemableMixin(PolymerElement))) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: block;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      [part=\"content\"] {\n        display: none;\n        overflow: hidden;\n      }\n\n      [part=\"summary\"][disabled] {\n        pointer-events: none;\n      }\n\n      :host([opened]) [part=\"content\"] {\n        display: block;\n        overflow: visible;\n      }\n    </style>\n    <div role=\"heading\">\n      <div role=\"button\" part=\"summary\" on-click=\"_onToggleClick\" on-keydown=\"_onToggleKeyDown\" disabled\\$=\"[[disabled]]\" aria-expanded\\$=\"[[_getAriaExpanded(opened)]]\">\n        <span part=\"toggle\"></span>\n        <span part=\"summary-content\"><slot name=\"summary\"></slot></span>\n      </div>\n    </div>\n    <div part=\"content\" aria-hidden\\$=\"[[_getAriaHidden(opened)]]\">\n      <slot></slot>\n    </div>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-details';\n  }\n\n  static get version() {\n    return '1.2.0';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * If true, the details content is visible.\n       * @type {boolean}\n       */\n      opened: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        notify: true,\n        observer: '_openedChanged'\n      }\n    };\n  }\n\n  /**\n   * @return {!HTMLElement}\n   * @protected\n   */\n  get _collapsible() {\n    return this.shadowRoot.querySelector('[part=\"content\"]');\n  }\n\n  /**\n   * Focusable element used by vaadin-control-state-mixin\n   * @return {!HTMLElement}\n   * @protected\n   */\n  get focusElement() {\n    return this.shadowRoot.querySelector('[part=\"summary\"]');\n  }\n\n  ready() {\n    super.ready();\n    // prevent Shift + Tab on content from host blur\n    this._collapsible.addEventListener('keydown', e => {\n      if (e.shiftKey && e.keyCode === 9) {\n        e.stopPropagation();\n      }\n    });\n  }\n\n  /** @private */\n  _getAriaExpanded(opened) {\n    return opened ? 'true' : 'false';\n  }\n\n  /** @private */\n  _getAriaHidden(opened) {\n    return opened ? 'false' : 'true';\n  }\n\n  /** @private */\n  _openedChanged(opened) {\n    this._collapsible.style.maxHeight = opened ? '' : '0px';\n  }\n\n  /**\n   * @param {!MouseEvent} e\n   * @protected\n   */\n  _onToggleClick(e) {\n    this.opened = !this.opened;\n  }\n\n  /**\n   * @param {!KeyboardEvent} e\n   * @protected\n   */\n  _onToggleKeyDown(e) {\n    if ([13, 32].indexOf(e.keyCode) > -1) {\n      e.preventDefault();\n      this.opened = !this.opened;\n    }\n  }\n}\n\ncustomElements.define(DetailsElement.is, DetailsElement);\n\nexport { DetailsElement };\n"
    },
    {
     "id": 106,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-avatar@2.0.2/node_modules/@vaadin/vaadin-avatar/src/vaadin-avatar.js",
     "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport './vaadin-avatar-icons.js';\n\n// We consider the keyboard to be active if the window has received a keydown\n// event since the last mousedown event.\nlet keyboardActive = false;\n\n// Listen for top-level Tab keydown and mousedown events.\n// Use capture phase so we detect events even if they're handled.\nwindow.addEventListener(\n  'keydown',\n  (e) => {\n    keyboardActive = e.keyCode === 9;\n  },\n  true\n);\n\nwindow.addEventListener(\n  'mousedown',\n  () => {\n    keyboardActive = false;\n  },\n  true\n);\n\n/**\n * `<vaadin-avatar>` is a Web Component providing avatar displaying functionality.\n *\n * ```html\n * <vaadin-avatar img=\"avatars/avatar-1.jpg\"></vaadin-avatar>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are exposed for styling:\n *\n * Part name | Description\n * --------- | ---------------\n * `abbr`    | The abbreviation element\n * `icon`    | The icon element\n *\n * The following attributes are exposed for styling:\n *\n * Attribute | Description\n * --------- | -----------\n * `has-color-index` | Set when the avatar has `colorIndex` and the corresponding custom CSS property exists.\n *\n * See [Styling Components](https://vaadin.com/docs/v14/themes/styling-components.html) documentation.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n */\nclass AvatarElement extends ElementMixin(ThemableMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n          flex: none;\n          border-radius: 50%;\n          overflow: hidden;\n          height: var(--vaadin-avatar-size);\n          width: var(--vaadin-avatar-size);\n          border: var(--vaadin-avatar-outline-width) solid transparent;\n          margin: calc(var(--vaadin-avatar-outline-width) * -1);\n          background-clip: content-box;\n          --vaadin-avatar-outline-width: 2px;\n          --vaadin-avatar-size: 64px;\n        }\n\n        img {\n          height: 100%;\n          width: 100%;\n        }\n\n        [part='icon'] {\n          font-size: 5.6em;\n        }\n\n        [part='abbr'] {\n          font-size: 2.2em;\n        }\n\n        [part='icon'] > text {\n          font-family: 'vaadin-avatar-icons';\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        svg[hidden] {\n          display: none !important;\n        }\n\n        :host([has-color-index]) {\n          position: relative;\n          background-color: var(--vaadin-avatar-user-color);\n        }\n\n        :host([has-color-index])::before {\n          position: absolute;\n          z-index: 1;\n          content: '';\n          top: 0;\n          left: 0;\n          bottom: 0;\n          right: 0;\n          border-radius: 50%;\n          box-shadow: inset 0 0 0 2px var(--vaadin-avatar-user-color);\n        }\n      </style>\n      <img hidden$=\"[[!__imgVisible]]\" src$=\"[[img]]\" aria-hidden=\"true\" />\n      <svg\n        part=\"icon\"\n        hidden$=\"[[!__iconVisible]]\"\n        id=\"avatar-icon\"\n        viewBox=\"-50 -50 100 100\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        aria-hidden=\"true\"\n      >\n        <text dy=\".35em\" text-anchor=\"middle\"></text>\n      </svg>\n      <svg\n        part=\"abbr\"\n        hidden$=\"[[!__abbrVisible]]\"\n        id=\"avatar-abbr\"\n        viewBox=\"-50 -50 100 100\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        aria-hidden=\"true\"\n      >\n        <text dy=\".35em\" text-anchor=\"middle\">[[abbr]]</text>\n      </svg>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-avatar';\n  }\n\n  static get version() {\n    return '2.0.2';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * The path to the image\n       */\n      img: {\n        type: String,\n        reflectToAttribute: true\n      },\n\n      /**\n       * A shortened form of name that is displayed\n       * in the avatar when `img` is not provided.\n       */\n      abbr: {\n        type: String,\n        reflectToAttribute: true\n      },\n\n      /**\n       * Full name of the user\n       * used for the title of the avatar.\n       */\n      name: {\n        type: String,\n        reflectToAttribute: true\n      },\n\n      /**\n       * Color index used for avatar background.\n       */\n      colorIndex: {\n        type: Number,\n        observer: '__colorIndexChanged'\n      },\n\n      /**\n       * The object used to localize this component.\n       * To change the default localization, replace the entire\n       * _i18n_ object or just the property you want to modify.\n       *\n       * The object has the following JSON structure and default values:\n          {\n            // Translation of the anonymous user avatar title.\n            anonymous: 'anonymous'\n          }\n      * @type {!AvatarI18n}\n      * @default {English/US}\n      */\n      i18n: {\n        type: Object,\n        value: () => {\n          return {\n            anonymous: 'anonymous'\n          };\n        }\n      },\n\n      /** @private */\n      __imgVisible: Boolean,\n\n      /** @private */\n      __iconVisible: Boolean,\n\n      /** @private */\n      __abbrVisible: Boolean\n    };\n  }\n\n  static get observers() {\n    return ['__imgOrAbbrOrNameChanged(img, abbr, name)', '__i18nChanged(i18n.*)'];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.__updateVisibility();\n\n    // Should set `anonymous` if name / abbr is not provided\n    if (!this.name && !this.abbr) {\n      this.__setTitle(this.name);\n    }\n\n    this.setAttribute('role', 'button');\n\n    if (!this.hasAttribute('tabindex')) {\n      this.setAttribute('tabindex', '0');\n    }\n\n    this.addEventListener('focusin', () => {\n      this.__setFocused(true);\n    });\n\n    this.addEventListener('focusout', () => {\n      this.__setFocused(false);\n    });\n  }\n\n  /** @private */\n  __setFocused(focused) {\n    if (focused) {\n      this.setAttribute('focused', '');\n\n      if (keyboardActive) {\n        this.setAttribute('focus-ring', '');\n      }\n    } else {\n      this.removeAttribute('focused');\n      this.removeAttribute('focus-ring');\n    }\n  }\n\n  /** @private */\n  __colorIndexChanged(index) {\n    if (index != null) {\n      const prop = `--vaadin-user-color-${index}`;\n\n      // check if custom CSS property is defined\n      const isValid = Boolean(getComputedStyle(document.documentElement).getPropertyValue(prop));\n\n      if (isValid) {\n        this.setAttribute('has-color-index', '');\n        this.style.setProperty('--vaadin-avatar-user-color', `var(${prop})`);\n      } else {\n        this.removeAttribute('has-color-index');\n        console.warn(`The CSS property --vaadin-user-color-${index} is not defined`);\n      }\n    } else {\n      this.removeAttribute('has-color-index');\n    }\n  }\n\n  /** @private */\n  __imgOrAbbrOrNameChanged(img, abbr, name) {\n    this.__updateVisibility();\n\n    if (abbr && abbr !== this.__generatedAbbr) {\n      this.__setTitle(name ? `${name} (${abbr})` : abbr);\n      return;\n    }\n\n    if (name) {\n      this.abbr = this.__generatedAbbr = name\n        .split(' ')\n        .map((word) => word.charAt(0))\n        .join('');\n    } else {\n      this.abbr = undefined;\n    }\n\n    this.__setTitle(name);\n  }\n\n  /** @private */\n  __i18nChanged(i18n) {\n    if (i18n.base && i18n.base.anonymous) {\n      if (this.__oldAnonymous && this.getAttribute('title') === this.__oldAnonymous) {\n        this.__setTitle();\n      }\n\n      this.__oldAnonymous = i18n.base.anonymous;\n    }\n  }\n\n  /** @private */\n  __updateVisibility() {\n    this.__imgVisible = !!this.img;\n    this.__abbrVisible = !this.img && !!this.abbr;\n    this.__iconVisible = !this.img && !this.abbr;\n  }\n\n  /** @private */\n  __setTitle(title) {\n    if (title) {\n      this.setAttribute('title', title);\n    } else {\n      this.setAttribute('title', this.i18n.anonymous);\n    }\n  }\n}\n\ncustomElements.define(AvatarElement.is, AvatarElement);\n\nexport { AvatarElement };\n"
    },
    {
     "id": 107,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-combo-box@6.0.1/node_modules/@vaadin/vaadin-combo-box/theme/lumo/vaadin-combo-box-dropdown-styles.js",
     "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-overlay/theme/lumo/vaadin-overlay.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/menu-overlay.js';\n\nregisterStyles(\n  'vaadin-combo-box-overlay',\n  css`\n    [part='content'] {\n      padding: 0;\n    }\n\n    :host {\n      /* TODO: using a legacy mixin (unsupported) */\n      --iron-list-items-container: {\n        border-width: var(--lumo-space-xs);\n        border-style: solid;\n        border-color: transparent;\n      }\n    }\n\n    /* Loading state */\n\n    /* When items are empty, the spinner needs some room */\n    :host(:not([closing])) [part~='content'] {\n      min-height: calc(2 * var(--lumo-space-s) + var(--lumo-icon-size-s));\n    }\n\n    [part~='overlay'] {\n      position: relative;\n    }\n\n    :host([loading]) [part~='loader'] {\n      box-sizing: border-box;\n      width: var(--lumo-icon-size-s);\n      height: var(--lumo-icon-size-s);\n      position: absolute;\n      z-index: 1;\n      left: var(--lumo-space-s);\n      right: var(--lumo-space-s);\n      top: var(--lumo-space-s);\n      margin-left: auto;\n      margin-inline-start: auto;\n      margin-inline-end: 0;\n      border: 2px solid transparent;\n      border-color: var(--lumo-primary-color-50pct) var(--lumo-primary-color-50pct) var(--lumo-primary-color)\n        var(--lumo-primary-color);\n      border-radius: calc(0.5 * var(--lumo-icon-size-s));\n      opacity: 0;\n      animation: 1s linear infinite lumo-combo-box-loader-rotate, 0.3s 0.1s lumo-combo-box-loader-fade-in both;\n      pointer-events: none;\n    }\n\n    @keyframes lumo-combo-box-loader-fade-in {\n      0% {\n        opacity: 0;\n      }\n\n      100% {\n        opacity: 1;\n      }\n    }\n\n    @keyframes lumo-combo-box-loader-rotate {\n      0% {\n        transform: rotate(0deg);\n      }\n\n      100% {\n        transform: rotate(360deg);\n      }\n    }\n\n    /* RTL specific styles */\n\n    :host([loading][dir='rtl']) [part~='loader'] {\n      left: auto;\n      margin-left: 0;\n      margin-right: auto;\n      margin-inline-start: 0;\n      margin-inline-end: auto;\n    }\n  `,\n  { moduleId: 'lumo-combo-box-overlay', include: ['lumo-overlay', 'lumo-menu-overlay-core'] }\n);\n"
    },
    {
     "id": 108,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-combo-box@6.0.1/node_modules/@vaadin/vaadin-combo-box/theme/lumo/vaadin-combo-box-item-styles.js",
     "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-item/theme/lumo/vaadin-item.js';\n\n/* TODO partly duplicated from vaadin-list-box styles. Should find a way to make it DRY */\nregisterStyles(\n  'vaadin-combo-box-item',\n  css`\n    :host {\n      cursor: default;\n      -webkit-tap-highlight-color: var(--lumo-primary-color-10pct);\n      padding-left: calc(var(--lumo-border-radius) / 4);\n      padding-right: calc(var(--lumo-space-l) + var(--lumo-border-radius) / 4);\n      transition: background-color 100ms;\n      border-radius: var(--lumo-border-radius);\n      overflow: hidden;\n      --_lumo-item-selected-icon-display: block;\n    }\n\n    :host(:hover) {\n      background-color: var(--lumo-primary-color-10pct);\n    }\n\n    :host([focused]:not([disabled])) {\n      box-shadow: inset 0 0 0 2px var(--lumo-primary-color-50pct);\n    }\n\n    @media (pointer: coarse) {\n      :host(:hover) {\n        background-color: transparent;\n      }\n\n      :host([focused]:not([disabled])) {\n        box-shadow: none;\n      }\n    }\n\n    /* RTL specific styles */\n    :host([dir='rtl']) {\n      padding-right: calc(var(--lumo-border-radius) / 4);\n      padding-left: calc(var(--lumo-space-l) + var(--lumo-border-radius) / 4);\n    }\n  `,\n  { moduleId: 'lumo-combo-box-item', include: ['lumo-item'] }\n);\n"
    },
    {
     "id": 109,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-combo-box@6.0.1/node_modules/@vaadin/vaadin-combo-box/src/vaadin-combo-box-mixin.js",
     "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { timeOut } from '@polymer/polymer/lib/utils/async.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { flush } from '@polymer/polymer/lib/utils/flush.js';\nimport { templatize } from '@polymer/polymer/lib/utils/templatize.js';\nimport { IronA11yAnnouncer } from '@polymer/iron-a11y-announcer/iron-a11y-announcer.js';\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { ComboBoxPlaceholder } from './vaadin-combo-box-placeholder.js';\n\n/**\n * @polymerMixin\n */\nexport const ComboBoxMixin = (subclass) =>\n  class VaadinComboBoxMixinElement extends subclass {\n    static get properties() {\n      return {\n        /**\n         * True if the dropdown is open, false otherwise.\n         * @type {boolean}\n         */\n        opened: {\n          type: Boolean,\n          notify: true,\n          value: false,\n          reflectToAttribute: true,\n          observer: '_openedChanged'\n        },\n\n        /**\n         * Set true to prevent the overlay from opening automatically.\n         * @attr {boolean} auto-open-disabled\n         */\n        autoOpenDisabled: Boolean,\n\n        /**\n         * Set to true to disable this element.\n         * @type {boolean}\n         */\n        disabled: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true\n        },\n\n        /**\n         * When present, it specifies that the element field is read-only.\n         * @type {boolean}\n         */\n        readonly: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true\n        },\n\n        /**\n         * Custom function for rendering the content of every item.\n         * Receives three arguments:\n         *\n         * - `root` The `<vaadin-combo-box-item>` internal container DOM element.\n         * - `comboBox` The reference to the `<vaadin-combo-box>` element.\n         * - `model` The object with the properties related with the rendered\n         *   item, contains:\n         *   - `model.index` The index of the rendered item.\n         *   - `model.item` The item.\n         * @type {ComboBoxRenderer | undefined}\n         */\n        renderer: Function,\n\n        /**\n         * A full set of items to filter the visible options from.\n         * The items can be of either `String` or `Object` type.\n         * @type {!Array<!ComboBoxItem | string> | undefined}\n         */\n        items: {\n          type: Array,\n          observer: '_itemsChanged'\n        },\n\n        /**\n         * If `true`, the user can input a value that is not present in the items list.\n         * `value` property will be set to the input value in this case.\n         * Also, when `value` is set programmatically, the input value will be set\n         * to reflect that value.\n         * @attr {boolean} allow-custom-value\n         * @type {boolean}\n         */\n        allowCustomValue: {\n          type: Boolean,\n          value: false\n        },\n\n        /**\n         * A subset of items, filtered based on the user input. Filtered items\n         * can be assigned directly to omit the internal filtering functionality.\n         * The items can be of either `String` or `Object` type.\n         * @type {!Array<!ComboBoxItem | string> | undefined}\n         */\n        filteredItems: {\n          type: Array\n        },\n\n        /**\n         * The `String` value for the selected item of the combo box.\n         *\n         * When there’s no item selected, the value is an empty string.\n         *\n         * Use `selectedItem` property to get the raw selected item from\n         * the `items` array.\n         * @type {string}\n         */\n        value: {\n          type: String,\n          observer: '_valueChanged',\n          notify: true,\n          value: ''\n        },\n\n        /**\n         * Used to detect user value changes and fire `change` events.\n         * @private\n         */\n        _lastCommittedValue: String,\n\n        /**\n         * When set to `true`, \"loading\" attribute is added to host and the overlay element.\n         * @type {boolean}\n         */\n        loading: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true\n        },\n\n        /**\n         * @type {number}\n         * @protected\n         */\n        _focusedIndex: {\n          type: Number,\n          value: -1\n        },\n\n        /**\n         * Filtering string the user has typed into the input field.\n         * @type {string}\n         */\n        filter: {\n          type: String,\n          value: '',\n          notify: true\n        },\n\n        /**\n         * The selected item from the `items` array.\n         * @type {ComboBoxItem | string | undefined}\n         */\n        selectedItem: {\n          type: Object,\n          notify: true\n        },\n\n        /**\n         * Path for label of the item. If `items` is an array of objects, the\n         * `itemLabelPath` is used to fetch the displayed string label for each\n         * item.\n         *\n         * The item label is also used for matching items when processing user\n         * input, i.e., for filtering and selecting items.\n         *\n         * When using item templates, the property is still needed because it is used\n         * for filtering, and for displaying the selected item value in the input box.\n         * @attr {string} item-label-path\n         * @type {string}\n         */\n        itemLabelPath: {\n          type: String,\n          value: 'label',\n          observer: '_itemLabelPathChanged'\n        },\n\n        /**\n         * Path for the value of the item. If `items` is an array of objects, the\n         * `itemValuePath:` is used to fetch the string value for the selected\n         * item.\n         *\n         * The item value is used in the `value` property of the combo box,\n         * to provide the form value.\n         * @attr {string} item-value-path\n         * @type {string}\n         */\n        itemValuePath: {\n          type: String,\n          value: 'value'\n        },\n\n        /**\n         * Path for the id of the item. If `items` is an array of objects,\n         * the `itemIdPath` is used to compare and identify the same item\n         * in `selectedItem` and `filteredItems` (items given by the\n         * `dataProvider` callback).\n         * @attr {string} item-id-path\n         */\n        itemIdPath: String,\n\n        /**\n         * The name of this element.\n         */\n        name: {\n          type: String\n        },\n\n        /**\n         * Set to true if the value is invalid.\n         * @type {boolean}\n         */\n        invalid: {\n          type: Boolean,\n          reflectToAttribute: true,\n          notify: true,\n          value: false\n        },\n\n        /**\n         * @type {!HTMLElement | undefined}\n         * @protected\n         */\n        _toggleElement: Object,\n\n        /**\n         * @type {!HTMLElement | undefined}\n         * @protected\n         */\n        _clearElement: Object,\n\n        /** @protected */\n        _inputElementValue: String,\n\n        /** @private */\n        _closeOnBlurIsPrevented: Boolean,\n\n        /** @private */\n        _previousDocumentPointerEvents: String,\n\n        /** @private */\n        _itemTemplate: Object\n      };\n    }\n\n    static get observers() {\n      return [\n        '_filterChanged(filter, itemValuePath, itemLabelPath)',\n        '_itemsOrPathsChanged(items.*, itemValuePath, itemLabelPath)',\n        '_filteredItemsChanged(filteredItems.*, itemValuePath, itemLabelPath)',\n        '_templateOrRendererChanged(_itemTemplate, renderer)',\n        '_loadingChanged(loading)',\n        '_selectedItemChanged(selectedItem, itemLabelPath)',\n        '_toggleElementChanged(_toggleElement)'\n      ];\n    }\n\n    constructor() {\n      super();\n      this._boundOnFocusout = this._onFocusout.bind(this);\n      this._boundOverlaySelectedItemChanged = this._overlaySelectedItemChanged.bind(this);\n      this._boundClose = this.close.bind(this);\n      this._boundOnOpened = this._onOpened.bind(this);\n      this._boundOnKeyDown = this._onKeyDown.bind(this);\n      this._boundOnClick = this._onClick.bind(this);\n      this._boundOnOverlayTouchAction = this._onOverlayTouchAction.bind(this);\n      this._boundOnTouchend = this._onTouchend.bind(this);\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this.addEventListener('focusout', this._boundOnFocusout);\n\n      this._lastCommittedValue = this.value;\n      IronA11yAnnouncer.requestAvailability();\n\n      // 2.0 does not support 'overlay.selection-changed' syntax in listeners\n      this.$.overlay.addEventListener('selection-changed', this._boundOverlaySelectedItemChanged);\n\n      this.addEventListener('vaadin-combo-box-dropdown-closed', this._boundClose);\n      this.addEventListener('vaadin-combo-box-dropdown-opened', this._boundOnOpened);\n      this.addEventListener('keydown', this._boundOnKeyDown);\n      this.addEventListener('click', this._boundOnClick);\n\n      this.$.overlay.addEventListener('vaadin-overlay-touch-action', this._boundOnOverlayTouchAction);\n\n      this.addEventListener('touchend', this._boundOnTouchend);\n\n      this._observer = new FlattenedNodesObserver(this, (info) => {\n        this._setTemplateFromNodes(info.addedNodes);\n      });\n\n      const bringToFrontListener = () => {\n        const overlay = this.$.overlay;\n        const dropdown = overlay && overlay.$.dropdown;\n        // Check dropdown.$ because overlay is lazily instantiated\n        if (dropdown && dropdown.$) {\n          requestAnimationFrame(() => {\n            dropdown.$.overlay.bringToFront();\n          });\n        }\n      };\n\n      this.addEventListener('mousedown', bringToFrontListener);\n      this.addEventListener('touchstart', bringToFrontListener);\n    }\n\n    /**\n     * Manually invoke existing renderer.\n     */\n    render() {\n      if (this.$.overlay._selector) {\n        this.$.overlay._selector.querySelectorAll('vaadin-combo-box-item').forEach((item) => item._render());\n      }\n    }\n\n    /** @private */\n    _setTemplateFromNodes(nodes) {\n      this._itemTemplate =\n        nodes.filter((node) => node.localName && node.localName === 'template')[0] || this._itemTemplate;\n    }\n\n    /** @private */\n    _removeNewRendererOrTemplate(template, oldTemplate, renderer, oldRenderer) {\n      if (template !== oldTemplate) {\n        this._itemTemplate = undefined;\n      } else if (renderer !== oldRenderer) {\n        this.renderer = undefined;\n      }\n    }\n\n    /** @private */\n    _templateOrRendererChanged(template, renderer) {\n      if (template && renderer) {\n        this._removeNewRendererOrTemplate(template, this._oldTemplate, renderer, this._oldRenderer);\n        throw new Error('You should only use either a renderer or a template for combo box items');\n      }\n\n      this._oldTemplate = template;\n      this._oldRenderer = renderer;\n    }\n\n    /**\n     * Opens the dropdown list.\n     */\n    open() {\n      // Prevent _open() being called when input is disabled or read-only\n      if (!this.disabled && !this.readonly) {\n        this.opened = true;\n      }\n    }\n\n    /**\n     * Closes the dropdown list.\n     */\n    close() {\n      this.opened = false;\n    }\n\n    /** @private */\n    _openedChanged(value, old) {\n      // Prevent _close() being called when opened is set to its default value (false).\n      if (old === undefined) {\n        return;\n      }\n\n      if (this.opened) {\n        this._openedWithFocusRing =\n          this.hasAttribute('focus-ring') || (this.focusElement && this.focusElement.hasAttribute('focus-ring'));\n        // For touch devices, we don't want to popup virtual keyboard unless input is explicitly focused by the user.\n        if (!this.hasAttribute('focused') && !this.$.overlay.touchDevice) {\n          this.focus();\n        }\n      } else {\n        this._onClosed();\n        if (this._openedWithFocusRing && this.hasAttribute('focused')) {\n          this.focusElement.setAttribute('focus-ring', '');\n        }\n      }\n    }\n\n    /** @private */\n    _onOverlayTouchAction() {\n      // On touch devices, blur the input on touch start inside the overlay, in order to hide\n      // the virtual keyboard. But don't close the overlay on this blur.\n      this._closeOnBlurIsPrevented = true;\n      this.inputElement.blur();\n      this._closeOnBlurIsPrevented = false;\n    }\n\n    /** @private */\n    _onClick(e) {\n      this._closeOnBlurIsPrevented = true;\n\n      const path = e.composedPath();\n      const isClearElement = path.indexOf(this._clearElement) !== -1 || path[0].getAttribute('part') === 'clear-button';\n      if (isClearElement) {\n        this._clear();\n        this.focus();\n      } else if (path.indexOf(this.inputElement) !== -1) {\n        if (path.indexOf(this._toggleElement) > -1 && this.opened) {\n          this.close();\n        } else if (path.indexOf(this._toggleElement) > -1 || !this.autoOpenDisabled) {\n          this.open();\n        }\n      }\n\n      this._closeOnBlurIsPrevented = false;\n    }\n\n    /**\n     * Keyboard navigation\n     * @private\n     */\n    _onKeyDown(e) {\n      if (e.keyCode === 40) {\n        this._closeOnBlurIsPrevented = true;\n        this._onArrowDown();\n        this._closeOnBlurIsPrevented = false;\n\n        // prevent caret from moving\n        e.preventDefault();\n      } else if (e.keyCode === 38) {\n        this._closeOnBlurIsPrevented = true;\n        this._onArrowUp();\n        this._closeOnBlurIsPrevented = false;\n\n        // prevent caret from moving\n        e.preventDefault();\n      } else if (e.keyCode === 13) {\n        this._onEnter(e);\n      } else if (e.keyCode === 27) {\n        this._onEscape(e);\n      }\n    }\n\n    /** @private */\n    _getItemLabel(item) {\n      return this.$.overlay.getItemLabel(item);\n    }\n\n    /** @private */\n    _getItemValue(item) {\n      let value = item && this.itemValuePath ? this.get(this.itemValuePath, item) : undefined;\n      if (value === undefined) {\n        value = item ? item.toString() : '';\n      }\n      return value;\n    }\n\n    /** @private */\n    _onArrowDown() {\n      if (this.opened) {\n        if (this.$.overlay._items) {\n          this._focusedIndex = Math.min(this.$.overlay._items.length - 1, this._focusedIndex + 1);\n          this._prefillFocusedItemLabel();\n        }\n      } else {\n        this.open();\n      }\n    }\n\n    /** @private */\n    _onArrowUp() {\n      if (this.opened) {\n        if (this._focusedIndex > -1) {\n          this._focusedIndex = Math.max(0, this._focusedIndex - 1);\n        } else {\n          if (this.$.overlay._items) {\n            this._focusedIndex = this.$.overlay._items.length - 1;\n          }\n        }\n\n        this._prefillFocusedItemLabel();\n      } else {\n        this.open();\n      }\n    }\n\n    /** @private */\n    _prefillFocusedItemLabel() {\n      if (this._focusedIndex > -1) {\n        // Reset the input value asyncronously to prevent partial value changes\n        // announce. Makes OSX VoiceOver to announce the complete value instead.\n        this._inputElementValue = '';\n        // 1ms delay needed for OSX VoiceOver to realise input value was reset\n        setTimeout(() => {\n          this._inputElementValue = this._getItemLabel(this.$.overlay._focusedItem);\n          this._markAllSelectionRange();\n        }, 1);\n      }\n    }\n\n    /** @private */\n    _setSelectionRange(start, end) {\n      // vaadin-text-field does not implement setSelectionRange, hence we need the native input\n      const input = this._nativeInput || this.inputElement;\n\n      // Setting selection range focuses and/or moves the caret in some browsers,\n      // and there's no need to modify the selection range if the input isn't focused anyway.\n      // This affects Safari. When the overlay is open, and then hiting tab, browser should focus\n      // the next focusable element instead of the combo-box itself.\n      // Checking the focused property here is enough instead of checking the activeElement.\n      if (this.hasAttribute('focused') && input && input.setSelectionRange) {\n        input.setSelectionRange(start, end);\n      }\n    }\n\n    /** @private */\n    _markAllSelectionRange() {\n      if (this._inputElementValue !== undefined) {\n        this._setSelectionRange(0, this._inputElementValue.length);\n      }\n    }\n\n    /** @private */\n    _clearSelectionRange() {\n      if (this._inputElementValue !== undefined) {\n        const pos = this._inputElementValue ? this._inputElementValue.length : 0;\n        this._setSelectionRange(pos, pos);\n      }\n    }\n\n    /** @private */\n    _closeOrCommit() {\n      if (!this.opened && !this.loading) {\n        this._commitValue();\n      } else {\n        this.close();\n      }\n    }\n\n    /** @private */\n    _onEnter(e) {\n      // should close on enter when custom values are allowed, input field is cleared, or when an existing\n      // item is focused with keyboard. If auto open is disabled, under the same conditions, commit value.\n      if (\n        (this.opened || this.autoOpenDisabled) &&\n        (this.allowCustomValue || this._inputElementValue === '' || this._focusedIndex > -1)\n      ) {\n        this._closeOrCommit();\n\n        // Do not submit the surrounding form.\n        e.preventDefault();\n\n        // Do not trigger global listeners\n        e.stopPropagation();\n      }\n    }\n\n    /**\n     * @param {!KeyboardEvent} e\n     * @protected\n     */\n    _onEscape(e) {\n      if (this.autoOpenDisabled) {\n        this._focusedIndex = -1;\n        this.cancel();\n      } else if (this.opened) {\n        this._stopPropagation(e);\n\n        if (this._focusedIndex > -1) {\n          this._focusedIndex = -1;\n          this._revertInputValue();\n        } else {\n          this.cancel();\n        }\n      }\n    }\n\n    /** @private */\n    _toggleElementChanged(toggleElement) {\n      if (toggleElement) {\n        // Don't blur the input on toggle mousedown\n        toggleElement.addEventListener('mousedown', (e) => e.preventDefault());\n        // Unfocus previously focused element if focus is not inside combo box (on touch devices)\n        toggleElement.addEventListener('click', () => {\n          if (this.$.overlay.touchDevice && !this.hasAttribute('focused')) {\n            document.activeElement.blur();\n          }\n        });\n      }\n    }\n\n    /**\n     * Clears the current value.\n     * @protected\n     */\n    _clear() {\n      this.selectedItem = null;\n\n      if (this.allowCustomValue) {\n        this.value = '';\n      }\n\n      this._detectAndDispatchChange();\n    }\n\n    /**\n     * Reverts back to original value.\n     */\n    cancel() {\n      this._revertInputValueToValue();\n      // In the next _detectAndDispatchChange() call, the change detection should not pass\n      this._lastCommittedValue = this.value;\n      this._closeOrCommit();\n    }\n\n    /** @private */\n    _onOpened() {\n      // Pre P2 iron-list used a debouncer to render. Now that we synchronously render items,\n      // we need to flush the DOM to make sure it doesn't get flushed in the middle of _render call\n      // because that will cause problems to say the least.\n      flush();\n\n      // With iron-list v1.3.9, calling `notifyResize()` no longer renders\n      // the items synchronously. It is required to have the items rendered\n      // before we update the overlay and the list positions and sizes.\n      this.$.overlay.ensureItemsRendered();\n      this.$.overlay._selector.toggleScrollListener(true);\n\n      // Ensure metrics are up-to-date\n      this.$.overlay.updateViewportBoundaries();\n      // Force iron-list to create reusable nodes. Otherwise it will only start\n      // doing that in scroll listener, which might affect performance.\n      // See https://github.com/vaadin/vaadin-combo-box/pull/776\n      this.$.overlay._selector._increasePoolIfNeeded();\n      setTimeout(() => this._resizeDropdown(), 1);\n      // Defer scroll position adjustment to improve performance.\n      window.requestAnimationFrame(() => this.$.overlay.adjustScrollPosition());\n\n      // _detectAndDispatchChange() should not consider value changes done before opening\n      this._lastCommittedValue = this.value;\n    }\n\n    /** @private */\n    _onClosed() {\n      // Happens when the overlay is closed by clicking outside\n      if (this.opened) {\n        this.close();\n      }\n\n      if (!this.loading || this.allowCustomValue) {\n        this._commitValue();\n      }\n    }\n\n    /** @private */\n    _commitValue() {\n      if (this.$.overlay._items && this._focusedIndex > -1) {\n        const focusedItem = this.$.overlay._items[this._focusedIndex];\n        if (this.selectedItem !== focusedItem) {\n          this.selectedItem = focusedItem;\n        }\n        // make sure input field is updated in case value doesn't change (i.e. FOO -> foo)\n        this._inputElementValue = this._getItemLabel(this.selectedItem);\n      } else if (this._inputElementValue === '' || this._inputElementValue === undefined) {\n        this.selectedItem = null;\n\n        if (this.allowCustomValue) {\n          this.value = '';\n        }\n      } else {\n        const itemsMatchedByLabel =\n          (this.filteredItems &&\n            this.filteredItems.filter((item) => this._getItemLabel(item) === this._inputElementValue)) ||\n          [];\n        if (\n          this.allowCustomValue &&\n          // to prevent a repetitive input value being saved after pressing ESC and Tab.\n          !itemsMatchedByLabel.length\n        ) {\n          const e = new CustomEvent('custom-value-set', {\n            detail: this._inputElementValue,\n            composed: true,\n            cancelable: true,\n            bubbles: true\n          });\n          this.dispatchEvent(e);\n          if (!e.defaultPrevented) {\n            const customValue = this._inputElementValue;\n            this._selectItemForValue(customValue);\n            this.value = customValue;\n          }\n        } else if (!this.allowCustomValue && !this.opened && itemsMatchedByLabel.length == 1) {\n          this.value = this._getItemValue(itemsMatchedByLabel[0]);\n        } else {\n          this._inputElementValue = this.selectedItem ? this._getItemLabel(this.selectedItem) : this.value || '';\n        }\n      }\n\n      this._detectAndDispatchChange();\n\n      this._clearSelectionRange();\n\n      if (!this.dataProvider) {\n        this.filter = '';\n      }\n    }\n\n    /**\n     * @return {string}\n     * @protected\n     */\n    get _propertyForValue() {\n      return 'value';\n    }\n\n    /**\n     * Filtering and items handling\n     * @param {!Event} e\n     * @protected\n     */\n    _inputValueChanged(e) {\n      // Handle only input events from our inputElement.\n      if (e.composedPath().indexOf(this.inputElement) !== -1) {\n        this._inputElementValue = this.inputElement[this._propertyForValue];\n        this._filterFromInput(e);\n      }\n    }\n\n    /** @private */\n    _filterFromInput(e) {\n      if (!this.opened && !e.__fromClearButton && !this.autoOpenDisabled) {\n        this.open();\n      }\n\n      if (this.filter === this._inputElementValue) {\n        // Filter and input value might get out of sync, while keyboard navigating for example.\n        // Afterwards, input value might be changed to the same value as used in filtering.\n        // In situation like these, we need to make sure all the filter changes handlers are run.\n        this._filterChanged(this.filter, this.itemValuePath, this.itemLabelPath);\n      } else {\n        this.filter = this._inputElementValue;\n      }\n    }\n\n    /** @private */\n    _itemLabelPathChanged(itemLabelPath) {\n      if (typeof itemLabelPath !== 'string') {\n        console.error('You should set itemLabelPath to a valid string');\n      }\n    }\n\n    /** @private */\n    _filterChanged(filter, itemValuePath, itemLabelPath) {\n      if (filter === undefined) {\n        return;\n      }\n\n      // Notify the dropdown about filter changing, so to let it skip the\n      // scrolling restore\n      this.$.overlay.filterChanged = true;\n\n      if (this.items) {\n        this.filteredItems = this._filterItems(this.items, filter);\n      } else {\n        // With certain use cases (e. g., external filtering), `items` are\n        // undefined. Filtering is unnecessary per se, but the filteredItems\n        // observer should still be invoked to update focused item.\n        this._filteredItemsChanged({ path: 'filteredItems', value: this.filteredItems }, itemValuePath, itemLabelPath);\n      }\n    }\n\n    /** @private */\n    _loadingChanged(loading) {\n      if (loading) {\n        this._focusedIndex = -1;\n      }\n    }\n\n    /** @protected */\n    _revertInputValue() {\n      if (this.filter !== '') {\n        this._inputElementValue = this.filter;\n      } else {\n        this._revertInputValueToValue();\n      }\n      this._clearSelectionRange();\n    }\n\n    /** @private */\n    _revertInputValueToValue() {\n      if (this.allowCustomValue && !this.selectedItem) {\n        this._inputElementValue = this.value;\n      } else {\n        this._inputElementValue = this._getItemLabel(this.selectedItem);\n      }\n    }\n\n    /** @private */\n    _resizeDropdown() {\n      this.$.overlay.$.dropdown.notifyResize();\n    }\n\n    /** @private */\n    _updateHasValue(hasValue) {\n      if (hasValue) {\n        this.setAttribute('has-value', '');\n      } else {\n        this.removeAttribute('has-value');\n      }\n    }\n\n    /** @private */\n    _selectedItemChanged(selectedItem) {\n      if (selectedItem === null || selectedItem === undefined) {\n        if (this.filteredItems) {\n          if (!this.allowCustomValue) {\n            this.value = '';\n          }\n\n          this._updateHasValue(this.value !== '');\n          this._inputElementValue = this.value;\n        }\n      } else {\n        const value = this._getItemValue(selectedItem);\n        if (this.value !== value) {\n          this.value = value;\n          if (this.value !== value) {\n            // The value was changed to something else in value-changed listener,\n            // so prevent from resetting it to the previous value.\n            return;\n          }\n        }\n\n        this._updateHasValue(true);\n        this._inputElementValue = this._getItemLabel(selectedItem);\n\n        // Could not be defined in 1.x because ready is called after all prop-setters\n        if (this.inputElement) {\n          this.inputElement[this._propertyForValue] = this._inputElementValue;\n        }\n      }\n\n      this.$.overlay._selectedItem = selectedItem;\n      if (this.filteredItems && this.$.overlay._items) {\n        this._focusedIndex = this.filteredItems.indexOf(selectedItem);\n      }\n    }\n\n    /** @private */\n    _valueChanged(value, oldVal) {\n      if (value === '' && oldVal === undefined) {\n        // initializing, no need to do anything (#554)\n        return;\n      }\n\n      if (this._isValidValue(value)) {\n        let item;\n        if (this._getItemValue(this.selectedItem) !== value) {\n          this._selectItemForValue(value);\n        } else {\n          item = this.selectedItem;\n        }\n\n        if (!item && this.allowCustomValue) {\n          this._inputElementValue = value;\n        }\n\n        this._updateHasValue(this.value !== '');\n      } else {\n        this.selectedItem = null;\n      }\n      // In the next _detectAndDispatchChange() call, the change detection should pass\n      this._lastCommittedValue = undefined;\n    }\n\n    /** @private */\n    _detectAndDispatchChange() {\n      if (this.value !== this._lastCommittedValue) {\n        this.dispatchEvent(new CustomEvent('change', { bubbles: true }));\n        this._lastCommittedValue = this.value;\n      }\n    }\n\n    /** @private */\n    _itemsChanged(items, oldItems) {\n      this._ensureItemsOrDataProvider(() => {\n        this.items = oldItems;\n      });\n    }\n\n    /** @private */\n    _itemsOrPathsChanged(e) {\n      if (e.path === 'items' || e.path === 'items.splices') {\n        if (this.items) {\n          this.filteredItems = this.items.slice(0);\n        } else if (this.__previousItems) {\n          // Only clear filteredItems if the component had items previously but got cleared\n          this.filteredItems = null;\n        }\n\n        const valueIndex = this._indexOfValue(this.value, this.items);\n        this._focusedIndex = valueIndex;\n\n        const item = valueIndex > -1 && this.items[valueIndex];\n        if (item) {\n          this.selectedItem = item;\n        }\n      }\n      this.__previousItems = e.value;\n    }\n\n    /** @private */\n    _filteredItemsChanged(e) {\n      if (e.path === 'filteredItems' || e.path === 'filteredItems.splices') {\n        this._setOverlayItems(this.filteredItems);\n\n        this._focusedIndex =\n          this.opened || this.autoOpenDisabled\n            ? this.$.overlay.indexOfLabel(this.filter)\n            : this._indexOfValue(this.value, this.filteredItems);\n\n        if (this.opened) {\n          this._repositionOverlay();\n        }\n      }\n    }\n\n    /** @private */\n    _filterItems(arr, filter) {\n      if (!arr) {\n        return arr;\n      }\n\n      const filteredItems = arr.filter((item) => {\n        filter = filter ? filter.toString().toLowerCase() : '';\n        // Check if item contains input value.\n        return this._getItemLabel(item).toString().toLowerCase().indexOf(filter) > -1;\n      });\n\n      return filteredItems;\n    }\n\n    /** @private */\n    _selectItemForValue(value) {\n      const valueIndex = this._indexOfValue(value, this.filteredItems);\n      const previouslySelectedItem = this.selectedItem;\n\n      this.selectedItem =\n        valueIndex >= 0\n          ? this.filteredItems[valueIndex]\n          : this.dataProvider && this.selectedItem === undefined\n          ? undefined\n          : null;\n\n      if (this.selectedItem === null && previouslySelectedItem === null) {\n        this._selectedItemChanged(this.selectedItem);\n      }\n    }\n\n    /** @private */\n    _setOverlayItems(items) {\n      this.$.overlay.set('_items', items);\n    }\n\n    /** @private */\n    _repositionOverlay() {\n      // async needed to reposition correctly after filtering\n      // (especially when aligned on top of input)\n      this.__repositionOverlayDebouncer = Debouncer.debounce(\n        this.__repositionOverlayDebouncer,\n        // Long debounce: sizing updates invoke multiple styling rounds,\n        // which might affect performance, especially in old browsers.\n        // See https://github.com/vaadin/vaadin-combo-box/pull/800\n        timeOut.after(500),\n        () => {\n          const selector = this.$.overlay._selector;\n          if (!selector._isClientFull()) {\n            // Due to the mismatch of the Y position of the item rendered\n            // at the top of the scrolling list with some specific scroll\n            // position values (2324, 3486, 6972, 60972, 95757 etc.)\n            // iron-list loops the increasing of the pool and adds\n            // too many items to the DOM.\n            // Adjusting scroll position to equal the current scrollTop value\n            // to avoid looping.\n            selector._resetScrollPosition(selector._physicalTop);\n          }\n          this._resizeDropdown();\n          this.$.overlay.updateViewportBoundaries();\n          this.$.overlay.ensureItemsRendered();\n          selector.notifyResize();\n          flush();\n        }\n      );\n    }\n\n    /** @private */\n    _indexOfValue(value, items) {\n      if (items && this._isValidValue(value)) {\n        for (let i = 0; i < items.length; i++) {\n          if (this._getItemValue(items[i]) === value) {\n            return i;\n          }\n        }\n      }\n\n      return -1;\n    }\n\n    /**\n     * Checks if the value is supported as an item value in this control.\n     * @private\n     */\n    _isValidValue(value) {\n      return value !== undefined && value !== null;\n    }\n\n    /** @private */\n    _overlaySelectedItemChanged(e) {\n      // stop this private event from leaking outside.\n      e.stopPropagation();\n\n      if (e.detail.item instanceof ComboBoxPlaceholder) {\n        // Placeholder items should not be selectable.\n        return;\n      }\n\n      if (this.opened) {\n        this._focusedIndex = this.filteredItems.indexOf(e.detail.item);\n        this.close();\n      } else if (this.selectedItem !== e.detail.item) {\n        this.selectedItem = e.detail.item;\n        this._detectAndDispatchChange();\n      }\n    }\n\n    /** @private */\n    _onFocusout(event) {\n      // Fixes the problem with `focusout` happening when clicking on the scroll bar on Edge\n      const dropdown = this.$.overlay.$.dropdown;\n      if (dropdown && dropdown.$ && event.relatedTarget === dropdown.$.overlay) {\n        event.composedPath()[0].focus();\n        return;\n      }\n      if (!this._closeOnBlurIsPrevented) {\n        this._closeOrCommit();\n      }\n    }\n\n    /** @private */\n    _onTouchend(event) {\n      if (!this._clearElement || event.composedPath()[0] !== this._clearElement) {\n        return;\n      }\n\n      event.preventDefault();\n      this._clear();\n    }\n\n    /**\n     * Returns true if `value` is valid, and sets the `invalid` flag appropriately.\n     *\n     * @return {boolean} True if the value is valid and sets the `invalid` flag appropriately\n     */\n    validate() {\n      return !(this.invalid = !this.checkValidity());\n    }\n\n    /**\n     * Returns true if the current input value satisfies all constraints (if any)\n     *\n     * You can override the `checkValidity` method for custom validations.\n     * @return {boolean | undefined}\n     */\n    checkValidity() {\n      if (this.inputElement.validate) {\n        return this.inputElement.validate();\n      }\n    }\n\n    /** @private */\n    get _instanceProps() {\n      return {\n        item: true,\n        index: true,\n        selected: true,\n        focused: true\n      };\n    }\n\n    /** @protected */\n    _ensureTemplatized() {\n      if (!this._TemplateClass) {\n        const tpl = this._itemTemplate || this._getRootTemplate();\n        if (tpl) {\n          this._TemplateClass = templatize(tpl, this, {\n            instanceProps: this._instanceProps,\n            forwardHostProp: function (prop, value) {\n              const items = this.$.overlay._selector.querySelectorAll('vaadin-combo-box-item');\n              Array.prototype.forEach.call(items, (item) => {\n                if (item._itemTemplateInstance) {\n                  item._itemTemplateInstance.set(prop, value);\n                  item._itemTemplateInstance.notifyPath(prop, value, true);\n                }\n              });\n            }\n          });\n        }\n      }\n    }\n\n    /** @private */\n    _getRootTemplate() {\n      return Array.prototype.filter.call(this.children, (elem) => elem.tagName === 'TEMPLATE')[0];\n    }\n\n    /** @protected */\n    _preventInputBlur() {\n      if (this._toggleElement) {\n        this._toggleElement.addEventListener('click', this._preventDefault);\n      }\n      if (this._clearElement) {\n        this._clearElement.addEventListener('click', this._preventDefault);\n      }\n    }\n\n    /** @protected */\n    _restoreInputBlur() {\n      if (this._toggleElement) {\n        this._toggleElement.removeEventListener('click', this._preventDefault);\n      }\n      if (this._clearElement) {\n        this._clearElement.removeEventListener('click', this._preventDefault);\n      }\n    }\n\n    /** @private */\n    _preventDefault(e) {\n      e.preventDefault();\n    }\n\n    /**\n     * @param {!Event} e\n     * @protected\n     */\n    _stopPropagation(e) {\n      e.stopPropagation();\n    }\n\n    /**\n     * Fired when the value changes.\n     *\n     * @event value-changed\n     * @param {Object} detail\n     *  @param {String} detail.value the combobox value\n     */\n\n    /**\n     * Fired when selected item changes.\n     *\n     * @event selected-item-changed\n     * @param {Object} detail\n     *  @param {Object|String} detail.value the selected item. Type is the same as the type of `items`.\n     */\n\n    /**\n     * Fired when the user sets a custom value.\n     * @event custom-value-set\n     * @param {String} detail the custom value\n     */\n\n    /**\n     * Fired when value changes.\n     * To comply with https://developer.mozilla.org/en-US/docs/Web/Events/change\n     * @event change\n     */\n  };\n"
    },
    {
     "id": 110,
     "name": "../node_modules/.pnpm/@polymer+polymer@3.2.0/node_modules/@polymer/polymer/lib/mixins/disable-upgrade-mixin.js",
     "source": "/**\n * @fileoverview\n * @suppress {checkPrototypalTypes}\n * @license Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt The complete set of authors may be found\n * at http://polymer.github.io/AUTHORS.txt The complete set of contributors may\n * be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by\n * Google as part of the polymer project is also subject to an additional IP\n * rights grant found at http://polymer.github.io/PATENTS.txt\n */\nimport { ElementMixin } from './element-mixin.js';\n\nimport { dedupingMixin } from '../utils/mixin.js';\n\nconst DISABLED_ATTR = 'disable-upgrade';\n\n/**\n * Element class mixin that allows the element to boot up in a non-enabled\n * state when the `disable-upgrade` attribute is present. This mixin is\n * designed to be used with element classes like PolymerElement that perform\n * initial startup work when they are first connected. When the\n * `disable-upgrade` attribute is removed, if the element is connected, it\n * boots up and \"enables\" as it otherwise would; if it is not connected, the\n * element boots up when it is next connected.\n *\n * Using `disable-upgrade` with PolymerElement prevents any data propagation\n * to the element, any element DOM from stamping, or any work done in\n * connected/disconnctedCallback from occuring, but it does not prevent work\n * done in the element constructor.\n *\n * Note, this mixin must be applied on top of any element class that\n * itself implements a `connectedCallback` so that it can control the work\n * done in `connectedCallback`. For example,\n *\n *     MyClass = DisableUpgradeMixin(class extends BaseClass {...});\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin ElementMixin\n */\nexport const DisableUpgradeMixin = dedupingMixin((base) => {\n  /**\n   * @constructor\n   * @implements {Polymer_ElementMixin}\n   * @extends {HTMLElement}\n   * @private\n   */\n  const superClass = ElementMixin(base);\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_DisableUpgradeMixin}\n   */\n  class DisableUpgradeClass extends superClass {\n\n    /**\n     * @suppress {missingProperties} go/missingfnprops\n     */\n    static get observedAttributes() {\n      return super.observedAttributes.concat(DISABLED_ATTR);\n    }\n\n    /**\n     * @override\n     * @param {string} name Attribute name.\n     * @param {?string} old The previous value for the attribute.\n     * @param {?string} value The new value for the attribute.\n     * @param {?string=} namespace The XML namespace for the attribute.\n     * @return {undefined}\n     */\n    attributeChangedCallback(name, old, value, namespace) {\n      if (name == DISABLED_ATTR) {\n        if (!this.__dataEnabled && value == null && this.isConnected) {\n          super.connectedCallback();\n        }\n      } else {\n        super.attributeChangedCallback(\n            name, old, value, /** @type {null|string} */ (namespace));\n      }\n    }\n\n    /*\n      NOTE: cannot gate on attribute because this is called before\n      attributes are delivered. Therefore, we stub this out and\n      call `super._initializeProperties()` manually.\n    */\n    /** @override */\n    _initializeProperties() {}\n\n    // prevent user code in connected from running\n    /** @override */\n    connectedCallback() {\n      if (this.__dataEnabled || !this.hasAttribute(DISABLED_ATTR)) {\n        super.connectedCallback();\n      }\n    }\n\n    // prevent element from turning on properties\n    /** @override */\n    _enableProperties() {\n      if (!this.hasAttribute(DISABLED_ATTR)) {\n        if (!this.__dataEnabled) {\n          super._initializeProperties();\n        }\n        super._enableProperties();\n      }\n    }\n\n    // only go if \"enabled\"\n    /** @override */\n    disconnectedCallback() {\n      if (this.__dataEnabled) {\n        super.disconnectedCallback();\n      }\n    }\n\n  }\n\n  return DisableUpgradeClass;\n});\n"
    },
    {
     "id": 111,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-combo-box@6.0.1/node_modules/@vaadin/vaadin-combo-box/src/vaadin-combo-box-data-provider-mixin.js",
     "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { ComboBoxPlaceholder } from './vaadin-combo-box-placeholder.js';\n\n/**\n * @polymerMixin\n */\nexport const ComboBoxDataProviderMixin = (superClass) =>\n  class DataProviderMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * Number of items fetched at a time from the dataprovider.\n         * @attr {number} page-size\n         * @type {number}\n         */\n        pageSize: {\n          type: Number,\n          value: 50,\n          observer: '_pageSizeChanged'\n        },\n\n        /**\n         * Total number of items.\n         * @type {number | undefined}\n         */\n        size: {\n          type: Number,\n          observer: '_sizeChanged'\n        },\n\n        /**\n         * Function that provides items lazily. Receives arguments `params`, `callback`\n         *\n         * `params.page` Requested page index\n         *\n         * `params.pageSize` Current page size\n         *\n         * `params.filter` Currently applied filter\n         *\n         * `callback(items, size)` Callback function with arguments:\n         *   - `items` Current page of items\n         *   - `size` Total number of items.\n         * @type {ComboBoxDataProvider | undefined}\n         */\n        dataProvider: {\n          type: Object,\n          observer: '_dataProviderChanged'\n        },\n\n        /** @private */\n        _pendingRequests: {\n          value: () => {\n            return {};\n          }\n        },\n\n        /** @private */\n        __placeHolder: {\n          value: new ComboBoxPlaceholder()\n        }\n      };\n    }\n\n    static get observers() {\n      return [\n        '_dataProviderFilterChanged(filter, dataProvider)',\n        '_dataProviderClearFilter(dataProvider, opened, value)',\n        '_warnDataProviderValue(dataProvider, value)',\n        '_ensureFirstPage(opened)'\n      ];\n    }\n\n    /** @private */\n    _dataProviderClearFilter(dataProvider, opened, value) {\n      // Can't depend on filter in this observer as we don't want\n      // to clear the filter whenever it's set\n      if (dataProvider && !this.loading && this.filter && !(opened && this.autoOpenDisabled && value === this.filter)) {\n        this.size = undefined;\n        this._pendingRequests = {};\n        this.filter = '';\n        this.clearCache();\n      }\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n      this.clearCache();\n      this.$.overlay.addEventListener('index-requested', (e) => {\n        const index = e.detail.index;\n        const currentScrollerPos = e.detail.currentScrollerPos;\n        const allowedIndexRange = Math.floor(this.pageSize * 1.5);\n\n        // Ignores the indexes, which are being re-sent during scrolling reset,\n        // if the corresponding page is around the current scroller position.\n        // Otherwise, there might be a last pages duplicates, which cause the\n        // loading indicator hanging and blank items\n        if (this._shouldSkipIndex(index, allowedIndexRange, currentScrollerPos)) {\n          return;\n        }\n\n        if (index !== undefined) {\n          const page = this._getPageForIndex(index);\n          if (this._shouldLoadPage(page)) {\n            this._loadPage(page);\n          }\n        }\n      });\n    }\n\n    /** @private */\n    _dataProviderFilterChanged() {\n      if (!this._shouldFetchData()) {\n        return;\n      }\n\n      this.size = undefined;\n      this._pendingRequests = {};\n      this.clearCache();\n    }\n\n    /** @private */\n    _shouldFetchData() {\n      if (!this.dataProvider) {\n        return false;\n      }\n\n      return this.opened || (this.filter && this.filter.length);\n    }\n\n    /** @private */\n    _ensureFirstPage(opened) {\n      if (opened && this._shouldLoadPage(0)) {\n        this._loadPage(0);\n      }\n    }\n\n    /** @private */\n    _shouldSkipIndex(index, allowedIndexRange, currentScrollerPos) {\n      return (\n        currentScrollerPos !== 0 &&\n        index >= currentScrollerPos - allowedIndexRange &&\n        index <= currentScrollerPos + allowedIndexRange\n      );\n    }\n\n    /** @private */\n    _shouldLoadPage(page) {\n      if (!this.filteredItems || this._forceNextRequest) {\n        this._forceNextRequest = false;\n        return true;\n      }\n\n      const loadedItem = this.filteredItems[page * this.pageSize];\n      if (loadedItem !== undefined) {\n        return loadedItem instanceof ComboBoxPlaceholder;\n      } else {\n        return this.size === undefined;\n      }\n    }\n\n    /** @private */\n    _loadPage(page) {\n      // make sure same page isn't requested multiple times.\n      if (!this._pendingRequests[page] && this.dataProvider) {\n        this.loading = true;\n\n        const params = {\n          page,\n          pageSize: this.pageSize,\n          filter: this.filter\n        };\n\n        const callback = (items, size) => {\n          if (this._pendingRequests[page] === callback) {\n            if (!this.filteredItems) {\n              const filteredItems = [];\n              filteredItems.splice(params.page * params.pageSize, items.length, ...items);\n              this.filteredItems = filteredItems;\n            } else {\n              this.splice('filteredItems', params.page * params.pageSize, items.length, ...items);\n            }\n            // Update selectedItem from filteredItems if value is set\n            if (this._isValidValue(this.value) && this._getItemValue(this.selectedItem) !== this.value) {\n              this._selectItemForValue(this.value);\n            }\n            if (!this.opened && !this.hasAttribute('focused')) {\n              this._commitValue();\n            }\n            this.size = size;\n\n            delete this._pendingRequests[page];\n\n            if (Object.keys(this._pendingRequests).length === 0) {\n              this.loading = false;\n            }\n            if (page === 0 && this.__repositionOverlayDebouncer && items.length > (this.__maxRenderedItems || 0)) {\n              setTimeout(() => this.__repositionOverlayDebouncer.flush());\n              this.__maxRenderedItems = items.length;\n            }\n          }\n        };\n\n        if (!this._pendingRequests[page]) {\n          // Don't request page if it's already being requested\n          this._pendingRequests[page] = callback;\n          this.dataProvider(params, callback);\n        }\n      }\n    }\n\n    /** @private */\n    _getPageForIndex(index) {\n      return Math.floor(index / this.pageSize);\n    }\n\n    /**\n     * Clears the cached pages and reloads data from dataprovider when needed.\n     */\n    clearCache() {\n      if (!this.dataProvider) {\n        return;\n      }\n      this._pendingRequests = {};\n      const filteredItems = [];\n      for (let i = 0; i < (this.size || 0); i++) {\n        filteredItems.push(this.__placeHolder);\n      }\n      this.filteredItems = filteredItems;\n      if (this._shouldFetchData()) {\n        this._loadPage(0);\n      } else {\n        this._forceNextRequest = true;\n      }\n    }\n\n    /** @private */\n    _sizeChanged(size = 0) {\n      const filteredItems = (this.filteredItems || []).slice(0, size);\n      for (let i = 0; i < size; i++) {\n        filteredItems[i] = filteredItems[i] !== undefined ? filteredItems[i] : this.__placeHolder;\n      }\n      this.filteredItems = filteredItems;\n\n      // Cleans up the redundant pending requests for pages > size\n      // Refers to https://github.com/vaadin/vaadin-flow-components/issues/229\n      this._flushPendingRequests(size);\n    }\n\n    /** @private */\n    _pageSizeChanged(pageSize, oldPageSize) {\n      if (Math.floor(pageSize) !== pageSize || pageSize < 1) {\n        this.pageSize = oldPageSize;\n        throw new Error('`pageSize` value must be an integer > 0');\n      }\n      this.clearCache();\n    }\n\n    /** @private */\n    _dataProviderChanged(dataProvider, oldDataProvider) {\n      this._ensureItemsOrDataProvider(() => {\n        this.dataProvider = oldDataProvider;\n      });\n    }\n\n    /** @private */\n    _ensureItemsOrDataProvider(restoreOldValueCallback) {\n      if (this.items !== undefined && this.dataProvider !== undefined) {\n        restoreOldValueCallback();\n        throw new Error('Using `items` and `dataProvider` together is not supported');\n      } else if (this.dataProvider && !this.filteredItems) {\n        this.filteredItems = [];\n      }\n    }\n\n    /** @private */\n    _warnDataProviderValue(dataProvider, value) {\n      if (dataProvider && value !== '' && (this.selectedItem === undefined || this.selectedItem === null)) {\n        const valueIndex = this._indexOfValue(value, this.filteredItems);\n        if (valueIndex < 0 || !this._getItemLabel(this.filteredItems[valueIndex])) {\n          /* eslint-disable no-console */\n          console.warn(\n            'Warning: unable to determine the label for the provided `value`. ' +\n              'Nothing to display in the text field. This usually happens when ' +\n              'setting an initial `value` before any items are returned from ' +\n              'the `dataProvider` callback. Consider setting `selectedItem` ' +\n              'instead of `value`'\n          );\n          /* eslint-enable no-console */\n        }\n      }\n    }\n\n    /**\n     * This method cleans up the page callbacks which refers to the\n     * non-existing pages, i.e. which item indexes are greater than the\n     * changed size.\n     * This case is basically happens when:\n     * 1. Users scroll fast to the bottom and combo box generates the\n     * redundant page request/callback\n     * 2. Server side uses undefined size lazy loading and suddenly reaches\n     * the exact size which is on the range edge\n     * (for default page size = 50, it will be 100, 200, 300, ...).\n     * @param size the new size of items\n     * @private\n     */\n    _flushPendingRequests(size) {\n      if (this._pendingRequests) {\n        const lastPage = Math.ceil(size / this.pageSize);\n        const pendingRequestsKeys = Object.keys(this._pendingRequests);\n        for (let reqIdx = 0; reqIdx < pendingRequestsKeys.length; reqIdx++) {\n          const page = parseInt(pendingRequestsKeys[reqIdx]);\n          if (page >= lastPage) {\n            this._pendingRequests[page]([], size);\n          }\n        }\n      }\n    }\n  };\n"
    },
    {
     "id": 112,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-date-picker@5.0.0/node_modules/@vaadin/vaadin-date-picker/src/vaadin-date-picker-text-field.js",
     "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { TextFieldElement } from '@vaadin/vaadin-text-field/src/vaadin-text-field.js';\nimport { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\n\nregisterStyles(\n  'vaadin-date-picker-text-field',\n  css`\n    :host([dir='rtl']) [part='input-field'] {\n      direction: ltr;\n    }\n\n    :host([dir='rtl']) [part='value']::placeholder {\n      direction: rtl;\n      text-align: left;\n    }\n\n    :host([dir='rtl']) [part='input-field'] ::slotted(input)::placeholder {\n      direction: rtl;\n      text-align: left;\n    }\n  `,\n  { moduleId: 'vaadin-date-picker-text-field-styles' }\n);\n\n/**\n * The text-field element for date input.\n *\n * ### Styling\n *\n * See [`<vaadin-text-field>` documentation](https://github.com/vaadin/vaadin-text-field/blob/master/src/vaadin-text-field.html)\n * for `<vaadin-date-picker-text-field>` parts and available slots (prefix, suffix etc.)\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends TextFieldElement\n */\nclass DatePickerTextFieldElement extends TextFieldElement {\n  static get is() {\n    return 'vaadin-date-picker-text-field';\n  }\n}\n\ncustomElements.define(DatePickerTextFieldElement.is, DatePickerTextFieldElement);\n"
    },
    {
     "id": 113,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-combo-box@6.0.1/node_modules/@vaadin/vaadin-combo-box/src/vaadin-combo-box-light.js",
     "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { dashToCamelCase } from '@polymer/polymer/lib/utils/case-map.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ComboBoxMixin } from './vaadin-combo-box-mixin.js';\nimport { ComboBoxDataProviderMixin } from './vaadin-combo-box-data-provider-mixin.js';\nimport './vaadin-combo-box-dropdown-wrapper.js';\n\n/**\n * `<vaadin-combo-box-light>` is a customizable version of the `<vaadin-combo-box>` providing\n * only the dropdown functionality and leaving the input field definition to the user.\n *\n * The element has the same API as `<vaadin-combo-box>`.\n *\n * To create a custom input field, you need to add a child element which has a two-way\n * data-bindable property representing the input value. The property name is expected\n * to be `value` by default. See the example below for a simplest possible example\n * using a `<vaadin-text-field>` element.\n *\n * ```html\n * <vaadin-combo-box-light>\n *   <vaadin-text-field>\n *   </vaadin-text-field>\n * </vaadin-combo-box-light>\n * ```\n *\n * If you are using other custom input fields like `<iron-input>`, you\n * need to define the name of the bindable property with the `attrForValue` attribute.\n *\n * ```html\n * <vaadin-combo-box-light attr-for-value=\"bind-value\">\n *   <iron-input>\n *     <input>\n *   </iron-input>\n * </vaadin-combo-box-light>\n * ```\n *\n * In the next example you can see how to create a custom input field based\n * on a `<paper-input>` decorated with a custom `<iron-icon>` and\n * two `<paper-button>`s to act as the clear and toggle controls.\n *\n * ```html\n * <vaadin-combo-box-light>\n *   <paper-input label=\"Elements\" class=\"input\">\n *     <iron-icon icon=\"toll\" slot=\"prefix\"></iron-icon>\n *     <paper-button slot=\"suffix\" class=\"clear-button\">Clear</paper-button>\n *     <paper-button slot=\"suffix\" class=\"toggle-button\">Toggle</paper-button>\n *   </paper-input>\n * </vaadin-combo-box-light>\n * ```\n *\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} custom-value-set - Fired when the user sets a custom value.\n * @fires {CustomEvent} filter-changed - Fired when the `filter` property changes.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\n * @fires {CustomEvent} selected-item-changed - Fired when the `selectedItem` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n *\n * @extends HTMLElement\n * @mixes ComboBoxDataProviderMixin\n * @mixes ComboBoxMixin\n * @mixes ThemableMixin\n */\nclass ComboBoxLightElement extends ThemableMixin(ComboBoxDataProviderMixin(ComboBoxMixin(PolymerElement))) {\n  static get template() {\n    return html`\n      <style>\n        :host([opened]) {\n          pointer-events: auto;\n        }\n      </style>\n\n      <slot></slot>\n\n      <vaadin-combo-box-dropdown-wrapper\n        id=\"overlay\"\n        opened=\"[[opened]]\"\n        position-target=\"[[inputElement]]\"\n        renderer=\"[[renderer]]\"\n        _focused-index=\"[[_focusedIndex]]\"\n        _item-id-path=\"[[itemIdPath]]\"\n        _item-label-path=\"[[itemLabelPath]]\"\n        loading=\"[[loading]]\"\n        theme=\"[[theme]]\"\n      ></vaadin-combo-box-dropdown-wrapper>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-combo-box-light';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Name of the two-way data-bindable property representing the\n       * value of the custom input field.\n       * @attr {string} attr-for-value\n       * @type {string}\n       */\n      attrForValue: {\n        type: String,\n        value: 'value'\n      },\n\n      /**\n       * @type {!Element | undefined}\n       */\n      inputElement: {\n        type: Element,\n        readOnly: true\n      }\n    };\n  }\n\n  constructor() {\n    super();\n    this._boundInputValueChanged = this._inputValueChanged.bind(this);\n    this.__boundInputValueCommitted = this.__inputValueCommitted.bind(this);\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this._toggleElement = this.querySelector('.toggle-button');\n    this._clearElement = this.querySelector('.clear-button');\n\n    if (this._clearElement) {\n      this._clearElement.addEventListener('mousedown', (e) => {\n        e.preventDefault(); // Prevent native focus changes\n        // _focusableElement is needed for paper-input\n        (this.inputElement._focusableElement || this.inputElement).focus();\n      });\n    }\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get focused() {\n    return this.getRootNode().activeElement === this.inputElement;\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    const cssSelector = 'vaadin-text-field,iron-input,paper-input,.paper-input-input,.input';\n    this._setInputElement(this.querySelector(cssSelector));\n    this._revertInputValue();\n    this.inputElement.addEventListener('input', this._boundInputValueChanged);\n    this.inputElement.addEventListener('change', this.__boundInputValueCommitted);\n    this._preventInputBlur();\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.inputElement.removeEventListener('input', this._boundInputValueChanged);\n    this.inputElement.removeEventListener('change', this.__boundInputValueCommitted);\n    this._restoreInputBlur();\n  }\n\n  /** @private */\n  __inputValueCommitted(e) {\n    // Detect if the input was cleared (by clicking the clear button on a vaadin-text-field)\n    // and propagate the value change to combo box value immediately.\n    if (e.__fromClearButton) {\n      this._clear();\n    }\n  }\n\n  /**\n   * @return {string}\n   * @protected\n   */\n  get _propertyForValue() {\n    return dashToCamelCase(this.attrForValue);\n  }\n\n  /**\n   * @return {string}\n   * @protected\n   */\n  get _inputElementValue() {\n    return this.inputElement && this.inputElement[this._propertyForValue];\n  }\n\n  /**\n   * @param {string} value\n   * @protected\n   */\n  set _inputElementValue(value) {\n    if (this.inputElement) {\n      this.inputElement[this._propertyForValue] = value;\n    }\n  }\n}\n\ncustomElements.define(ComboBoxLightElement.is, ComboBoxLightElement);\n\nexport { ComboBoxLightElement };\n"
    },
    {
     "id": 114,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-text-field@3.0.2/node_modules/@vaadin/vaadin-text-field/src/vaadin-password-field.js",
     "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { DomModule } from '@polymer/polymer/lib/elements/dom-module.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { TextFieldElement } from './vaadin-text-field.js';\n\nconst $_documentContainer = html` <style>\n    @font-face {\n      font-family: 'vaadin-password-field-icons';\n      src: url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAYMAAsAAAAABcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAABCAAAAGAAAABgDxIFgGNtYXAAAAFoAAAAVAAAAFQXVtKIZ2FzcAAAAbwAAAAIAAAACAAAABBnbHlmAAABxAAAAfwAAAH8yBLEP2hlYWQAAAPAAAAANgAAADYN+RfTaGhlYQAAA/gAAAAkAAAAJAfCA8dobXR4AAAEHAAAABgAAAAYDgAAAGxvY2EAAAQ0AAAADgAAAA4BJgCSbWF4cAAABEQAAAAgAAAAIAAMAFpuYW1lAAAEZAAAAYYAAAGGmUoJ+3Bvc3QAAAXsAAAAIAAAACAAAwAAAAMDVQGQAAUAAAKZAswAAACPApkCzAAAAesAMwEJAAAAAAAAAAAAAAAAAAAAARAAAAAAAAAAAAAAAAAAAAAAQAAA6QEDwP/AAEADwABAAAAAAQAAAAAAAAAAAAAAIAAAAAAAAwAAAAMAAAAcAAEAAwAAABwAAwABAAAAHAAEADgAAAAKAAgAAgACAAEAIOkB//3//wAAAAAAIOkA//3//wAB/+MXBAADAAEAAAAAAAAAAAAAAAEAAf//AA8AAQAAAAAAAAAAAAIAADc5AQAAAAABAAAAAAAAAAAAAgAANzkBAAAAAAEAAAAAAAAAAAACAAA3OQEAAAAAAwAAAHoEAALGABQAJABFAAABIg4CMTAeAjMyPgIxMC4CIwc+ATEwBhUUFjEHMCY1NDYTIi4CJz4BNw4BFRQeAjMyPgI1NCYnHgEXDgMjAgChyHAnN3rAiYjFfjsncMihrRg7IA1GExmnY5ZqQg8PWGAFCChGXTU1XUYoCAVgWA8RRW2ZZALGZnpmUmJSUGBQaHxoYA8FRSIhJQ0rIiYz/lQvQkYVInswEygYNV1GKChGXTUYKBMrgCIVRkIvAAAABQAA/8AEAAPAABoAJgA6AEcAVwAAAQceARcOAyMiJicHHgEzMj4CMTAuAicHNCYnATIWMzI+AhMBLgEjIg4CMTAeAhcHFTMBNQEuASc+ATcOARUUFhc3BzAmNTQ2MT4BMTAGFQYWAzo0UlMPEUVtmWQiNR0zJ1QsiMV+OxEsTTw6AgT+zA8dDjVdRijT/ucnXjWhyHAnGTNQN9MtA9P9AE1ZFA9YYAUILSY6QBMZGDsgBAsCczMrcyIWQ0AtCAQzDgtQYFAzS1ckeQ4bCv7TBihGXQH7/uYKEGZ6Zic5RBzNLQPTLf0tIVoYInswEygYNWMihgwrISc5DwVHJiIlAAEAAAAAAADkyo21Xw889QALBAAAAAAA1W1pqwAAAADVbWmrAAD/wAQAA8AAAAAIAAIAAAAAAAAAAQAAA8D/wAAABAAAAAAABAAAAQAAAAAAAAAAAAAAAAAAAAYEAAAAAAAAAAAAAAACAAAABAAAAAQAAAAAAAAAAAoAFAAeAH4A/gAAAAEAAAAGAFgABQAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAOAK4AAQAAAAAAAQAHAAAAAQAAAAAAAgAHAGAAAQAAAAAAAwAHADYAAQAAAAAABAAHAHUAAQAAAAAABQALABUAAQAAAAAABgAHAEsAAQAAAAAACgAaAIoAAwABBAkAAQAOAAcAAwABBAkAAgAOAGcAAwABBAkAAwAOAD0AAwABBAkABAAOAHwAAwABBAkABQAWACAAAwABBAkABgAOAFIAAwABBAkACgA0AKRpY29tb29uAGkAYwBvAG0AbwBvAG5WZXJzaW9uIDEuMABWAGUAcgBzAGkAbwBuACAAMQAuADBpY29tb29uAGkAYwBvAG0AbwBvAG5pY29tb29uAGkAYwBvAG0AbwBvAG5SZWd1bGFyAFIAZQBnAHUAbABhAHJpY29tb29uAGkAYwBvAG0AbwBvAG5Gb250IGdlbmVyYXRlZCBieSBJY29Nb29uLgBGAG8AbgB0ACAAZwBlAG4AZQByAGEAdABlAGQAIABiAHkAIABJAGMAbwBNAG8AbwBuAC4AAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA)\n        format('woff');\n      font-weight: normal;\n      font-style: normal;\n    }\n  </style>\n  <dom-module id=\"vaadin-password-field-template\">\n    <template>\n      <style>\n        [part='reveal-button'][hidden] {\n          display: none !important;\n        }\n      </style>\n\n      <div\n        part=\"reveal-button\"\n        on-mousedown=\"_revealButtonMouseDown\"\n        on-touchend=\"_togglePasswordVisibilityTouchend\"\n        on-click=\"_togglePasswordVisibility\"\n        hidden$=\"[[revealButtonHidden]]\"\n      ></div>\n    </template>\n  </dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\nlet memoizedTemplate;\n\n/**\n * `<vaadin-password-field>` is a Web Component for password field control in forms.\n *\n * ```html\n * <vaadin-password-field label=\"Password\">\n * </vaadin-password-field>\n * ```\n *\n * ### Styling\n *\n * See vaadin-text-field.html for the styling documentation\n *\n * In addition to vaadin-text-field parts, here's the list of vaadin-password-field specific parts\n *\n * Part name       | Description\n * ----------------|----------------------------------------------------\n * `reveal-button` | The eye icon which toggles the password visibility\n *\n * In addition to vaadin-text-field state attributes, here's the list of vaadin-password-field specific attributes\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `password-visible` | Set when the password is visible | :host\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @fires {Event} input - Fired when the value is changed by the user: on every typing keystroke, and the value is cleared using the clear button.\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n *\n * @extends TextFieldElement\n */\nclass PasswordFieldElement extends TextFieldElement {\n  static get is() {\n    return 'vaadin-password-field';\n  }\n\n  static get version() {\n    return '3.0.2';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Set to true to hide the eye icon which toggles the password visibility.\n       * @attr {boolean} reveal-button-hidden\n       * @type {boolean}\n       */\n      revealButtonHidden: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * True if the password is visible ([type=text]).\n       * @attr {boolean} password-visible\n       * @type {boolean}\n       */\n      passwordVisible: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        observer: '_passwordVisibleChange',\n        readOnly: true\n      }\n    };\n  }\n\n  static get template() {\n    if (!memoizedTemplate) {\n      // Clone the superclass template\n      memoizedTemplate = super.template.cloneNode(true);\n\n      // Retrieve this element's dom-module template\n      const thisTemplate = DomModule.import(this.is + '-template', 'template');\n      const revealButton = thisTemplate.content.querySelector('[part=\"reveal-button\"]');\n      const styles = thisTemplate.content.querySelector('style');\n\n      // Append reveal-button and styles to the text-field template\n      const inputField = memoizedTemplate.content.querySelector('[part=\"input-field\"]');\n      inputField.appendChild(revealButton);\n      memoizedTemplate.content.appendChild(styles);\n    }\n\n    return memoizedTemplate;\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.inputElement.type = 'password';\n    this.inputElement.autocapitalize = 'off';\n\n    this.addEventListener('focusout', () => {\n      if (!this._passwordVisibilityChanging) {\n        this._setPasswordVisible(false);\n        if (this._cachedChangeEvent) {\n          this._onChange(this._cachedChangeEvent);\n        }\n      }\n    });\n  }\n\n  /**\n   * @param {!Event} e\n   * @protected\n   */\n  _onChange(e) {\n    const slotted = this.querySelector(`${this._slottedTagName}[slot=\"${this._slottedTagName}\"]`);\n    if (slotted) {\n      e.stopPropagation();\n    }\n    if (this._passwordVisibilityChanging) {\n      this._cachedChangeEvent = e;\n    } else {\n      this._cachedChangeEvent = null;\n      super._onChange(e);\n    }\n  }\n\n  /** @private */\n  _revealButtonMouseDown(e) {\n    if (this.hasAttribute('focused')) {\n      e.preventDefault();\n    }\n  }\n\n  /** @private */\n  _togglePasswordVisibilityTouchend(e) {\n    // Cancel the following click event\n    e.preventDefault();\n    this._togglePasswordVisibility();\n    this.inputElement.focus();\n  }\n\n  /** @private */\n  _togglePasswordVisibility() {\n    this._passwordVisibilityChanging = true;\n    this.inputElement.blur();\n    this._setPasswordVisible(!this.passwordVisible);\n    this.inputElement.focus();\n    this._passwordVisibilityChanging = false;\n  }\n\n  /** @private */\n  _passwordVisibleChange(passwordVisible) {\n    this.inputElement.type = passwordVisible ? 'text' : 'password';\n  }\n}\n\ncustomElements.define(PasswordFieldElement.is, PasswordFieldElement);\n\nexport { PasswordFieldElement };\n"
    },
    {
     "id": 115,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-login@2.0.0/node_modules/@vaadin/vaadin-login/theme/lumo/vaadin-login-form-wrapper-styles.js",
     "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\n\nregisterStyles(\n  'vaadin-login-form-wrapper',\n  css`\n    :host {\n      max-width: calc(var(--lumo-size-m) * 10);\n      background: var(--lumo-base-color) linear-gradient(var(--lumo-tint-5pct), var(--lumo-tint-5pct));\n    }\n\n    [part='form'] {\n      padding: var(--lumo-space-l);\n    }\n\n    [part='form-title'] {\n      margin-top: calc(var(--lumo-font-size-xxxl) - var(--lumo-font-size-xxl));\n    }\n\n    #forgotPasswordButton {\n      margin: var(--lumo-space-s) auto;\n    }\n\n    [part='error-message'] {\n      background-color: var(--lumo-error-color-10pct);\n      padding: var(--lumo-space-m);\n      border-radius: var(--lumo-border-radius);\n      margin-top: var(--lumo-space-m);\n      margin-bottom: var(--lumo-space-s);\n      color: var(--lumo-error-text-color);\n    }\n\n    :host(:not([dir='rtl'])) [part='error-message'] {\n      padding-left: var(--lumo-size-m);\n    }\n\n    :host([dir='rtl']) [part='error-message'] {\n      padding-right: var(--lumo-size-m);\n    }\n\n    [part='error-message']::before {\n      content: var(--lumo-icons-error);\n      font-family: lumo-icons;\n      font-size: var(--lumo-icon-size-m);\n      position: absolute;\n      width: var(--lumo-size-m);\n      height: 1em;\n      line-height: 1;\n      text-align: center;\n    }\n\n    :host(:not([dir='rtl'])) [part='error-message']::before {\n      /* Visual centering */\n      margin-left: calc(var(--lumo-size-m) * -0.95);\n    }\n\n    :host([dir='rtl']) [part='error-message']::before {\n      /* Visual centering */\n      margin-right: calc(var(--lumo-size-m) * -0.95);\n    }\n\n    [part='error-message-title'] {\n      margin: 0 0 0.25em;\n      color: inherit;\n    }\n\n    [part='error-message-description'] {\n      font-size: var(--lumo-font-size-s);\n      line-height: var(--lumo-line-height-s);\n      margin: 0;\n      opacity: 0.9;\n    }\n\n    [part='footer'] {\n      font-size: var(--lumo-font-size-xs);\n      line-height: var(--lumo-line-height-s);\n      color: var(--lumo-secondary-text-color);\n    }\n  `,\n  { include: ['lumo-color', 'lumo-typography'], moduleId: 'lumo-login-form-wrapper' }\n);\n"
    },
    {
     "id": 116,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-login@2.0.0/node_modules/@vaadin/vaadin-login/src/vaadin-login-form-wrapper.js",
     "source": "/**\n * @license\n * Vaadin Login\n * Copyright (C) 2020 Vaadin Ltd\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport '@vaadin/vaadin-button/src/vaadin-button.js';\nimport { LoginMixin } from './vaadin-login-mixin.js';\n\n/**\n * `<vaadin-login-form-wrapper>` is a helper component providing a wrapper for the login form.\n *\n * See the usage in `<vaadin-login-form>`.\n *\n * ### Styling\n *\n * The following Shadow DOM parts of the `<vaadin-login-form-wrapper>` are available for styling:\n *\n * Part name      | Description\n * ---------------|---------------------------------------------------------|\n * `form`         | Container for the entire component's content\n * `form-title`   | Title of the login form\n * `error-message`| Container for error message, contains error-message-title and error-message-description parts. Hidden by default.\n * `error-message-title`       | Container for error message title\n * `error-message-description` | Container for error message description\n * `error-message-description` | Container for error message description\n * `footer`  | Container additional information text from `i18n` object\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * ### Component's slots\n *\n * The following slots are available for being set\n *\n * Slot name | Description\n * ----------|---------------------------------------------------|\n * `form`    | Html form placeholder. See the usage in `<vaadin-login-form>`.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @mixes LoginMixin\n */\nclass LoginFormWrapperElement extends LoginMixin(ElementMixin(ThemableMixin(PolymerElement))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          overflow: hidden;\n          display: inline-block;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        [part='form'] {\n          flex: 1;\n          display: flex;\n          flex-direction: column;\n          box-sizing: border-box;\n        }\n\n        [part='form-title'] {\n          margin: 0;\n        }\n\n        [part='error-message'] {\n          position: relative;\n        }\n      </style>\n      <section part=\"form\">\n        <h2 part=\"form-title\">[[i18n.form.title]]</h2>\n        <div part=\"error-message\" hidden$=\"[[!error]]\">\n          <h5 part=\"error-message-title\">[[i18n.errorMessage.title]]</h5>\n          <p part=\"error-message-description\">[[i18n.errorMessage.message]]</p>\n        </div>\n\n        <slot name=\"form\"></slot>\n\n        <vaadin-button\n          id=\"forgotPasswordButton\"\n          theme=\"tertiary small forgot-password\"\n          on-click=\"_forgotPassword\"\n          hidden$=\"[[noForgotPassword]]\"\n          >[[i18n.form.forgotPassword]]</vaadin-button\n        >\n\n        <div part=\"footer\">\n          <p>[[i18n.additionalInformation]]</p>\n        </div>\n      </section>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-login-form-wrapper';\n  }\n\n  _forgotPassword() {\n    this.dispatchEvent(new CustomEvent('forgot-password'));\n  }\n}\n\ncustomElements.define(LoginFormWrapperElement.is, LoginFormWrapperElement);\n\nexport { LoginFormWrapperElement };\n"
    },
    {
     "id": 117,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-login@2.0.0/node_modules/@vaadin/vaadin-login/src/vaadin-login-form.js",
     "source": "/**\n * @license\n * Vaadin Login\n * Copyright (C) 2020 Vaadin Ltd\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { LoginMixin } from './vaadin-login-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport '@vaadin/vaadin-text-field/src/vaadin-text-field.js';\nimport '@vaadin/vaadin-text-field/src/vaadin-password-field.js';\nimport './vaadin-login-form-wrapper.js';\n\n/**\n * `<vaadin-login-form>` is a Web Component providing an easy way to require users\n * to log in into an application. Note that component has no shadowRoot.\n *\n * ```\n * <vaadin-login-form></vaadin-login-form>\n * ```\n *\n * Component has to be accessible from the `document` layer in order to allow password managers to work properly with form values.\n * Using `<vaadin-login-overlay>` allows to always attach the component to the document body.\n *\n * ### Styling\n *\n * The component doesn't have a shadowRoot, so the html form and input fields can be styled in an upper layer. To style\n * `vaadin-login-form-wrapper` check its documentation.\n *\n * @fires {CustomEvent} forgot-password - Fired when user clicks on the \"Forgot password\" button.\n * @fires {CustomEvent} login - Fired when a user submits the login.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @mixes LoginMixin\n */\nclass LoginFormElement extends LoginMixin(ElementMixin(ThemableMixin(PolymerElement))) {\n  static get template() {\n    return html`\n      <style>\n        [part='vaadin-login-native-form'] * {\n          width: 100%;\n        }\n      </style>\n      <vaadin-login-form-wrapper\n        theme$=\"[[theme]]\"\n        part=\"vaadin-login-native-form-wrapper\"\n        action=\"{{action}}\"\n        disabled=\"{{disabled}}\"\n        error=\"{{error}}\"\n        no-forgot-password=\"{{noForgotPassword}}\"\n        i18n=\"{{i18n}}\"\n        on-login=\"_retargetEvent\"\n        on-forgot-password=\"_retargetEvent\"\n      >\n        <form part=\"vaadin-login-native-form\" method=\"POST\" action$=\"[[action]]\" slot=\"form\">\n          <vaadin-text-field\n            name=\"username\"\n            label=\"[[i18n.form.username]]\"\n            id=\"vaadinLoginUsername\"\n            required\n            on-keydown=\"_handleInputKeydown\"\n            autocapitalize=\"none\"\n            autocorrect=\"off\"\n            spellcheck=\"false\"\n          >\n            <input type=\"text\" slot=\"input\" on-keyup=\"_handleInputKeyup\" />\n          </vaadin-text-field>\n\n          <vaadin-password-field\n            name=\"password\"\n            label=\"[[i18n.form.password]]\"\n            id=\"vaadinLoginPassword\"\n            required\n            on-keydown=\"_handleInputKeydown\"\n            spellcheck=\"false\"\n          >\n            <input type=\"password\" slot=\"input\" on-keyup=\"_handleInputKeyup\" />\n          </vaadin-password-field>\n\n          <vaadin-button part=\"vaadin-login-submit\" theme=\"primary contained\" on-click=\"submit\" disabled$=\"[[disabled]]\"\n            >[[i18n.form.submit]]</vaadin-button\n          >\n        </form>\n      </vaadin-login-form-wrapper>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-login-form';\n  }\n\n  static get version() {\n    return '2.0.0';\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    this._handleInputKeydown = this._handleInputKeydown.bind(this);\n  }\n\n  /**\n   * @param {StampedTemplate} dom\n   * @return {null}\n   * @protected\n   */\n  _attachDom(dom) {\n    this.appendChild(dom);\n  }\n\n  static get observers() {\n    return ['_errorChanged(error)'];\n  }\n\n  /** @private */\n  _errorChanged() {\n    if (this.error && !this._preventAutoEnable) {\n      this.disabled = false;\n    }\n  }\n\n  submit() {\n    if (this.disabled || !(this.__isValid(this.$.vaadinLoginUsername) && this.__isValid(this.$.vaadinLoginPassword))) {\n      return;\n    }\n\n    this.error = false;\n    this.disabled = true;\n\n    const loginEventDetails = {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        username: this.$.vaadinLoginUsername.value,\n        password: this.$.vaadinLoginPassword.value\n      }\n    };\n\n    const firedEvent = this.dispatchEvent(new CustomEvent('login', loginEventDetails));\n    if (this.action && firedEvent) {\n      this.querySelector('[part=\"vaadin-login-native-form\"]').submit();\n    }\n  }\n\n  /** @private */\n  __isValid(input) {\n    return (input.validate && input.validate()) || (input.checkValidity && input.checkValidity());\n  }\n\n  /** @private */\n  _isEnterKey(e) {\n    return e.key === 'Enter' || e.keyCode === 13;\n  }\n\n  /** @private */\n  _handleInputKeydown(e) {\n    if (this._isEnterKey(e)) {\n      const { currentTarget: inputActive } = e;\n      const nextInput =\n        inputActive.id === 'vaadinLoginUsername' ? this.$.vaadinLoginPassword : this.$.vaadinLoginUsername;\n      if (this.__isValid(inputActive)) {\n        if (this.__isValid(nextInput)) {\n          this.submit();\n        } else {\n          nextInput.focus();\n        }\n      }\n    }\n  }\n\n  /** @private */\n  _handleInputKeyup(e) {\n    const isTab = e.key === 'Tab' || e.keyCode === 9;\n    const input = e.currentTarget;\n    if (isTab && input && input.select) {\n      input.select();\n      // iOS 9 workaround: https://stackoverflow.com/a/7436574\n      setTimeout(() => input.setSelectionRange(0, 9999));\n    }\n  }\n}\n\ncustomElements.define(LoginFormElement.is, LoginFormElement);\n\nexport { LoginFormElement };\n"
    },
    {
     "id": 118,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-radio-button@1.5.1/node_modules/@vaadin/vaadin-radio-button/src/vaadin-radio-button.js",
     "source": "/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ControlStateMixin } from '@vaadin/vaadin-control-state-mixin/vaadin-control-state-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n/**\n * `<vaadin-radio-button>` is a Web Component for radio buttons.\n *\n * ```html\n * <vaadin-radio-button value=\"foo\">Foo</vaadin-radio-button>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name         | Description\n * ------------------|----------------\n * `radio`           | The radio button element\n * `label`           | The label content element\n *\n * The following state attributes are available for styling:\n *\n * Attribute  | Description | Part name\n * -----------|-------------|------------\n * `disabled`   | Set when the radio button is disabled. | :host\n * `focus-ring` | Set when the radio button is focused using the keyboard. | :host\n * `focused`    | Set when the radio button is focused. | :host\n * `checked`    | Set when the radio button is checked. | :host\n * `empty`      | Set when there is no label provided. | label\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends PolymerElement\n * @mixes ElementMixin\n * @mixes ControlStateMixin\n * @mixes ThemableMixin\n * @mixes GestureEventListeners\n * @element vaadin-radio-button\n * @demo demo/index.html\n */\nclass RadioButtonElement extends\n  ElementMixin(\n    ControlStateMixin(\n      ThemableMixin(\n        GestureEventListeners(PolymerElement)))) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: inline-block;\n      }\n\n      label {\n        display: inline-flex;\n        align-items: baseline;\n        outline: none;\n      }\n\n      [part=\"radio\"] {\n        position: relative;\n        display: inline-block;\n        flex: none;\n      }\n\n      input[type=\"radio\"] {\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        width: 100%;\n        height: 100%;\n        opacity: 0;\n        cursor: inherit;\n        margin: 0;\n      }\n\n      :host([disabled]) {\n        -webkit-tap-highlight-color: transparent;\n      }\n    </style>\n\n    <label>\n      <span part=\"radio\">\n        <input type=\"radio\" checked=\"[[checked]]\" disabled\\$=\"[[disabled]]\" role=\"presentation\" on-change=\"_onChange\" tabindex=\"-1\">\n      </span>\n\n      <span part=\"label\">\n        <slot></slot>\n      </span>\n    </label>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-radio-button';\n  }\n\n  static get version() {\n    return '1.5.1';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * True if the radio button is checked.\n       * @type {boolean}\n       */\n      checked: {\n        type: Boolean,\n        value: false,\n        notify: true,\n        observer: '_checkedChanged',\n        reflectToAttribute: true\n      },\n\n      /**\n       * Name of the element.\n       */\n      name: String,\n\n      /**\n       * The value for this element.\n       * @type {string}\n       */\n      value: {\n        type: String,\n        value: 'on'\n      }\n    };\n  }\n\n  get name() {\n    return this.checked ? this._storedName : '';\n  }\n\n  set name(name) {\n    this._storedName = name;\n  }\n\n  /**\n   * @param {string} prop\n   * @param {?string} oldVal\n   * @param {?string} newVal\n   * @protected\n   */\n  attributeChangedCallback(prop, oldVal, newVal) {\n    super.attributeChangedCallback(prop, oldVal, newVal);\n    // Needed until Edge has CSS Custom Properties (present in Edge Preview)\n    /* istanbul ignore if */\n    if (/^(disabled|checked)$/.test(prop)) {\n      // iOS 10.3 Safari has an issue with repainting shadow root element styles when a host attribute changes.\n      // Need this workaround (toggle any inline css property on and off) until we drop iOS 10.\n      const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n      /* istanbul ignore if */\n      if (isIOS && this.shadowRoot && parseInt(navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/)[1], 10)) {\n        const WEBKIT_PROPERTY = '-webkit-backface-visibility';\n        this.shadowRoot.querySelectorAll('*').forEach(el => {\n          el.style[WEBKIT_PROPERTY] = 'visible';\n          el.style[WEBKIT_PROPERTY] = '';\n        });\n      }\n    }\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.setAttribute('role', 'radio');\n\n    this._addListeners();\n\n    const attrName = this.getAttribute('name');\n    if (attrName) {\n      this.name = attrName;\n    }\n\n    this.shadowRoot.querySelector('[part~=\"label\"]').querySelector('slot')\n      .addEventListener('slotchange', this._updateLabelAttribute.bind(this));\n\n    this._updateLabelAttribute();\n  }\n\n  /** @private */\n  _updateLabelAttribute() {\n    const label = this.shadowRoot.querySelector('[part~=\"label\"]');\n    const assignedNodes = label.firstElementChild.assignedNodes();\n    if (this._isAssignedNodesEmpty(assignedNodes)) {\n      label.setAttribute('empty', '');\n    } else {\n      label.removeAttribute('empty');\n    }\n  }\n\n  /** @private */\n  _isAssignedNodesEmpty(nodes) {\n    // The assigned nodes considered to be empty if there is no slotted content or only one empty text node\n    return nodes.length === 0 ||\n        (nodes.length == 1\n        && nodes[0].nodeType == Node.TEXT_NODE\n        && nodes[0].textContent.trim() === '');\n  }\n\n  /** @private */\n  _checkedChanged(checked) {\n    this.setAttribute('aria-checked', checked);\n  }\n\n  /** @private */\n  _addListeners() {\n    this._addEventListenerToNode(this, 'down', (e) => {\n      if (!this.disabled) {\n        this.setAttribute('active', '');\n      }\n    });\n\n    this._addEventListenerToNode(this, 'up', (e) => {\n      this.removeAttribute('active');\n\n      if (!this.checked && !this.disabled) {\n        // If you change this block, please test manually that radio-button and\n        // radio-group still works ok on iOS 12/13 and up as it may cause\n        // an issue that is not possible to test programmatically.\n        // See: https://github.com/vaadin/vaadin-radio-button/issues/140\n        this.click();\n      }\n    });\n\n    this.addEventListener('keydown', e => {\n      if (!this.disabled && e.keyCode === 32) {\n        e.preventDefault();\n        this.setAttribute('active', '');\n      }\n    });\n\n    this.addEventListener('keyup', e => {\n      if (!this.disabled && e.keyCode === 32) {\n        e.preventDefault();\n        this.click();\n        this.removeAttribute('active');\n      }\n    });\n  }\n\n  /**\n   * Toggles the radio button, so that the native `change` event\n   * is dispatched. Overrides the standard `HTMLElement.prototype.click`.\n   * @protected\n   */\n  click() {\n    // If you change this block, please test manually that radio-button and\n    // radio-group still works ok on iOS 12/13 and up as it may cause\n    // an issue that is not possible to test programmatically.\n    // See: https://github.com/vaadin/vaadin-radio-button/issues/140\n    if (!this.disabled) {\n      this.shadowRoot.querySelector('input').dispatchEvent(new MouseEvent('click'));\n    }\n  }\n\n  /**\n   * @return {!HTMLInputElement}\n   * @protected\n   */\n  get focusElement() {\n    return this.shadowRoot.querySelector('input');\n  }\n\n  /** @private */\n  _onChange(e) {\n    this.checked = e.target.checked;\n    // In the Shadow DOM, the `change` event is not leaked into the\n    // ancestor tree, so we must do this manually.\n    const changeEvent = new CustomEvent('change', {\n      detail: {\n        sourceEvent: e\n      },\n      bubbles: e.bubbles,\n      cancelable: e.cancelable,\n    });\n    this.dispatchEvent(changeEvent);\n  }\n\n  /**\n   * Fired when the user toggles the radio button.\n   *\n   * @event change\n   */\n}\n\ncustomElements.define(RadioButtonElement.is, RadioButtonElement);\n\n\nexport { RadioButtonElement };\n"
    },
    {
     "id": 119,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-tabs@4.0.0/node_modules/@vaadin/vaadin-tabs/src/vaadin-tab.js",
     "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ItemMixin } from '@vaadin/vaadin-item/src/vaadin-item-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\n\n/**\n * `<vaadin-tab>` is a Web Component providing an accessible and customizable tab.\n *\n * ```\n *   <vaadin-tab>\n *     Tab 1\n *   </vaadin-tab>\n * ```\n *\n * The following state attributes are available for styling:\n *\n * Attribute  | Description | Part name\n * -----------|-------------|------------\n * `disabled` | Set to a disabled tab | :host\n * `focused` | Set when the element is focused | :host\n * `focus-ring` | Set when the element is keyboard focused | :host\n * `selected` | Set when the tab is selected | :host\n * `active` | Set when mousedown or enter/spacebar pressed | :host\n * `orientation` | Set to `horizontal` or `vertical` depending on the direction of items  | :host\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @mixes ItemMixin\n */\nclass TabElement extends ElementMixin(ThemableMixin(ItemMixin(PolymerElement))) {\n  static get template() {\n    return html`<slot></slot>`;\n  }\n\n  static get is() {\n    return 'vaadin-tab';\n  }\n\n  static get version() {\n    return '4.0.0';\n  }\n\n  ready() {\n    super.ready();\n    this.setAttribute('role', 'tab');\n  }\n\n  /**\n   * @param {!KeyboardEvent} event\n   * @protected\n   */\n  _onKeyup(event) {\n    const willClick = this.hasAttribute('active');\n\n    super._onKeyup(event);\n\n    if (willClick) {\n      const anchor = this.querySelector('a');\n      if (anchor) {\n        anchor.click();\n      }\n    }\n  }\n}\n\ncustomElements.define(TabElement.is, TabElement);\n\nexport { TabElement };\n"
    },
    {
     "id": 120,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-text-field@3.0.2/node_modules/@vaadin/vaadin-text-field/src/vaadin-number-field.js",
     "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { DomModule } from '@polymer/polymer/lib/elements/dom-module.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { TextFieldElement } from './vaadin-text-field.js';\n\nconst $_documentContainer = html`<dom-module id=\"vaadin-number-field-template\">\n  <template>\n    <style>\n      :host([readonly]) [part$='button'] {\n        pointer-events: none;\n      }\n\n      [part='decrease-button']::before {\n        content: '−';\n      }\n\n      [part='increase-button']::before {\n        content: '+';\n      }\n\n      [part='decrease-button'],\n      [part='increase-button'] {\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n      }\n\n      /* Hide the native arrow icons */\n      [part='value']::-webkit-outer-spin-button,\n      [part='value']::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }\n\n      [part='value'] {\n        /* Older Firefox versions (v47.0) requires !important */\n        -moz-appearance: textfield !important;\n      }\n\n      :host([dir='rtl']) [part='input-field'] {\n        direction: ltr;\n      }\n\n      :host([dir='rtl']) [part='value']::placeholder {\n        direction: rtl;\n      }\n\n      :host([dir='rtl']) [part='input-field'] ::slotted(input)::placeholder {\n        direction: rtl;\n      }\n\n      :host([dir='rtl']:not([has-controls])) [part='value']::placeholder {\n        text-align: left;\n      }\n\n      :host([dir='rtl']:not([has-controls])) [part='input-field'] ::slotted(input)::placeholder {\n        text-align: left;\n      }\n    </style>\n\n    <div\n      disabled$=\"[[!_allowed(-1, value, min, max, step)]]\"\n      part=\"decrease-button\"\n      on-click=\"_decreaseValue\"\n      on-touchend=\"_decreaseButtonTouchend\"\n      hidden$=\"[[!hasControls]]\"\n    ></div>\n\n    <div\n      disabled$=\"[[!_allowed(1, value, min, max, step)]]\"\n      part=\"increase-button\"\n      on-click=\"_increaseValue\"\n      on-touchend=\"_increaseButtonTouchend\"\n      hidden$=\"[[!hasControls]]\"\n    ></div>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\nlet memoizedTemplate;\n\n/**\n * `<vaadin-number-field>` is a Web Component for number field control in forms.\n *\n * ```html\n * <vaadin-number-field label=\"Number\">\n * </vaadin-number-field>\n * ```\n *\n * @fires {Event} input - Fired when the value is changed by the user: on every typing keystroke, and the value is cleared using the clear button.\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n *\n * @extends TextFieldElement\n */\nclass NumberFieldElement extends TextFieldElement {\n  static get is() {\n    return 'vaadin-number-field';\n  }\n\n  static get version() {\n    return '3.0.2';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Set to true to display value increase/decrease controls.\n       * @attr {boolean} has-controls\n       * @type {boolean}\n       */\n      hasControls: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * The minimum value of the field.\n       */\n      min: {\n        type: Number,\n        reflectToAttribute: true,\n        observer: '_minChanged'\n      },\n\n      /**\n       * The maximum value of the field.\n       */\n      max: {\n        type: Number,\n        reflectToAttribute: true,\n        observer: '_maxChanged'\n      },\n\n      /**\n       * Specifies the allowed number intervals of the field.\n       * @type {number}\n       */\n      step: {\n        type: Number,\n        value: 1,\n        observer: '_stepChanged'\n      }\n    };\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.__previousValidInput = this.value || '';\n    this.inputElement.type = 'number';\n    this.inputElement.addEventListener('change', this.__onInputChange.bind(this));\n  }\n\n  /** @private */\n  _decreaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._decreaseValue();\n  }\n\n  /** @private */\n  _increaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._increaseValue();\n  }\n\n  static get template() {\n    if (!memoizedTemplate) {\n      // Clone the superclass template\n      memoizedTemplate = super.template.cloneNode(true);\n\n      // Retrieve this element's dom-module template\n      const thisTemplate = DomModule.import(this.is + '-template', 'template');\n      const decreaseButton = thisTemplate.content.querySelector('[part=\"decrease-button\"]');\n      const increaseButton = thisTemplate.content.querySelector('[part=\"increase-button\"]');\n      const styles = thisTemplate.content.querySelector('style');\n\n      // Add the buttons and styles to the text-field template\n      const inputField = memoizedTemplate.content.querySelector('[part=\"input-field\"]');\n      const prefixSlot = memoizedTemplate.content.querySelector('[name=\"prefix\"]');\n      inputField.insertBefore(decreaseButton, prefixSlot);\n      inputField.appendChild(increaseButton);\n      memoizedTemplate.content.appendChild(styles);\n    }\n\n    return memoizedTemplate;\n  }\n\n  /** @protected */\n  _createConstraintsObserver() {\n    // NOTE: do not call \"super\" but instead override the method to add extra arguments\n    this._createMethodObserver('_constraintsChanged(required, minlength, maxlength, pattern, min, max, step)');\n  }\n\n  /** @private */\n  _constraintsChanged(required, minlength, maxlength, pattern, min, max) {\n    if (!this.invalid) {\n      return;\n    }\n\n    const isNumUnset = (n) => !n && n !== 0;\n\n    if (!isNumUnset(min) || !isNumUnset(max)) {\n      this.validate();\n    } else {\n      super._constraintsChanged(required, minlength, maxlength, pattern);\n    }\n  }\n\n  /** @private */\n  _decreaseValue() {\n    this._incrementValue(-1);\n  }\n\n  /** @private */\n  _increaseValue() {\n    this._incrementValue(1);\n  }\n\n  /** @private */\n  _incrementValue(incr) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    let value = parseFloat(this.value);\n\n    if (!this.value) {\n      if ((this.min == 0 && incr < 0) || (this.max == 0 && incr > 0) || (this.max == 0 && this.min == 0)) {\n        incr = 0;\n        value = 0;\n      } else if ((this.max == null || this.max >= 0) && (this.min == null || this.min <= 0)) {\n        value = 0;\n      } else if (this.min > 0) {\n        value = this.min;\n        if (this.max < 0 && incr < 0) {\n          value = this.max;\n        }\n        incr = 0;\n      } else if (this.max < 0) {\n        value = this.max;\n        if (incr < 0) {\n          incr = 0;\n        } else {\n          // FIXME(yuriy): find a proper solution to make correct step back\n          if (this._getIncrement(1, value - this.step) > this.max) {\n            value -= 2 * this.step;\n          } else {\n            value -= this.step;\n          }\n        }\n      }\n    } else if (value < this.min) {\n      incr = 0;\n      value = this.min;\n    } else if (value > this.max) {\n      incr = 0;\n      value = this.max;\n    }\n\n    const newValue = this._getIncrement(incr, value);\n    if (!this.value || incr == 0 || this._incrementIsInsideTheLimits(incr, value)) {\n      this._setValue(newValue);\n    }\n  }\n\n  /** @private */\n  _setValue(value) {\n    this.value = this.inputElement.value = String(parseFloat(value));\n    this.dispatchEvent(new CustomEvent('change', { bubbles: true }));\n  }\n\n  /** @private */\n  _getIncrement(incr, currentValue) {\n    let step = this.step || 1,\n      min = this.min || 0;\n\n    // To avoid problems with decimal math, multiplying to operate with integers.\n    const multiplier = Math.max(this._getMultiplier(currentValue), this._getMultiplier(step), this._getMultiplier(min));\n\n    step *= multiplier;\n    currentValue = Math.round(currentValue * multiplier);\n    min *= multiplier;\n\n    const margin = (currentValue - min) % step;\n\n    if (incr > 0) {\n      return (currentValue - margin + step) / multiplier;\n    } else if (incr < 0) {\n      return (currentValue - (margin || step)) / multiplier;\n    } else {\n      return currentValue / multiplier;\n    }\n  }\n\n  /** @private */\n  _getDecimalCount(number) {\n    const s = String(number);\n    const i = s.indexOf('.');\n    return i === -1 ? 1 : s.length - i - 1;\n  }\n\n  /** @private */\n  _getMultiplier(number) {\n    if (!isNaN(number)) {\n      return Math.pow(10, this._getDecimalCount(number));\n    }\n  }\n\n  /** @private */\n  _incrementIsInsideTheLimits(incr, value) {\n    if (incr < 0) {\n      return this.min == null || this._getIncrement(incr, value) >= this.min;\n    } else if (incr > 0) {\n      return this.max == null || this._getIncrement(incr, value) <= this.max;\n    } else {\n      return this._getIncrement(incr, value) <= this.max && this._getIncrement(incr, value) >= this.min;\n    }\n  }\n\n  /** @private */\n  _allowed(sign) {\n    const incr = sign * (this.step || 1);\n    const value = parseFloat(this.value);\n    return !this.value || (!this.disabled && this._incrementIsInsideTheLimits(incr, value));\n  }\n\n  /**\n   * @param {number} newVal\n   * @param {number | undefined} oldVal\n   * @protected\n   */\n  _stepChanged(newVal) {\n    // Avoid using initial value in validation\n    this.__validateByStep = this.__stepChangedCalled || this.getAttribute('step') !== null;\n    this.inputElement.step = this.__validateByStep ? newVal : 'any';\n\n    this.__stepChangedCalled = true;\n    this.setAttribute('step', newVal);\n  }\n\n  /** @private */\n  _minChanged(min) {\n    this.inputElement.min = min;\n  }\n\n  /** @private */\n  _maxChanged(max) {\n    this.inputElement.max = max;\n  }\n\n  /**\n   * @param {unknown} newVal\n   * @param {unknown} oldVal\n   * @protected\n   */\n  _valueChanged(newVal, oldVal) {\n    // Validate value to be numeric\n    if (newVal && isNaN(parseFloat(newVal))) {\n      this.value = '';\n    } else if (typeof this.value !== 'string') {\n      this.value = String(this.value);\n    }\n\n    super._valueChanged(this.value, oldVal);\n  }\n\n  /**\n   * @param {!KeyboardEvent} e\n   * @protected\n   */\n  _onKeyDown(e) {\n    if (e.keyCode == 38) {\n      e.preventDefault();\n      this._increaseValue();\n    } else if (e.keyCode == 40) {\n      e.preventDefault();\n      this._decreaseValue();\n    }\n    super._onKeyDown(e);\n  }\n\n  /** @private */\n  __onInputChange() {\n    this.validate();\n  }\n\n  /**\n   * @return {boolean}\n   */\n  checkValidity() {\n    // text-field mixin does not check against `min`, `max` and `step`\n    if (this.min !== undefined || this.max !== undefined || this.__validateByStep) {\n      return this.inputElement.checkValidity();\n    }\n\n    return super.checkValidity();\n  }\n}\n\nwindow.customElements.define(NumberFieldElement.is, NumberFieldElement);\n\nexport { NumberFieldElement };\n"
    },
    {
     "id": 121,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-upload@5.0.0/node_modules/@vaadin/vaadin-upload/src/vaadin-upload-file.js",
     "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport '@vaadin/vaadin-progress-bar/src/vaadin-progress-bar.js';\nimport './vaadin-upload-icons.js';\n\n/**\n * `<vaadin-upload-file>` element represents a file in the file list of `<vaadin-upload>`.\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ---|---\n * `row` | File container\n * `info` | Container for file status icon, file name, status and error messages\n * `done-icon` | File done status icon\n * `warning-icon` | File warning status icon\n * `meta` | Container for file name, status and error messages\n * `name` | File name\n * `error` | Error message, shown when error happens\n * `status` | Status message\n * `commands` | Container for file command icons\n * `start-button` | Start file upload button\n * `retry-button` | Retry file upload button\n * `clear-button` | Clear file button\n * `progress`| Progress bar\n *\n * The following state attributes are available for styling:\n *\n * Attribute | Description | Part name\n * ---|---|---\n * `error` | An error has happened during uploading | `:host`\n * `indeterminate` | Uploading is in progress, but the progress value is unknown | `:host`\n * `uploading` | Uploading is in progress | `:host`\n * `complete` | Uploading has finished successfully | `:host`\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @mixes ThemableMixin\n */\nclass UploadFileElement extends ThemableMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n\n        [hidden] {\n          display: none;\n        }\n      </style>\n\n      <div part=\"row\">\n        <div part=\"info\">\n          <div part=\"done-icon\" hidden$=\"[[!file.complete]]\"></div>\n          <div part=\"warning-icon\" hidden$=\"[[!file.error]]\"></div>\n\n          <div part=\"meta\">\n            <div part=\"name\" id=\"name\">[[file.name]]</div>\n            <div part=\"status\" hidden$=\"[[!file.status]]\" id=\"status\">[[file.status]]</div>\n            <div part=\"error\" id=\"error\" hidden$=\"[[!file.error]]\">[[file.error]]</div>\n          </div>\n        </div>\n        <div part=\"commands\">\n          <div part=\"start-button\" file-event=\"file-start\" on-click=\"_fireFileEvent\" hidden$=\"[[!file.held]]\"></div>\n          <div part=\"retry-button\" file-event=\"file-retry\" on-click=\"_fireFileEvent\" hidden$=\"[[!file.error]]\"></div>\n          <div part=\"clear-button\" file-event=\"file-abort\" on-click=\"_fireFileEvent\"></div>\n        </div>\n      </div>\n\n      <vaadin-progress-bar\n        part=\"progress\"\n        id=\"progress\"\n        value$=\"[[_formatProgressValue(file.progress)]]\"\n        error$=\"[[file.error]]\"\n        indeterminate$=\"[[file.indeterminate]]\"\n        uploading$=\"[[file.uploading]]\"\n        complete$=\"[[file.complete]]\"\n      ></vaadin-progress-bar>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-upload-file';\n  }\n\n  static get properties() {\n    return {\n      file: Object\n    };\n  }\n\n  static get observers() {\n    return [\n      '_fileAborted(file.abort)',\n      '_toggleHostAttribute(file.error, \"error\")',\n      '_toggleHostAttribute(file.indeterminate, \"indeterminate\")',\n      '_toggleHostAttribute(file.uploading, \"uploading\")',\n      '_toggleHostAttribute(file.complete, \"complete\")'\n    ];\n  }\n\n  /** @private */\n  _fileAborted(abort) {\n    if (abort) {\n      this._remove();\n    }\n  }\n\n  /** @private */\n  _remove() {\n    this.dispatchEvent(\n      new CustomEvent('file-remove', {\n        detail: { file: this.file },\n        bubbles: true,\n        composed: true\n      })\n    );\n  }\n\n  /** @private */\n  _formatProgressValue(progress) {\n    return progress / 100;\n  }\n\n  /** @private */\n  _fireFileEvent(e) {\n    e.preventDefault();\n    return this.dispatchEvent(\n      new CustomEvent(e.target.getAttribute('file-event'), {\n        detail: { file: this.file },\n        bubbles: true,\n        composed: true\n      })\n    );\n  }\n\n  /** @private */\n  _toggleHostAttribute(value, attributeName) {\n    const shouldHave = Boolean(value);\n    const has = this.hasAttribute(attributeName);\n    if (has !== shouldHave) {\n      if (shouldHave) {\n        this.setAttribute(attributeName, '');\n      } else {\n        this.removeAttribute(attributeName);\n      }\n    }\n  }\n\n  /**\n   * Fired when the retry button is pressed. It is listened by `vaadin-upload`\n   * which will start a new upload process of this file.\n   *\n   * @event file-retry\n   * @param {Object} detail\n   * @param {Object} detail.file file to retry upload of\n   */\n\n  /**\n   * Fired when the start button is pressed. It is listened by `vaadin-upload`\n   * which will start a new upload process of this file.\n   *\n   * @event file-start\n   * @param {Object} detail\n   * @param {Object} detail.file file to start upload of\n   */\n\n  /**\n   * Fired when abort button is pressed. It is listened by `vaadin-upload` which\n   * will abort the upload in progress, but will not remove the file from the list\n   * to allow the animation to hide the element to be run.\n   *\n   * @event file-abort\n   * @param {Object} detail\n   * @param {Object} detail.file file to abort upload of\n   */\n\n  /**\n   * Fired after the animation to hide the element has finished. It is listened\n   * by `vaadin-upload` which will actually remove the file from the upload\n   * file list.\n   *\n   * @event file-remove\n   * @param {Object} detail\n   * @param {Object} detail.file file to remove from the  upload of\n   */\n}\n\ncustomElements.define(UploadFileElement.is, UploadFileElement);\n\nexport { UploadFileElement };\n"
    },
    {
     "id": 122,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-upload@5.0.0/node_modules/@vaadin/vaadin-upload/src/vaadin-upload-icons.js",
     "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `\n  <style>\n    @font-face {\n      font-family: 'vaadin-upload-icons';\n      src: url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAasAAsAAAAABmAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAABCAAAAGAAAABgDxIF5mNtYXAAAAFoAAAAVAAAAFQXVtKMZ2FzcAAAAbwAAAAIAAAACAAAABBnbHlmAAABxAAAAfQAAAH0bBJxYWhlYWQAAAO4AAAANgAAADYPD267aGhlYQAAA/AAAAAkAAAAJAfCA8tobXR4AAAEFAAAACgAAAAoHgAAx2xvY2EAAAQ8AAAAFgAAABYCSgHsbWF4cAAABFQAAAAgAAAAIAAOADVuYW1lAAAEdAAAAhYAAAIWmmcHf3Bvc3QAAAaMAAAAIAAAACAAAwAAAAMDtwGQAAUAAAKZAswAAACPApkCzAAAAesAMwEJAAAAAAAAAAAAAAAAAAAAARAAAAAAAAAAAAAAAAAAAAAAQAAA6QUDwP/AAEADwABAAAAAAQAAAAAAAAAAAAAAIAAAAAAAAwAAAAMAAAAcAAEAAwAAABwAAwABAAAAHAAEADgAAAAKAAgAAgACAAEAIOkF//3//wAAAAAAIOkA//3//wAB/+MXBAADAAEAAAAAAAAAAAAAAAEAAf//AA8AAQAAAAAAAAAAAAIAADc5AQAAAAABAAAAAAAAAAAAAgAANzkBAAAAAAEAAAAAAAAAAAACAAA3OQEAAAAAAgAA/8AEAAPAABkAMgAAEz4DMzIeAhczLgMjIg4CBycRIScFIRcOAyMiLgInIx4DMzI+AjcXphZGWmo6SH9kQwyADFiGrmJIhXJbIEYBAFoDWv76YBZGXGw8Rn5lRQyADFmIrWBIhHReIkYCWjJVPSIyVnVDXqN5RiVEYTxG/wBa2loyVT0iMlZ1Q16jeUYnRWE5RgAAAAABAIAAAAOAA4AAAgAAExEBgAMAA4D8gAHAAAAAAwAAAAAEAAOAAAIADgASAAAJASElIiY1NDYzMhYVFAYnETMRAgD+AAQA/gAdIyMdHSMjXYADgPyAgCMdHSMjHR0jwAEA/wAAAQANADMD5gNaAAUAACUBNwUBFwHT/jptATMBppMzAU2a4AIgdAAAAAEAOv/6A8YDhgALAAABJwkBBwkBFwkBNwEDxoz+xv7GjAFA/sCMAToBOoz+wAL6jP7AAUCM/sb+xowBQP7AjAE6AAAAAwAA/8AEAAPAAAcACwASAAABFSE1IREhEQEjNTMJAjMRIRECwP6A/sAEAP0AgIACQP7A/sDAAQABQICA/oABgP8AgAHAAUD+wP6AAYAAAAABAAAAAQAAdhiEdV8PPPUACwQAAAAAANX4FR8AAAAA1fgVHwAA/8AEAAPAAAAACAACAAAAAAAAAAEAAAPA/8AAAAQAAAAAAAQAAAEAAAAAAAAAAAAAAAAAAAAKBAAAAAAAAAAAAAAAAgAAAAQAAAAEAACABAAAAAQAAA0EAAA6BAAAAAAAAAAACgAUAB4AagB4AJwAsADSAPoAAAABAAAACgAzAAMAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAADgCuAAEAAAAAAAEAEwAAAAEAAAAAAAIABwDMAAEAAAAAAAMAEwBaAAEAAAAAAAQAEwDhAAEAAAAAAAUACwA5AAEAAAAAAAYAEwCTAAEAAAAAAAoAGgEaAAMAAQQJAAEAJgATAAMAAQQJAAIADgDTAAMAAQQJAAMAJgBtAAMAAQQJAAQAJgD0AAMAAQQJAAUAFgBEAAMAAQQJAAYAJgCmAAMAAQQJAAoANAE0dmFhZGluLXVwbG9hZC1pY29ucwB2AGEAYQBkAGkAbgAtAHUAcABsAG8AYQBkAC0AaQBjAG8AbgBzVmVyc2lvbiAxLjAAVgBlAHIAcwBpAG8AbgAgADEALgAwdmFhZGluLXVwbG9hZC1pY29ucwB2AGEAYQBkAGkAbgAtAHUAcABsAG8AYQBkAC0AaQBjAG8AbgBzdmFhZGluLXVwbG9hZC1pY29ucwB2AGEAYQBkAGkAbgAtAHUAcABsAG8AYQBkAC0AaQBjAG8AbgBzUmVndWxhcgBSAGUAZwB1AGwAYQBydmFhZGluLXVwbG9hZC1pY29ucwB2AGEAYQBkAGkAbgAtAHUAcABsAG8AYQBkAC0AaQBjAG8AbgBzRm9udCBnZW5lcmF0ZWQgYnkgSWNvTW9vbi4ARgBvAG4AdAAgAGcAZQBuAGUAcgBhAHQAZQBkACAAYgB5ACAASQBjAG8ATQBvAG8AbgAuAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==) format('woff');\n      font-weight: normal;\n      font-style: normal;\n    }\n  </style>\n`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
    },
    {
     "id": 125,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-date-picker@5.0.0/node_modules/@vaadin/vaadin-date-picker/theme/lumo/vaadin-date-picker.js + 6 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-date-picker@5.0.0/node_modules/@vaadin/vaadin-date-picker/theme/lumo/vaadin-date-picker.js",
       "source": "import './vaadin-date-picker-overlay-styles.js';\nimport './vaadin-date-picker-overlay-content-styles.js';\nimport './vaadin-month-calendar-styles.js';\nimport './vaadin-date-picker-styles.js';\nimport './vaadin-date-picker-text-field.js';\nimport '../../src/vaadin-date-picker.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-date-picker@5.0.0/node_modules/@vaadin/vaadin-date-picker/theme/lumo/vaadin-date-picker-overlay-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/menu-overlay.js';\n\nregisterStyles(\n  'vaadin-date-picker-overlay',\n  css`\n    [part='overlay'] {\n      /*\n      Width:\n          date cell widths\n        + month calendar side padding\n        + year scroller width\n      */\n      /* prettier-ignore */\n      width:\n        calc(\n            var(--lumo-size-m) * 7\n          + var(--lumo-space-xs) * 2\n          + 57px\n        );\n      height: 100%;\n      max-height: calc(var(--lumo-size-m) * 14);\n      overflow: hidden;\n      -webkit-tap-highlight-color: transparent;\n    }\n\n    [part='overlay'] {\n      flex-direction: column;\n    }\n\n    [part='content'] {\n      padding: 0;\n      height: 100%;\n      overflow: hidden;\n      -webkit-mask-image: none;\n      mask-image: none;\n    }\n\n    @media (max-width: 420px), (max-height: 420px) {\n      [part='overlay'] {\n        width: 100vw;\n        height: 70vh;\n        max-height: 70vh;\n      }\n    }\n  `,\n  { include: ['lumo-menu-overlay'], moduleId: 'lumo-date-picker-overlay' }\n);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-date-picker@5.0.0/node_modules/@vaadin/vaadin-date-picker/theme/lumo/vaadin-date-picker-overlay-content-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport '@vaadin/vaadin-button/theme/lumo/vaadin-button.js';\n\nregisterStyles(\n  'vaadin-date-picker-overlay-content',\n  css`\n    :host {\n      position: relative;\n      background-color: transparent;\n      /* Background for the year scroller, placed here as we are using a mask image on the actual years part */\n      background-image: linear-gradient(var(--lumo-shade-5pct), var(--lumo-shade-5pct));\n      background-size: 57px 100%;\n      background-position: top right;\n      background-repeat: no-repeat;\n      cursor: default;\n    }\n\n    /* Month scroller */\n\n    [part='months'] {\n      /* Month calendar height:\n              header height + margin-bottom\n            + weekdays height + margin-bottom\n            + date cell heights\n            + small margin between month calendars\n        */\n      /* prettier-ignore */\n      --vaadin-infinite-scroller-item-height:\n          calc(\n              var(--lumo-font-size-l) + var(--lumo-space-m)\n            + var(--lumo-font-size-xs) + var(--lumo-space-s)\n            + var(--lumo-size-m) * 6\n            + var(--lumo-space-s)\n          );\n      --vaadin-infinite-scroller-buffer-offset: 20%;\n      -webkit-mask-image: linear-gradient(transparent, #000 10%, #000 85%, transparent);\n      mask-image: linear-gradient(transparent, #000 10%, #000 85%, transparent);\n      position: relative;\n      margin-right: 57px;\n    }\n\n    /* Year scroller */\n    [part='years'] {\n      /* TODO get rid of fixed magic number */\n      --vaadin-infinite-scroller-buffer-width: 97px;\n      width: 57px;\n      height: auto;\n      top: 0;\n      bottom: 0;\n      font-size: var(--lumo-font-size-s);\n      box-shadow: inset 2px 0 4px 0 var(--lumo-shade-5pct);\n      -webkit-mask-image: linear-gradient(transparent, #000 35%, #000 65%, transparent);\n      mask-image: linear-gradient(transparent, #000 35%, #000 65%, transparent);\n    }\n\n    [part='year-number'],\n    [part='year-separator'] {\n      opacity: 0.5;\n      transition: 0.2s opacity;\n    }\n\n    [part='years']:hover [part='year-number'],\n    [part='years']:hover [part='year-separator'] {\n      opacity: 1;\n    }\n\n    /* TODO unsupported selector */\n    #scrollers {\n      position: static;\n      display: block;\n    }\n\n    /* TODO unsupported selector, should fix this in vaadin-date-picker that it adapts to the\n       * width of the year scroller */\n    #scrollers[desktop] [part='months'] {\n      right: auto;\n    }\n\n    /* Year scroller position indicator */\n    [part='years']::before {\n      border: none;\n      width: 1em;\n      height: 1em;\n      background-color: var(--lumo-base-color);\n      background-image: linear-gradient(var(--lumo-tint-5pct), var(--lumo-tint-5pct));\n      transform: translate(-75%, -50%) rotate(45deg);\n      border-top-right-radius: calc(var(--lumo-border-radius) / 2);\n      box-shadow: 2px -2px 6px 0 var(--lumo-shade-5pct);\n      z-index: 1;\n    }\n\n    [part='year-number'],\n    [part='year-separator'] {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: 50%;\n      transform: translateY(-50%);\n    }\n\n    [part='years'] [part='year-separator']::after {\n      color: var(--lumo-disabled-text-color);\n      content: '•';\n    }\n\n    /* Current year */\n\n    [part='years'] [part='year-number'][current] {\n      color: var(--lumo-primary-text-color);\n    }\n\n    /* Toolbar (footer) */\n\n    [part='toolbar'] {\n      padding: var(--lumo-space-s);\n      box-shadow: 0 -1px 0 0 var(--lumo-contrast-10pct);\n      border-bottom-left-radius: var(--lumo-border-radius);\n      margin-right: 57px;\n    }\n\n    @supports (mask-image: linear-gradient(#000, #000)) or (-webkit-mask-image: linear-gradient(#000, #000)) {\n      [part='toolbar'] {\n        box-shadow: none;\n      }\n    }\n\n    /* Today and Cancel buttons */\n\n    [part='toolbar'] [part\\$='button'] {\n      margin: 0;\n    }\n\n    /* Narrow viewport mode (fullscreen) */\n\n    :host([fullscreen]) [part='toolbar'] {\n      order: -1;\n      background-color: var(--lumo-base-color);\n    }\n\n    :host([fullscreen]) [part='overlay-header'] {\n      order: -2;\n      height: var(--lumo-size-m);\n      padding: var(--lumo-space-s);\n      position: absolute;\n      left: 0;\n      right: 0;\n      justify-content: center;\n    }\n\n    :host([fullscreen]) [part='toggle-button'],\n    :host([fullscreen]) [part='clear-button'],\n    [part='overlay-header'] [part='label'] {\n      display: none;\n    }\n\n    /* Very narrow screen (year scroller initially hidden) */\n\n    [part='years-toggle-button'] {\n      position: relative;\n      right: auto;\n      display: flex;\n      align-items: center;\n      height: var(--lumo-size-s);\n      padding: 0 0.5em;\n      border-radius: var(--lumo-border-radius);\n      z-index: 3;\n      color: var(--lumo-primary-text-color);\n      font-weight: 500;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n    }\n\n    :host([years-visible]) [part='years-toggle-button'] {\n      background-color: var(--lumo-primary-color);\n      color: var(--lumo-primary-contrast-color);\n    }\n\n    [part='years-toggle-button']::before {\n      content: none;\n    }\n\n    /* TODO magic number (same as used for iron-media-query in vaadin-date-picker-overlay-content) */\n    @media screen and (max-width: 374px) {\n      :host {\n        background-image: none;\n      }\n\n      [part='years'] {\n        background-color: var(--lumo-shade-5pct);\n      }\n\n      [part='toolbar'],\n      [part='months'] {\n        margin-right: 0;\n      }\n\n      /* TODO make date-picker adapt to the width of the years part */\n      [part='years'] {\n        --vaadin-infinite-scroller-buffer-width: 90px;\n        width: 50px;\n      }\n\n      :host([years-visible]) [part='months'] {\n        padding-left: 50px;\n      }\n    }\n  `,\n  { moduleId: 'lumo-date-picker-overlay-content' }\n);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-date-picker@5.0.0/node_modules/@vaadin/vaadin-date-picker/theme/lumo/vaadin-month-calendar-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\n\nregisterStyles(\n  'vaadin-month-calendar',\n  css`\n    :host {\n      -moz-user-select: none;\n      -webkit-user-select: none;\n      -webkit-tap-highlight-color: transparent;\n      user-select: none;\n      font-size: var(--lumo-font-size-m);\n      color: var(--lumo-body-text-color);\n      text-align: center;\n      padding: 0 var(--lumo-space-xs);\n    }\n\n    /* Month header */\n\n    [part='month-header'] {\n      color: var(--lumo-header-text-color);\n      font-size: var(--lumo-font-size-l);\n      line-height: 1;\n      font-weight: 500;\n      margin-bottom: var(--lumo-space-m);\n    }\n\n    /* Week days and numbers */\n\n    [part='weekdays'],\n    [part='weekday'],\n    [part='week-numbers'] {\n      font-size: var(--lumo-font-size-xs);\n      line-height: 1;\n      color: var(--lumo-tertiary-text-color);\n    }\n\n    [part='weekdays'] {\n      margin-bottom: var(--lumo-space-s);\n    }\n\n    /* TODO should have part=\"week-number\" for the cell in weekdays-container */\n    [part='weekday']:empty,\n    [part='week-numbers'] {\n      width: var(--lumo-size-xs);\n    }\n\n    /* Date and week number cells */\n\n    [part='date'],\n    [part='week-number'] {\n      box-sizing: border-box;\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      height: var(--lumo-size-m);\n      position: relative;\n    }\n\n    [part='date'] {\n      transition: color 0.1s;\n    }\n\n    /* Today date */\n\n    [part='date'][today] {\n      color: var(--lumo-primary-text-color);\n    }\n\n    /* Focused date */\n\n    [part='date']::before {\n      content: '';\n      position: absolute;\n      z-index: -1;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      min-width: 2em;\n      min-height: 2em;\n      width: 80%;\n      height: 80%;\n      max-height: 100%;\n      max-width: 100%;\n      border-radius: var(--lumo-border-radius);\n    }\n\n    [part='date'][focused]::before {\n      box-shadow: 0 0 0 2px var(--lumo-primary-color-50pct);\n    }\n\n    :host(:not([focused])) [part='date'][focused]::before {\n      animation: vaadin-date-picker-month-calendar-focus-date 1.4s infinite;\n    }\n\n    @keyframes vaadin-date-picker-month-calendar-focus-date {\n      50% {\n        box-shadow: 0 0 0 2px transparent;\n      }\n    }\n\n    /* TODO should not rely on the role attribute */\n    [part='date'][role='button']:not([disabled]):not([selected]):hover::before {\n      background-color: var(--lumo-primary-color-10pct);\n    }\n\n    [part='date'][selected] {\n      color: var(--lumo-primary-contrast-color);\n    }\n\n    [part='date'][selected]::before {\n      background-color: var(--lumo-primary-color);\n    }\n\n    [part='date'][disabled] {\n      color: var(--lumo-disabled-text-color);\n    }\n\n    @media (pointer: coarse) {\n      [part='date']:hover:not([selected])::before,\n      [part='date'][focused]:not([selected])::before {\n        display: none;\n      }\n\n      [part='date'][role='button']:not([disabled]):active::before {\n        display: block;\n      }\n\n      [part='date'][selected]::before {\n        box-shadow: none;\n      }\n    }\n\n    /* Disabled */\n\n    :host([disabled]) * {\n      color: var(--lumo-disabled-text-color) !important;\n    }\n  `,\n  { moduleId: 'lumo-month-calendar' }\n);\n\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `\n  <style>\n    @keyframes vaadin-date-picker-month-calendar-focus-date {\n      50% {\n        box-shadow: 0 0 0 2px transparent;\n      }\n    }\n  </style>\n`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-date-picker@5.0.0/node_modules/@vaadin/vaadin-date-picker/theme/lumo/vaadin-date-picker-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/field-button.js';\n\nregisterStyles(\n  'vaadin-date-picker',\n  css`\n    :host {\n      outline: none;\n    }\n\n    [part='toggle-button']::before {\n      content: var(--lumo-icons-calendar);\n    }\n\n    [part='clear-button']::before {\n      content: var(--lumo-icons-cross);\n    }\n\n    @media (max-width: 420px), (max-height: 420px) {\n      [part='overlay-content'] {\n        height: 70vh;\n      }\n    }\n  `,\n  { include: ['lumo-field-button'], moduleId: 'lumo-date-picker' }\n);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-date-picker@5.0.0/node_modules/@vaadin/vaadin-date-picker/theme/lumo/vaadin-date-picker-text-field.js",
       "source": "import './vaadin-date-picker-text-field-styles.js';\nimport '../../src/vaadin-date-picker-text-field.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-date-picker@5.0.0/node_modules/@vaadin/vaadin-date-picker/theme/lumo/vaadin-date-picker-text-field-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-text-field/theme/lumo/vaadin-text-field.js';\n\nregisterStyles(\n  'vaadin-date-picker-text-field',\n  css`\n    :host([dir='rtl']) [part='value']:placeholder-shown,\n    :host([dir='rtl']) [part='input-field'] ::slotted(input:placeholder-shown) {\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    :host([dir='rtl']) [part='value'],\n    :host([dir='rtl']) [part='input-field'] ::slotted(input) {\n      --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent, #000 1.25em);\n    }\n  `,\n  { moduleId: 'lumo-date-picker-text-field' }\n);\n"
      }
     ]
    },
    {
     "id": 126,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-date-picker@5.0.0/node_modules/@vaadin/vaadin-date-picker/src/vaadin-date-picker.js + 6 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-date-picker@5.0.0/node_modules/@vaadin/vaadin-date-picker/src/vaadin-date-picker.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners.js';\nimport '@polymer/iron-media-query/iron-media-query.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ControlStateMixin } from '@vaadin/vaadin-control-state-mixin/vaadin-control-state-mixin.js';\nimport './vaadin-date-picker-overlay.js';\nimport './vaadin-date-picker-overlay-content.js';\nimport { DatePickerMixin } from './vaadin-date-picker-mixin.js';\nimport './vaadin-date-picker-text-field.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\n\n/**\n * `<vaadin-date-picker>` is a date selection field which includes a scrollable\n * month calendar view.\n * ```html\n * <vaadin-date-picker label=\"Birthday\"></vaadin-date-picker>\n * ```\n * ```js\n * datePicker.value = '2016-03-02';\n * ```\n * When the selected `value` is changed, a `value-changed` event is triggered.\n *\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description | Theme for Element\n * ----------------|----------------|----------------\n * `text-field` | Input element | vaadin-date-picker\n * `clear-button` | Clear button | vaadin-date-picker\n * `toggle-button` | Toggle button | vaadin-date-picker\n * `overlay-content` | The overlay element | vaadin-date-picker\n * `overlay-header` | Fullscreen mode header | vaadin-date-picker-overlay-content\n * `label` | Fullscreen mode value/label | vaadin-date-picker-overlay-content\n * `clear-button` | Fullscreen mode clear button | vaadin-date-picker-overlay-content\n * `toggle-button` | Fullscreen mode toggle button | vaadin-date-picker-overlay-content\n * `years-toggle-button` | Fullscreen mode years scroller toggle | vaadin-date-picker-overlay-content\n * `months` | Months scroller | vaadin-date-picker-overlay-content\n * `years` | Years scroller | vaadin-date-picker-overlay-content\n * `toolbar` | Footer bar with buttons | vaadin-date-picker-overlay-content\n * `today-button` | Today button | vaadin-date-picker-overlay-content\n * `cancel-button` | Cancel button | vaadin-date-picker-overlay-content\n * `month` | Month calendar | vaadin-date-picker-overlay-content\n * `year-number` | Year number | vaadin-date-picker-overlay-content\n * `year-separator` | Year separator | vaadin-date-picker-overlay-content\n * `month-header` | Month title | vaadin-month-calendar\n * `weekdays` | Weekday container | vaadin-month-calendar\n * `weekday` | Weekday element | vaadin-month-calendar\n * `week-numbers` | Week numbers container | vaadin-month-calendar\n * `week-number` | Week number element | vaadin-month-calendar\n * `date` | Date element | vaadin-month-calendar\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `invalid` | Set when the element is invalid | :host\n * `opened` | Set when the date selector overlay is opened | :host\n * `readonly` | Set when the element is readonly | :host\n * `disabled` | Set when the element is disabled | :host\n * `today` | Set on the date corresponding to the current day | date\n * `focused` | Set on the focused date | date\n * `disabled` | Set on the date out of the allowed range | date\n * `selected` | Set on the selected date | date\n *\n * If you want to replace the default input field with a custom implementation, you should use the\n * [`<vaadin-date-picker-light>`](#vaadin-date-picker-light) element.\n *\n * In addition to `<vaadin-date-picker>` itself, the following internal\n * components are themable:\n *\n * - `<vaadin-text-field>`\n * - `<vaadin-date-picker-overlay>`\n * - `<vaadin-date-picker-overlay-content>`\n * - `<vaadin-month-calendar>`\n *\n * Note: the `theme` attribute value set on `<vaadin-date-picker>` is\n * propagated to the internal themable components listed above.\n *\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ControlStateMixin\n * @mixes ThemableMixin\n * @mixes DatePickerMixin\n * @mixes GestureEventListeners\n */\nclass DatePickerElement extends ElementMixin(\n  ControlStateMixin(ThemableMixin(DatePickerMixin(GestureEventListeners(PolymerElement))))\n) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        :host([opened]) {\n          pointer-events: auto;\n        }\n\n        [part='text-field'] {\n          width: 100%;\n          min-width: 0;\n        }\n      </style>\n\n      <vaadin-date-picker-text-field\n        id=\"input\"\n        role=\"application\"\n        autocomplete=\"off\"\n        on-focus=\"_focus\"\n        value=\"{{_userInputValue}}\"\n        invalid=\"[[invalid]]\"\n        label=\"[[label]]\"\n        name=\"[[name]]\"\n        placeholder=\"[[placeholder]]\"\n        required=\"[[required]]\"\n        disabled=\"[[disabled]]\"\n        readonly=\"[[readonly]]\"\n        error-message=\"[[errorMessage]]\"\n        clear-button-visible=\"[[clearButtonVisible]]\"\n        aria-label$=\"[[label]]\"\n        part=\"text-field\"\n        helper-text=\"[[helperText]]\"\n        theme$=\"[[theme]]\"\n      >\n        <slot name=\"prefix\" slot=\"prefix\"></slot>\n        <slot name=\"helper\" slot=\"helper\">[[helperText]]</slot>\n        <div\n          part=\"toggle-button\"\n          slot=\"suffix\"\n          on-tap=\"_toggle\"\n          role=\"button\"\n          aria-label$=\"[[i18n.calendar]]\"\n          aria-expanded$=\"[[_getAriaExpanded(opened)]]\"\n        ></div>\n      </vaadin-date-picker-text-field>\n\n      <vaadin-date-picker-overlay\n        id=\"overlay\"\n        fullscreen$=\"[[_fullscreen]]\"\n        theme$=\"[[__getOverlayTheme(theme, _overlayInitialized)]]\"\n        on-vaadin-overlay-open=\"_onOverlayOpened\"\n        on-vaadin-overlay-close=\"_onOverlayClosed\"\n        disable-upgrade\n      >\n        <template>\n          <vaadin-date-picker-overlay-content\n            id=\"overlay-content\"\n            i18n=\"[[i18n]]\"\n            fullscreen$=\"[[_fullscreen]]\"\n            label=\"[[label]]\"\n            selected-date=\"{{_selectedDate}}\"\n            slot=\"dropdown-content\"\n            focused-date=\"{{_focusedDate}}\"\n            show-week-numbers=\"[[showWeekNumbers]]\"\n            min-date=\"[[_minDate]]\"\n            max-date=\"[[_maxDate]]\"\n            role=\"dialog\"\n            on-date-tap=\"_close\"\n            part=\"overlay-content\"\n            theme$=\"[[__getOverlayTheme(theme, _overlayInitialized)]]\"\n          >\n          </vaadin-date-picker-overlay-content>\n        </template>\n      </vaadin-date-picker-overlay>\n\n      <iron-media-query query=\"[[_fullscreenMediaQuery]]\" query-matches=\"{{_fullscreen}}\"> </iron-media-query>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-date-picker';\n  }\n\n  static get version() {\n    return '5.0.0';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Set to true to display the clear icon which clears the input.\n       * @attr {boolean} clear-button-visible\n       * @type {boolean}\n       */\n      clearButtonVisible: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Set to true to disable this element.\n       * @type {boolean}\n       */\n      disabled: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * The error message to display when the input is invalid.\n       * @attr {string} error-message\n       */\n      errorMessage: String,\n\n      /**\n       * A placeholder string in addition to the label. If this is set, the label will always float.\n       */\n      placeholder: String,\n\n      /**\n       * String used for the helper text.\n       * @attr {string} helper-text\n       */\n      helperText: {\n        type: String,\n        value: ''\n      },\n\n      /**\n       * Set to true to make this element read-only.\n       * @type {boolean}\n       */\n      readonly: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * This property is set to true when the control value invalid.\n       * @type {boolean}\n       */\n      invalid: {\n        type: Boolean,\n        reflectToAttribute: true,\n        notify: true,\n        value: false\n      },\n\n      /** @private */\n      _userInputValue: String\n    };\n  }\n\n  static get observers() {\n    return ['_userInputValueChanged(_userInputValue)', '_setClearButtonLabel(i18n.clear)'];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    // In order to have synchronized invalid property, we need to use the same validate logic.\n    afterNextRender(this, () => {\n      this._inputElement.validate = () => {};\n    });\n\n    this._inputElement.addEventListener('change', (e) => {\n      // For change event on text-field blur, after the field is cleared,\n      // we schedule change event to be dispatched on date-picker blur.\n      if (this._inputElement.value === '' && !e.__fromClearButton) {\n        this.__dispatchChange = true;\n      }\n    });\n  }\n\n  /** @private */\n  _onVaadinOverlayClose(e) {\n    if (this._openedWithFocusRing && this.hasAttribute('focused')) {\n      this.focusElement.setAttribute('focus-ring', '');\n    } else if (!this.hasAttribute('focused')) {\n      this.focusElement.blur();\n    }\n    if (e.detail.sourceEvent && e.detail.sourceEvent.composedPath().indexOf(this) !== -1) {\n      e.preventDefault();\n    }\n  }\n\n  /** @private */\n  _toggle(e) {\n    e.stopPropagation();\n    this[this._overlayInitialized && this.$.overlay.opened ? 'close' : 'open']();\n  }\n\n  /**\n   * @return {HTMLElement}\n   * @protected\n   */\n  _input() {\n    return this.$.input;\n  }\n\n  set _inputValue(value) {\n    this._inputElement.value = value;\n  }\n\n  /** @return {string} */\n  get _inputValue() {\n    return this._inputElement.value;\n  }\n\n  /** @private */\n  _getAriaExpanded(opened) {\n    return Boolean(opened).toString();\n  }\n\n  /**\n   * Focusable element used by vaadin-control-state-mixin\n   * @return {!HTMLElement}\n   * @protected\n   */\n  get focusElement() {\n    return this._input() || this;\n  }\n\n  /** @private */\n  _setClearButtonLabel(i18nClear) {\n    // FIXME(platosha): expose i18n API in <vaadin-text-field>\n    // https://github.com/vaadin/vaadin-text-field/issues/348\n    this._inputElement.shadowRoot.querySelector('[part=\"clear-button\"]').setAttribute('aria-label', i18nClear);\n  }\n}\n\ncustomElements.define(DatePickerElement.is, DatePickerElement);\n\nexport { DatePickerElement };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-date-picker@5.0.0/node_modules/@vaadin/vaadin-date-picker/src/vaadin-date-picker-overlay.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { OverlayElement } from '@vaadin/vaadin-overlay/src/vaadin-overlay.js';\nimport { DisableUpgradeMixin } from '@polymer/polymer/lib/mixins/disable-upgrade-mixin.js';\n\n/**\n * The overlay element.\n *\n * ### Styling\n *\n * See [`<vaadin-overlay>` documentation](https://github.com/vaadin/vaadin-overlay/blob/master/src/vaadin-overlay.html)\n * for `<vaadin-date-picker-overlay>` parts.\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @private\n */\nclass DatePickerOverlayElement extends DisableUpgradeMixin(OverlayElement) {\n  static get is() {\n    return 'vaadin-date-picker-overlay';\n  }\n}\n\ncustomElements.define(DatePickerOverlayElement.is, DatePickerOverlayElement);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-date-picker@5.0.0/node_modules/@vaadin/vaadin-date-picker/src/vaadin-date-picker-overlay-content.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners.js';\nimport { addListener, setTouchAction } from '@polymer/polymer/lib/utils/gestures.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { timeOut } from '@polymer/polymer/lib/utils/async.js';\nimport { IronA11yKeysBehavior } from '@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js';\nimport { IronA11yAnnouncer } from '@polymer/iron-a11y-announcer/iron-a11y-announcer.js';\nimport '@polymer/iron-media-query/iron-media-query.js';\nimport '@vaadin/vaadin-button/src/vaadin-button.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { DirMixin } from '@vaadin/vaadin-element-mixin/vaadin-dir-mixin.js';\nimport './vaadin-month-calendar.js';\nimport './vaadin-infinite-scroller.js';\nimport { dateEquals, getClosestDate, getISOWeekNumber, extractDateParts } from './vaadin-date-picker-helper.js';\nimport './vaadin-date-picker-styles.js';\n\n/**\n * @extends HTMLElement\n * @private\n */\nclass DatePickerOverlayContentElement extends ThemableMixin(DirMixin(GestureEventListeners(PolymerElement))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: flex;\n          flex-direction: column;\n          height: 100%;\n          width: 100%;\n          outline: none;\n          background: #fff;\n        }\n\n        [part='overlay-header'] {\n          display: flex;\n          flex-shrink: 0;\n          flex-wrap: nowrap;\n          align-items: center;\n        }\n\n        :host(:not([fullscreen])) [part='overlay-header'] {\n          display: none;\n        }\n\n        [part='label'] {\n          flex-grow: 1;\n        }\n\n        [part='clear-button']:not([showclear]) {\n          display: none;\n        }\n\n        [part='years-toggle-button'] {\n          display: flex;\n        }\n\n        [part='years-toggle-button'][desktop] {\n          display: none;\n        }\n\n        :host(:not([years-visible])) [part='years-toggle-button']::before {\n          transform: rotate(180deg);\n        }\n\n        #scrollers {\n          display: flex;\n          height: 100%;\n          width: 100%;\n          position: relative;\n          overflow: hidden;\n        }\n\n        [part='months'],\n        [part='years'] {\n          height: 100%;\n        }\n\n        [part='months'] {\n          --vaadin-infinite-scroller-item-height: 270px;\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n        }\n\n        #scrollers[desktop] [part='months'] {\n          right: 50px;\n          transform: none !important;\n        }\n\n        [part='years'] {\n          --vaadin-infinite-scroller-item-height: 80px;\n          width: 50px;\n          position: absolute;\n          right: 0;\n          transform: translateX(100%);\n          -webkit-tap-highlight-color: transparent;\n          -webkit-user-select: none;\n          -moz-user-select: none;\n          user-select: none;\n          /* Center the year scroller position. */\n          --vaadin-infinite-scroller-buffer-offset: 50%;\n        }\n\n        #scrollers[desktop] [part='years'] {\n          position: absolute;\n          transform: none !important;\n        }\n\n        [part='years']::before {\n          content: '';\n          display: block;\n          background: transparent;\n          width: 0;\n          height: 0;\n          position: absolute;\n          left: 0;\n          top: 50%;\n          transform: translateY(-50%);\n          border-width: 6px;\n          border-style: solid;\n          border-color: transparent;\n          border-left-color: #000;\n        }\n\n        :host(.animate) [part='months'],\n        :host(.animate) [part='years'] {\n          transition: all 200ms;\n        }\n\n        [part='toolbar'] {\n          display: flex;\n          justify-content: space-between;\n          z-index: 2;\n          flex-shrink: 0;\n        }\n\n        [part~='overlay-header']:not([desktop]) {\n          padding-bottom: 40px;\n        }\n\n        [part~='years-toggle-button'] {\n          position: absolute;\n          top: auto;\n          right: 8px;\n          bottom: 0;\n          z-index: 1;\n          padding: 8px;\n        }\n\n        #announcer {\n          display: inline-block;\n          position: fixed;\n          clip: rect(0, 0, 0, 0);\n          clip-path: inset(100%);\n        }\n      </style>\n\n      <div id=\"announcer\" role=\"alert\" aria-live=\"polite\">[[i18n.calendar]]</div>\n\n      <div part=\"overlay-header\" on-touchend=\"_preventDefault\" desktop$=\"[[_desktopMode]]\" aria-hidden=\"true\">\n        <div part=\"label\">[[_formatDisplayed(selectedDate, i18n.formatDate, label)]]</div>\n        <div part=\"clear-button\" on-tap=\"_clear\" showclear$=\"[[_showClear(selectedDate)]]\"></div>\n        <div part=\"toggle-button\" on-tap=\"_cancel\"></div>\n\n        <div part=\"years-toggle-button\" desktop$=\"[[_desktopMode]]\" on-tap=\"_toggleYearScroller\" aria-hidden=\"true\">\n          [[_yearAfterXMonths(_visibleMonthIndex)]]\n        </div>\n      </div>\n\n      <div id=\"scrollers\" desktop$=\"[[_desktopMode]]\" on-track=\"_track\">\n        <vaadin-infinite-scroller\n          id=\"monthScroller\"\n          on-custom-scroll=\"_onMonthScroll\"\n          on-touchstart=\"_onMonthScrollTouchStart\"\n          buffer-size=\"3\"\n          active=\"[[initialPosition]]\"\n          part=\"months\"\n        >\n          <template>\n            <vaadin-month-calendar\n              i18n=\"[[i18n]]\"\n              month=\"[[_dateAfterXMonths(index)]]\"\n              selected-date=\"{{selectedDate}}\"\n              focused-date=\"[[focusedDate]]\"\n              ignore-taps=\"[[_ignoreTaps]]\"\n              show-week-numbers=\"[[showWeekNumbers]]\"\n              min-date=\"[[minDate]]\"\n              max-date=\"[[maxDate]]\"\n              focused$=\"[[_focused]]\"\n              part=\"month\"\n              theme$=\"[[theme]]\"\n            >\n            </vaadin-month-calendar>\n          </template>\n        </vaadin-infinite-scroller>\n        <vaadin-infinite-scroller\n          id=\"yearScroller\"\n          on-tap=\"_onYearTap\"\n          on-custom-scroll=\"_onYearScroll\"\n          on-touchstart=\"_onYearScrollTouchStart\"\n          buffer-size=\"12\"\n          active=\"[[initialPosition]]\"\n          part=\"years\"\n        >\n          <template>\n            <div\n              part=\"year-number\"\n              role=\"button\"\n              current$=\"[[_isCurrentYear(index)]]\"\n              selected$=\"[[_isSelectedYear(index, selectedDate)]]\"\n            >\n              [[_yearAfterXYears(index)]]\n            </div>\n            <div part=\"year-separator\" aria-hidden=\"true\"></div>\n          </template>\n        </vaadin-infinite-scroller>\n      </div>\n\n      <div on-touchend=\"_preventDefault\" role=\"toolbar\" part=\"toolbar\">\n        <vaadin-button\n          id=\"todayButton\"\n          part=\"today-button\"\n          theme=\"tertiary\"\n          disabled=\"[[!_isTodayAllowed(minDate, maxDate)]]\"\n          on-tap=\"_onTodayTap\"\n        >\n          [[i18n.today]]\n        </vaadin-button>\n        <vaadin-button id=\"cancelButton\" part=\"cancel-button\" theme=\"tertiary\" on-tap=\"_cancel\">\n          [[i18n.cancel]]\n        </vaadin-button>\n      </div>\n      <iron-media-query query=\"(min-width: 375px)\" query-matches=\"{{_desktopMode}}\"></iron-media-query>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-date-picker-overlay-content';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * The value for this element.\n       */\n      selectedDate: {\n        type: Date,\n        notify: true\n      },\n\n      /**\n       * Date value which is focused using keyboard.\n       */\n      focusedDate: {\n        type: Date,\n        notify: true,\n        observer: '_focusedDateChanged'\n      },\n\n      _focusedMonthDate: Number,\n\n      /**\n       * Date which should be visible when there is no value selected.\n       */\n      initialPosition: {\n        type: Date,\n        observer: '_initialPositionChanged'\n      },\n\n      _originDate: {\n        value: new Date()\n      },\n\n      _visibleMonthIndex: Number,\n\n      _desktopMode: Boolean,\n\n      _translateX: {\n        observer: '_translateXChanged'\n      },\n\n      _yearScrollerWidth: {\n        value: 50\n      },\n\n      i18n: {\n        type: Object\n      },\n\n      showWeekNumbers: {\n        type: Boolean\n      },\n\n      _ignoreTaps: Boolean,\n\n      _notTapping: Boolean,\n\n      /**\n       * The earliest date that can be selected. All earlier dates will be disabled.\n       */\n      minDate: Date,\n\n      /**\n       * The latest date that can be selected. All later dates will be disabled.\n       */\n      maxDate: Date,\n\n      _focused: Boolean,\n\n      /**\n       * Input label\n       */\n      label: String\n    };\n  }\n\n  get __isRTL() {\n    return this.getAttribute('dir') === 'rtl';\n  }\n\n  ready() {\n    super.ready();\n    this.setAttribute('tabindex', 0);\n    this.addEventListener('keydown', this._onKeydown.bind(this));\n    addListener(this, 'tap', this._stopPropagation);\n    this.addEventListener('focus', this._onOverlayFocus.bind(this));\n    this.addEventListener('blur', this._onOverlayBlur.bind(this));\n  }\n\n  /**\n   * Fired when the scroller reaches the target scrolling position.\n   * @event scroll-animation-finished\n   * @param {Number} detail.position new position\n   * @param {Number} detail.oldPosition old position\n   */\n\n  connectedCallback() {\n    super.connectedCallback();\n    this._closeYearScroller();\n    this._toggleAnimateClass(true);\n    setTouchAction(this.$.scrollers, 'pan-y');\n    IronA11yAnnouncer.requestAvailability();\n  }\n\n  announceFocusedDate() {\n    var focusedDate = this._currentlyFocusedDate();\n    var announce = [];\n    if (dateEquals(focusedDate, new Date())) {\n      announce.push(this.i18n.today);\n    }\n    announce = announce.concat([\n      this.i18n.weekdays[focusedDate.getDay()],\n      focusedDate.getDate(),\n      this.i18n.monthNames[focusedDate.getMonth()],\n      focusedDate.getFullYear()\n    ]);\n    if (this.showWeekNumbers && this.i18n.firstDayOfWeek === 1) {\n      announce.push(this.i18n.week);\n      announce.push(getISOWeekNumber(focusedDate));\n    }\n    this.dispatchEvent(\n      new CustomEvent('iron-announce', {\n        bubbles: true,\n        composed: true,\n        detail: {\n          text: announce.join(' ')\n        }\n      })\n    );\n    return;\n  }\n\n  /**\n   * Focuses the cancel button\n   */\n  focusCancel() {\n    this.$.cancelButton.focus();\n  }\n\n  /**\n   * Scrolls the list to the given Date.\n   */\n  scrollToDate(date, animate) {\n    this._scrollToPosition(this._differenceInMonths(date, this._originDate), animate);\n  }\n\n  _focusedDateChanged(focusedDate) {\n    this.revealDate(focusedDate);\n  }\n\n  _isCurrentYear(yearsFromNow) {\n    return yearsFromNow === 0;\n  }\n\n  _isSelectedYear(yearsFromNow, selectedDate) {\n    if (selectedDate) {\n      return selectedDate.getFullYear() === this._originDate.getFullYear() + yearsFromNow;\n    }\n  }\n\n  /**\n   * Scrolls the month and year scrollers enough to reveal the given date.\n   */\n  revealDate(date) {\n    if (date) {\n      var diff = this._differenceInMonths(date, this._originDate);\n      var scrolledAboveViewport = this.$.monthScroller.position > diff;\n\n      var visibleItems = this.$.monthScroller.clientHeight / this.$.monthScroller.itemHeight;\n      var scrolledBelowViewport = this.$.monthScroller.position + visibleItems - 1 < diff;\n\n      if (scrolledAboveViewport) {\n        this._scrollToPosition(diff, true);\n      } else if (scrolledBelowViewport) {\n        this._scrollToPosition(diff - visibleItems + 1, true);\n      }\n    }\n  }\n\n  _onOverlayFocus() {\n    this._focused = true;\n  }\n\n  _onOverlayBlur() {\n    this._focused = false;\n  }\n\n  _initialPositionChanged(initialPosition) {\n    this.scrollToDate(initialPosition);\n  }\n\n  _repositionYearScroller() {\n    this._visibleMonthIndex = Math.floor(this.$.monthScroller.position);\n    this.$.yearScroller.position = (this.$.monthScroller.position + this._originDate.getMonth()) / 12;\n  }\n\n  _repositionMonthScroller() {\n    this.$.monthScroller.position = this.$.yearScroller.position * 12 - this._originDate.getMonth();\n    this._visibleMonthIndex = Math.floor(this.$.monthScroller.position);\n  }\n\n  _onMonthScroll() {\n    this._repositionYearScroller();\n    this._doIgnoreTaps();\n  }\n\n  _onYearScroll() {\n    this._repositionMonthScroller();\n    this._doIgnoreTaps();\n  }\n\n  _onYearScrollTouchStart() {\n    this._notTapping = false;\n    setTimeout(() => (this._notTapping = true), 300);\n\n    this._repositionMonthScroller();\n  }\n\n  _onMonthScrollTouchStart() {\n    this._repositionYearScroller();\n  }\n\n  _doIgnoreTaps() {\n    this._ignoreTaps = true;\n    this._debouncer = Debouncer.debounce(this._debouncer, timeOut.after(300), () => (this._ignoreTaps = false));\n  }\n\n  _formatDisplayed(date, formatDate, label) {\n    if (date) {\n      return formatDate(extractDateParts(date));\n    } else {\n      return label;\n    }\n  }\n\n  _onTodayTap() {\n    var today = new Date();\n\n    if (Math.abs(this.$.monthScroller.position - this._differenceInMonths(today, this._originDate)) < 0.001) {\n      // Select today only if the month scroller is positioned approximately\n      // at the beginning of the current month\n      this.selectedDate = today;\n      this._close();\n    } else {\n      this._scrollToCurrentMonth();\n    }\n  }\n\n  _scrollToCurrentMonth() {\n    if (this.focusedDate) {\n      this.focusedDate = new Date();\n    }\n\n    this.scrollToDate(new Date(), true);\n  }\n\n  _showClear(selectedDate) {\n    return !!selectedDate;\n  }\n\n  _onYearTap(e) {\n    if (!this._ignoreTaps && !this._notTapping) {\n      var scrollDelta =\n        e.detail.y - (this.$.yearScroller.getBoundingClientRect().top + this.$.yearScroller.clientHeight / 2);\n      var yearDelta = scrollDelta / this.$.yearScroller.itemHeight;\n      this._scrollToPosition(this.$.monthScroller.position + yearDelta * 12, true);\n    }\n  }\n\n  _scrollToPosition(targetPosition, animate) {\n    if (this._targetPosition !== undefined) {\n      this._targetPosition = targetPosition;\n      return;\n    }\n\n    if (!animate) {\n      this.$.monthScroller.position = targetPosition;\n      this._targetPosition = undefined;\n      this._repositionYearScroller();\n      return;\n    }\n\n    this._targetPosition = targetPosition;\n\n    // http://gizma.com/easing/\n    var easingFunction = (t, b, c, d) => {\n      t /= d / 2;\n      if (t < 1) {\n        return (c / 2) * t * t + b;\n      }\n      t--;\n      return (-c / 2) * (t * (t - 2) - 1) + b;\n    };\n\n    var duration = animate ? 300 : 0;\n    var start = 0;\n    var initialPosition = this.$.monthScroller.position;\n\n    var smoothScroll = (timestamp) => {\n      start = start || timestamp;\n      var currentTime = timestamp - start;\n\n      if (currentTime < duration) {\n        var currentPos = easingFunction(currentTime, initialPosition, this._targetPosition - initialPosition, duration);\n        this.$.monthScroller.position = currentPos;\n        window.requestAnimationFrame(smoothScroll);\n      } else {\n        this.dispatchEvent(\n          new CustomEvent('scroll-animation-finished', {\n            bubbles: true,\n            composed: true,\n            detail: {\n              position: this._targetPosition,\n              oldPosition: initialPosition\n            }\n          })\n        );\n\n        this.$.monthScroller.position = this._targetPosition;\n        this._targetPosition = undefined;\n      }\n\n      setTimeout(this._repositionYearScroller.bind(this), 1);\n    };\n\n    // Start the animation.\n    window.requestAnimationFrame(smoothScroll);\n  }\n\n  _limit(value, range) {\n    return Math.min(range.max, Math.max(range.min, value));\n  }\n\n  _handleTrack(e) {\n    // Check if horizontal movement threshold (dx) not exceeded or\n    // scrolling fast vertically (ddy).\n    if (Math.abs(e.detail.dx) < 10 || Math.abs(e.detail.ddy) > 10) {\n      return;\n    }\n\n    // If we're flinging quickly -> start animating already.\n    if (Math.abs(e.detail.ddx) > this._yearScrollerWidth / 3) {\n      this._toggleAnimateClass(true);\n    }\n\n    var newTranslateX = this._translateX + e.detail.ddx;\n    this._translateX = this._limit(newTranslateX, {\n      min: 0,\n      max: this._yearScrollerWidth\n    });\n  }\n\n  _track(e) {\n    if (this._desktopMode) {\n      // No need to track for swipe gestures on desktop.\n      return;\n    }\n\n    switch (e.detail.state) {\n      case 'start':\n        this._toggleAnimateClass(false);\n        break;\n\n      case 'track':\n        this._handleTrack(e);\n        break;\n\n      case 'end':\n        this._toggleAnimateClass(true);\n        if (this._translateX >= this._yearScrollerWidth / 2) {\n          this._closeYearScroller();\n        } else {\n          this._openYearScroller();\n        }\n        break;\n    }\n  }\n\n  _toggleAnimateClass(enable) {\n    if (enable) {\n      this.classList.add('animate');\n    } else {\n      this.classList.remove('animate');\n    }\n  }\n\n  _toggleYearScroller() {\n    this._isYearScrollerVisible() ? this._closeYearScroller() : this._openYearScroller();\n  }\n\n  _openYearScroller() {\n    this._translateX = 0;\n    this.setAttribute('years-visible', '');\n  }\n\n  _closeYearScroller() {\n    this.removeAttribute('years-visible');\n    this._translateX = this._yearScrollerWidth;\n  }\n\n  _isYearScrollerVisible() {\n    return this._translateX < this._yearScrollerWidth / 2;\n  }\n\n  _translateXChanged(x) {\n    if (!this._desktopMode) {\n      this.$.monthScroller.style.transform = 'translateX(' + (x - this._yearScrollerWidth) + 'px)';\n      this.$.yearScroller.style.transform = 'translateX(' + x + 'px)';\n    }\n  }\n\n  _yearAfterXYears(index) {\n    var result = new Date(this._originDate);\n    result.setFullYear(parseInt(index) + this._originDate.getFullYear());\n    return result.getFullYear();\n  }\n\n  _yearAfterXMonths(months) {\n    return this._dateAfterXMonths(months).getFullYear();\n  }\n\n  _dateAfterXMonths(months) {\n    var result = new Date(this._originDate);\n    result.setDate(1);\n    result.setMonth(parseInt(months) + this._originDate.getMonth());\n    return result;\n  }\n\n  _differenceInMonths(date1, date2) {\n    var months = (date1.getFullYear() - date2.getFullYear()) * 12;\n    return months - date2.getMonth() + date1.getMonth();\n  }\n\n  _differenceInYears(date1, date2) {\n    return this._differenceInMonths(date1, date2) / 12;\n  }\n\n  _clear() {\n    this.selectedDate = '';\n  }\n\n  _close() {\n    const overlayContent = this.getRootNode().host;\n    const overlay = overlayContent ? overlayContent.getRootNode().host : null;\n    if (overlay) {\n      overlay.opened = false;\n    }\n\n    this.dispatchEvent(new CustomEvent('close', { bubbles: true, composed: true }));\n  }\n\n  _cancel() {\n    this.focusedDate = this.selectedDate;\n    this._close();\n  }\n\n  _preventDefault(e) {\n    e.preventDefault();\n  }\n\n  /**\n   * Keyboard Navigation\n   */\n  _eventKey(e) {\n    var keys = ['down', 'up', 'right', 'left', 'enter', 'space', 'home', 'end', 'pageup', 'pagedown', 'tab', 'esc'];\n\n    for (var i = 0; i < keys.length; i++) {\n      var k = keys[i];\n      if (IronA11yKeysBehavior.keyboardEventMatchesKeys(e, k)) {\n        return k;\n      }\n    }\n  }\n\n  _onKeydown(e) {\n    var focus = this._currentlyFocusedDate();\n\n    // Cannot use (today/cancel).focused flag because vaadin-text-field removes it\n    // previously in the keydown event.\n    const isToday = e.composedPath().indexOf(this.$.todayButton) >= 0;\n    const isCancel = e.composedPath().indexOf(this.$.cancelButton) >= 0;\n    const isScroller = !isToday && !isCancel;\n\n    var eventKey = this._eventKey(e);\n    if (eventKey === 'tab') {\n      // We handle tabs here and don't want to bubble up.\n      e.stopPropagation();\n\n      const isFullscreen = this.hasAttribute('fullscreen');\n      const isShift = e.shiftKey;\n\n      if (isFullscreen) {\n        e.preventDefault();\n      } else if ((isShift && isScroller) || (!isShift && isCancel)) {\n        // Return focus back to the input field\n        e.preventDefault();\n        this.dispatchEvent(new CustomEvent('focus-input', { bubbles: true, composed: true }));\n      } else if (isShift && isToday) {\n        // Browser returns focus back to the scrollable area. We need to set\n        // the focused flag, and move the scroll to focused date.\n        this._focused = true;\n        setTimeout(() => this.revealDate(this.focusedDate), 1);\n      } else {\n        // Browser moves the focus out of the scroller, hence focused flag must\n        // set to false.\n        this._focused = false;\n      }\n    } else if (eventKey) {\n      e.preventDefault();\n      e.stopPropagation();\n      switch (eventKey) {\n        case 'down':\n          this._moveFocusByDays(7);\n          this.focus();\n          break;\n        case 'up':\n          this._moveFocusByDays(-7);\n          this.focus();\n          break;\n        case 'right':\n          if (isScroller) {\n            this._moveFocusByDays(this.__isRTL ? -1 : 1);\n          }\n          break;\n        case 'left':\n          if (isScroller) {\n            this._moveFocusByDays(this.__isRTL ? 1 : -1);\n          }\n          break;\n        case 'enter':\n          if (isScroller || isCancel) {\n            this._close();\n          } else if (isToday) {\n            this._onTodayTap();\n          }\n          break;\n        case 'space':\n          if (isCancel) {\n            this._close();\n          } else if (isToday) {\n            this._onTodayTap();\n          } else {\n            var focusedDate = this.focusedDate;\n            if (dateEquals(focusedDate, this.selectedDate)) {\n              this.selectedDate = '';\n              this.focusedDate = focusedDate;\n            } else {\n              this.selectedDate = focusedDate;\n            }\n          }\n          break;\n        case 'home':\n          this._moveFocusInsideMonth(focus, 'minDate');\n          break;\n        case 'end':\n          this._moveFocusInsideMonth(focus, 'maxDate');\n          break;\n        case 'pagedown':\n          this._moveFocusByMonths(e.shiftKey ? 12 : 1);\n          break;\n        case 'pageup':\n          this._moveFocusByMonths(e.shiftKey ? -12 : -1);\n          break;\n        case 'esc':\n          this._cancel();\n          break;\n      }\n    }\n  }\n\n  _currentlyFocusedDate() {\n    return this.focusedDate || this.selectedDate || this.initialPosition || new Date();\n  }\n\n  _focusDate(dateToFocus) {\n    this.focusedDate = dateToFocus;\n    this._focusedMonthDate = dateToFocus.getDate();\n  }\n\n  _focusClosestDate(focus) {\n    this._focusDate(getClosestDate(focus, [this.minDate, this.maxDate]));\n  }\n\n  _moveFocusByDays(days) {\n    var focus = this._currentlyFocusedDate();\n    var dateToFocus = new Date(0, 0);\n    dateToFocus.setFullYear(focus.getFullYear());\n    dateToFocus.setMonth(focus.getMonth());\n    dateToFocus.setDate(focus.getDate() + days);\n\n    if (this._dateAllowed(dateToFocus, this.minDate, this.maxDate)) {\n      this._focusDate(dateToFocus);\n    } else {\n      if (this._dateAllowed(focus, this.minDate, this.maxDate)) {\n        // Move to min or max date\n        if (days > 0) {\n          // down or right\n          this._focusDate(this.maxDate);\n        } else {\n          // up or left\n          this._focusDate(this.minDate);\n        }\n      } else {\n        // Move to closest allowed date\n        this._focusClosestDate(focus);\n      }\n    }\n  }\n\n  _moveFocusByMonths(months) {\n    var focus = this._currentlyFocusedDate();\n    var dateToFocus = new Date(0, 0);\n    dateToFocus.setFullYear(focus.getFullYear());\n    dateToFocus.setMonth(focus.getMonth() + months);\n\n    var targetMonth = dateToFocus.getMonth();\n\n    dateToFocus.setDate(this._focusedMonthDate || (this._focusedMonthDate = focus.getDate()));\n    if (dateToFocus.getMonth() !== targetMonth) {\n      dateToFocus.setDate(0);\n    }\n\n    if (this._dateAllowed(dateToFocus, this.minDate, this.maxDate)) {\n      this.focusedDate = dateToFocus;\n    } else {\n      if (this._dateAllowed(focus, this.minDate, this.maxDate)) {\n        // Move to min or max date\n        if (months > 0) {\n          // pagedown\n          this._focusDate(this.maxDate);\n        } else {\n          // pageup\n          this._focusDate(this.minDate);\n        }\n      } else {\n        // Move to closest allowed date\n        this._focusClosestDate(focus);\n      }\n    }\n  }\n\n  _moveFocusInsideMonth(focusedDate, property) {\n    var dateToFocus = new Date(0, 0);\n    dateToFocus.setFullYear(focusedDate.getFullYear());\n\n    if (property === 'minDate') {\n      dateToFocus.setMonth(focusedDate.getMonth());\n      dateToFocus.setDate(1);\n    } else {\n      dateToFocus.setMonth(focusedDate.getMonth() + 1);\n      dateToFocus.setDate(0);\n    }\n\n    if (this._dateAllowed(dateToFocus, this.minDate, this.maxDate)) {\n      this._focusDate(dateToFocus);\n    } else {\n      if (this._dateAllowed(focusedDate, this.minDate, this.maxDate)) {\n        // Move to minDate or maxDate\n        this._focusDate(this[property]);\n      } else {\n        // Move to closest allowed date\n        this._focusClosestDate(focusedDate);\n      }\n    }\n  }\n\n  _dateAllowed(date, min, max) {\n    return (!min || date >= min) && (!max || date <= max);\n  }\n\n  _isTodayAllowed(min, max) {\n    var today = new Date();\n    var todayMidnight = new Date(0, 0);\n    todayMidnight.setFullYear(today.getFullYear());\n    todayMidnight.setMonth(today.getMonth());\n    todayMidnight.setDate(today.getDate());\n    return this._dateAllowed(todayMidnight, min, max);\n  }\n\n  _stopPropagation(e) {\n    e.stopPropagation();\n  }\n}\n\ncustomElements.define(DatePickerOverlayContentElement.is, DatePickerOverlayContentElement);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-date-picker@5.0.0/node_modules/@vaadin/vaadin-date-picker/src/vaadin-date-picker-mixin.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { IronA11yKeysBehavior } from '@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js';\nimport { IronResizableBehavior } from '@polymer/iron-resizable-behavior/iron-resizable-behavior.js';\nimport { dateAllowed, dateEquals, extractDateParts, getClosestDate } from './vaadin-date-picker-helper.js';\nimport { addListener } from '@polymer/polymer/lib/utils/gestures.js';\nimport { mixinBehaviors } from '@polymer/polymer/lib/legacy/class.js';\n\n/**\n * @polymerMixin\n */\nexport const DatePickerMixin = (subclass) =>\n  class VaadinDatePickerMixin extends mixinBehaviors([IronResizableBehavior], subclass) {\n    static get properties() {\n      return {\n        /**\n         * The current selected date.\n         * @type {Date | undefined}\n         * @protected\n         */\n        _selectedDate: {\n          type: Date\n        },\n\n        /**\n         * @type {Date | undefined}\n         * @protected\n         */\n        _focusedDate: Date,\n\n        /**\n         * The value for this element.\n         *\n         * Supported date formats:\n         * - ISO 8601 `\"YYYY-MM-DD\"` (default)\n         * - 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`\n         *\n         * @type {string}\n         */\n        value: {\n          type: String,\n          observer: '_valueChanged',\n          notify: true,\n          value: ''\n        },\n\n        /**\n         * Set to true to mark the input as required.\n         * @type {boolean}\n         */\n        required: {\n          type: Boolean,\n          value: false\n        },\n\n        /**\n         * The name of this element.\n         */\n        name: {\n          type: String\n        },\n\n        /**\n         * Date which should be visible when there is no value selected.\n         *\n         * The same date formats as for the `value` property are supported.\n         * @attr {string} initial-position\n         */\n        initialPosition: String,\n\n        /**\n         * The label for this element.\n         */\n        label: String,\n\n        /**\n         * Set true to open the date selector overlay.\n         */\n        opened: {\n          type: Boolean,\n          reflectToAttribute: true,\n          notify: true,\n          observer: '_openedChanged'\n        },\n\n        /**\n         * Set true to prevent the overlay from opening automatically.\n         * @attr {boolean} auto-open-disabled\n         */\n        autoOpenDisabled: Boolean,\n\n        /**\n         * Set true to display ISO-8601 week numbers in the calendar. Notice that\n         * displaying week numbers is only supported when `i18n.firstDayOfWeek`\n         * is 1 (Monday).\n         * @attr {boolean} show-week-numbers\n         */\n        showWeekNumbers: {\n          type: Boolean\n        },\n\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _fullscreen: {\n          value: false,\n          observer: '_fullscreenChanged'\n        },\n\n        /**\n         * @type {string}\n         * @protected\n         */\n        _fullscreenMediaQuery: {\n          value: '(max-width: 420px), (max-height: 420px)'\n        },\n\n        /**\n         * An array of ancestor elements whose -webkit-overflow-scrolling is forced from value\n         * 'touch' to value 'auto' in order to prevent them from clipping the dropdown. iOS only.\n         * @private\n         */\n        _touchPrevented: Array,\n\n        /**\n         * The object used to localize this component.\n         * To change the default localization, replace the entire\n         * _i18n_ object or just the property you want to modify.\n         *\n         * The object has the following JSON structure and default values:\n         *\n         * ```\n         * {\n         *   // An array with the full names of months starting\n         *   // with January.\n         *   monthNames: [\n         *     'January', 'February', 'March', 'April', 'May',\n         *     'June', 'July', 'August', 'September',\n         *     'October', 'November', 'December'\n         *   ],\n         *\n         *   // An array of weekday names starting with Sunday. Used\n         *   // in screen reader announcements.\n         *   weekdays: [\n         *     'Sunday', 'Monday', 'Tuesday', 'Wednesday',\n         *     'Thursday', 'Friday', 'Saturday'\n         *   ],\n         *\n         *   // An array of short weekday names starting with Sunday.\n         *   // Displayed in the calendar.\n         *   weekdaysShort: [\n         *     'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'\n         *   ],\n         *\n         *   // An integer indicating the first day of the week\n         *   // (0 = Sunday, 1 = Monday, etc.).\n         *   firstDayOfWeek: 0,\n         *\n         *   // Used in screen reader announcements along with week\n         *   // numbers, if they are displayed.\n         *   week: 'Week',\n         *\n         *   // Translation of the Calendar icon button title.\n         *   calendar: 'Calendar',\n         *\n         *   // Translation of the Clear icon button title.\n         *   lear: 'Clear',\n         *\n         *   // Translation of the Today shortcut button text.\n         *   today: 'Today',\n         *\n         *   // Translation of the Cancel button text.\n         *   cancel: 'Cancel',\n         *\n         *   // A function to format given `Object` as\n         *   // date string. Object is in the format `{ day: ..., month: ..., year: ... }`\n         *   // Note: The argument month is 0-based. This means that January = 0 and December = 11.\n         *   formatDate: d => {\n         *     // returns a string representation of the given\n         *     // object in 'MM/DD/YYYY' -format\n         *   },\n         *\n         *   // A function to parse the given text to an `Object` in the format `{ day: ..., month: ..., year: ... }`.\n         *   // Must properly parse (at least) text formatted by `formatDate`.\n         *   // Setting the property to null will disable keyboard input feature.\n         *   // Note: The argument month is 0-based. This means that January = 0 and December = 11.\n         *   parseDate: text => {\n         *     // Parses a string in 'MM/DD/YY', 'MM/DD' or 'DD' -format to\n         *     // an `Object` in the format `{ day: ..., month: ..., year: ... }`.\n         *   }\n         *\n         *   // A function to format given `monthName` and\n         *   // `fullYear` integer as calendar title string.\n         *   formatTitle: (monthName, fullYear) => {\n         *     return monthName + ' ' + fullYear;\n         *   }\n         * }\n         * ```\n         *\n         * @type {!DatePickerI18n}\n         * @default {English/US}\n         */\n        i18n: {\n          type: Object,\n          value: () => {\n            return {\n              monthNames: [\n                'January',\n                'February',\n                'March',\n                'April',\n                'May',\n                'June',\n                'July',\n                'August',\n                'September',\n                'October',\n                'November',\n                'December'\n              ],\n              weekdays: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n              weekdaysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n              firstDayOfWeek: 0,\n              week: 'Week',\n              calendar: 'Calendar',\n              clear: 'Clear',\n              today: 'Today',\n              cancel: 'Cancel',\n              formatDate: (d) => {\n                const yearStr = String(d.year).replace(/\\d+/, (y) => '0000'.substr(y.length) + y);\n                return [d.month + 1, d.day, yearStr].join('/');\n              },\n              parseDate: (text) => {\n                const parts = text.split('/');\n                const today = new Date();\n                let date,\n                  month = today.getMonth(),\n                  year = today.getFullYear();\n\n                if (parts.length === 3) {\n                  year = parseInt(parts[2]);\n                  if (parts[2].length < 3 && year >= 0) {\n                    year += year < 50 ? 2000 : 1900;\n                  }\n                  month = parseInt(parts[0]) - 1;\n                  date = parseInt(parts[1]);\n                } else if (parts.length === 2) {\n                  month = parseInt(parts[0]) - 1;\n                  date = parseInt(parts[1]);\n                } else if (parts.length === 1) {\n                  date = parseInt(parts[0]);\n                }\n\n                if (date !== undefined) {\n                  return { day: date, month, year };\n                }\n              },\n              formatTitle: (monthName, fullYear) => {\n                return monthName + ' ' + fullYear;\n              }\n            };\n          }\n        },\n\n        /**\n         * The earliest date that can be selected. All earlier dates will be disabled.\n         *\n         * Supported date formats:\n         * - ISO 8601 `\"YYYY-MM-DD\"` (default)\n         * - 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`\n         *\n         * @type {string | undefined}\n         */\n        min: {\n          type: String,\n          observer: '_minChanged'\n        },\n\n        /**\n         * The latest date that can be selected. All later dates will be disabled.\n         *\n         * Supported date formats:\n         * - ISO 8601 `\"YYYY-MM-DD\"` (default)\n         * - 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`\n         *\n         * @type {string | undefined}\n         */\n        max: {\n          type: String,\n          observer: '_maxChanged'\n        },\n\n        /**\n         * The earliest date that can be selected. All earlier dates will be disabled.\n         * @type {Date | string}\n         * @protected\n         */\n        _minDate: {\n          type: Date,\n          // null does not work here because minimizer passes undefined to overlay (#351)\n          value: ''\n        },\n\n        /**\n         * The latest date that can be selected. All later dates will be disabled.\n         * @type {Date | string}\n         * @protected\n         */\n        _maxDate: {\n          type: Date,\n          value: ''\n        },\n\n        /** @private */\n        _noInput: {\n          type: Boolean,\n          computed: '_isNoInput(_fullscreen, _ios, i18n, i18n.*)'\n        },\n\n        /** @private */\n        _ios: {\n          type: Boolean,\n          value: navigator.userAgent.match(/iP(?:hone|ad;(?: U;)? CPU) OS (\\d+)/)\n        },\n\n        /** @private */\n        _webkitOverflowScroll: {\n          type: Boolean,\n          value: document.createElement('div').style.webkitOverflowScrolling === ''\n        },\n\n        /** @private */\n        _ignoreAnnounce: {\n          value: true\n        },\n\n        /** @private */\n        _focusOverlayOnOpen: Boolean,\n\n        /** @protected */\n        _overlayInitialized: Boolean\n      };\n    }\n\n    static get observers() {\n      return [\n        '_updateHasValue(value)',\n        '_selectedDateChanged(_selectedDate, i18n.formatDate)',\n        '_focusedDateChanged(_focusedDate, i18n.formatDate)',\n        '_announceFocusedDate(_focusedDate, opened, _ignoreAnnounce)'\n      ];\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n      this._boundOnScroll = this._onScroll.bind(this);\n      this._boundFocus = this._focus.bind(this);\n      this._boundUpdateAlignmentAndPosition = this._updateAlignmentAndPosition.bind(this);\n\n      const isClearButton = (e) => {\n        const path = e.composedPath();\n        const inputIndex = path.indexOf(this._inputElement);\n        return (\n          path.slice(0, inputIndex).filter((el) => el.getAttribute && el.getAttribute('part') === 'clear-button')\n            .length === 1\n        );\n      };\n\n      addListener(this, 'tap', (e) => {\n        // FIXME(platosha): use preventDefault in the text field clear button,\n        // then the following composedPath check could be simplified down\n        // to `if (!e.defaultPrevented)`.\n        // https://github.com/vaadin/vaadin-text-field/issues/352\n        if (!isClearButton(e) && (!this.autoOpenDisabled || this._noInput)) {\n          this.open();\n        }\n      });\n\n      this.addEventListener('touchend', (e) => {\n        if (!isClearButton(e)) {\n          e.preventDefault();\n        }\n      });\n      this.addEventListener('keydown', this._onKeydown.bind(this));\n      this.addEventListener('input', this._onUserInput.bind(this));\n      this.addEventListener('focus', (e) => this._noInput && e.target.blur());\n      this.addEventListener('blur', () => {\n        if (!this.opened) {\n          if (this.autoOpenDisabled) {\n            const parsedDate = this._getParsedDate();\n            if (this._isValidDate(parsedDate)) {\n              this._selectedDate = parsedDate;\n            }\n          }\n\n          if (this._inputElement.value === '' && this.__dispatchChange) {\n            this.validate();\n            this.value = '';\n            this.__dispatchChange = false;\n          } else {\n            this.validate();\n          }\n        }\n      });\n    }\n\n    /** @private */\n    _initOverlay() {\n      this.$.overlay.removeAttribute('disable-upgrade');\n      this._overlayInitialized = true;\n\n      this.$.overlay.addEventListener('opened-changed', (e) => (this.opened = e.detail.value));\n\n      this._overlayContent.addEventListener('close', this._close.bind(this));\n      this._overlayContent.addEventListener('focus-input', this._focusAndSelect.bind(this));\n      this.$.overlay.addEventListener('vaadin-overlay-escape-press', this._boundFocus);\n\n      // Keep focus attribute in focusElement for styling\n      this._overlayContent.addEventListener('focus', () => this.focusElement._setFocused(true));\n\n      this.$.overlay.addEventListener('vaadin-overlay-close', this._onVaadinOverlayClose.bind(this));\n\n      const bringToFrontListener = () => {\n        requestAnimationFrame(() => {\n          this.$.overlay.bringToFront();\n        });\n      };\n\n      this.addEventListener('mousedown', bringToFrontListener);\n      this.addEventListener('touchstart', bringToFrontListener);\n    }\n\n    /** @protected */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n\n      if (this._overlayInitialized) {\n        this.$.overlay.removeEventListener('vaadin-overlay-escape-press', this._boundFocus);\n      }\n\n      this.opened = false;\n    }\n\n    /**\n     * Opens the dropdown.\n     */\n    open() {\n      if (!this.disabled && !this.readonly) {\n        this.opened = true;\n      }\n    }\n\n    /** @private */\n    _close(e) {\n      if (e) {\n        e.stopPropagation();\n      }\n      this._focus();\n      this.close();\n    }\n\n    /**\n     * Closes the dropdown.\n     */\n    close() {\n      if (this._overlayInitialized || this.autoOpenDisabled) {\n        this.$.overlay.close();\n      }\n    }\n\n    /**\n     * @return {HTMLElement}\n     * @protected\n     */\n    get _inputElement() {\n      return this._input();\n    }\n\n    /** @private */\n    get _nativeInput() {\n      if (this._inputElement) {\n        // vaadin-text-field's input is focusElement\n        // iron-input's input is inputElement\n        return this._inputElement.focusElement\n          ? this._inputElement.focusElement\n          : this._inputElement.inputElement\n          ? this._inputElement.inputElement\n          : this._inputElement;\n      }\n      return null;\n    }\n\n    /** @private */\n    _parseDate(str) {\n      // Parsing with RegExp to ensure correct format\n      var parts = /^([-+]\\d{1}|\\d{2,4}|[-+]\\d{6})-(\\d{1,2})-(\\d{1,2})$/.exec(str);\n      if (!parts) {\n        return;\n      }\n\n      var date = new Date(0, 0); // Wrong date (1900-01-01), but with midnight in local time\n      date.setFullYear(parseInt(parts[1], 10));\n      date.setMonth(parseInt(parts[2], 10) - 1);\n      date.setDate(parseInt(parts[3], 10));\n      return date;\n    }\n\n    /** @private */\n    _isNoInput(fullscreen, ios, i18n) {\n      return !this._inputElement || fullscreen || ios || !i18n.parseDate;\n    }\n\n    /** @private */\n    _formatISO(date) {\n      if (!(date instanceof Date)) {\n        return '';\n      }\n\n      const pad = (num, fmt = '00') => (fmt + num).substr((fmt + num).length - fmt.length);\n\n      let yearSign = '';\n      let yearFmt = '0000';\n      let yearAbs = date.getFullYear();\n      if (yearAbs < 0) {\n        yearAbs = -yearAbs;\n        yearSign = '-';\n        yearFmt = '000000';\n      } else if (date.getFullYear() >= 10000) {\n        yearSign = '+';\n        yearFmt = '000000';\n      }\n\n      const year = yearSign + pad(yearAbs, yearFmt);\n      const month = pad(date.getMonth() + 1);\n      const day = pad(date.getDate());\n      return [year, month, day].join('-');\n    }\n\n    /** @private */\n    _openedChanged(opened) {\n      if (opened && !this._overlayInitialized) {\n        this._initOverlay();\n      }\n      if (this._overlayInitialized) {\n        this.$.overlay.opened = opened;\n      }\n      if (opened) {\n        this._updateAlignmentAndPosition();\n      }\n    }\n\n    /** @private */\n    _selectedDateChanged(selectedDate, formatDate) {\n      if (selectedDate === undefined || formatDate === undefined) {\n        return;\n      }\n      if (this.__userInputOccurred) {\n        this.__dispatchChange = true;\n      }\n      const value = this._formatISO(selectedDate);\n\n      this.__keepInputValue || this._applyInputValue(selectedDate);\n\n      if (value !== this.value) {\n        this.validate();\n        this.value = value;\n      }\n      this.__userInputOccurred = false;\n      this.__dispatchChange = false;\n      this._ignoreFocusedDateChange = true;\n      this._focusedDate = selectedDate;\n      this._ignoreFocusedDateChange = false;\n    }\n\n    /** @private */\n    _focusedDateChanged(focusedDate, formatDate) {\n      if (focusedDate === undefined || formatDate === undefined) {\n        return;\n      }\n      this.__userInputOccurred = true;\n      if (!this._ignoreFocusedDateChange && !this._noInput) {\n        this._applyInputValue(focusedDate);\n      }\n    }\n\n    /** @private */\n    _updateHasValue(value) {\n      if (value) {\n        this.setAttribute('has-value', '');\n      } else {\n        this.removeAttribute('has-value');\n      }\n    }\n\n    /** @private */\n    __getOverlayTheme(theme, overlayInitialized) {\n      if (overlayInitialized) {\n        return theme;\n      }\n    }\n\n    /** @private */\n    _handleDateChange(property, value, oldValue) {\n      if (!value) {\n        this[property] = '';\n        return;\n      }\n\n      var date = this._parseDate(value);\n      if (!date) {\n        this.value = oldValue;\n        return;\n      }\n      if (!dateEquals(this[property], date)) {\n        this[property] = date;\n        this.value && this.validate();\n      }\n    }\n\n    /** @private */\n    _valueChanged(value, oldValue) {\n      if (this.__dispatchChange) {\n        this.dispatchEvent(new CustomEvent('change', { bubbles: true }));\n      }\n      this._handleDateChange('_selectedDate', value, oldValue);\n    }\n\n    /** @private */\n    _minChanged(value, oldValue) {\n      this._handleDateChange('_minDate', value, oldValue);\n    }\n\n    /** @private */\n    _maxChanged(value, oldValue) {\n      this._handleDateChange('_maxDate', value, oldValue);\n    }\n\n    /** @private */\n    _updateAlignmentAndPosition() {\n      if (!this._overlayInitialized) {\n        return;\n      }\n      if (!this._fullscreen) {\n        const inputRect = this._inputElement.getBoundingClientRect();\n\n        const bottomAlign = inputRect.top > window.innerHeight / 2;\n        const rightAlign = inputRect.left + this.clientWidth / 2 > window.innerWidth / 2;\n\n        if (rightAlign) {\n          const viewportWidth = Math.min(window.innerWidth, document.documentElement.clientWidth);\n          this.$.overlay.setAttribute('right-aligned', '');\n          this.$.overlay.style.removeProperty('left');\n          this.$.overlay.style.right = viewportWidth - inputRect.right + 'px';\n        } else {\n          this.$.overlay.removeAttribute('right-aligned');\n          this.$.overlay.style.removeProperty('right');\n          this.$.overlay.style.left = inputRect.left + 'px';\n        }\n\n        if (bottomAlign) {\n          const viewportHeight = Math.min(window.innerHeight, document.documentElement.clientHeight);\n          this.$.overlay.setAttribute('bottom-aligned', '');\n          this.$.overlay.style.removeProperty('top');\n          this.$.overlay.style.bottom = viewportHeight - inputRect.top + 'px';\n        } else {\n          this.$.overlay.removeAttribute('bottom-aligned');\n          this.$.overlay.style.removeProperty('bottom');\n          this.$.overlay.style.top = inputRect.bottom + 'px';\n        }\n      }\n\n      this.$.overlay.setAttribute('dir', getComputedStyle(this._inputElement).getPropertyValue('direction'));\n      this._overlayContent._repositionYearScroller();\n    }\n\n    /** @private */\n    _fullscreenChanged() {\n      if (this._overlayInitialized && this.$.overlay.opened) {\n        this._updateAlignmentAndPosition();\n      }\n    }\n\n    /** @protected */\n    _onOverlayOpened() {\n      this._openedWithFocusRing =\n        this.hasAttribute('focus-ring') || (this.focusElement && this.focusElement.hasAttribute('focus-ring'));\n\n      var parsedInitialPosition = this._parseDate(this.initialPosition);\n\n      var initialPosition =\n        this._selectedDate || this._overlayContent.initialPosition || parsedInitialPosition || new Date();\n\n      if (parsedInitialPosition || dateAllowed(initialPosition, this._minDate, this._maxDate)) {\n        this._overlayContent.initialPosition = initialPosition;\n      } else {\n        this._overlayContent.initialPosition = getClosestDate(initialPosition, [this._minDate, this._maxDate]);\n      }\n\n      this._overlayContent.scrollToDate(this._overlayContent.focusedDate || this._overlayContent.initialPosition);\n      // Have a default focused date\n      this._ignoreFocusedDateChange = true;\n      this._overlayContent.focusedDate = this._overlayContent.focusedDate || this._overlayContent.initialPosition;\n      this._ignoreFocusedDateChange = false;\n\n      window.addEventListener('scroll', this._boundOnScroll, true);\n      this.addEventListener('iron-resize', this._boundUpdateAlignmentAndPosition);\n\n      if (this._webkitOverflowScroll) {\n        this._touchPrevented = this._preventWebkitOverflowScrollingTouch(this.parentElement);\n      }\n\n      if (this._focusOverlayOnOpen) {\n        this._overlayContent.focus();\n        this._focusOverlayOnOpen = false;\n      } else {\n        this._focus();\n      }\n\n      if (this._noInput && this.focusElement) {\n        this.focusElement.blur();\n      }\n\n      this.updateStyles();\n\n      this._ignoreAnnounce = false;\n    }\n\n    // A hack needed for iOS to prevent dropdown from being clipped in an\n    // ancestor container with -webkit-overflow-scrolling: touch;\n    /** @private */\n    _preventWebkitOverflowScrollingTouch(element) {\n      var result = [];\n      while (element) {\n        if (window.getComputedStyle(element).webkitOverflowScrolling === 'touch') {\n          var oldInlineValue = element.style.webkitOverflowScrolling;\n          element.style.webkitOverflowScrolling = 'auto';\n          result.push({\n            element: element,\n            oldInlineValue: oldInlineValue\n          });\n        }\n        element = element.parentElement;\n      }\n      return result;\n    }\n\n    /** @private */\n    _selectParsedOrFocusedDate() {\n      // Select the parsed input or focused date\n      this._ignoreFocusedDateChange = true;\n      if (this.i18n.parseDate) {\n        const inputValue = this._inputValue || '';\n        const parsedDate = this._getParsedDate(inputValue);\n\n        if (this._isValidDate(parsedDate)) {\n          this._selectedDate = parsedDate;\n        } else {\n          this.__keepInputValue = true;\n          this._selectedDate = null;\n          this.__keepInputValue = false;\n        }\n      } else if (this._focusedDate) {\n        this._selectedDate = this._focusedDate;\n      }\n      this._ignoreFocusedDateChange = false;\n    }\n\n    /** @protected */\n    _onOverlayClosed() {\n      this._ignoreAnnounce = true;\n\n      window.removeEventListener('scroll', this._boundOnScroll, true);\n      this.removeEventListener('iron-resize', this._boundUpdateAlignmentAndPosition);\n\n      if (this._touchPrevented) {\n        this._touchPrevented.forEach(\n          (prevented) => (prevented.element.style.webkitOverflowScrolling = prevented.oldInlineValue)\n        );\n        this._touchPrevented = [];\n      }\n\n      this.updateStyles();\n\n      this._selectParsedOrFocusedDate();\n\n      if (this._nativeInput && this._nativeInput.selectionStart) {\n        this._nativeInput.selectionStart = this._nativeInput.selectionEnd;\n      }\n      // No need to revalidate the value after `_selectedDateChanged`\n      // Needed in case the value was not changed: open and close dropdown.\n      if (!this.value) {\n        this.validate();\n      }\n    }\n\n    /**\n     * Returns true if `value` is valid, and sets the `invalid` flag appropriately.\n     *\n     * @param {string=} value Value to validate. Optional, defaults to user's input value.\n     * @return {boolean} True if the value is valid and sets the `invalid` flag appropriately\n     */\n    validate() {\n      // Note (Yuriy): Workaround `this._inputValue` is used in order\n      // to avoid breaking change on custom `checkValidity`.\n      // Can be removed with next major.\n      return !(this.invalid = !this.checkValidity(this._inputValue));\n    }\n\n    /**\n     * Returns true if the current input value satisfies all constraints (if any)\n     *\n     * Override the `checkValidity` method for custom validations.\n     *\n     * @param {string=} value Value to validate. Optional, defaults to the selected date.\n     * @return {boolean} True if the value is valid\n     */\n    checkValidity() {\n      const inputValid =\n        !this._inputValue ||\n        (this._selectedDate && this._inputValue === this._getFormattedDate(this.i18n.formatDate, this._selectedDate));\n      const minMaxValid = !this._selectedDate || dateAllowed(this._selectedDate, this._minDate, this._maxDate);\n\n      let inputValidity = true;\n      if (this._inputElement) {\n        if (this._inputElement.checkValidity) {\n          // vaadin native input elements have the checkValidity method\n          this._inputElement.__forceCheckValidity = true;\n          inputValidity = this._inputElement.checkValidity();\n          this._inputElement.__forceCheckValidity = false;\n        } else if (this._inputElement.validate) {\n          // iron-form-elements have the validate API\n          inputValidity = this._inputElement.validate();\n        }\n      }\n\n      return inputValid && minMaxValid && inputValidity;\n    }\n\n    /** @private */\n    _onScroll(e) {\n      if (e.target === window || !this._overlayContent.contains(e.target)) {\n        this._updateAlignmentAndPosition();\n      }\n    }\n\n    /** @protected */\n    _focus() {\n      if (this._noInput) {\n        this._overlayInitialized && this._overlayContent.focus();\n      } else {\n        this._inputElement.focus();\n      }\n    }\n\n    /** @private */\n    _focusAndSelect() {\n      this._focus();\n      this._setSelectionRange(0, this._inputValue.length);\n    }\n\n    /** @private */\n    _applyInputValue(date) {\n      this._inputValue = date ? this._getFormattedDate(this.i18n.formatDate, date) : '';\n    }\n\n    /** @private */\n    _getFormattedDate(formatDate, date) {\n      return formatDate(extractDateParts(date));\n    }\n\n    /** @private */\n    _setSelectionRange(a, b) {\n      if (this._nativeInput && this._nativeInput.setSelectionRange) {\n        this._nativeInput.setSelectionRange(a, b);\n      }\n    }\n\n    /**\n     * Keyboard Navigation\n     * @private\n     */\n    _eventKey(e) {\n      var keys = ['down', 'up', 'enter', 'esc', 'tab'];\n\n      for (var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n        if (IronA11yKeysBehavior.keyboardEventMatchesKeys(e, k)) {\n          return k;\n        }\n      }\n    }\n\n    /** @private */\n    _isValidDate(d) {\n      return d && !isNaN(d.getTime());\n    }\n\n    /** @private */\n    _onKeydown(e) {\n      if (this._noInput) {\n        // The input element cannot be readonly as it would conflict with\n        // the required attribute. Both are not allowed on an input element.\n        // Therefore we prevent default on most keydown events.\n        var allowedKeys = [\n          9 // tab\n        ];\n        if (allowedKeys.indexOf(e.keyCode) === -1) {\n          e.preventDefault();\n        }\n      }\n\n      switch (this._eventKey(e)) {\n        case 'down':\n        case 'up':\n          // prevent scrolling the page with arrows\n          e.preventDefault();\n\n          if (this.opened) {\n            this._overlayContent.focus();\n            this._overlayContent._onKeydown(e);\n          } else {\n            this._focusOverlayOnOpen = true;\n            this.open();\n          }\n\n          break;\n        case 'enter': {\n          const parsedDate = this._getParsedDate();\n          const isValidDate = this._isValidDate(parsedDate);\n          if (this.opened) {\n            if (this._overlayInitialized && this._overlayContent.focusedDate && isValidDate) {\n              this._selectedDate = this._overlayContent.focusedDate;\n            }\n            this.close();\n          } else {\n            if (!isValidDate && this._inputElement.value !== '') {\n              this.validate();\n            } else {\n              const oldValue = this.value;\n              this._selectParsedOrFocusedDate();\n              if (oldValue === this.value) {\n                this.validate();\n              }\n            }\n          }\n          break;\n        }\n        case 'esc':\n          if (this.opened) {\n            this._focusedDate = this._selectedDate;\n            this._close();\n          } else if (this.autoOpenDisabled) {\n            //Do not restore selected date if Esc was pressed after clearing input field\n            if (this._inputElement.value === '') {\n              this._selectedDate = null;\n            }\n            this._applyInputValue(this._selectedDate);\n          } else {\n            this._focusedDate = this._selectedDate;\n            this._selectParsedOrFocusedDate();\n          }\n          break;\n        case 'tab':\n          if (this.opened) {\n            e.preventDefault();\n            //Clear the selection range (remains visible on IE)\n            this._setSelectionRange(0, 0);\n            if (e.shiftKey) {\n              this._overlayContent.focusCancel();\n            } else {\n              this._overlayContent.focus();\n              this._overlayContent.revealDate(this._focusedDate);\n            }\n          }\n          break;\n      }\n    }\n\n    /** @private */\n    _getParsedDate(inputValue = this._inputValue) {\n      const dateObject = this.i18n.parseDate && this.i18n.parseDate(inputValue);\n      const parsedDate =\n        dateObject && this._parseDate(dateObject.year + '-' + (dateObject.month + 1) + '-' + dateObject.day);\n      return parsedDate;\n    }\n\n    /** @private */\n    _onUserInput(e) {\n      if (!this.opened && this._inputElement.value && !this.autoOpenDisabled) {\n        this.open();\n      }\n      this._userInputValueChanged();\n\n      if (e.__fromClearButton) {\n        this.validate();\n        this.__dispatchChange = true;\n        this.value = '';\n        this.__dispatchChange = false;\n      }\n    }\n\n    /** @private */\n    _userInputValueChanged() {\n      if (this.opened && this._inputValue) {\n        const parsedDate = this._getParsedDate();\n\n        if (this._isValidDate(parsedDate)) {\n          this._ignoreFocusedDateChange = true;\n          if (!dateEquals(parsedDate, this._focusedDate)) {\n            this._focusedDate = parsedDate;\n          }\n          this._ignoreFocusedDateChange = false;\n        }\n      }\n    }\n\n    /** @private */\n    _announceFocusedDate(_focusedDate, opened, _ignoreAnnounce) {\n      if (opened && !_ignoreAnnounce) {\n        this._overlayContent.announceFocusedDate();\n      }\n    }\n\n    /** @private */\n    get _overlayContent() {\n      return this.$.overlay.content.querySelector('#overlay-content');\n    }\n\n    /**\n     * Fired when the user commits a value change.\n     *\n     * @event change\n     */\n\n    /**\n     * Fired when `value` property value changes.\n     *\n     * @event value-changed\n     */\n\n    /**\n     * Fired when `opened` property value changes.\n     *\n     * @event opened-changed\n     */\n  };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-date-picker@5.0.0/node_modules/@vaadin/vaadin-date-picker/src/vaadin-month-calendar.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport '@polymer/polymer/lib/elements/dom-repeat.js';\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { dateAllowed, dateEquals, getISOWeekNumber } from './vaadin-date-picker-helper.js';\n\n/**\n * @extends HTMLElement\n * @private\n */\nclass MonthCalendarElement extends ThemableMixin(GestureEventListeners(PolymerElement)) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n\n        [part='weekdays'],\n        #days {\n          display: flex;\n          flex-wrap: wrap;\n          flex-grow: 1;\n        }\n\n        #days-container,\n        #weekdays-container {\n          display: flex;\n        }\n\n        [part='week-numbers'] {\n          display: flex;\n          flex-direction: column;\n          justify-content: space-between;\n          flex-shrink: 0;\n        }\n\n        [part='week-numbers'][hidden],\n        [part='weekday'][hidden] {\n          display: none;\n        }\n\n        [part='weekday'],\n        [part='date'] {\n          /* Would use calc(100% / 7) but it doesn't work nice on IE */\n          width: 14.285714286%;\n        }\n\n        [part='weekday']:empty,\n        [part='week-numbers'] {\n          width: 12.5%;\n          flex-shrink: 0;\n        }\n      </style>\n\n      <div part=\"month-header\" role=\"heading\">[[_getTitle(month, i18n.monthNames)]]</div>\n      <div id=\"monthGrid\" on-tap=\"_handleTap\" on-touchend=\"_preventDefault\" on-touchstart=\"_onMonthGridTouchStart\">\n        <div id=\"weekdays-container\">\n          <div hidden$=\"[[!_showWeekSeparator(showWeekNumbers, i18n.firstDayOfWeek)]]\" part=\"weekday\"></div>\n          <div part=\"weekdays\">\n            <template\n              is=\"dom-repeat\"\n              items=\"[[_getWeekDayNames(i18n.weekdays, i18n.weekdaysShort, showWeekNumbers, i18n.firstDayOfWeek)]]\"\n            >\n              <div part=\"weekday\" role=\"heading\" aria-label$=\"[[item.weekDay]]\">[[item.weekDayShort]]</div>\n            </template>\n          </div>\n        </div>\n        <div id=\"days-container\">\n          <div part=\"week-numbers\" hidden$=\"[[!_showWeekSeparator(showWeekNumbers, i18n.firstDayOfWeek)]]\">\n            <template is=\"dom-repeat\" items=\"[[_getWeekNumbers(_days)]]\">\n              <div part=\"week-number\" role=\"heading\" aria-label$=\"[[i18n.week]] [[item]]\">[[item]]</div>\n            </template>\n          </div>\n          <div id=\"days\">\n            <template is=\"dom-repeat\" items=\"[[_days]]\">\n              <!-- prettier-ignore -->\n              <div\n                part=\"date\"\n                today$=\"[[_isToday(item)]]\"\n                selected$=\"[[_dateEquals(item, selectedDate)]]\"\n                focused$=\"[[_dateEquals(item, focusedDate)]]\"\n                date=\"[[item]]\"\n                disabled$=\"[[!_dateAllowed(item, minDate, maxDate)]]\"\n                role$=\"[[_getRole(item)]]\"\n                aria-label$=\"[[_getAriaLabel(item)]]\"\n                aria-disabled$=\"[[_getAriaDisabled(item, minDate, maxDate)]]\">[[_getDate(item)]]</div>\n            </template>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-month-calendar';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * A `Date` object defining the month to be displayed. Only year and\n       * month properties are actually used.\n       */\n      month: {\n        type: Date,\n        value: new Date()\n      },\n\n      /**\n       * A `Date` object for the currently selected date.\n       */\n      selectedDate: {\n        type: Date,\n        notify: true\n      },\n\n      /**\n       * A `Date` object for the currently focused date.\n       */\n      focusedDate: Date,\n\n      showWeekNumbers: {\n        type: Boolean,\n        value: false\n      },\n\n      i18n: {\n        type: Object\n      },\n\n      /**\n       * Flag stating whether taps on the component should be ignored.\n       */\n      ignoreTaps: Boolean,\n\n      _notTapping: Boolean,\n\n      /**\n       * The earliest date that can be selected. All earlier dates will be disabled.\n       */\n      minDate: {\n        type: Date,\n        value: null\n      },\n\n      /**\n       * The latest date that can be selected. All later dates will be disabled.\n       */\n      maxDate: {\n        type: Date,\n        value: null\n      },\n\n      _days: {\n        type: Array,\n        computed: '_getDays(month, i18n.firstDayOfWeek, minDate, maxDate)'\n      },\n\n      disabled: {\n        type: Boolean,\n        reflectToAttribute: true,\n        computed: '_isDisabled(month, minDate, maxDate)'\n      }\n    };\n  }\n\n  static get observers() {\n    return ['_showWeekNumbersChanged(showWeekNumbers, i18n.firstDayOfWeek)'];\n  }\n\n  _dateEquals(date1, date2) {\n    return dateEquals(date1, date2);\n  }\n\n  _dateAllowed(date, min, max) {\n    return dateAllowed(date, min, max);\n  }\n\n  /* Returns true if all the dates in the month are out of the allowed range */\n  _isDisabled(month, minDate, maxDate) {\n    // First day of the month\n    var firstDate = new Date(0, 0);\n    firstDate.setFullYear(month.getFullYear());\n    firstDate.setMonth(month.getMonth());\n    firstDate.setDate(1);\n\n    // Last day of the month\n    var lastDate = new Date(0, 0);\n    lastDate.setFullYear(month.getFullYear());\n    lastDate.setMonth(month.getMonth() + 1);\n    lastDate.setDate(0);\n\n    if (\n      minDate &&\n      maxDate &&\n      minDate.getMonth() === maxDate.getMonth() &&\n      minDate.getMonth() === month.getMonth() &&\n      maxDate.getDate() - minDate.getDate() >= 0\n    ) {\n      return false;\n    }\n\n    return !this._dateAllowed(firstDate, minDate, maxDate) && !this._dateAllowed(lastDate, minDate, maxDate);\n  }\n\n  _getTitle(month, monthNames) {\n    if (month === undefined || monthNames === undefined) {\n      return;\n    }\n    return this.i18n.formatTitle(monthNames[month.getMonth()], month.getFullYear());\n  }\n\n  _onMonthGridTouchStart() {\n    this._notTapping = false;\n    setTimeout(() => (this._notTapping = true), 300);\n  }\n\n  _dateAdd(date, delta) {\n    date.setDate(date.getDate() + delta);\n  }\n\n  _applyFirstDayOfWeek(weekDayNames, firstDayOfWeek) {\n    if (weekDayNames === undefined || firstDayOfWeek === undefined) {\n      return;\n    }\n\n    return weekDayNames.slice(firstDayOfWeek).concat(weekDayNames.slice(0, firstDayOfWeek));\n  }\n\n  _getWeekDayNames(weekDayNames, weekDayNamesShort, showWeekNumbers, firstDayOfWeek) {\n    if (\n      weekDayNames === undefined ||\n      weekDayNamesShort === undefined ||\n      showWeekNumbers === undefined ||\n      firstDayOfWeek === undefined\n    ) {\n      return;\n    }\n    weekDayNames = this._applyFirstDayOfWeek(weekDayNames, firstDayOfWeek);\n    weekDayNamesShort = this._applyFirstDayOfWeek(weekDayNamesShort, firstDayOfWeek);\n    weekDayNames = weekDayNames.map((day, index) => {\n      return {\n        weekDay: day,\n        weekDayShort: weekDayNamesShort[index]\n      };\n    });\n\n    return weekDayNames;\n  }\n\n  _getDate(date) {\n    return date ? date.getDate() : '';\n  }\n\n  _showWeekNumbersChanged(showWeekNumbers, firstDayOfWeek) {\n    if (showWeekNumbers && firstDayOfWeek === 1) {\n      this.setAttribute('week-numbers', '');\n    } else {\n      this.removeAttribute('week-numbers');\n    }\n  }\n\n  _showWeekSeparator(showWeekNumbers, firstDayOfWeek) {\n    // Currently only supported for locales that start the week on Monday.\n    return showWeekNumbers && firstDayOfWeek === 1;\n  }\n\n  _isToday(date) {\n    return this._dateEquals(new Date(), date);\n  }\n\n  _getDays(month, firstDayOfWeek) {\n    if (month === undefined || firstDayOfWeek === undefined) {\n      return;\n    }\n    // First day of the month (at midnight).\n    var date = new Date(0, 0);\n    date.setFullYear(month.getFullYear());\n    date.setMonth(month.getMonth());\n    date.setDate(1);\n\n    // Rewind to first day of the week.\n    while (date.getDay() !== firstDayOfWeek) {\n      this._dateAdd(date, -1);\n    }\n\n    var days = [];\n    var startMonth = date.getMonth();\n    var targetMonth = month.getMonth();\n    while (date.getMonth() === targetMonth || date.getMonth() === startMonth) {\n      days.push(date.getMonth() === targetMonth ? new Date(date.getTime()) : null);\n\n      // Advance to next day.\n      this._dateAdd(date, 1);\n    }\n    return days;\n  }\n\n  _getWeekNumber(date, days) {\n    if (date === undefined || days === undefined) {\n      return;\n    }\n\n    if (!date) {\n      // Get the first non-null date from the days array.\n      date = days.reduce((acc, d) => {\n        return !acc && d ? d : acc;\n      });\n    }\n\n    return getISOWeekNumber(date);\n  }\n\n  _getWeekNumbers(dates) {\n    return dates\n      .map((date) => this._getWeekNumber(date, dates))\n      .filter((week, index, arr) => arr.indexOf(week) === index);\n  }\n\n  _handleTap(e) {\n    if (!this.ignoreTaps && !this._notTapping && e.target.date && !e.target.hasAttribute('disabled')) {\n      this.selectedDate = e.target.date;\n      this.dispatchEvent(new CustomEvent('date-tap', { bubbles: true, composed: true }));\n    }\n  }\n\n  _preventDefault(e) {\n    e.preventDefault();\n  }\n\n  _getRole(date) {\n    return date ? 'button' : 'presentation';\n  }\n\n  _getAriaLabel(date) {\n    if (!date) {\n      return '';\n    }\n\n    var ariaLabel =\n      this._getDate(date) +\n      ' ' +\n      this.i18n.monthNames[date.getMonth()] +\n      ' ' +\n      date.getFullYear() +\n      ', ' +\n      this.i18n.weekdays[date.getDay()];\n\n    if (this._isToday(date)) {\n      ariaLabel += ', ' + this.i18n.today;\n    }\n\n    return ariaLabel;\n  }\n\n  _getAriaDisabled(date, min, max) {\n    if (date === undefined || min === undefined || max === undefined) {\n      return;\n    }\n    return this._dateAllowed(date, min, max) ? 'false' : 'true';\n  }\n}\n\ncustomElements.define(MonthCalendarElement.is, MonthCalendarElement);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-date-picker@5.0.0/node_modules/@vaadin/vaadin-date-picker/src/vaadin-infinite-scroller.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { timeOut } from '@polymer/polymer/lib/utils/async.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { templatize } from '@polymer/polymer/lib/utils/templatize.js';\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\n\n/**\n * @extends HTMLElement\n * @private\n */\nclass InfiniteScrollerElement extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          overflow: hidden;\n          height: 500px;\n        }\n\n        #scroller {\n          position: relative;\n          height: 100%;\n          overflow: auto;\n          outline: none;\n          margin-right: -40px;\n          -webkit-overflow-scrolling: touch;\n          overflow-x: hidden;\n        }\n\n        #scroller.notouchscroll {\n          -webkit-overflow-scrolling: auto;\n        }\n\n        #scroller::-webkit-scrollbar {\n          display: none;\n        }\n\n        .buffer {\n          position: absolute;\n          width: var(--vaadin-infinite-scroller-buffer-width, 100%);\n          box-sizing: border-box;\n          padding-right: 40px;\n          top: var(--vaadin-infinite-scroller-buffer-offset, 0);\n          animation: fadein 0.2s;\n        }\n\n        @keyframes fadein {\n          from {\n            opacity: 0;\n          }\n          to {\n            opacity: 1;\n          }\n        }\n      </style>\n\n      <div id=\"scroller\" on-scroll=\"_scroll\">\n        <div class=\"buffer\"></div>\n        <div class=\"buffer\"></div>\n        <div id=\"fullHeight\"></div>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-infinite-scroller';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Count of individual items in each buffer.\n       * The scroller has 2 buffers altogether so bufferSize of 20\n       * will result in 40 buffered DOM items in total.\n       * Changing after initialization not supported.\n       */\n      bufferSize: {\n        type: Number,\n        value: 20\n      },\n\n      /**\n       * The amount of initial scroll top. Needed in order for the\n       * user to be able to scroll backwards.\n       */\n      _initialScroll: {\n        value: 500000\n      },\n\n      /**\n       * The index/position mapped at _initialScroll point.\n       */\n      _initialIndex: {\n        value: 0\n      },\n\n      _buffers: Array,\n\n      _preventScrollEvent: Boolean,\n\n      _mayHaveMomentum: Boolean,\n\n      _initialized: Boolean,\n\n      active: {\n        type: Boolean,\n        observer: '_activated'\n      }\n    };\n  }\n\n  ready() {\n    super.ready();\n\n    this._buffers = Array.prototype.slice.call(this.root.querySelectorAll('.buffer'));\n\n    this.$.fullHeight.style.height = this._initialScroll * 2 + 'px';\n\n    const tpl = this.querySelector('template');\n    this._TemplateClass = templatize(tpl, this, {\n      forwardHostProp: function (prop, value) {\n        if (prop !== 'index') {\n          this._buffers.forEach((buffer) => {\n            [].forEach.call(buffer.children, (insertionPoint) => {\n              insertionPoint._itemWrapper.instance[prop] = value;\n            });\n          });\n        }\n      }\n    });\n\n    // Firefox interprets elements with overflow:auto as focusable\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1069739\n    var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n    if (isFirefox) {\n      this.$.scroller.tabIndex = -1;\n    }\n  }\n\n  _activated(active) {\n    if (active && !this._initialized) {\n      this._createPool();\n      this._initialized = true;\n    }\n  }\n\n  _finishInit() {\n    if (!this._initDone) {\n      // Once the first set of items start fading in, stamp the rest\n      this._buffers.forEach((buffer) => {\n        [].forEach.call(buffer.children, (insertionPoint) => this._ensureStampedInstance(insertionPoint._itemWrapper));\n      }, this);\n\n      if (!this._buffers[0].translateY) {\n        this._reset();\n      }\n\n      this._initDone = true;\n    }\n  }\n\n  _translateBuffer(up) {\n    const index = up ? 1 : 0;\n    this._buffers[index].translateY = this._buffers[index ? 0 : 1].translateY + this._bufferHeight * (index ? -1 : 1);\n    this._buffers[index].style.transform = 'translate3d(0, ' + this._buffers[index].translateY + 'px, 0)';\n    this._buffers[index].updated = false;\n    this._buffers.reverse();\n  }\n\n  _scroll() {\n    if (this._scrollDisabled) {\n      return;\n    }\n\n    const scrollTop = this.$.scroller.scrollTop;\n    if (scrollTop < this._bufferHeight || scrollTop > this._initialScroll * 2 - this._bufferHeight) {\n      // Scrolled near the end/beginning of the scrollable area -> reset.\n      this._initialIndex = ~~this.position;\n      this._reset();\n    }\n\n    // Check if we scrolled enough to translate the buffer positions.\n    const bufferOffset = this.root.querySelector('.buffer').offsetTop;\n    const upperThresholdReached = scrollTop > this._buffers[1].translateY + this.itemHeight + bufferOffset;\n    const lowerThresholdReached = scrollTop < this._buffers[0].translateY + this.itemHeight + bufferOffset;\n\n    if (upperThresholdReached || lowerThresholdReached) {\n      this._translateBuffer(lowerThresholdReached);\n      this._updateClones();\n    }\n\n    if (!this._preventScrollEvent) {\n      this.dispatchEvent(new CustomEvent('custom-scroll', { bubbles: false, composed: true }));\n      this._mayHaveMomentum = true;\n    }\n    this._preventScrollEvent = false;\n\n    this._debouncerScrollFinish = Debouncer.debounce(this._debouncerScrollFinish, timeOut.after(200), () => {\n      const scrollerRect = this.$.scroller.getBoundingClientRect();\n      if (!this._isVisible(this._buffers[0], scrollerRect) && !this._isVisible(this._buffers[1], scrollerRect)) {\n        this.position = this.position; // eslint-disable-line no-self-assign\n      }\n    });\n  }\n\n  /**\n   * Current scroller position as index. Can be a fractional number.\n   *\n   * @type {Number}\n   */\n  set position(index) {\n    this._preventScrollEvent = true;\n    if (index > this._firstIndex && index < this._firstIndex + this.bufferSize * 2) {\n      this.$.scroller.scrollTop = this.itemHeight * (index - this._firstIndex) + this._buffers[0].translateY;\n    } else {\n      this._initialIndex = ~~index;\n      this._reset();\n      this._scrollDisabled = true;\n      this.$.scroller.scrollTop += (index % 1) * this.itemHeight;\n      this._scrollDisabled = false;\n    }\n\n    if (this._mayHaveMomentum) {\n      // Stop the possible iOS Safari momentum with -webkit-overflow-scrolling: auto;\n      this.$.scroller.classList.add('notouchscroll');\n      this._mayHaveMomentum = false;\n\n      setTimeout(() => {\n        // Restore -webkit-overflow-scrolling: touch; after a small delay.\n        this.$.scroller.classList.remove('notouchscroll');\n      }, 10);\n    }\n  }\n\n  /**\n   * @private\n   */\n  get position() {\n    return (this.$.scroller.scrollTop - this._buffers[0].translateY) / this.itemHeight + this._firstIndex;\n  }\n\n  get itemHeight() {\n    if (!this._itemHeightVal) {\n      const itemHeight = getComputedStyle(this).getPropertyValue('--vaadin-infinite-scroller-item-height');\n      // Use background-position temp inline style for unit conversion\n      const tmpStyleProp = 'background-position';\n      this.$.fullHeight.style.setProperty(tmpStyleProp, itemHeight);\n      const itemHeightPx = getComputedStyle(this.$.fullHeight).getPropertyValue(tmpStyleProp);\n      this.$.fullHeight.style.removeProperty(tmpStyleProp);\n      this._itemHeightVal = parseFloat(itemHeightPx);\n    }\n\n    return this._itemHeightVal;\n  }\n\n  get _bufferHeight() {\n    return this.itemHeight * this.bufferSize;\n  }\n\n  _reset() {\n    this._scrollDisabled = true;\n    this.$.scroller.scrollTop = this._initialScroll;\n    this._buffers[0].translateY = this._initialScroll - this._bufferHeight;\n    this._buffers[1].translateY = this._initialScroll;\n    this._buffers.forEach((buffer) => {\n      buffer.style.transform = 'translate3d(0, ' + buffer.translateY + 'px, 0)';\n    });\n    this._buffers[0].updated = this._buffers[1].updated = false;\n    this._updateClones(true);\n\n    this._debouncerUpdateClones = Debouncer.debounce(this._debouncerUpdateClones, timeOut.after(200), () => {\n      this._buffers[0].updated = this._buffers[1].updated = false;\n      this._updateClones();\n    });\n\n    this._scrollDisabled = false;\n  }\n\n  _createPool() {\n    const container = this.getBoundingClientRect();\n    this._buffers.forEach((buffer) => {\n      for (let i = 0; i < this.bufferSize; i++) {\n        const itemWrapper = document.createElement('div');\n        itemWrapper.style.height = this.itemHeight + 'px';\n        itemWrapper.instance = {};\n\n        const contentId = (InfiniteScrollerElement._contentIndex = InfiniteScrollerElement._contentIndex + 1 || 0);\n        const slotName = 'vaadin-infinite-scroller-item-content-' + contentId;\n\n        const insertionPoint = document.createElement('slot');\n        insertionPoint.setAttribute('name', slotName);\n        insertionPoint._itemWrapper = itemWrapper;\n        buffer.appendChild(insertionPoint);\n\n        itemWrapper.setAttribute('slot', slotName);\n        this.appendChild(itemWrapper);\n\n        setTimeout(() => {\n          // Only stamp the visible instances first\n          if (this._isVisible(itemWrapper, container)) {\n            this._ensureStampedInstance(itemWrapper);\n          }\n        }, 1); // Wait for first reset\n      }\n    }, this);\n\n    setTimeout(() => {\n      afterNextRender(this, this._finishInit.bind(this));\n    }, 1);\n  }\n\n  _ensureStampedInstance(itemWrapper) {\n    if (itemWrapper.firstElementChild) {\n      return;\n    }\n\n    var tmpInstance = itemWrapper.instance;\n\n    itemWrapper.instance = new this._TemplateClass({});\n    itemWrapper.appendChild(itemWrapper.instance.root);\n\n    Object.keys(tmpInstance).forEach((prop) => {\n      itemWrapper.instance.set(prop, tmpInstance[prop]);\n    });\n  }\n\n  _updateClones(viewPortOnly) {\n    this._firstIndex = ~~((this._buffers[0].translateY - this._initialScroll) / this.itemHeight) + this._initialIndex;\n\n    var scrollerRect = viewPortOnly ? this.$.scroller.getBoundingClientRect() : undefined;\n    this._buffers.forEach((buffer, bufferIndex) => {\n      if (!buffer.updated) {\n        var firstIndex = this._firstIndex + this.bufferSize * bufferIndex;\n\n        [].forEach.call(buffer.children, (insertionPoint, index) => {\n          const itemWrapper = insertionPoint._itemWrapper;\n          if (!viewPortOnly || this._isVisible(itemWrapper, scrollerRect)) {\n            itemWrapper.instance.index = firstIndex + index;\n          }\n        });\n        buffer.updated = true;\n      }\n    }, this);\n  }\n\n  _isVisible(element, container) {\n    var rect = element.getBoundingClientRect();\n    return rect.bottom > container.top && rect.top < container.bottom;\n  }\n}\n\ncustomElements.define(InfiniteScrollerElement.is, InfiniteScrollerElement);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-date-picker@5.0.0/node_modules/@vaadin/vaadin-date-picker/src/vaadin-date-picker-styles.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\n\nregisterStyles(\n  'vaadin-date-picker-overlay',\n  css`\n    :host {\n      align-items: flex-start;\n      justify-content: flex-start;\n    }\n\n    :host([bottom-aligned]) {\n      justify-content: flex-end;\n    }\n\n    :host([right-aligned]) {\n      align-items: flex-end;\n    }\n\n    :host([dir='rtl']) {\n      align-items: flex-end;\n    }\n\n    :host([dir='rtl'][right-aligned]) {\n      align-items: flex-start;\n    }\n\n    [part='overlay'] {\n      display: flex;\n      flex: auto;\n    }\n\n    [part~='content'] {\n      flex: auto;\n    }\n  `,\n  { moduleId: 'vaadin-date-picker-overlay-styles' }\n);\n"
      }
     ]
    },
    {
     "id": 128,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-time-picker@3.0.0/node_modules/@vaadin/vaadin-time-picker/theme/lumo/vaadin-time-picker.js + 3 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-time-picker@3.0.0/node_modules/@vaadin/vaadin-time-picker/theme/lumo/vaadin-time-picker.js",
       "source": "import './vaadin-time-picker-styles.js';\nimport './vaadin-time-picker-text-field-styles.js';\nimport '../../src/vaadin-time-picker.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-time-picker@3.0.0/node_modules/@vaadin/vaadin-time-picker/theme/lumo/vaadin-time-picker-styles.js",
       "source": "import '@vaadin/vaadin-combo-box/theme/lumo/vaadin-combo-box-light.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/field-button.js';\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\n\nregisterStyles(\n  'vaadin-time-picker',\n  css`\n    [part~='toggle-button']::before {\n      content: var(--lumo-icons-clock);\n    }\n  `,\n  { include: ['lumo-field-button'], moduleId: 'lumo-time-picker' }\n);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-time-picker@3.0.0/node_modules/@vaadin/vaadin-time-picker/theme/lumo/vaadin-time-picker-text-field-styles.js",
       "source": "import '@vaadin/vaadin-text-field/theme/lumo/vaadin-text-field.js';\nimport { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\n\nregisterStyles(\n  'vaadin-time-picker-text-field',\n  css`\n    :host([dir='rtl']) [part='value']:placeholder-shown,\n    :host([dir='rtl']) [part='input-field'] ::slotted(input:placeholder-shown) {\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    :host([dir='rtl']) [part='value'],\n    :host([dir='rtl']) [part='input-field'] ::slotted(input) {\n      --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent, #000 1.25em);\n    }\n  `,\n  { moduleId: 'lumo-time-picker-text-field' }\n);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-combo-box@6.0.1/node_modules/@vaadin/vaadin-combo-box/theme/lumo/vaadin-combo-box-light.js",
       "source": "import './vaadin-combo-box-dropdown-styles.js';\nimport './vaadin-combo-box-item-styles.js';\nimport '../../src/vaadin-combo-box-light.js';\n"
      }
     ]
    },
    {
     "id": 129,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-login@2.0.0/node_modules/@vaadin/vaadin-login/theme/lumo/vaadin-login-form.js + 2 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-login@2.0.0/node_modules/@vaadin/vaadin-login/theme/lumo/vaadin-login-form.js",
       "source": "import '@vaadin/vaadin-text-field/theme/lumo/vaadin-text-field.js';\nimport '@vaadin/vaadin-text-field/theme/lumo/vaadin-password-field.js';\nimport './vaadin-login-form-wrapper.js';\nimport './vaadin-login-form-styles.js';\nimport '../../src/vaadin-login-form.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-login@2.0.0/node_modules/@vaadin/vaadin-login/theme/lumo/vaadin-login-form-wrapper.js",
       "source": "import '@vaadin/vaadin-button/theme/lumo/vaadin-button.js';\nimport './vaadin-login-form-wrapper-styles.js';\nimport '../../src/vaadin-login-form-wrapper.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-login@2.0.0/node_modules/@vaadin/vaadin-login/theme/lumo/vaadin-login-form-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\n\nregisterStyles(\n  'vaadin-login-form',\n  css`\n    vaadin-button[part='vaadin-login-submit'] {\n      margin-top: var(--lumo-space-l);\n      margin-bottom: var(--lumo-space-s);\n    }\n  `,\n  { moduleId: 'lumo-login-form' }\n);\n"
      }
     ]
    },
    {
     "id": 130,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-combo-box@6.0.1/node_modules/@vaadin/vaadin-combo-box/src/vaadin-combo-box-dropdown-wrapper.js + 2 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-combo-box@6.0.1/node_modules/@vaadin/vaadin-combo-box/src/vaadin-combo-box-dropdown-wrapper.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport '@polymer/iron-list/iron-list.js';\nimport './vaadin-combo-box-item.js';\nimport './vaadin-combo-box-dropdown.js';\nimport { ComboBoxPlaceholder } from './vaadin-combo-box-placeholder.js';\n\nconst TOUCH_DEVICE = (() => {\n  try {\n    document.createEvent('TouchEvent');\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();\n\n/**\n * Element for internal use only.\n *\n * @extends HTMLElement\n * @private\n */\nclass ComboBoxDropdownWrapperElement extends PolymerElement {\n  static get template() {\n    return html`\n      <vaadin-combo-box-dropdown\n        id=\"dropdown\"\n        hidden=\"[[_hidden(_items.*, loading)]]\"\n        position-target=\"[[positionTarget]]\"\n        on-position-changed=\"_setOverlayHeight\"\n        disable-upgrade=\"\"\n        theme=\"[[theme]]\"\n      >\n        <template>\n          <style>\n            #scroller {\n              overflow: auto;\n\n              /* Fixes item background from getting on top of scrollbars on Safari */\n              transform: translate3d(0, 0, 0);\n\n              /* Enable momentum scrolling on iOS (iron-list v1.2+ no longer does it for us) */\n              -webkit-overflow-scrolling: touch;\n\n              /* Fixes scrollbar disappearing when 'Show scroll bars: Always' enabled in Safari */\n              box-shadow: 0 0 0 white;\n            }\n          </style>\n          <div id=\"scroller\" on-click=\"_stopPropagation\">\n            <iron-list id=\"selector\" role=\"listbox\" items=\"[[_getItems(opened, _items)]]\" scroll-target=\"[[_scroller]]\">\n              <template>\n                <vaadin-combo-box-item\n                  on-click=\"_onItemClick\"\n                  index=\"[[__requestItemByIndex(item, index, _resetScrolling)]]\"\n                  item=\"[[item]]\"\n                  label=\"[[getItemLabel(item, _itemLabelPath)]]\"\n                  selected=\"[[_isItemSelected(item, _selectedItem, _itemIdPath)]]\"\n                  renderer=\"[[renderer]]\"\n                  role$=\"[[_getAriaRole(index)]]\"\n                  aria-selected$=\"[[_getAriaSelected(_focusedIndex,index)]]\"\n                  focused=\"[[_isItemFocused(_focusedIndex,index)]]\"\n                  tabindex=\"-1\"\n                  theme$=\"[[theme]]\"\n                ></vaadin-combo-box-item>\n              </template>\n            </iron-list>\n          </div>\n        </template>\n      </vaadin-combo-box-dropdown>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-combo-box-dropdown-wrapper';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * True if the device supports touch events.\n       */\n      touchDevice: {\n        type: Boolean,\n        value: TOUCH_DEVICE\n      },\n\n      opened: Boolean,\n\n      /**\n       * The element to position/align the dropdown by.\n       */\n      positionTarget: {\n        type: Object\n      },\n\n      /**\n       * Custom function for rendering the content of the `<vaadin-combo-box-item>` propagated from the combo box element.\n       */\n      renderer: Function,\n\n      /**\n       * `true` when new items are being loaded.\n       */\n      loading: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        observer: '_setOverlayHeight'\n      },\n\n      /**\n       * Used to propagate the `theme` attribute from the host element.\n       */\n      theme: String,\n\n      /**\n       * Used to recognize if the filter changed, so to skip the\n       * scrolling restore. If true, then scroll to 0 position. Restore\n       * the previous position otherwise.\n       */\n      filterChanged: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Used to recognize scroller reset after new items have been set\n       * to iron-list and to ignore unwanted pages load. If 'true', then\n       * skip loading of the pages until it becomes 'false'.\n       */\n      _resetScrolling: {\n        type: Boolean,\n        value: false\n      },\n\n      _selectedItem: {\n        type: Object\n      },\n\n      _items: {\n        type: Object\n      },\n\n      _focusedIndex: {\n        type: Number,\n        value: -1,\n        observer: '_focusedIndexChanged'\n      },\n\n      _focusedItem: {\n        type: String,\n        computed: '_getFocusedItem(_focusedIndex)'\n      },\n\n      _itemLabelPath: {\n        type: String,\n        value: 'label'\n      },\n\n      _itemValuePath: {\n        type: String,\n        value: 'value'\n      },\n\n      _selector: Object,\n\n      _itemIdPath: String,\n\n      /**\n       * Stores the scroller position before updating the 'items', in\n       * order to restore it immediately after 'items' have been updated\n       */\n      _oldScrollerPosition: {\n        type: Number,\n        value: 0\n      }\n    };\n  }\n\n  static get observers() {\n    return ['_loadingChanged(loading)', '_openedChanged(opened, _items, loading)', '_restoreScrollerPosition(_items)'];\n  }\n\n  _fireTouchAction(sourceEvent) {\n    this.dispatchEvent(\n      new CustomEvent('vaadin-overlay-touch-action', {\n        detail: { sourceEvent: sourceEvent }\n      })\n    );\n  }\n\n  _getItems(opened, items) {\n    if (opened) {\n      if (this._isNotEmpty(items) && this._selector && !this.filterChanged) {\n        // iron-list triggers the scroller's reset after items update, and\n        // this is not appropriate for undefined size lazy loading.\n        // see https://github.com/vaadin/vaadin-combo-box-flow/issues/386\n        // We store iron-list scrolling position in order to restore\n        // it later on after the items have been updated.\n        const currentScrollerPosition = this._selector.firstVisibleIndex;\n        if (currentScrollerPosition !== 0) {\n          this._oldScrollerPosition = currentScrollerPosition;\n          this._resetScrolling = true;\n        }\n      }\n      // Let the position to be restored in the future calls unless it's not\n      // caused by filtering\n      this.filterChanged = false;\n      return items;\n    }\n    return [];\n  }\n\n  _restoreScrollerPosition(items) {\n    if (this._isNotEmpty(items) && this._selector && this._oldScrollerPosition !== 0) {\n      // new items size might be less than old scrolling position\n      this._scrollIntoView(Math.min(items.length - 1, this._oldScrollerPosition));\n      this._resetScrolling = false;\n      // reset position to 0 again in order to properly handle the filter\n      // cases (scroll to 0 after typing the filter)\n      this._oldScrollerPosition = 0;\n    }\n  }\n\n  _isNotEmpty(items) {\n    return !this._isEmpty(items);\n  }\n\n  _isEmpty(items) {\n    return !items || !items.length;\n  }\n\n  _openedChanged(opened, items, loading) {\n    if (this.$.dropdown.hasAttribute('disable-upgrade')) {\n      if (!opened) {\n        return;\n      } else {\n        this._initDropdown();\n      }\n    }\n\n    if (this._isEmpty(items)) {\n      this.$.dropdown.__emptyItems = true;\n    }\n    this.$.dropdown.opened = !!(opened && (loading || this._isNotEmpty(items)));\n    this.$.dropdown.__emptyItems = false;\n  }\n\n  _initDropdown() {\n    this.$.dropdown.removeAttribute('disable-upgrade');\n\n    this._selector = this.$.dropdown.$.overlay.content.querySelector('#selector');\n    this._scroller = this.$.dropdown.$.overlay.content.querySelector('#scroller');\n\n    this._patchWheelOverScrolling();\n\n    this._loadingChanged(this.loading);\n\n    this.$.dropdown.$.overlay.addEventListener('touchend', (e) => this._fireTouchAction(e));\n    this.$.dropdown.$.overlay.addEventListener('touchmove', (e) => this._fireTouchAction(e));\n\n    // Prevent blurring the input when clicking inside the overlay.\n    this.$.dropdown.$.overlay.addEventListener('mousedown', (e) => e.preventDefault());\n  }\n\n  _loadingChanged(loading) {\n    if (this.$.dropdown.hasAttribute('disable-upgrade')) {\n      return;\n    }\n\n    if (loading) {\n      this.$.dropdown.$.overlay.setAttribute('loading', '');\n    } else {\n      this.$.dropdown.$.overlay.removeAttribute('loading');\n    }\n  }\n\n  _setOverlayHeight() {\n    if (!this.opened || !this.positionTarget) {\n      return;\n    }\n\n    const targetRect = this.positionTarget.getBoundingClientRect();\n\n    this._scroller.style.maxHeight =\n      getComputedStyle(this).getPropertyValue('--vaadin-combo-box-overlay-max-height') || '65vh';\n\n    const maxHeight = this._maxOverlayHeight(targetRect);\n\n    // overlay max height is restrained by the #scroller max height which is set to 65vh in CSS.\n    this.$.dropdown.$.overlay.style.maxHeight = maxHeight;\n\n    // we need to set height for iron-list to make its `firstVisibleIndex` work correctly.\n    this._selector.style.maxHeight = maxHeight;\n\n    this.updateViewportBoundaries();\n  }\n\n  _maxOverlayHeight(targetRect) {\n    const margin = 8;\n    const minHeight = 116; // Height of two items in combo-box\n    if (this.$.dropdown.alignedAbove) {\n      return Math.max(targetRect.top - margin + Math.min(document.body.scrollTop, 0), minHeight) + 'px';\n    } else {\n      return Math.max(document.documentElement.clientHeight - targetRect.bottom - margin, minHeight) + 'px';\n    }\n  }\n\n  _getFocusedItem(focusedIndex) {\n    if (focusedIndex >= 0) {\n      return this._items[focusedIndex];\n    }\n  }\n\n  _isItemSelected(item, selectedItem, itemIdPath) {\n    if (item instanceof ComboBoxPlaceholder) {\n      return false;\n    } else if (itemIdPath && item !== undefined && selectedItem !== undefined) {\n      return this.get(itemIdPath, item) === this.get(itemIdPath, selectedItem);\n    } else {\n      return item === selectedItem;\n    }\n  }\n\n  _onItemClick(e) {\n    this.dispatchEvent(new CustomEvent('selection-changed', { detail: { item: e.model.item } }));\n  }\n\n  /**\n   * Gets the index of the item with the provided label.\n   * @return {number}\n   */\n  indexOfLabel(label) {\n    if (this._items && label) {\n      for (let i = 0; i < this._items.length; i++) {\n        if (this.getItemLabel(this._items[i]).toString().toLowerCase() === label.toString().toLowerCase()) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  /**\n   * If dataProvider is used, dispatch a request for the item’s index if\n   * the item is a placeholder object.\n   *\n   * @return {number}\n   */\n  __requestItemByIndex(item, index, resetScrolling) {\n    if (item instanceof ComboBoxPlaceholder && index !== undefined && !resetScrolling) {\n      this.dispatchEvent(\n        new CustomEvent('index-requested', { detail: { index, currentScrollerPos: this._oldScrollerPosition } })\n      );\n    }\n\n    return index;\n  }\n\n  /**\n   * Gets the label string for the item based on the `_itemLabelPath`.\n   * @return {string}\n   */\n  getItemLabel(item, itemLabelPath) {\n    itemLabelPath = itemLabelPath || this._itemLabelPath;\n    let label = item && itemLabelPath ? this.get(itemLabelPath, item) : undefined;\n    if (label === undefined || label === null) {\n      label = item ? item.toString() : '';\n    }\n    return label;\n  }\n\n  _isItemFocused(focusedIndex, itemIndex) {\n    return focusedIndex == itemIndex;\n  }\n\n  _getAriaSelected(focusedIndex, itemIndex) {\n    return this._isItemFocused(focusedIndex, itemIndex).toString();\n  }\n\n  _getAriaRole(itemIndex) {\n    return itemIndex !== undefined ? 'option' : false;\n  }\n\n  _focusedIndexChanged(index) {\n    if (index >= 0) {\n      this._scrollIntoView(index);\n    }\n  }\n\n  _scrollIntoView(index) {\n    if (!(this.opened && index >= 0)) {\n      return;\n    }\n    const visibleItemsCount = this._visibleItemsCount();\n\n    let targetIndex = index;\n\n    if (index > this._selector.lastVisibleIndex - 1) {\n      // Index is below the bottom, scrolling down. Make the item appear at the bottom.\n      // First scroll to target (will be at the top of the scroller) to make sure it's rendered.\n      this._selector.scrollToIndex(index);\n      // Then calculate the index for the following scroll (to get the target to bottom of the scroller).\n      targetIndex = index - visibleItemsCount + 1;\n    } else if (index > this._selector.firstVisibleIndex) {\n      // The item is already visible, scrolling is unnecessary per se. But we need to trigger iron-list to set\n      // the correct scrollTop on the scrollTarget. Scrolling to firstVisibleIndex.\n      targetIndex = this._selector.firstVisibleIndex;\n    }\n    this._selector.scrollToIndex(Math.max(0, targetIndex));\n\n    // Sometimes the item is partly below the bottom edge, detect and adjust.\n    const pidx = this._selector._getPhysicalIndex(index),\n      physicalItem = this._selector._physicalItems[pidx];\n    if (!physicalItem) {\n      return;\n    }\n    const physicalItemRect = physicalItem.getBoundingClientRect(),\n      scrollerRect = this._scroller.getBoundingClientRect(),\n      scrollTopAdjust = physicalItemRect.bottom - scrollerRect.bottom + this._viewportTotalPaddingBottom;\n    if (scrollTopAdjust > 0) {\n      this._scroller.scrollTop += scrollTopAdjust;\n    }\n  }\n\n  ensureItemsRendered() {\n    this._selector._render();\n  }\n\n  adjustScrollPosition() {\n    if (this.opened && this._items) {\n      this._scrollIntoView(this._focusedIndex);\n    }\n  }\n\n  /**\n   * We want to prevent the kinetic scrolling energy from being transferred from the overlay contents over to the parent.\n   * Further improvement ideas: after the contents have been scrolled to the top or bottom and scrolling has stopped, it could allow\n   * scrolling the parent similarly to touch scrolling.\n   */\n  _patchWheelOverScrolling() {\n    const selector = this._selector;\n    selector.addEventListener('wheel', (e) => {\n      const scroller = selector._scroller || selector.scrollTarget;\n      const scrolledToTop = scroller.scrollTop === 0;\n      const scrolledToBottom = scroller.scrollHeight - scroller.scrollTop - scroller.clientHeight <= 1;\n\n      if (scrolledToTop && e.deltaY < 0) {\n        e.preventDefault();\n      } else if (scrolledToBottom && e.deltaY > 0) {\n        e.preventDefault();\n      }\n    });\n  }\n\n  updateViewportBoundaries() {\n    this._cachedViewportTotalPaddingBottom = undefined;\n    this._selector.updateViewportBoundaries();\n  }\n\n  get _viewportTotalPaddingBottom() {\n    if (this._cachedViewportTotalPaddingBottom === undefined) {\n      const itemsStyle = window.getComputedStyle(this._selector.$.items);\n      this._cachedViewportTotalPaddingBottom = [itemsStyle.paddingBottom, itemsStyle.borderBottomWidth]\n        .map((v) => {\n          return parseInt(v, 10);\n        })\n        .reduce((sum, v) => {\n          return sum + v;\n        });\n    }\n\n    return this._cachedViewportTotalPaddingBottom;\n  }\n\n  _visibleItemsCount() {\n    // Ensure items are positioned\n    this._selector.scrollToIndex(this._selector.firstVisibleIndex);\n    // Ensure viewport boundaries are up-to-date\n    this.updateViewportBoundaries();\n    return this._selector.lastVisibleIndex - this._selector.firstVisibleIndex + 1;\n  }\n\n  _stopPropagation(e) {\n    e.stopPropagation();\n  }\n\n  _hidden() {\n    return !this.loading && this._isEmpty(this._items);\n  }\n}\n\ncustomElements.define(ComboBoxDropdownWrapperElement.is, ComboBoxDropdownWrapperElement);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-combo-box@6.0.1/node_modules/@vaadin/vaadin-combo-box/src/vaadin-combo-box-item.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { DirMixin } from '@vaadin/vaadin-element-mixin/vaadin-dir-mixin.js';\n\n/**\n * The default element used for items in the vaadin-combo-box.\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ---|---\n * `content` | The element that wraps the item label or template content\n *\n * The following state attributes are exposed for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `selected` | Set when the item is selected | :host\n * `focused` | Set when the item is focused | :host\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @mixes ThemableMixin\n * @private\n */\nclass ComboBoxItemElement extends ThemableMixin(DirMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n\n        :host([hidden]) {\n          display: none;\n        }\n      </style>\n      <div part=\"content\" id=\"content\"></div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-combo-box-item';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * The index of the item\n       */\n      index: Number,\n\n      /**\n       * The item to render\n       * @type {(String|Object)}\n       */\n      item: Object,\n\n      /**\n       * The text label corresponding to the item\n       */\n      label: String,\n\n      /**\n       * True when item is selected\n       */\n      selected: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * True when item is focused\n       */\n      focused: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * The template instance corresponding to the item\n       */\n      _itemTemplateInstance: Object,\n\n      /**\n       * Custom function for rendering the content of the `<vaadin-combo-box-item>` propagated from the combo box element.\n       */\n      renderer: Function,\n\n      /**\n       * Saved instance of a custom renderer function.\n       */\n      _oldRenderer: Function\n    };\n  }\n\n  static get observers() {\n    return [\n      '_rendererOrItemChanged(renderer, index, item.*)',\n      '_updateLabel(label, _itemTemplateInstance)',\n      '_updateTemplateInstanceVariable(\"index\", index, _itemTemplateInstance)',\n      '_updateTemplateInstanceVariable(\"item\", item, _itemTemplateInstance)',\n      '_updateTemplateInstanceVariable(\"selected\", selected, _itemTemplateInstance)',\n      '_updateTemplateInstanceVariable(\"focused\", focused, _itemTemplateInstance)'\n    ];\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    if (!this._itemTemplateInstance) {\n      // 2.0 has __dataHost. Might want to consider assigning combobox reference directly to item.\n      const overlay = this.getRootNode().host.getRootNode().host;\n      const dropdown = overlay.__dataHost;\n      const comboBoxOverlay = dropdown.getRootNode().host;\n      this._comboBox = comboBoxOverlay.getRootNode().host;\n      this._comboBox._ensureTemplatized();\n      if (this._comboBox._TemplateClass) {\n        this._itemTemplateInstance = new this._comboBox._TemplateClass({});\n        this.$.content.textContent = '';\n        this.$.content.appendChild(this._itemTemplateInstance.root);\n      }\n    }\n\n    const hostDir = this._comboBox.getAttribute('dir');\n    if (hostDir) {\n      this.setAttribute('dir', hostDir);\n    }\n  }\n\n  _render() {\n    if (!this.renderer) {\n      return;\n    }\n\n    const model = {\n      index: this.index,\n      item: this.item\n    };\n\n    this.renderer(this.$.content, this._comboBox, model);\n  }\n\n  _rendererOrItemChanged(renderer, index, item) {\n    if (item === undefined || index === undefined) {\n      return;\n    }\n\n    if (this._oldRenderer !== renderer) {\n      this.$.content.innerHTML = '';\n    }\n\n    if (renderer) {\n      this._oldRenderer = renderer;\n      this._render();\n    }\n  }\n\n  _updateLabel(label, _itemTemplateInstance) {\n    if (_itemTemplateInstance === undefined && this.$.content && !this.renderer) {\n      // Only set label to textContent no template\n      this.$.content.textContent = label;\n    }\n  }\n\n  _updateTemplateInstanceVariable(variable, value, _itemTemplateInstance) {\n    if (variable === undefined || value === undefined || _itemTemplateInstance === undefined) {\n      return;\n    }\n    _itemTemplateInstance[variable] = value;\n  }\n}\n\ncustomElements.define(ComboBoxItemElement.is, ComboBoxItemElement);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-combo-box@6.0.1/node_modules/@vaadin/vaadin-combo-box/src/vaadin-combo-box-dropdown.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { mixinBehaviors } from '@polymer/polymer/lib/legacy/class.js';\nimport { DisableUpgradeMixin } from '@polymer/polymer/lib/mixins/disable-upgrade-mixin.js';\nimport { OverlayElement } from '@vaadin/vaadin-overlay/src/vaadin-overlay.js';\nimport { IronResizableBehavior } from '@polymer/iron-resizable-behavior/iron-resizable-behavior.js';\nimport { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\n\nregisterStyles(\n  'vaadin-combo-box-overlay',\n  css`\n    :host {\n      width: var(--vaadin-combo-box-overlay-width, var(--_vaadin-combo-box-overlay-default-width, auto));\n    }\n  `,\n  { moduleId: 'vaadin-combo-box-overlay-styles' }\n);\n\n/**\n * The overlay element.\n *\n * ### Styling\n *\n * See [`<vaadin-overlay>` documentation](https://github.com/vaadin/vaadin-overlay/blob/master/src/vaadin-overlay.html)\n * for `<vaadin-combo-box-overlay>` parts.\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @private\n */\nclass ComboBoxOverlayElement extends OverlayElement {\n  static get is() {\n    return 'vaadin-combo-box-overlay';\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    const dropdown = this.__dataHost;\n    const comboBoxOverlay = dropdown.getRootNode().host;\n    const comboBox = comboBoxOverlay && comboBoxOverlay.getRootNode().host;\n    const hostDir = comboBox && comboBox.getAttribute('dir');\n    if (hostDir) {\n      this.setAttribute('dir', hostDir);\n    }\n  }\n\n  ready() {\n    super.ready();\n    const loader = document.createElement('div');\n    loader.setAttribute('part', 'loader');\n    const content = this.shadowRoot.querySelector('[part~=\"content\"]');\n    content.parentNode.insertBefore(loader, content);\n  }\n}\n\ncustomElements.define(ComboBoxOverlayElement.is, ComboBoxOverlayElement);\n\n/**\n * Element for internal use only.\n *\n * @extends HTMLElement\n * @private\n */\nclass ComboBoxDropdownElement extends DisableUpgradeMixin(mixinBehaviors(IronResizableBehavior, PolymerElement)) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n\n        :host > #overlay {\n          display: none;\n        }\n      </style>\n      <vaadin-combo-box-overlay\n        id=\"overlay\"\n        hidden$=\"[[hidden]]\"\n        opened=\"[[opened]]\"\n        style=\"align-items: stretch; margin: 0;\"\n        theme$=\"[[theme]]\"\n      >\n        <slot></slot>\n      </vaadin-combo-box-overlay>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-combo-box-dropdown';\n  }\n\n  static get properties() {\n    return {\n      opened: {\n        type: Boolean,\n        observer: '_openedChanged'\n      },\n\n      /**\n       * The element to position/align the dropdown by.\n       */\n      positionTarget: {\n        type: Object\n      },\n\n      /**\n       * If `true`, overlay is aligned above the `positionTarget`\n       */\n      alignedAbove: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Used to propagate the `theme` attribute from the host element.\n       */\n      theme: String\n    };\n  }\n\n  constructor() {\n    super();\n    this._boundSetPosition = this._setPosition.bind(this);\n    this._boundOutsideClickListener = this._outsideClickListener.bind(this);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener('iron-resize', this._boundSetPosition);\n  }\n\n  ready() {\n    super.ready();\n\n    // Preventing the default modal behaviour of the overlay on input clicking\n    this.$.overlay.addEventListener('vaadin-overlay-outside-click', (e) => {\n      e.preventDefault();\n    });\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.removeEventListener('iron-resize', this._boundSetPosition);\n\n    // Making sure the overlay is closed and removed from DOM after detaching the dropdown.\n    this.opened = false;\n  }\n\n  notifyResize() {\n    super.notifyResize();\n\n    if (this.positionTarget && this.opened) {\n      this._setPosition();\n      // Schedule another position update (to cover virtual keyboard opening for example)\n      requestAnimationFrame(this._setPosition.bind(this));\n    }\n  }\n\n  /**\n   * Fired after the `vaadin-combo-box-dropdown` opens.\n   *\n   * @event vaadin-combo-box-dropdown-opened\n   */\n  /**\n   * Fired after the `vaadin-combo-box-dropdown` closes.\n   *\n   * @event vaadin-combo-box-dropdown-closed\n   */\n\n  _openedChanged(opened, oldValue) {\n    if (!!opened === !!oldValue) {\n      return;\n    }\n\n    if (opened) {\n      this.$.overlay.style.position = this._isPositionFixed(this.positionTarget) ? 'fixed' : 'absolute';\n      this._setPosition();\n\n      window.addEventListener('scroll', this._boundSetPosition, true);\n      document.addEventListener('click', this._boundOutsideClickListener, true);\n      this.dispatchEvent(new CustomEvent('vaadin-combo-box-dropdown-opened', { bubbles: true, composed: true }));\n    } else if (!this.__emptyItems) {\n      window.removeEventListener('scroll', this._boundSetPosition, true);\n      document.removeEventListener('click', this._boundOutsideClickListener, true);\n      this.dispatchEvent(new CustomEvent('vaadin-combo-box-dropdown-closed', { bubbles: true, composed: true }));\n    }\n  }\n\n  // We need to listen on 'click' event and capture it and close the overlay before\n  // propagating the event to the listener in the button. Otherwise, if the clicked button would call\n  // open(), this would happen: https://www.youtube.com/watch?v=Z86V_ICUCD4\n  _outsideClickListener(event) {\n    const eventPath = event.composedPath();\n    if (eventPath.indexOf(this.positionTarget) < 0 && eventPath.indexOf(this.$.overlay) < 0) {\n      this.opened = false;\n    }\n  }\n\n  _isPositionFixed(element) {\n    const offsetParent = this._getOffsetParent(element);\n\n    return (\n      window.getComputedStyle(element).position === 'fixed' || (offsetParent && this._isPositionFixed(offsetParent))\n    );\n  }\n\n  _getOffsetParent(element) {\n    if (element.assignedSlot) {\n      return element.assignedSlot.parentElement;\n    } else if (element.parentElement) {\n      return element.offsetParent;\n    }\n\n    const parent = element.parentNode;\n\n    if (parent && parent.nodeType === 11 && parent.host) {\n      return parent.host; // parent is #shadowRoot\n    }\n  }\n\n  _verticalOffset(overlayRect, targetRect) {\n    return this.alignedAbove ? -overlayRect.height : targetRect.height;\n  }\n\n  _shouldAlignAbove(targetRect) {\n    const spaceBelow =\n      (window.innerHeight - targetRect.bottom - Math.min(document.body.scrollTop, 0)) / window.innerHeight;\n\n    return spaceBelow < 0.3;\n  }\n\n  _setOverlayWidth() {\n    const inputWidth = this.positionTarget.clientWidth + 'px';\n    const customWidth = getComputedStyle(this).getPropertyValue('--vaadin-combo-box-overlay-width');\n\n    this.$.overlay.style.setProperty('--_vaadin-combo-box-overlay-default-width', inputWidth);\n\n    if (customWidth === '') {\n      this.$.overlay.style.removeProperty('--vaadin-combo-box-overlay-width');\n    } else {\n      this.$.overlay.style.setProperty('--vaadin-combo-box-overlay-width', customWidth);\n    }\n  }\n\n  _setPosition(e) {\n    if (this.hidden) {\n      return;\n    }\n    if (e && e.target) {\n      const target = e.target === document ? document.body : e.target;\n      const parent = this.$.overlay.parentElement;\n      if (!(target.contains(this.$.overlay) || target.contains(this.positionTarget)) || parent !== document.body) {\n        return;\n      }\n    }\n\n    const targetRect = this.positionTarget.getBoundingClientRect();\n    this.alignedAbove = this._shouldAlignAbove(targetRect);\n\n    const overlayRect = this.$.overlay.getBoundingClientRect();\n    this._translateX = targetRect.left - overlayRect.left + (this._translateX || 0);\n    this._translateY =\n      targetRect.top - overlayRect.top + (this._translateY || 0) + this._verticalOffset(overlayRect, targetRect);\n\n    const _devicePixelRatio = window.devicePixelRatio || 1;\n    this._translateX = Math.round(this._translateX * _devicePixelRatio) / _devicePixelRatio;\n    this._translateY = Math.round(this._translateY * _devicePixelRatio) / _devicePixelRatio;\n    this.$.overlay.style.transform = `translate3d(${this._translateX}px, ${this._translateY}px, 0)`;\n\n    this.$.overlay.style.justifyContent = this.alignedAbove ? 'flex-end' : 'flex-start';\n\n    this._setOverlayWidth();\n\n    // TODO: fire only when position actually changes changes\n    this.dispatchEvent(new CustomEvent('position-changed'));\n  }\n}\n\ncustomElements.define(ComboBoxDropdownElement.is, ComboBoxDropdownElement);\n"
      }
     ]
    },
    {
     "id": 132,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-avatar@2.0.2/node_modules/@vaadin/vaadin-avatar/theme/lumo/vaadin-avatar.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-avatar@2.0.2/node_modules/@vaadin/vaadin-avatar/theme/lumo/vaadin-avatar.js",
       "source": "import './vaadin-avatar-styles.js';\nimport '../../src/vaadin-avatar.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-avatar@2.0.2/node_modules/@vaadin/vaadin-avatar/theme/lumo/vaadin-avatar-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\n\nregisterStyles(\n  'vaadin-avatar',\n  css`\n    :host {\n      --vaadin-avatar-size: var(--lumo-size-m);\n      color: var(--lumo-secondary-text-color);\n      background-color: var(--lumo-contrast-10pct);\n      border-radius: 50%;\n      outline: none;\n      cursor: default;\n      user-select: none;\n      -webkit-tap-highlight-color: transparent;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n    }\n\n    :host([has-color-index]) {\n      color: var(--lumo-base-color);\n    }\n\n    :host([focus-ring]) {\n      border-color: var(--lumo-primary-color-50pct);\n    }\n\n    [part='icon'],\n    [part='abbr'] {\n      fill: currentColor;\n    }\n\n    [part='abbr'] {\n      font-family: var(--lumo-font-family);\n      font-size: 2.4375em;\n      font-weight: 500;\n    }\n\n    :host([theme~='xlarge']) [part='abbr'] {\n      font-size: 2.5em;\n    }\n\n    :host([theme~='large']) [part='abbr'] {\n      font-size: 2.375em;\n    }\n\n    :host([theme~='small']) [part='abbr'] {\n      font-size: 2.75em;\n    }\n\n    :host([theme~='xsmall']) [part='abbr'] {\n      font-size: 3em;\n    }\n\n    :host([theme~='xlarge']) {\n      --vaadin-avatar-size: var(--lumo-size-xl);\n    }\n\n    :host([theme~='large']) {\n      --vaadin-avatar-size: var(--lumo-size-l);\n    }\n\n    :host([theme~='small']) {\n      --vaadin-avatar-size: var(--lumo-size-s);\n    }\n\n    :host([theme~='xsmall']) {\n      --vaadin-avatar-size: var(--lumo-size-xs);\n    }\n  `,\n  { moduleId: 'lumo-avatar' }\n);\n"
      }
     ]
    },
    {
     "id": 133,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-custom-field@2.0.0/node_modules/@vaadin/vaadin-custom-field/theme/lumo/vaadin-custom-field.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-custom-field@2.0.0/node_modules/@vaadin/vaadin-custom-field/theme/lumo/vaadin-custom-field.js",
       "source": "import './vaadin-custom-field-styles.js';\nimport '../../src/vaadin-custom-field.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-custom-field@2.0.0/node_modules/@vaadin/vaadin-custom-field/theme/lumo/vaadin-custom-field-styles.js",
       "source": "import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/required-field.js';\nimport { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\n\nregisterStyles(\n  'vaadin-custom-field',\n  css`\n    :host {\n      --lumo-text-field-size: var(--lumo-size-m);\n      color: var(--lumo-body-text-color);\n      font-size: var(--lumo-font-size-m);\n      /* align with text-field height + vertical paddings */\n      line-height: calc(var(--lumo-text-field-size) + 2 * var(--lumo-space-xs));\n      font-family: var(--lumo-font-family);\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n      -webkit-tap-highlight-color: transparent;\n      padding: 0;\n    }\n\n    :host::before {\n      margin-top: var(--lumo-space-xs);\n      height: var(--lumo-text-field-size);\n      box-sizing: border-box;\n      display: inline-flex;\n      align-items: center;\n    }\n\n    /* align with text-field label */\n    :host([has-label]) [part='label'] {\n      padding-bottom: calc(0.5em - var(--lumo-space-xs));\n    }\n\n    :host(:not([has-label])) [part='label'],\n    :host(:not([has-label]))::before {\n      display: none;\n    }\n\n    /* align with text-field error message */\n    :host([invalid]) [part='error-message']:not(:empty)::before {\n      height: calc(0.4em - var(--lumo-space-xs));\n    }\n\n    :host([focused]:not([readonly]):not([disabled])) [part='label'] {\n      color: var(--lumo-primary-text-color);\n    }\n\n    :host(:hover:not([readonly]):not([disabled]):not([focused])) [part='label'],\n    :host(:hover:not([readonly]):not([disabled]):not([focused])) [part='helper-text'],\n    :host(:hover:not([readonly]):not([disabled]):not([focused])) [part='helper-text'] ::slotted(*) {\n      color: var(--lumo-body-text-color);\n    }\n\n    :host([has-helper]) [part='helper-text']::before {\n      content: '';\n      display: block;\n      height: 0.4em;\n    }\n\n    [part='helper-text'],\n    [part='helper-text'] ::slotted(*) {\n      display: block;\n      color: var(--lumo-secondary-text-color);\n      font-size: var(--lumo-font-size-xs);\n      line-height: var(--lumo-line-height-xs);\n      margin-left: calc(var(--lumo-border-radius-m) / 4);\n      transition: color 0.2s;\n    }\n\n    /* helper-text position */\n\n    :host([has-helper][theme~='helper-above-field']) [part='helper-text']::before {\n      display: none;\n    }\n\n    :host([has-helper][theme~='helper-above-field']) [part='helper-text']::after {\n      content: '';\n      display: block;\n      height: 0.4em;\n    }\n\n    :host([has-helper][theme~='helper-above-field']) [part='label'] {\n      order: 0;\n      padding-bottom: 0.4em;\n    }\n\n    :host([has-helper][theme~='helper-above-field']) [part='helper-text'] {\n      order: 1;\n    }\n\n    :host([has-helper][theme~='helper-above-field']) .inputs-wrapper {\n      order: 2;\n    }\n\n    :host([has-helper][theme~='helper-above-field']) [part='error-message'] {\n      order: 3;\n    }\n\n    /* Touch device adjustment */\n    @media (pointer: coarse) {\n      :host(:hover:not([readonly]):not([disabled]):not([focused])) [part='label'] {\n        color: var(--lumo-secondary-text-color);\n      }\n    }\n\n    /* Disabled style */\n\n    :host([disabled]) [part='label'] {\n      color: var(--lumo-disabled-text-color);\n      -webkit-text-fill-color: var(--lumo-disabled-text-color);\n    }\n\n    /* Small theme */\n\n    :host([theme~='small']) {\n      font-size: var(--lumo-font-size-s);\n      --lumo-text-field-size: var(--lumo-size-s);\n    }\n\n    :host([theme~='small'][has-label]) [part='label'] {\n      font-size: var(--lumo-font-size-xs);\n    }\n\n    :host([theme~='small'][has-label]) [part='error-message'] {\n      font-size: var(--lumo-font-size-xxs);\n    }\n  `,\n  { include: ['lumo-required-field'], moduleId: 'lumo-custom-field' }\n);\n"
      }
     ]
    },
    {
     "id": 134,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-progress-bar@1.3.0/node_modules/@vaadin/vaadin-progress-bar/theme/lumo/vaadin-progress-bar.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-progress-bar@1.3.0/node_modules/@vaadin/vaadin-progress-bar/theme/lumo/vaadin-progress-bar.js",
       "source": "import './vaadin-progress-bar-styles.js';\nimport '../../src/vaadin-progress-bar.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-progress-bar@1.3.0/node_modules/@vaadin/vaadin-progress-bar/theme/lumo/vaadin-progress-bar-styles.js",
       "source": "import '@polymer/polymer/lib/elements/custom-style.js';\nimport '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-progress-bar\" theme-for=\"vaadin-progress-bar\">\n  <template>\n    <style>\n      :host {\n        height: calc(var(--lumo-size-l) / 10);\n        margin: var(--lumo-space-s) 0;\n      }\n\n      [part=\"bar\"] {\n        border-radius: var(--lumo-border-radius);\n        background-color: var(--lumo-contrast-10pct);\n      }\n\n      [part=\"value\"] {\n        border-radius: var(--lumo-border-radius);\n        background-color: var(--lumo-primary-color);\n        /* Use width instead of transform to preserve border radius */\n        transform: none;\n        width: calc(var(--vaadin-progress-value) * 100%);\n        will-change: width;\n        transition: 0.1s width linear;\n      }\n\n      /* Indeterminate mode */\n\n      :host([indeterminate]) [part=\"value\"] {\n        --lumo-progress-indeterminate-progress-bar-background: linear-gradient(to right, var(--lumo-primary-color-10pct) 10%, var(--lumo-primary-color));\n        --lumo-progress-indeterminate-progress-bar-background-reverse: linear-gradient(to left, var(--lumo-primary-color-10pct) 10%, var(--lumo-primary-color));\n        width: 100%;\n        background-color: transparent !important;\n        background-image: var(--lumo-progress-indeterminate-progress-bar-background);\n        opacity: 0.75;\n        will-change: transform;\n        animation: vaadin-progress-indeterminate 1.6s infinite cubic-bezier(.645, .045, .355, 1);\n      }\n\n      @keyframes vaadin-progress-indeterminate {\n        0% {\n          transform: scaleX(0.015);\n          transform-origin: 0% 0%;\n        }\n\n        25% {\n          transform: scaleX(0.4);\n        }\n\n        50% {\n          transform: scaleX(0.015);\n          transform-origin: 100% 0%;\n          background-image: var(--lumo-progress-indeterminate-progress-bar-background);\n        }\n\n        50.1% {\n          transform: scaleX(0.015);\n          transform-origin: 100% 0%;\n          background-image: var(--lumo-progress-indeterminate-progress-bar-background-reverse);\n        }\n\n        75% {\n          transform: scaleX(0.4);\n        }\n\n        100% {\n          transform: scaleX(0.015);\n          transform-origin: 0% 0%;\n          background-image: var(--lumo-progress-indeterminate-progress-bar-background-reverse);\n        }\n      }\n\n      :host(:not([aria-valuenow])) [part=\"value\"]::before,\n      :host([indeterminate]) [part=\"value\"]::before {\n        content: \"\";\n        display: block;\n        width: 100%;\n        height: 100%;\n        border-radius: inherit;\n        background-color: var(--lumo-primary-color);\n        will-change: opacity;\n        animation: vaadin-progress-pulse3 1.6s infinite cubic-bezier(.645, .045, .355, 1);\n      }\n\n      @keyframes vaadin-progress-pulse3 {\n        0% { opacity: 1; }\n        10% { opacity: 0; }\n        40% { opacity: 0; }\n        50% { opacity: 1; }\n        50.1% { opacity: 1; }\n        60% { opacity: 0; }\n        90% { opacity: 0; }\n        100% { opacity: 1; }\n      }\n\n      /* Contrast color */\n\n      :host([theme~=\"contrast\"]) [part=\"value\"],\n      :host([theme~=\"contrast\"]) [part=\"value\"]::before {\n        background-color: var(--lumo-contrast-80pct);\n        --lumo-progress-indeterminate-progress-bar-background: linear-gradient(to right, var(--lumo-contrast-5pct) 10%, var(--lumo-contrast-80pct));\n        --lumo-progress-indeterminate-progress-bar-background-reverse: linear-gradient(to left, var(--lumo-contrast-5pct) 10%, var(--lumo-contrast-60pct));\n      }\n\n      /* Error color */\n\n      :host([theme~=\"error\"]) [part=\"value\"],\n      :host([theme~=\"error\"]) [part=\"value\"]::before {\n        background-color: var(--lumo-error-color);\n        --lumo-progress-indeterminate-progress-bar-background: linear-gradient(to right, var(--lumo-error-color-10pct) 10%, var(--lumo-error-color));\n        --lumo-progress-indeterminate-progress-bar-background-reverse: linear-gradient(to left, var(--lumo-error-color-10pct) 10%, var(--lumo-error-color));\n      }\n\n      /* Primary color */\n\n      :host([theme~=\"success\"]) [part=\"value\"],\n      :host([theme~=\"success\"]) [part=\"value\"]::before {\n        background-color: var(--lumo-success-color);\n        --lumo-progress-indeterminate-progress-bar-background: linear-gradient(to right, var(--lumo-success-color-10pct) 10%, var(--lumo-success-color));\n        --lumo-progress-indeterminate-progress-bar-background-reverse: linear-gradient(to left, var(--lumo-success-color-10pct) 10%, var(--lumo-success-color));\n      }\n\n      /* RTL specific styles */\n\n      :host([indeterminate][dir=\"rtl\"]) [part=\"value\"] {\n        --lumo-progress-indeterminate-progress-bar-background: linear-gradient(to left, var(--lumo-primary-color-10pct) 10%, var(--lumo-primary-color));\n        --lumo-progress-indeterminate-progress-bar-background-reverse: linear-gradient(to right, var(--lumo-primary-color-10pct) 10%, var(--lumo-primary-color));\n        animation: vaadin-progress-indeterminate-rtl 1.6s infinite cubic-bezier(.355, .045, .645, 1);\n      }\n\n      :host(:not([aria-valuenow])[dir=\"rtl\"]) [part=\"value\"]::before,\n      :host([indeterminate][dir=\"rtl\"]) [part=\"value\"]::before {\n        animation: vaadin-progress-pulse3 1.6s infinite cubic-bezier(.355, .045, .645, 1);\n      }\n\n      @keyframes vaadin-progress-indeterminate-rtl {\n        0% {\n          transform: scaleX(0.015);\n          transform-origin: 100% 0%;\n        }\n\n        25% {\n          transform: scaleX(0.4);\n        }\n\n        50% {\n          transform: scaleX(0.015);\n          transform-origin: 0% 0%;\n          background-image: var(--lumo-progress-indeterminate-progress-bar-background);\n        }\n\n        50.1% {\n          transform: scaleX(0.015);\n          transform-origin: 0% 0%;\n          background-image: var(--lumo-progress-indeterminate-progress-bar-background-reverse);\n        }\n\n        75% {\n          transform: scaleX(0.4);\n        }\n\n        100% {\n          transform: scaleX(0.015);\n          transform-origin: 100% 0%;\n          background-image: var(--lumo-progress-indeterminate-progress-bar-background-reverse);\n        }\n      }\n\n      /* Contrast color */\n\n      :host([theme~=\"contrast\"][dir=\"rtl\"]) [part=\"value\"],\n      :host([theme~=\"contrast\"][dir=\"rtl\"]) [part=\"value\"]::before {\n        --lumo-progress-indeterminate-progress-bar-background: linear-gradient(to left, var(--lumo-contrast-5pct) 10%, var(--lumo-contrast-80pct));\n        --lumo-progress-indeterminate-progress-bar-background-reverse: linear-gradient(to right, var(--lumo-contrast-5pct) 10%, var(--lumo-contrast-60pct));\n      }\n\n      /* Error color */\n\n      :host([theme~=\"error\"][dir=\"rtl\"]) [part=\"value\"],\n      :host([theme~=\"error\"][dir=\"rtl\"]) [part=\"value\"]::before {\n        --lumo-progress-indeterminate-progress-bar-background: linear-gradient(to left, var(--lumo-error-color-10pct) 10%, var(--lumo-error-color));\n        --lumo-progress-indeterminate-progress-bar-background-reverse: linear-gradient(to right, var(--lumo-error-color-10pct) 10%, var(--lumo-error-color));\n      }\n\n      /* Primary color */\n\n      :host([theme~=\"success\"][dir=\"rtl\"]) [part=\"value\"],\n      :host([theme~=\"success\"][dir=\"rtl\"]) [part=\"value\"]::before {\n        --lumo-progress-indeterminate-progress-bar-background: linear-gradient(to left, var(--lumo-success-color-10pct) 10%, var(--lumo-success-color));\n        --lumo-progress-indeterminate-progress-bar-background-reverse: linear-gradient(to right, var(--lumo-success-color-10pct) 10%, var(--lumo-success-color));\n      }\n    </style>\n  </template>\n</dom-module><custom-style>\n  <style>\n    @keyframes vaadin-progress-pulse3 {\n      0% { opacity: 1; }\n      10% { opacity: 0; }\n      40% { opacity: 0; }\n      50% { opacity: 1; }\n      50.1% { opacity: 1; }\n      60% { opacity: 0; }\n      90% { opacity: 0; }\n      100% { opacity: 1; }\n    }\n  </style>\n</custom-style>`;\n\ndocument.head.appendChild($_documentContainer.content);\n\n/* Safari fails to declare animations for pseudo elements inside a shadow DOM */\n"
      }
     ]
    },
    {
     "id": 135,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-radio-button@1.5.1/node_modules/@vaadin/vaadin-radio-button/theme/lumo/vaadin-radio-button.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-radio-button@1.5.1/node_modules/@vaadin/vaadin-radio-button/theme/lumo/vaadin-radio-button.js",
       "source": "import './vaadin-radio-button-styles.js';\nimport '../../src/vaadin-radio-button.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-radio-button@1.5.1/node_modules/@vaadin/vaadin-radio-button/theme/lumo/vaadin-radio-button-styles.js",
       "source": "import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-radio-button\" theme-for=\"vaadin-radio-button\">\n  <template>\n    <style>\n      :host {\n        -webkit-tap-highlight-color: transparent;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        cursor: default;\n        outline: none;\n      }\n\n      [part=\"label\"]:not([empty]) {\n        margin: 0.1875em 0.875em 0.1875em 0.375em;\n      }\n\n      [part=\"radio\"] {\n        width: calc(1em + 2px);\n        height: calc(1em + 2px);\n        margin: 0.1875em;\n        position: relative;\n        border-radius: 50%;\n        background-color: var(--lumo-contrast-20pct);\n        transition: transform 0.2s cubic-bezier(.12, .32, .54, 2), background-color 0.15s;\n        pointer-events: none;\n        will-change: transform;\n        line-height: 1.2;\n        transform: translateZ(0); /* Workaround IE11 jumpiness */\n      }\n\n      /* Used for activation \"halo\" */\n      [part=\"radio\"]::before {\n        /* Needed to align the radio-button nicely on the baseline */\n        content: \"\\\\2003\";\n        color: transparent;\n        display: inline-block;\n        width: 100%;\n        height: 100%;\n        border-radius: inherit;\n        background-color: inherit;\n        transform: scale(1.4);\n        opacity: 0;\n        transition: transform 0.1s, opacity 0.8s;\n        will-change: transform, opacity;\n      }\n\n      /* Used for the dot */\n      [part=\"radio\"]::after {\n        content: \"\";\n        width: 0;\n        height: 0;\n        border: 3px solid var(--lumo-primary-contrast-color);\n        border-radius: 50%;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%) scale(0);\n        transition: 0.25s transform;\n        will-change: transform;\n        background-clip: content-box;\n      }\n\n      :host([checked]) [part=\"radio\"] {\n        background-color: var(--lumo-primary-color);\n      }\n\n      :host([checked]) [part=\"radio\"]::after {\n        transform: translate(-50%, -50%) scale(1);\n      }\n\n      :host(:not([checked]):not([indeterminate]):not([disabled]):hover) [part=\"radio\"] {\n        background-color: var(--lumo-contrast-30pct);\n      }\n\n      :host([active]) [part=\"radio\"] {\n        transform: scale(0.9);\n        transition-duration: 0.05s;\n      }\n\n      :host([active][checked]) [part=\"radio\"] {\n        transform: scale(1.1);\n      }\n\n      :host([active]:not([checked])) [part=\"radio\"]::before {\n        transition-duration: 0.01s, 0.01s;\n        transform: scale(0);\n        opacity: 0.4;\n      }\n\n      :host([focus-ring]) [part=\"radio\"] {\n        box-shadow: 0 0 0 3px var(--lumo-primary-color-50pct);\n      }\n\n      :host([disabled]) {\n        pointer-events: none;\n        color: var(--lumo-disabled-text-color);\n      }\n\n      :host([disabled]) ::slotted(*) {\n        color: inherit;\n      }\n\n      :host([disabled]) [part=\"radio\"] {\n        background-color: var(--lumo-contrast-10pct);\n      }\n\n      :host([disabled]) [part=\"radio\"]::after {\n        border-color: var(--lumo-contrast-30pct);\n      }\n\n      /* IE11 only */\n      ::-ms-backdrop,\n      [part=\"radio\"] {\n        line-height: 1;\n      }\n\n      /* RTL specific styles */\n\n      :host([dir=\"rtl\"]) [part=\"label\"]:not([empty]) {\n        margin: 0.1875em 0.375em 0.1875em 0.875em;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
      }
     ]
    },
    {
     "id": 136,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-tabs@4.0.0/node_modules/@vaadin/vaadin-tabs/theme/lumo/vaadin-tab.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-tabs@4.0.0/node_modules/@vaadin/vaadin-tabs/theme/lumo/vaadin-tab.js",
       "source": "import './vaadin-tab-styles.js';\nimport '../../src/vaadin-tab.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-tabs@4.0.0/node_modules/@vaadin/vaadin-tabs/theme/lumo/vaadin-tab-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\n\nregisterStyles(\n  'vaadin-tab',\n  css`\n    :host {\n      box-sizing: border-box;\n      padding: 0.5rem 0.75rem;\n      font-family: var(--lumo-font-family);\n      font-size: var(--lumo-font-size-m);\n      line-height: var(--lumo-line-height-xs);\n      font-weight: 500;\n      opacity: 1;\n      color: var(--lumo-contrast-60pct);\n      transition: 0.15s color, 0.2s transform;\n      flex-shrink: 0;\n      display: flex;\n      align-items: center;\n      position: relative;\n      cursor: pointer;\n      transform-origin: 50% 100%;\n      outline: none;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n      overflow: hidden;\n      min-width: var(--lumo-size-m);\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      user-select: none;\n    }\n\n    :host(:not([orientation='vertical'])) {\n      text-align: center;\n    }\n\n    :host([orientation='vertical']) {\n      transform-origin: 0% 50%;\n      padding: 0.25rem 1rem;\n      min-height: var(--lumo-size-m);\n      min-width: 0;\n    }\n\n    :host(:hover),\n    :host([focus-ring]) {\n      color: var(--lumo-body-text-color);\n    }\n\n    :host([selected]) {\n      color: var(--lumo-primary-text-color);\n      transition: 0.6s color;\n    }\n\n    :host([active]:not([selected])) {\n      color: var(--lumo-primary-text-color);\n      transition-duration: 0.1s;\n    }\n\n    :host::before,\n    :host::after {\n      content: '';\n      position: absolute;\n      display: var(--_lumo-tab-marker-display, block);\n      bottom: 0;\n      left: 50%;\n      width: var(--lumo-size-s);\n      height: 2px;\n      background-color: var(--lumo-contrast-60pct);\n      border-radius: var(--lumo-border-radius) var(--lumo-border-radius) 0 0;\n      transform: translateX(-50%) scale(0);\n      transform-origin: 50% 100%;\n      transition: 0.14s transform cubic-bezier(0.12, 0.32, 0.54, 1);\n      will-change: transform;\n    }\n\n    :host([selected])::before,\n    :host([selected])::after {\n      background-color: var(--lumo-primary-color);\n    }\n\n    :host([orientation='vertical'])::before,\n    :host([orientation='vertical'])::after {\n      left: 0;\n      bottom: 50%;\n      transform: translateY(50%) scale(0);\n      width: 2px;\n      height: var(--lumo-size-xs);\n      border-radius: 0 var(--lumo-border-radius) var(--lumo-border-radius) 0;\n      transform-origin: 100% 50%;\n    }\n\n    :host::after {\n      box-shadow: 0 0 0 4px var(--lumo-primary-color);\n      opacity: 0.15;\n      transition: 0.15s 0.02s transform, 0.8s 0.17s opacity;\n    }\n\n    :host([selected])::before,\n    :host([selected])::after {\n      transform: translateX(-50%) scale(1);\n      transition-timing-function: cubic-bezier(0.12, 0.32, 0.54, 1.5);\n    }\n\n    :host([orientation='vertical'][selected])::before,\n    :host([orientation='vertical'][selected])::after {\n      transform: translateY(50%) scale(1);\n    }\n\n    :host([selected]:not([active]))::after {\n      opacity: 0;\n    }\n\n    :host(:not([orientation='vertical'])) ::slotted(a[href]) {\n      justify-content: center;\n    }\n\n    :host ::slotted(a) {\n      display: flex;\n      width: 100%;\n      align-items: center;\n      height: 100%;\n      margin: -0.5rem -0.75rem;\n      padding: 0.5rem 0.75rem;\n      outline: none;\n\n      /*\n          Override the CSS inherited from \\`lumo-color\\` and \\`lumo-typography\\`.\n          Note: \\`!important\\` is needed because of the \\`:slotted\\` specificity.\n        */\n      text-decoration: none !important;\n      color: inherit !important;\n    }\n\n    :host ::slotted(iron-icon) {\n      margin: 0 4px;\n      width: var(--lumo-icon-size-m);\n      height: var(--lumo-icon-size-m);\n    }\n\n    /* Vaadin icons are based on a 16x16 grid (unlike Lumo and Material icons with 24x24), so they look too big by default */\n    :host ::slotted(iron-icon[icon^='vaadin:']) {\n      padding: 0.25rem;\n      box-sizing: border-box !important;\n    }\n\n    :host(:not([dir='rtl'])) ::slotted(iron-icon:first-child) {\n      margin-left: 0;\n    }\n\n    :host(:not([dir='rtl'])) ::slotted(iron-icon:last-child) {\n      margin-right: 0;\n    }\n\n    :host([theme~='icon-on-top']) {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-around;\n      text-align: center;\n      padding-bottom: 0.5rem;\n      padding-top: 0.25rem;\n    }\n\n    :host([theme~='icon-on-top']) ::slotted(a) {\n      flex-direction: column;\n      align-items: center;\n      margin-top: -0.25rem;\n      padding-top: 0.25rem;\n    }\n\n    :host([theme~='icon-on-top']) ::slotted(iron-icon) {\n      margin: 0;\n    }\n\n    /* Disabled */\n\n    :host([disabled]) {\n      pointer-events: none;\n      opacity: 1;\n      color: var(--lumo-disabled-text-color);\n    }\n\n    /* Focus-ring */\n\n    :host([focus-ring]) {\n      box-shadow: inset 0 0 0 2px var(--lumo-primary-color-50pct);\n      border-radius: var(--lumo-border-radius);\n    }\n\n    /* RTL specific styles */\n\n    :host([dir='rtl'])::before,\n    :host([dir='rtl'])::after {\n      left: auto;\n      right: 50%;\n      transform: translateX(50%) scale(0);\n    }\n\n    :host([dir='rtl'][selected]:not([orientation='vertical']))::before,\n    :host([dir='rtl'][selected]:not([orientation='vertical']))::after {\n      transform: translateX(50%) scale(1);\n    }\n\n    :host([dir='rtl']) ::slotted(iron-icon:first-child) {\n      margin-right: 0;\n    }\n\n    :host([dir='rtl']) ::slotted(iron-icon:last-child) {\n      margin-left: 0;\n    }\n\n    :host([orientation='vertical'][dir='rtl']) {\n      transform-origin: 100% 50%;\n    }\n\n    :host([dir='rtl'][orientation='vertical'])::before,\n    :host([dir='rtl'][orientation='vertical'])::after {\n      left: auto;\n      right: 0;\n      border-radius: var(--lumo-border-radius) 0 0 var(--lumo-border-radius);\n      transform-origin: 0% 50%;\n    }\n  `,\n  { moduleId: 'lumo-tab' }\n);\n"
      }
     ]
    },
    {
     "id": 137,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-text-field@3.0.2/node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-number-field.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-text-field@3.0.2/node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-number-field.js",
       "source": "import './vaadin-number-field-styles.js';\nimport './vaadin-text-field.js';\nimport '../../src/vaadin-number-field.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-text-field@3.0.2/node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-number-field-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/field-button.js';\n\nregisterStyles(\n  'vaadin-number-field',\n  css`\n    :host {\n      width: 8em;\n    }\n\n    :host([has-controls]:not([theme~='align-right'])) [part='value'] {\n      text-align: center;\n    }\n\n    [part$='button'][disabled] {\n      opacity: 0.2;\n    }\n\n    :host([has-controls]) [part='input-field'] {\n      padding: 0;\n    }\n\n    [part\\$='button'] {\n      cursor: pointer;\n      font-size: var(--lumo-icon-size-s);\n      width: 1.6em;\n      height: 1.6em;\n    }\n\n    [part\\$='button']::before {\n      margin-top: 0.2em;\n    }\n\n    /* RTL specific styles */\n    :host([dir='rtl']) [part='value'],\n    :host([dir='rtl']) [part='input-field'] ::slotted(input) {\n      --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent, #000 1.25em);\n    }\n  `,\n  { moduleId: 'lumo-number-field', include: ['lumo-field-button'] }\n);\n"
      }
     ]
    },
    {
     "id": 138,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-overlay@3.5.1/node_modules/@vaadin/vaadin-overlay/theme/lumo/vaadin-overlay.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-overlay@3.5.1/node_modules/@vaadin/vaadin-overlay/theme/lumo/vaadin-overlay.js",
       "source": "import './vaadin-overlay-styles.js';\nimport '../../src/vaadin-overlay.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-overlay@3.5.1/node_modules/@vaadin/vaadin-overlay/theme/lumo/vaadin-overlay-styles.js",
       "source": "import '@vaadin/vaadin-lumo-styles/mixins/overlay.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-vaadin-overlay\" theme-for=\"vaadin-overlay\">\n  <template>\n    <style include=\"lumo-overlay\">\n      /* stylelint-disable no-empty-source */\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
      }
     ]
    },
    {
     "id": 139,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-custom-field@2.0.0/node_modules/@vaadin/vaadin-custom-field/src/vaadin-custom-field.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-custom-field@2.0.0/node_modules/@vaadin/vaadin-custom-field/src/vaadin-custom-field.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { CustomFieldMixin } from './vaadin-custom-field-mixin.js';\n\n/**\n * `<vaadin-custom-field>` is a Web Component providing field wrapper functionality.\n *\n * ```\n * <vaadin-custom-field label=\"Appointment time\">\n *   <vaadin-date-picker></vaadin-date-picker>\n *   <vaadin-time-picker></vaadin-time-picker>\n * </vaadin-custom-field>\n * ```\n *\n * ### Styling\n *\n * You may set the attribute `disabled` or `readonly` on this component to make the label styles behave the same\n * way as they would on a `<vaadin-text-field>` which is disabled or readonly.\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `label` | The label element\n * `error-message` | The error message element\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `has-label`  | Set when the field has a label | :host\n * `has-helper` | Set when the element has helper text or slot | :host\n * `has-error-message` | Set when the element has an error message, regardless if the field is valid or not | :host\n * `invalid`    | Set when the field is invalid | :host\n * `focused`    | Set when the field contains focus | :host\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @fires {Event} change - Fired when the user commits a value change for any of the internal inputs.\n * @fires {Event} internal-tab - Fired on Tab keydown triggered from the internal inputs, meaning focus will not leave the inputs.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @mixes CustomFieldMixin\n */\nclass CustomFieldElement extends ElementMixin(CustomFieldMixin(ThemableMixin(PolymerElement))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-flex;\n        }\n\n        :host::before {\n          content: '\\\\2003';\n          width: 0;\n          display: inline-block;\n          /* Size and position this element on the same vertical position as the input-field element\n           to make vertical align for the host element work as expected */\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        .container {\n          width: 100%;\n          display: flex;\n          flex-direction: column;\n        }\n\n        .inputs-wrapper {\n          flex: none;\n        }\n      </style>\n\n      <div class=\"container\">\n        <label part=\"label\" on-click=\"focus\" id=\"[[__labelId]]\">[[label]]</label>\n        <div class=\"inputs-wrapper\" on-change=\"__updateValue\">\n          <slot id=\"slot\"></slot>\n        </div>\n        <div part=\"helper-text\" on-click=\"focus\" id=\"[[__helperTextId]]\">\n          <slot name=\"helper\" id=\"helperSlot\">[[helperText]]</slot>\n        </div>\n        <div\n          part=\"error-message\"\n          id=\"[[__errorId]]\"\n          aria-live=\"assertive\"\n          aria-hidden$=\"[[__getErrorMessageAriaHidden(invalid, errorMessage, __errorId)]]\"\n        >\n          [[errorMessage]]\n        </div>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-custom-field';\n  }\n  static get version() {\n    return '2.0.0';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * String used for the label element.\n       * @type {string}\n       */\n      label: {\n        type: String,\n        value: '',\n        observer: '_labelChanged'\n      },\n\n      /**\n       * The name of the control, which is submitted with the form data.\n       */\n      name: String,\n\n      /**\n       * Specifies that the user must fill in a value.\n       */\n      required: {\n        type: Boolean,\n        reflectToAttribute: true\n      },\n\n      /**\n       * The value of the field. When wrapping several inputs, it will contain `\\t`\n       * (Tab character) as a delimiter indicating parts intended to be used as the\n       * corresponding inputs values. Use the [`i18n`](#/elements/vaadin-custom-field#property-i18n)\n       * property to customize this behavior.\n       */\n      value: {\n        type: String,\n        observer: '__valueChanged',\n        notify: true\n      },\n\n      /**\n       * This property is set to true when the control value is invalid.\n       * @type {boolean}\n       */\n      invalid: {\n        type: Boolean,\n        reflectToAttribute: true,\n        notify: true,\n        value: false,\n        observer: '__invalidChanged'\n      },\n\n      /**\n       * Error to show when the input value is invalid.\n       * @attr {string} error-message\n       * @type {string}\n       */\n      errorMessage: {\n        type: String,\n        value: '',\n        observer: '__errorMessageChanged'\n      },\n\n      /**\n       * String used for the helper text.\n       * @attr {string} helper-text\n       * @type {string | null}\n       */\n      helperText: {\n        type: String,\n        value: '',\n        observer: '__helperTextChanged'\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '__getActiveErrorId(invalid, errorMessage, __errorId, helperText, __helperTextId, __hasSlottedHelper)',\n      '__getActiveLabelId(label, __labelId)',\n      '__toggleHasValue(value)'\n    ];\n  }\n\n  /** @private */\n  __invalidChanged(invalid) {\n    this.__setOrToggleAttribute('aria-invalid', invalid, this);\n  }\n\n  /** @private */\n  __errorMessageChanged(errorMessage) {\n    this.__setOrToggleAttribute('has-error-message', !!errorMessage, this);\n  }\n\n  /** @private */\n  __helperTextChanged(helperText) {\n    this.__setOrToggleAttribute('has-helper', !!helperText, this);\n  }\n\n  /** @private */\n  __toggleHasValue(value) {\n    if (value !== null && value.trim() !== '') {\n      this.setAttribute('has-value', '');\n    } else {\n      this.removeAttribute('has-value');\n    }\n  }\n\n  /** @private */\n  _labelChanged(label) {\n    if (label !== '' && label != null) {\n      this.setAttribute('has-label', '');\n    } else {\n      this.removeAttribute('has-label');\n    }\n  }\n\n  /**\n   * Returns true if `value` is valid.\n   * `<iron-form>` uses this to check the validity or all its elements.\n   *\n   * @return {boolean} True if the value is valid.\n   */\n  validate() {\n    return !(this.invalid = !this.checkValidity());\n  }\n\n  /**\n   * Returns true if the current inputs values satisfy all constraints (if any)\n   * @return {boolean}\n   */\n  checkValidity() {\n    const invalidFields = this.inputs.filter((input) => !(input.validate || input.checkValidity).call(input));\n\n    if (invalidFields.length || (this.required && !this.value.trim())) {\n      // Either 1. one of the input fields is invalid or\n      // 2. the custom field itself is required but doesn't have a value\n      return false;\n    }\n    return true;\n  }\n\n  /** @private */\n  __setOrToggleAttribute(name, value, node) {\n    if (!name || !node) {\n      return;\n    }\n    if (node.hasAttribute(name) === !value) {\n      if (value) {\n        node.setAttribute(name, typeof value === 'boolean' ? '' : value);\n      } else {\n        node.removeAttribute(name);\n      }\n    }\n  }\n\n  /** @private */\n  __getActiveErrorId(invalid, errorMessage, errorId, helperText, helperTextId, hasSlottedHelper) {\n    const ids = [];\n    if (helperText || hasSlottedHelper) {\n      ids.push(helperTextId);\n    }\n    if (errorMessage && invalid) {\n      ids.push(errorId);\n    }\n    if (ids.length > 0) {\n      this.setAttribute('aria-describedby', ids.join(' '));\n    } else {\n      this.removeAttribute('aria-describedby');\n    }\n  }\n\n  /** @private */\n  __getActiveLabelId(label, labelId) {\n    this.__setOrToggleAttribute('aria-labelledby', label ? labelId : undefined, this);\n  }\n\n  /** @private */\n  __getErrorMessageAriaHidden(invalid, errorMessage, errorId) {\n    return (!(errorMessage && invalid ? errorId : undefined)).toString();\n  }\n}\n\ncustomElements.define(CustomFieldElement.is, CustomFieldElement);\n\nexport { CustomFieldElement };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-custom-field@2.0.0/node_modules/@vaadin/vaadin-custom-field/src/vaadin-custom-field-mixin.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\n\n/**\n * @polymerMixin\n */\nexport const CustomFieldMixin = (superClass) =>\n  class VaadinCustomFieldMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * Array of available input nodes\n         * @type {!Array<!HTMLElement> | undefined}\n         */\n        inputs: {\n          type: Array,\n          readOnly: true\n        },\n\n        /**\n         * The object used to localize this component.\n         * To change the default localization, replace the entire\n         * _i18n_ object or just the property you want to modify.\n         *\n         * The object has the following JSON structure:\n         *\n         * ```\n         * {\n         *   // A function to format given `Array` as\n         *   // component value. Array is list of all internal values\n         *   // in the order of their presence in the DOM\n         *   // This function is called each time the internal input\n         *   // value is changed.\n         *   formatValue: inputValues => {\n         *     // returns a representation of the given array of values\n         *     // in the form of string with delimiter characters\n         *   },\n         *\n         *   // A function to parse the given value to an `Array` in the format\n         *   // of the list of all internal values\n         *   // in the order of their presence in the DOM\n         *   // This function is called when value of the\n         *   // custom field is set.\n         *   parseValue: value => {\n         *     // returns the array of values from parsed value string.\n         *   }\n         * }\n         * ```\n         *\n         * @type {!CustomFieldI18n}\n         */\n        i18n: {\n          type: Object,\n          value: () => {\n            return {\n              parseValue: function (value) {\n                return value.split('\\t');\n              },\n              formatValue: function (inputValues) {\n                return inputValues.join('\\t');\n              }\n            };\n          }\n        },\n\n        /** @private */\n        __errorId: String,\n\n        /** @private */\n        __labelId: String,\n\n        /** @private */\n        __helperTextId: String,\n\n        /** @private */\n        __hasSlottedHelper: Boolean\n      };\n    }\n\n    /** @protected */\n    connectedCallback() {\n      super.connectedCallback();\n      if (this.__observer) {\n        this.__observer.connect();\n      }\n    }\n\n    /** @protected */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n      this.__observer && this.__observer.disconnect();\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this.__setInputsFromSlot();\n      this.__observer = new FlattenedNodesObserver(this.$.slot, () => {\n        this.__setInputsFromSlot();\n      });\n\n      this.$.helperSlot.addEventListener('slotchange', this.__onHelperSlotChange.bind(this));\n      this.__onHelperSlotChange();\n\n      const isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n      this.addEventListener('keydown', (e) => {\n        if (e.keyCode === 9) {\n          // FIXME (yuriy): remove this workaround once this issue is fixed:\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1014868&can=2&num=100&q=slot%20shift%20tab\n          if (e.target.parentElement.localName === 'slot' && !e.defaultPrevented && isChrome) {\n            const slot = e.target.parentElement;\n            slot.setAttribute('tabindex', -1);\n            setTimeout(() => slot.removeAttribute('tabindex'));\n          }\n          if (\n            (this.inputs.indexOf(e.target) < this.inputs.length - 1 && !e.shiftKey) ||\n            (this.inputs.indexOf(e.target) > 0 && e.shiftKey)\n          ) {\n            this.dispatchEvent(new CustomEvent('internal-tab'));\n          } else {\n            // FIXME (yuriy): remove this workaround when value should not be updated before focusout\n            this.__setValue();\n          }\n        }\n      });\n\n      this.addEventListener('focusin', () => this.setAttribute('focused', ''));\n\n      this.addEventListener('focusout', () => {\n        const activeElement = this.getRootNode().activeElement;\n        if (\n          !this.inputs.some((el) => activeElement === el || (el.shadowRoot && el.shadowRoot.contains(activeElement)))\n        ) {\n          this.removeAttribute('focused');\n        }\n      });\n\n      var uniqueId = (CustomFieldMixin._uniqueId = 1 + CustomFieldMixin._uniqueId || 1);\n      this.__errorId = `${this.constructor.is}-error-${uniqueId}`;\n      this.__labelId = `${this.constructor.is}-label-${uniqueId}`;\n      this.__helperTextId = `${this.constructor.is}-helper-${uniqueId}`;\n    }\n\n    /** @protected */\n    focus() {\n      this.inputs && this.inputs[0] && this.inputs[0].focus();\n    }\n\n    /** @private */\n    __updateValue(e) {\n      // Stop native change events\n      e && e.stopPropagation();\n\n      this.__setValue();\n      this.validate();\n      this.dispatchEvent(\n        new CustomEvent('change', {\n          bubbles: true,\n          cancelable: false,\n          detail: {\n            value: this.value\n          }\n        })\n      );\n    }\n\n    /** @private */\n    __setValue() {\n      this.__settingValue = true;\n      this.value = this.i18n.formatValue.apply(this, [this.inputs.map((input) => input.value)]);\n      this.__settingValue = false;\n    }\n\n    /**\n     * Like querySelectorAll('*') but also gets all elements through any nested slots recursively\n     * @private\n     */\n    __queryAllAssignedElements(elem) {\n      const result = [];\n      let elements;\n      if (elem.tagName === 'SLOT') {\n        elements = elem.assignedNodes({ flatten: true }).filter((node) => node.nodeType === Node.ELEMENT_NODE);\n      } else {\n        result.push(elem);\n        elements = Array.from(elem.children);\n      }\n      elements.forEach((elem) => result.push(...this.__queryAllAssignedElements(elem)));\n      return result;\n    }\n\n    /** @private */\n    __getInputsFromSlot() {\n      const isInput = (node) => node.validate || node.checkValidity;\n      return this.__queryAllAssignedElements(this.$.slot).filter(isInput);\n    }\n\n    /** @private */\n    __setInputsFromSlot() {\n      this._setInputs(this.__getInputsFromSlot());\n      this.__setValue();\n    }\n\n    /** @private */\n    __valueChanged(value, oldValue) {\n      if (this.__settingValue || !this.inputs) {\n        return;\n      }\n\n      const valuesArray = this.i18n.parseValue(value);\n      if (!valuesArray || valuesArray.length == 0) {\n        console.warn('Value parser has not provided values array');\n        return;\n      }\n\n      this.inputs.forEach((input, id) => (input.value = valuesArray[id]));\n      if (oldValue !== undefined) {\n        this.validate();\n      }\n    }\n\n    /** @private */\n    __onHelperSlotChange() {\n      const slottedNodes = this.$.helperSlot.assignedNodes({ flatten: true });\n      // Only has slotted helper if not a text node\n      // Text nodes are added by the helperText prop and not the helper slot\n      // The filter is added due to shady DOM triggering this slotchange event on helperText prop change\n      this.__hasSlottedHelper = slottedNodes.filter((node) => node.nodeType !== 3).length > 0;\n\n      if (this.__hasSlottedHelper) {\n        this.setAttribute('has-helper', 'slotted');\n      } else if (this.helperText === '' || this.helperText === null) {\n        this.removeAttribute('has-helper');\n      }\n    }\n\n    /**\n     * Fired on Tab keydown triggered from the internal inputs,\n     * meaning focus will not leave the inputs.\n     *\n     * @event internal-tab\n     */\n\n    /**\n     * Fired when the user commits a value change for any of the internal inputs.\n     *\n     * @event change\n     */\n  };\n"
      }
     ]
    },
    {
     "id": 140,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-time-picker@3.0.0/node_modules/@vaadin/vaadin-time-picker/src/vaadin-time-picker.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-time-picker@3.0.0/node_modules/@vaadin/vaadin-time-picker/src/vaadin-time-picker.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { ControlStateMixin } from '@vaadin/vaadin-control-state-mixin/vaadin-control-state-mixin.js';\nimport '@vaadin/vaadin-combo-box/src/vaadin-combo-box-light.js';\nimport './vaadin-time-picker-text-field.js';\n\n/**\n * `<vaadin-time-picker>` is a Web Component providing a time-selection field.\n *\n * ```html\n * <vaadin-time-picker></vaadin-time-picker>\n * ```\n * ```js\n * timePicker.value = '14:30';\n * ```\n *\n * When the selected `value` is changed, a `value-changed` event is triggered.\n *\n * ### Styling\n *\n * The following custom properties are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `toggle-button` | The toggle button\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `disabled` | Set to a disabled time picker | :host\n * `readonly` | Set to a read only time picker | :host\n * `invalid` | Set when the element is invalid | :host\n * `focused` | Set when the element is focused | :host\n * `focus-ring` | Set when the element is keyboard focused | :host\n *\n * In addition to `<vaadin-time-picker>` itself, the following internal\n * components are themable:\n *\n * - `<vaadin-time-picker-text-field>`, see\n *   [`<vaadin-text-field>` documentation](https://vaadin.com/components/vaadin-text-field/html-api/elements/Vaadin.TextFieldElement)\n *   for the text field parts.\n * - `<vaadin-combo-box-light>`, see\n *   [`<vaadin-combo-box>` documentation](https://vaadin.com/components/vaadin-combo-box/html-api/elements/Vaadin.ComboBoxElement)\n *   for the combo box parts.\n *\n * Note: the `theme` attribute value set on `<vaadin-time-picker>` is\n * propagated to the internal themable components listed above.\n *\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ControlStateMixin\n * @mixes ThemableMixin\n */\nclass TimePickerElement extends ElementMixin(ControlStateMixin(ThemableMixin(PolymerElement))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        [part~='toggle-button'] {\n          cursor: pointer;\n        }\n\n        .input {\n          width: 100%;\n          min-width: 0;\n        }\n      </style>\n      <vaadin-combo-box-light\n        allow-custom-value=\"\"\n        item-label-path=\"value\"\n        filtered-items=\"[[__dropdownItems]]\"\n        disabled=\"[[disabled]]\"\n        readonly=\"[[readonly]]\"\n        auto-open-disabled=\"[[autoOpenDisabled]]\"\n        dir=\"ltr\"\n        theme$=\"[[theme]]\"\n      >\n        <template> [[item.label]] </template>\n        <vaadin-time-picker-text-field\n          class=\"input\"\n          name=\"[[name]]\"\n          invalid=\"[[invalid]]\"\n          autocomplete=\"off\"\n          label=\"[[label]]\"\n          required=\"[[required]]\"\n          disabled=\"[[disabled]]\"\n          prevent-invalid-input=\"[[preventInvalidInput]]\"\n          pattern=\"[[pattern]]\"\n          error-message=\"[[errorMessage]]\"\n          autofocus=\"[[autofocus]]\"\n          placeholder=\"[[placeholder]]\"\n          readonly=\"[[readonly]]\"\n          role=\"application\"\n          aria-live=\"assertive\"\n          min$=\"[[min]]\"\n          max$=\"[[max]]\"\n          aria-label$=\"[[label]]\"\n          clear-button-visible=\"[[clearButtonVisible]]\"\n          i18n=\"[[i18n]]\"\n          helper-text=\"[[helperText]]\"\n          theme$=\"[[theme]]\"\n        >\n          <slot name=\"helper\" slot=\"helper\">[[helperText]]</slot>\n          <span\n            slot=\"suffix\"\n            part=\"toggle-button\"\n            class=\"toggle-button\"\n            role=\"button\"\n            aria-label$=\"[[i18n.selector]]\"\n          ></span>\n        </vaadin-time-picker-text-field>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-time-picker';\n  }\n  static get version() {\n    return '3.0.0';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * The name of this element.\n       */\n      name: {\n        type: String\n      },\n\n      /**\n       * The time value for this element.\n       *\n       * Supported time formats are in ISO 8601:\n       * - `hh:mm` (default)\n       * - `hh:mm:ss`\n       * - `hh:mm:ss.fff`\n       * @type {string}\n       */\n      value: {\n        type: String,\n        observer: '__valueChanged',\n        notify: true,\n        value: ''\n      },\n\n      /**\n       * The label for this element.\n       */\n      label: {\n        type: String,\n        reflectToAttribute: true\n      },\n\n      /**\n       * Set to true to mark the input as required.\n       * @type {boolean}\n       */\n      required: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Set to true to disable this input.\n       * @type {boolean}\n       */\n      disabled: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Set to true to prevent the user from entering invalid input.\n       * @attr {boolean} prevent-invalid-input\n       */\n      preventInvalidInput: {\n        type: Boolean\n      },\n\n      /**\n       * A pattern to validate the `input` with.\n       */\n      pattern: {\n        type: String\n      },\n\n      /**\n       * The error message to display when the input is invalid.\n       * @attr {string} error-message\n       */\n      errorMessage: {\n        type: String\n      },\n\n      /**\n       * String used for the helper text.\n       * @attr {string} helper-text\n       */\n      helperText: {\n        type: String,\n        value: ''\n      },\n\n      /**\n       * A placeholder string in addition to the label.\n       * @type {string}\n       */\n      placeholder: {\n        type: String,\n        value: ''\n      },\n\n      /**\n       * Set to true to prevent user picking a date or typing in the input.\n       * @type {boolean}\n       */\n      readonly: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * Set to true if the value is invalid.\n       * @type {boolean}\n       */\n      invalid: {\n        type: Boolean,\n        reflectToAttribute: true,\n        notify: true,\n        value: false\n      },\n\n      /**\n       * Minimum time allowed.\n       *\n       * Supported time formats are in ISO 8601:\n       * - `hh:mm`\n       * - `hh:mm:ss`\n       * - `hh:mm:ss.fff`\n       * @type {string}\n       */\n      min: {\n        type: String,\n        value: '00:00:00.000'\n      },\n\n      /**\n       * Maximum time allowed.\n       *\n       * Supported time formats are in ISO 8601:\n       * - `hh:mm`\n       * - `hh:mm:ss`\n       * - `hh:mm:ss.fff`\n       * @type {string}\n       */\n      max: {\n        type: String,\n        value: '23:59:59.999'\n      },\n\n      /**\n       * Specifies the number of valid intervals in a day used for\n       * configuring the items displayed in the selection box.\n       *\n       * It also configures the precision of the value string. By default\n       * the component formats values as `hh:mm` but setting a step value\n       * lower than one minute or one second, format resolution changes to\n       * `hh:mm:ss` and `hh:mm:ss.fff` respectively.\n       *\n       * Unit must be set in seconds, and for correctly configuring intervals\n       * in the dropdown, it need to evenly divide a day.\n       *\n       * Note: it is possible to define step that is dividing an hour in inexact\n       * fragments (i.e. 5760 seconds which equals 1 hour 36 minutes), but it is\n       * not recommended to use it for better UX experience.\n       */\n      step: {\n        type: Number\n      },\n\n      /**\n       * Set to true to display the clear icon which clears the input.\n       * @attr {boolean} clear-button-visible\n       * @type {boolean}\n       */\n      clearButtonVisible: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Set true to prevent the overlay from opening automatically.\n       * @attr {boolean} auto-open-disabled\n       */\n      autoOpenDisabled: Boolean,\n\n      /** @private */\n      __dropdownItems: {\n        type: Array\n      },\n\n      /**\n       * The object used to localize this component.\n       * To change the default localization, replace the entire\n       * _i18n_ object or just the property you want to modify.\n       *\n       * The object has the following JSON structure:\n\n          {\n            // A function to format given `Object` as\n            // time string. Object is in the format `{ hours: ..., minutes: ..., seconds: ..., milliseconds: ... }`\n            formatTime: (time) => {\n              // returns a string representation of the given\n              // object in `hh` / 'hh:mm' / 'hh:mm:ss' / 'hh:mm:ss.fff' - formats\n            },\n\n            // A function to parse the given text to an `Object` in the format\n            // `{ hours: ..., minutes: ..., seconds: ..., milliseconds: ... }`.\n            // Must properly parse (at least) text\n            // formatted by `formatTime`.\n            parseTime: text => {\n              // Parses a string in object/string that can be formatted by`formatTime`.\n            }\n\n            // Translation of the time selector icon button title.\n            selector: 'Time selector',\n\n            // Translation of the time selector clear button title.\n            clear: 'Clear'\n          }\n        * @type {!TimePickerI18n}\n        */\n      i18n: {\n        type: Object,\n        value: () => {\n          return {\n            formatTime: (time) => {\n              if (!time) {\n                return;\n              }\n\n              const pad = (num = 0, fmt = '00') => (fmt + num).substr((fmt + num).length - fmt.length);\n              // Always display hour and minute\n              let timeString = `${pad(time.hours)}:${pad(time.minutes)}`;\n              // Adding second and millisecond depends on resolution\n              time.seconds !== undefined && (timeString += `:${pad(time.seconds)}`);\n              time.milliseconds !== undefined && (timeString += `.${pad(time.milliseconds, '000')}`);\n              return timeString;\n            },\n            parseTime: (text) => {\n              // Parsing with RegExp to ensure correct format\n              const MATCH_HOURS = '(\\\\d|[0-1]\\\\d|2[0-3])';\n              const MATCH_MINUTES = '(\\\\d|[0-5]\\\\d)';\n              const MATCH_SECONDS = MATCH_MINUTES;\n              const MATCH_MILLISECONDS = '(\\\\d{1,3})';\n              const re = new RegExp(\n                `^${MATCH_HOURS}(?::${MATCH_MINUTES}(?::${MATCH_SECONDS}(?:\\\\.${MATCH_MILLISECONDS})?)?)?$`\n              );\n              const parts = re.exec(text);\n              if (parts) {\n                // Allows setting the milliseconds with hundreds and tens precision\n                if (parts[4]) {\n                  while (parts[4].length < 3) {\n                    parts[4] += '0';\n                  }\n                }\n                return { hours: parts[1], minutes: parts[2], seconds: parts[3], milliseconds: parts[4] };\n              }\n            },\n            selector: 'Time selector',\n            clear: 'Clear'\n          };\n        }\n      }\n    };\n  }\n\n  static get observers() {\n    return ['__updateDropdownItems(i18n.*, min, max, step)'];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    // In order to have synchronized invalid property, we need to use the same validate logic.\n    this.__inputElement.validate = () => {};\n\n    // Not using declarative because we receive an event before text-element shadow is ready,\n    // thus querySelector in textField.focusElement raises an undefined exception on validate\n    this.__dropdownElement.addEventListener('value-changed', (e) => this.__onInputChange(e));\n    this.__inputElement.addEventListener('keydown', this.__onKeyDown.bind(this));\n\n    // Validation listeners\n    this.__dropdownElement.addEventListener('change', () => this.validate());\n    this.__inputElement.addEventListener('blur', () => this.validate());\n\n    this.__dropdownElement.addEventListener('change', (e) => {\n      // `vaadin-combo-box-light` forwards 'change' event from text-field.\n      // So we need to filter out in order to avoid duplicates.\n      if (e.composedPath()[0] !== this.__inputElement) {\n        this.__dispatchChange();\n      }\n    });\n  }\n\n  /** @private */\n  __validDayDivisor(step) {\n    // valid if undefined, or exact divides a day, or has millisecond resolution\n    return !step || (24 * 3600) % step === 0 || (step < 1 && ((step % 1) * 1000) % 1 === 0);\n  }\n\n  /** @private */\n  __onKeyDown(e) {\n    if (this.readonly || this.disabled || this.__dropdownItems.length) {\n      return;\n    }\n\n    const stepResolution = (this.__validDayDivisor(this.step) && this.step) || 60;\n\n    if (e.keyCode === 40) {\n      this.__onArrowPressWithStep(-stepResolution);\n    } else if (e.keyCode === 38) {\n      this.__onArrowPressWithStep(stepResolution);\n    }\n  }\n\n  /** @private */\n  __onArrowPressWithStep(step) {\n    const objWithStep = this.__addStep(this.__getMsec(this.__memoValue), step, true);\n    this.__memoValue = objWithStep;\n    this.__inputElement.value = this.i18n.formatTime(this.__validateTime(objWithStep));\n    this.__dispatchChange();\n  }\n\n  /** @private */\n  __dispatchChange() {\n    this.dispatchEvent(new CustomEvent('change', { bubbles: true }));\n  }\n\n  /**\n   * Returning milliseconds from Object in the format `{ hours: ..., minutes: ..., seconds: ..., milliseconds: ... }`\n   * @private\n   */\n  __getMsec(obj) {\n    let result = ((obj && obj.hours) || 0) * 60 * 60 * 1000;\n    result += ((obj && obj.minutes) || 0) * 60 * 1000;\n    result += ((obj && obj.seconds) || 0) * 1000;\n    result += (obj && parseInt(obj.milliseconds)) || 0;\n\n    return result;\n  }\n\n  /**\n   * Returning seconds from Object in the format `{ hours: ..., minutes: ..., seconds: ..., milliseconds: ... }`\n   * @private\n   */\n  __getSec(obj) {\n    let result = ((obj && obj.hours) || 0) * 60 * 60;\n    result += ((obj && obj.minutes) || 0) * 60;\n    result += (obj && obj.seconds) || 0;\n    result += (obj && obj.milliseconds / 1000) || 0;\n\n    return result;\n  }\n\n  /**\n   * Returning Object in the format `{ hours: ..., minutes: ..., seconds: ..., milliseconds: ... }`\n   * from the result of adding step value in milliseconds to the milliseconds amount.\n   * With `precision` parameter rounding the value to the closest step valid interval.\n   * @private\n   */\n  __addStep(msec, step, precision) {\n    // If the time is `00:00` and step changes value downwards, it should be considered as `24:00`\n    if (msec === 0 && step < 0) {\n      msec = 24 * 60 * 60 * 1000;\n    }\n\n    const stepMsec = step * 1000;\n    const diffToNext = msec % stepMsec;\n    if (stepMsec < 0 && diffToNext && precision) {\n      msec -= diffToNext;\n    } else if (stepMsec > 0 && diffToNext && precision) {\n      msec -= diffToNext - stepMsec;\n    } else {\n      msec += stepMsec;\n    }\n\n    var hh = Math.floor(msec / 1000 / 60 / 60);\n    msec -= hh * 1000 * 60 * 60;\n    var mm = Math.floor(msec / 1000 / 60);\n    msec -= mm * 1000 * 60;\n    var ss = Math.floor(msec / 1000);\n    msec -= ss * 1000;\n\n    return { hours: hh < 24 ? hh : 0, minutes: mm, seconds: ss, milliseconds: msec };\n  }\n\n  /** @private */\n  __updateDropdownItems(i8n, min, max, step) {\n    const minTimeObj = this.__validateTime(this.__parseISO(min));\n    const minSec = this.__getSec(minTimeObj);\n\n    const maxTimeObj = this.__validateTime(this.__parseISO(max));\n    const maxSec = this.__getSec(maxTimeObj);\n\n    this.__adjustValue(minSec, maxSec, minTimeObj, maxTimeObj);\n\n    this.__dropdownItems = this.__generateDropdownList(minSec, maxSec, step);\n\n    if (step !== this.__oldStep) {\n      this.__oldStep = step;\n      const parsedObj = this.__validateTime(this.__parseISO(this.value));\n      this.__updateValue(parsedObj);\n    }\n\n    if (this.value) {\n      this.__dropdownElement.value = this.i18n.formatTime(this.i18n.parseTime(this.value));\n    }\n  }\n\n  /** @private */\n  __generateDropdownList(minSec, maxSec, step) {\n    if (step < 15 * 60 || !this.__validDayDivisor(step)) {\n      return [];\n    }\n\n    const generatedList = [];\n\n    // Default step in overlay items is 1 hour\n    step = step || 3600;\n\n    let time = -step + minSec;\n    while (time + step >= minSec && time + step <= maxSec) {\n      const timeObj = this.__validateTime(this.__addStep(time * 1000, step));\n      time += step;\n      const formatted = this.i18n.formatTime(timeObj);\n      generatedList.push({ label: formatted, value: formatted });\n    }\n\n    return generatedList;\n  }\n\n  /** @private */\n  __adjustValue(minSec, maxSec, minTimeObj, maxTimeObj) {\n    // Do not change the value if it is empty\n    if (!this.__memoValue) {\n      return;\n    }\n\n    const valSec = this.__getSec(this.__memoValue);\n\n    if (valSec < minSec) {\n      this.__updateValue(minTimeObj);\n    } else if (valSec > maxSec) {\n      this.__updateValue(maxTimeObj);\n    }\n  }\n\n  /** @private */\n  __valueChanged(value, oldValue) {\n    const parsedObj = (this.__memoValue = this.__parseISO(value));\n    const newValue = this.__formatISO(parsedObj) || '';\n\n    if (this.value !== '' && this.value !== null && !parsedObj) {\n      this.value = oldValue;\n    } else if (this.value !== newValue) {\n      this.value = newValue;\n    } else {\n      this.__updateInputValue(parsedObj);\n    }\n  }\n\n  /** @private */\n  __onInputChange() {\n    const parsedObj = this.i18n.parseTime(this.__dropdownElement.value);\n    const newValue = this.i18n.formatTime(parsedObj) || '';\n\n    if (parsedObj) {\n      if (this.__dropdownElement.value !== newValue) {\n        this.__dropdownElement.value = newValue;\n      } else {\n        this.__updateValue(parsedObj);\n      }\n    } else {\n      this.value = '';\n    }\n  }\n\n  /** @private */\n  __updateValue(obj) {\n    const timeString = this.__formatISO(this.__validateTime(obj)) || '';\n    this.value = timeString;\n  }\n\n  /** @private */\n  __updateInputValue(obj) {\n    const timeString = this.i18n.formatTime(this.__validateTime(obj)) || '';\n    this.__dropdownElement.value = timeString;\n  }\n\n  /** @private */\n  __validateTime(timeObject) {\n    if (timeObject) {\n      timeObject.hours = parseInt(timeObject.hours);\n      timeObject.minutes = parseInt(timeObject.minutes || 0);\n      timeObject.seconds = this.__stepSegment < 3 ? undefined : parseInt(timeObject.seconds || 0);\n      timeObject.milliseconds = this.__stepSegment < 4 ? undefined : parseInt(timeObject.milliseconds || 0);\n    }\n    return timeObject;\n  }\n\n  /** @private */\n  get __stepSegment() {\n    if (this.step % 3600 === 0) {\n      // Accept hours\n      return 1;\n    } else if (this.step % 60 === 0 || !this.step) {\n      // Accept minutes\n      return 2;\n    } else if (this.step % 1 === 0) {\n      // Accept seconds\n      return 3;\n    } else if (this.step < 1) {\n      // Accept milliseconds\n      return 4;\n    }\n    return undefined;\n  }\n\n  /** @private */\n  __formatISO(time) {\n    // The default i18n formatter implementation is ISO 8601 compliant\n    return TimePickerElement.properties.i18n.value().formatTime(time);\n  }\n\n  /** @private */\n  __parseISO(text) {\n    // The default i18n parser implementation is ISO 8601 compliant\n    return TimePickerElement.properties.i18n.value().parseTime(text);\n  }\n\n  /** @protected */\n  _getInputElement() {\n    return this.shadowRoot.querySelector('vaadin-time-picker-text-field');\n  }\n\n  /** @private */\n  get __inputElement() {\n    return this.__memoInput || (this.__memoInput = this._getInputElement());\n  }\n\n  /** @private */\n  get __dropdownElement() {\n    return this.__memoDropdown || (this.__memoDropdown = this.shadowRoot.querySelector('vaadin-combo-box-light'));\n  }\n\n  /**\n   * Focusable element used by vaadin-control-state-mixin\n   * @return {!HTMLElement}\n   * @protected\n   */\n  get focusElement() {\n    return this.__inputElement;\n  }\n\n  /**\n   * Returns true if `value` is valid, and sets the `invalid` flag appropriately.\n   *\n   * @return {boolean} True if the value is valid and sets the `invalid` flag appropriately\n   */\n  validate() {\n    return !(this.invalid = !this.checkValidity());\n  }\n\n  /**\n   * Returns true if `time` satisfies the `min` and `max` constraints (if any).\n   *\n   * @param {!TimePickerTime} time Value to check against constraints\n   * @return {boolean} True if `time` satisfies the constraints\n   * @protected\n   */\n  _timeAllowed(time) {\n    const parsedMin = this.i18n.parseTime(this.min);\n    const parsedMax = this.i18n.parseTime(this.max);\n\n    return (\n      (!this.__getMsec(parsedMin) || this.__getMsec(time) >= this.__getMsec(parsedMin)) &&\n      (!this.__getMsec(parsedMax) || this.__getMsec(time) <= this.__getMsec(parsedMax))\n    );\n  }\n\n  /**\n   * Returns true if the current input value satisfies all constraints (if any)\n   *\n   * You can override the `checkValidity` method for custom validations.\n   *\n   * @return {boolean} True if the value is valid\n   */\n  checkValidity() {\n    return !!(\n      this.__inputElement.focusElement.checkValidity() &&\n      (!this.value || this._timeAllowed(this.i18n.parseTime(this.value))) &&\n      (!this.__dropdownElement.value || this.i18n.parseTime(this.__dropdownElement.value))\n    );\n  }\n\n  /**\n   * Fired when the user commits a value change.\n   *\n   * @event change\n   */\n}\n\ncustomElements.define(TimePickerElement.is, TimePickerElement);\n\nexport { TimePickerElement };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-time-picker@3.0.0/node_modules/@vaadin/vaadin-time-picker/src/vaadin-time-picker-text-field.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { TextFieldElement } from '@vaadin/vaadin-text-field/src/vaadin-text-field.js';\nimport { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\n\nregisterStyles(\n  'vaadin-time-picker-text-field',\n  css`\n    :host([dir='rtl']) [part='input-field'] {\n      direction: ltr;\n    }\n\n    :host([dir='rtl']) [part='value']::placeholder {\n      direction: rtl;\n      text-align: left;\n    }\n\n    :host([dir='rtl']) [part='input-field'] ::slotted(input)::placeholder {\n      direction: rtl;\n      text-align: left;\n    }\n  `,\n  { moduleId: 'vaadin-time-picker-text-field-styles' }\n);\n\n/**\n * The text-field element.\n *\n * ### Styling\n *\n * See [`<vaadin-text-field>` documentation](https://github.com/vaadin/vaadin-text-field/blob/master/src/vaadin-text-field.html)\n * for `<vaadin-time-picker-text-field>` parts and available slots (prefix, suffix etc.)\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n */\nclass TimePickerTextFieldElement extends TextFieldElement {\n  static get is() {\n    return 'vaadin-time-picker-text-field';\n  }\n}\n\ncustomElements.define(TimePickerTextFieldElement.is, TimePickerTextFieldElement);\n"
      }
     ]
    },
    {
     "id": 141,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-progress-bar@1.3.0/node_modules/@vaadin/vaadin-progress-bar/src/vaadin-progress-bar.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-progress-bar@1.3.0/node_modules/@vaadin/vaadin-progress-bar/src/vaadin-progress-bar.js",
       "source": "/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { ProgressMixin } from './vaadin-progress-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n/**\n * `<vaadin-progress-bar>` is a Web Component for progress bars.\n *\n * ```html\n * <vaadin-progress-bar min=\"0\" max=\"1\" value=\"0.5\">\n * </vaadin-progress-bar>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `bar` | Progress-bar's background\n * `value` | Progress-bar's foreground\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * The following custom properties are available:\n *\n * Custom property | Description | Default\n * ----------------|-------------|-------------\n * `--vaadin-progress-value` | current progress value (between 0 and 1) | 0\n *\n * The following state attributes are available for styling:\n *\n * Attribute       | Description | Part name\n * ----------------|-------------|------------\n * `indeterminate` | Set to an indeterminate progress bar | :host\n *\n * @extends PolymerElement\n * @mixes ProgressMixin\n * @mixes ThemableMixin\n * @mixes ElementMixin\n * @demo demo/index.html\n */\nclass ProgressBarElement extends ElementMixin(ThemableMixin(ProgressMixin(PolymerElement))) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: block;\n        width: 100%; /* prevent collapsing inside non-stretching column flex */\n        height: 8px;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      [part=\"bar\"] {\n        height: 100%;\n      }\n\n      [part=\"value\"] {\n        height: 100%;\n        transform-origin: 0 50%;\n        transform: scaleX(var(--vaadin-progress-value));\n      }\n\n      /* RTL specific styles */\n\n      :host([dir=\"rtl\"]) [part=\"value\"] {\n        transform-origin: 100% 50%;\n      }\n    </style>\n\n    <div part=\"bar\">\n      <div part=\"value\"></div>\n    </div>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-progress-bar';\n  }\n\n  static get version() {\n    return '1.3.0';\n  }\n}\n\ncustomElements.define(ProgressBarElement.is, ProgressBarElement);\n\nexport { ProgressBarElement };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-progress-bar@1.3.0/node_modules/@vaadin/vaadin-progress-bar/src/vaadin-progress-mixin.js",
       "source": "/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/**\n * @polymerMixin\n */\nexport const ProgressMixin = superClass =>\n  class VaadinProgressMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * Current progress value.\n         */\n        value: {\n          type: Number,\n          observer: '_valueChanged'\n        },\n        /**\n         * Minimum bound of the progress bar.\n         * @type {number}\n         */\n        min: {\n          type: Number,\n          value: 0,\n          observer: '_minChanged'\n        },\n        /**\n         * Maximum bound of the progress bar.\n         * @type {number}\n         */\n        max: {\n          type: Number,\n          value: 1,\n          observer: '_maxChanged'\n        },\n        /**\n         * Indeterminate state of the progress bar.\n         * This property takes precedence over other state properties (min, max, value).\n         * @type {boolean}\n         */\n        indeterminate: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true\n        }\n      };\n    }\n\n    static get observers() {\n      return [\n        '_normalizedValueChanged(value, min, max)'\n      ];\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this.setAttribute('role', 'progressbar');\n    }\n\n    /** @private */\n    _normalizedValueChanged(value, min, max) {\n      const newNormalizedValue = this._normalizeValue(value, min, max);\n\n      this.style.setProperty('--vaadin-progress-value', newNormalizedValue);\n\n      this.updateStyles({\n        '--vaadin-progress-value': String(newNormalizedValue)\n      });\n    }\n\n    /** @private */\n    _valueChanged(newV, oldV) {\n      this.setAttribute('aria-valuenow', newV);\n    }\n\n    /** @private */\n    _minChanged(newV, oldV) {\n      this.setAttribute('aria-valuemin', newV);\n    }\n\n    /** @private */\n    _maxChanged(newV, oldV) {\n      this.setAttribute('aria-valuemax', newV);\n    }\n\n    /**\n     * Percent of current progress relative to whole progress bar (max - min)\n     * @private\n     */\n    _normalizeValue(value, min, max) {\n      let nV;\n\n      if (!value && value != 0) {\n        nV = 0;\n      } else if (min >= max) {\n        nV = 1;\n      } else {\n        nV = (value - min) / (max - min);\n\n        nV = Math.min(Math.max(nV, 0), 1);\n      }\n\n      return nV;\n    }\n  };\n"
      }
     ]
    },
    {
     "id": 150,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-avatar@2.0.2/node_modules/@vaadin/vaadin-avatar/src/vaadin-avatar-icons.js",
     "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `\n  <style>\n    @font-face {\n      font-family: 'vaadin-avatar-icons';\n      src: url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAQAAAsAAAAABnwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAADsAAABUIIslek9TLzIAAAFEAAAAQwAAAFZAIUmEY21hcAAAAYgAAABLAAABcOspwa1nbHlmAAAB1AAAAEUAAABMYO4o1WhlYWQAAAIcAAAALgAAADYYaAmGaGhlYQAAAkwAAAAdAAAAJAZsA1VobXR4AAACbAAAAAgAAAAIA+gAAGxvY2EAAAJ0AAAABgAAAAYAJgAAbWF4cAAAAnwAAAAeAAAAIAEOACFuYW1lAAACnAAAAUIAAAKavFDYrHBvc3QAAAPgAAAAHQAAAC52hGZ4eJxjYGRgYOBiMGCwY2BycfMJYeDLSSzJY5BiYGGAAJA8MpsxJzM9kYEDxgPKsYBpDiBmg4gCACY7BUgAeJxjYGT8wjiBgZWBgamKaQ8DA0MPhGZ8wGDIyAQUZWBlZsAKAtJcUxgcXjG+YmQO+p/FEMUcxDANKMwIkgMADiUMJQB4nGNgYGBlYGBgBmIdIGZhYGAMYWBkAAE/oCgjWJyZgQsszsKgBFbDAhJ/xfj/P4wE8lnAJAMjG8Mo4AGTMlAeOKwgmIERADU0CX0AeJxjYGIAAmYJpkgGHgYRBgZGJT1GEztGIzlGET5GKEuU8YuSpZKSpQuI+LfLv21emz9jHJQPJP7dsUywsEiwBACG8g9CAAAAeJxjYGRgYADicIOnh+P5bb4ycDO/AIow3JZ4rIJMM0swRQIpDgYmEA8AKwgJOwAAeJxjYGRgYA76nwUkXzAAAbMEAyMDKmACAE2GAskAAAAAAAAAA+gAAAAAAAAAJgAAeJxjYGRgYGBiEAViBjCLgYELCBkY/oP5DAAKuwEwAAB4nI2Qu07DMBSG//SGaCWEhMSAGDx1QU0vYyemdmDrUDEhuamTpkriyHEj9RF4B56Bh2Bg5mmY+8d4Qh3qo9jf+c45thQAt/hGgGYFuHN7s1q4YvbHbdKD5w555LmLAZ499+hfPPfxhDfPA/p33hB0rmmG+PDcwg2+PLfpfzx3yL+eu7gPHj33MAxmnvtYB6+eB/SftZTbtBjJWlppRmmki2qlkkMmzZnKGbVWpkp1Iabh5Ex1qQplpFVbsTmKqk5m1sYiNjoXC11YlWValEbvVWTDnbXlfDyOvQ8jnaOGZGyRouCfky63/AyzFBE0fYUVFBIckLnKZTOXda15s+GZulxgihCTC2eXnC3cfFNV7BfY4Mi9eT3BjNYiZh6zRyMnLdxs050xNE3panuaiD7Ezk2VmGPMiP/1h+71/ATcWYAhAAB4nGNgYoAALgbsgImRiZGZgaW0OLWIgQEACl4B2QAAAA==) format('woff');\n      font-weight: normal;\n      font-style: normal;\n    }\n  </style>\n`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
    },
    {
     "id": 151,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-details@1.2.0/node_modules/@vaadin/vaadin-details/theme/lumo/vaadin-details.js",
     "source": "import './vaadin-details-styles.js';\nimport '../../src/vaadin-details.js';\n"
    },
    {
     "id": 152,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-menu-bar@2.0.0/node_modules/@vaadin/vaadin-menu-bar/theme/lumo/vaadin-menu-bar.js + 9 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-menu-bar@2.0.0/node_modules/@vaadin/vaadin-menu-bar/theme/lumo/vaadin-menu-bar.js",
       "source": "import './vaadin-menu-bar-button.js';\nimport './vaadin-menu-bar-item-styles.js';\nimport './vaadin-menu-bar-overlay-styles.js';\nimport '@vaadin/vaadin-context-menu/theme/lumo/vaadin-context-menu.js';\nimport '../../src/vaadin-menu-bar.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-menu-bar@2.0.0/node_modules/@vaadin/vaadin-menu-bar/theme/lumo/vaadin-menu-bar-button.js",
       "source": "import './vaadin-menu-bar-button-styles.js';\nimport '../../src/vaadin-menu-bar-button.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-menu-bar@2.0.0/node_modules/@vaadin/vaadin-menu-bar/theme/lumo/vaadin-menu-bar-item-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\n\nregisterStyles(\n  'vaadin-context-menu-item',\n  css`\n    :host([theme='menu-bar-item']) [part='content'] {\n      display: flex;\n      /* tweak to inherit centering from menu bar button */\n      align-items: inherit;\n      justify-content: inherit;\n    }\n\n    :host([theme='menu-bar-item']) [part='content'] ::slotted(iron-icon) {\n      display: inline-block;\n      width: var(--lumo-icon-size-m);\n      height: var(--lumo-icon-size-m);\n    }\n\n    :host([theme='menu-bar-item']) [part='content'] ::slotted(iron-icon[icon^='vaadin:']) {\n      padding: var(--lumo-space-xs);\n      box-sizing: border-box !important;\n    }\n  `,\n  { moduleId: 'lumo-menu-bar-item' }\n);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-menu-bar@2.0.0/node_modules/@vaadin/vaadin-menu-bar/theme/lumo/vaadin-menu-bar-overlay-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\n\nregisterStyles(\n  'vaadin-context-menu-overlay',\n  css`\n    :host(:first-of-type) {\n      padding-top: var(--lumo-space-xs);\n    }\n  `,\n  { moduleId: 'lumo-menu-bar-overlay' }\n);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-menu-bar@2.0.0/node_modules/@vaadin/vaadin-menu-bar/src/vaadin-menu-bar.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { ButtonsMixin } from './vaadin-menu-bar-buttons-mixin.js';\nimport { InteractionsMixin } from './vaadin-menu-bar-interactions-mixin.js';\nimport './vaadin-menu-bar-submenu.js';\nimport './vaadin-menu-bar-button.js';\n\n/**\n * `<vaadin-menu-bar>` is a Web Component providing a set of horizontally stacked buttons offering\n * the user quick access to a consistent set of commands. Each button can toggle a submenu with\n * support for additional levels of nested menus.\n *\n * To create the menu bar, first add the component to the page:\n *\n * ```\n * <vaadin-menu-bar></vaadin-menu-bar>\n * ```\n *\n * And then use [`items`](#/elements/vaadin-menu-bar#property-items) property to initialize the structure:\n *\n * ```\n * document.querySelector('vaadin-menu-bar').items = [{text: 'File'}, {text: 'Edit'}];\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are exposed for styling:\n *\n * Part name         | Description\n * ------------------|----------------\n * `container`       | The container wrapping menu bar buttons.\n * `menu-bar-button` | The menu bar button.\n * `overflow-button` | The \"overflow\" button appearing when menu bar width is not enough to fit all the buttons.\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @fires {CustomEvent<boolean>} item-selected - Fired when a submenu item or menu bar button without children is clicked.\n *\n * @extends HTMLElement\n * @mixes ButtonsMixin\n * @mixes InteractionsMixin\n * @mixes ElementMixin\n * @mixes ThemableMixin\n */\nclass MenuBarElement extends ButtonsMixin(InteractionsMixin(ElementMixin(ThemableMixin(PolymerElement)))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        [part='container'] {\n          position: relative;\n          display: flex;\n          width: 100%;\n          flex-wrap: nowrap;\n          overflow: hidden;\n        }\n\n        [part$='button'] {\n          flex-shrink: 0;\n        }\n\n        [part='overflow-button'] {\n          margin-right: 0;\n        }\n\n        .dots::before {\n          display: block;\n          content: '\\\\00B7\\\\00B7\\\\00B7';\n          font-size: inherit;\n          line-height: inherit;\n        }\n      </style>\n\n      <div part=\"container\">\n        <vaadin-menu-bar-button part=\"overflow-button\" hidden$=\"[[!_hasOverflow]]\">\n          <div class=\"dots\"></div>\n        </vaadin-menu-bar-button>\n      </div>\n      <vaadin-menu-bar-submenu is-root=\"\"></vaadin-menu-bar-submenu>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-menu-bar';\n  }\n\n  static get version() {\n    return '2.0.0';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * @typedef MenuBarItem\n       * @type {object}\n       * @property {string} text - Text to be set as the menu button component's textContent.\n       * @property {union: string | object} component - The component to represent the button content.\n       * Either a tagName or an element instance. Defaults to \"vaadin-context-menu-item\".\n       * @property {boolean} disabled - If true, the button is disabled and cannot be activated.\n       * @property {SubMenuItem[]} children - Array of submenu items.\n       */\n\n      /**\n       * @typedef SubMenuItem\n       * @type {object}\n       * @property {string} text - Text to be set as the menu item component's textContent.\n       * @property {union: string | object} component - The component to represent the item.\n       * Either a tagName or an element instance. Defaults to \"vaadin-context-menu-item\".\n       * @property {boolean} disabled - If true, the item is disabled and cannot be selected.\n       * @property {boolean} checked - If true, the item shows a checkmark next to it.\n       * @property {SubMenuItem[]} children - Array of child submenu items.\n       */\n\n      /**\n       * Defines a hierarchical structure, where root level items represent menu bar buttons,\n       * and `children` property configures a submenu with items to be opened below\n       * the button on click, Enter, Space, Up and Down arrow keys.\n       *\n       * #### Example\n       *\n       * ```js\n       * menubar.items = [\n       *   {\n       *     text: 'File',\n       *     children: [\n       *       {text: 'Open'}\n       *       {text: 'Auto Save', checked: true},\n       *     ]\n       *   },\n       *   {component: 'hr'},\n       *   {\n       *     text: 'Edit',\n       *     children: [\n       *       {text: 'Undo', disabled: true},\n       *       {text: 'Redo'}\n       *     ]\n       *   },\n       *   {text: 'Help'}\n       * ];\n       * ```\n       *\n       * @type {!Array<!MenuBarItem>}\n       */\n      items: {\n        type: Array,\n        value: () => []\n      }\n    };\n  }\n\n  /**\n   * Fired when either a submenu item or menu bar button without nested children is clicked.\n   *\n   * @event item-selected\n   * @param {Object} detail\n   * @param {Object} detail.value the selected menu bar item\n   */\n}\n\ncustomElements.define(MenuBarElement.is, MenuBarElement);\n\nexport { MenuBarElement };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-menu-bar@2.0.0/node_modules/@vaadin/vaadin-menu-bar/theme/lumo/vaadin-menu-bar-button-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-button/theme/lumo/vaadin-button-styles.js';\n\nregisterStyles(\n  'vaadin-menu-bar-button',\n  css`\n    :host {\n      margin: calc(var(--lumo-space-xs) / 2);\n      margin-left: 0;\n      border-radius: 0;\n    }\n\n    [part='label'] {\n      width: 100%;\n    }\n\n    /* NOTE(web-padawan): avoid using shorthand padding property for IE11 */\n    [part='label'] ::slotted(vaadin-context-menu-item) {\n      justify-content: center;\n      height: var(--lumo-button-size);\n      margin: 0 calc((var(--lumo-size-m) / 3 + var(--lumo-border-radius) / 2) * -1);\n      padding-left: calc(var(--lumo-size-m) / 3 + var(--lumo-border-radius) / 2);\n      padding-right: calc(var(--lumo-size-m) / 3 + var(--lumo-border-radius) / 2);\n    }\n\n    :host([theme~='small']) [part='label'] ::slotted(vaadin-context-menu-item) {\n      min-height: var(--lumo-size-s);\n      margin: 0 calc((var(--lumo-size-s) / 3 + var(--lumo-border-radius) / 2) * -1);\n      padding-left: calc(var(--lumo-size-s) / 3 + var(--lumo-border-radius) / 2);\n      padding-right: calc(var(--lumo-size-s) / 3 + var(--lumo-border-radius) / 2);\n    }\n\n    :host([theme~='tertiary']) [part='label'] ::slotted(vaadin-context-menu-item) {\n      margin: 0 calc((var(--lumo-button-size) / 6) * -1);\n      padding-left: calc(var(--lumo-button-size) / 6);\n      padding-right: calc(var(--lumo-button-size) / 6);\n    }\n\n    :host([theme~='tertiary-inline']) {\n      margin-top: calc(var(--lumo-space-xs) / 2);\n      margin-bottom: calc(var(--lumo-space-xs) / 2);\n      margin-right: calc(var(--lumo-space-xs) / 2);\n    }\n\n    :host([theme~='tertiary-inline']) [part='label'] ::slotted(vaadin-context-menu-item) {\n      margin: 0;\n      padding: 0;\n    }\n\n    :host([expanded]) {\n      background-color: var(--lumo-primary-color-10pct);\n    }\n\n    :host([expanded][theme~='primary']) {\n      background-color: var(--lumo-primary-color-50pct);\n    }\n\n    :host([disabled][theme~='primary']) {\n      color: var(--lumo-disabled-text-color);\n      background-color: var(--lumo-contrast-5pct);\n    }\n\n    :host([expanded][theme~='tertiary']),\n    :host([expanded][theme~='tertiary-inline']) {\n      background-color: var(--lumo-primary-color-10pct) !important;\n    }\n\n    :host(:first-of-type) {\n      border-radius: var(--lumo-border-radius-m) 0 0 var(--lumo-border-radius-m);\n\n      /* Needed to retain the focus-ring with border-radius */\n      margin-left: calc(var(--lumo-space-xs) / 2);\n    }\n\n    :host(:nth-last-of-type(2)),\n    :host([part='overflow-button']) {\n      border-radius: 0 var(--lumo-border-radius-m) var(--lumo-border-radius-m) 0;\n    }\n\n    :host([theme~='tertiary']),\n    :host([theme~='tertiary-inline']) {\n      border-radius: var(--lumo-border-radius-m);\n    }\n\n    :host([part='overflow-button']) {\n      min-width: var(--lumo-button-size);\n      padding-left: calc(var(--lumo-button-size) / 4);\n      padding-right: calc(var(--lumo-button-size) / 4);\n    }\n\n    :host([part='overflow-button']) ::slotted(*) {\n      font-size: var(--lumo-font-size-xl);\n    }\n\n    :host([part='overflow-button']) [part='prefix'],\n    :host([part='overflow-button']) [part='suffix'] {\n      margin-left: 0;\n      margin-right: 0;\n    }\n\n    /* RTL styles */\n    :host([dir='rtl']) {\n      margin-left: calc(var(--lumo-space-xs) / 2);\n      margin-right: 0;\n      border-radius: 0;\n    }\n\n    :host([dir='rtl']:first-of-type) {\n      border-radius: 0 var(--lumo-border-radius-m) var(--lumo-border-radius-m) 0;\n      margin-right: calc(var(--lumo-space-xs) / 2);\n    }\n\n    :host([dir='rtl']:nth-last-of-type(2)),\n    :host([dir='rtl'][part='overflow-button']) {\n      border-radius: var(--lumo-border-radius-m) 0 0 var(--lumo-border-radius-m);\n    }\n  `,\n  { include: ['lumo-button'], moduleId: 'lumo-menu-bar-button' }\n);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-menu-bar@2.0.0/node_modules/@vaadin/vaadin-menu-bar/src/vaadin-menu-bar-button.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { ButtonElement } from '@vaadin/vaadin-button/src/vaadin-button.js';\nimport { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\n\nregisterStyles(\n  'vaadin-menu-bar-button',\n  css`\n    [part='label'] ::slotted(vaadin-context-menu-item) {\n      position: relative;\n      z-index: 1;\n    }\n  `,\n  { moduleId: 'vaadin-menu-bar-button-styles' }\n);\n\n/**\n * @extends PolymerElement\n */\nclass MenuBarButtonElement extends ButtonElement {\n  static get is() {\n    return 'vaadin-menu-bar-button';\n  }\n}\n\ncustomElements.define(MenuBarButtonElement.is, MenuBarButtonElement);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-menu-bar@2.0.0/node_modules/@vaadin/vaadin-menu-bar/src/vaadin-menu-bar-buttons-mixin.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { animationFrame } from '@polymer/polymer/lib/utils/async.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { IronResizableBehavior } from '@polymer/iron-resizable-behavior/iron-resizable-behavior.js';\nimport { mixinBehaviors } from '@polymer/polymer/lib/legacy/class.js';\n\n/**\n * @polymerMixin\n */\nexport const ButtonsMixin = (superClass) =>\n  class extends mixinBehaviors(IronResizableBehavior, superClass) {\n    static get properties() {\n      return {\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _hasOverflow: {\n          type: Boolean,\n          value: false\n        }\n      };\n    }\n\n    static get observers() {\n      return ['_menuItemsChanged(items, items.splices)'];\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this.setAttribute('role', 'menubar');\n\n      this.addEventListener('iron-resize', () => this.__onResize());\n\n      this._overflow.setAttribute('role', 'menuitem');\n      this._overflow.setAttribute('aria-haspopup', 'true');\n      this._overflow.setAttribute('aria-expanded', 'false');\n    }\n\n    /**\n     * @return {!Array<!HTMLElement>}\n     * @protected\n     */\n    get _buttons() {\n      return Array.from(this.shadowRoot.querySelectorAll('[part$=\"button\"]'));\n    }\n\n    /**\n     * @return {!HTMLElement}\n     * @protected\n     */\n    get _container() {\n      return this.shadowRoot.querySelector('[part=\"container\"]');\n    }\n\n    /**\n     * @return {!HTMLElement}\n     * @protected\n     */\n    get _overflow() {\n      return this.shadowRoot.querySelector('[part=\"overflow-button\"]');\n    }\n\n    /** @private */\n    _menuItemsChanged(items) {\n      if (items !== this._oldItems) {\n        this._oldItems = items;\n        this.__renderButtons(items);\n      }\n    }\n\n    /** @private */\n    __detectOverflow() {\n      const container = this._container;\n      const buttons = this._buttons.slice(0);\n      const overflow = buttons.pop();\n      const isRTL = this.getAttribute('dir') === 'rtl';\n\n      // reset all buttons in the menu bar and the overflow button\n      for (let i = 0; i < buttons.length; i++) {\n        const btn = buttons[i];\n        btn.disabled = btn.item.disabled;\n        btn.style.visibility = '';\n        btn.style.position = '';\n\n        // teleport item component back from \"overflow\" sub-menu\n        const item = btn.item && btn.item.component;\n        if (item instanceof HTMLElement && item.classList.contains('vaadin-menu-item')) {\n          btn.appendChild(item);\n          item.classList.remove('vaadin-menu-item');\n        }\n      }\n      overflow.item = { children: [] };\n      this._hasOverflow = false;\n\n      if (this._subMenu.opened) {\n        this._subMenu.close();\n      }\n\n      // hide any overflowing buttons and put them in the 'overflow' button\n      if (container.offsetWidth < container.scrollWidth) {\n        this._hasOverflow = true;\n\n        let i;\n        for (i = buttons.length; i > 0; i--) {\n          const btn = buttons[i - 1];\n          const btnStyle = getComputedStyle(btn);\n\n          const btnWidth = btn.offsetWidth;\n          // if this button isn't overflowing, then the rest aren't either\n          if (\n            (!isRTL && btn.offsetLeft + btnWidth < container.offsetWidth - overflow.offsetWidth) ||\n            (isRTL && btn.offsetLeft >= overflow.offsetWidth)\n          ) {\n            break;\n          }\n\n          btn.disabled = true;\n          btn.style.visibility = 'hidden';\n          btn.style.position = 'absolute';\n          // save width for buttons with component\n          btn.style.width = btnStyle.width;\n        }\n        overflow.item = {\n          children: buttons.filter((b, idx) => idx >= i).map((b) => b.item)\n        };\n      }\n    }\n\n    /**\n     * Call this method after updating menu bar `items` dynamically, including changing\n     * any property on the item object corresponding to one of the menu bar buttons.\n     */\n    render() {\n      if (!this.shadowRoot) {\n        return;\n      }\n      this.__renderButtons(this.items);\n    }\n\n    /** @private */\n    __renderButtons(items = []) {\n      const container = this._container;\n      const overflow = this._overflow;\n\n      while (container.children.length > 1) {\n        container.removeChild(container.firstElementChild);\n      }\n\n      items.forEach((item) => {\n        const button = document.createElement('vaadin-menu-bar-button');\n        const itemCopy = Object.assign({}, item);\n        button.item = itemCopy;\n\n        const itemComponent = item.component;\n        if (itemComponent) {\n          let component;\n          const isElement = itemComponent instanceof HTMLElement;\n          // use existing item component, if any\n          if (isElement && itemComponent.localName === 'vaadin-context-menu-item') {\n            component = itemComponent;\n          } else {\n            component = document.createElement('vaadin-context-menu-item');\n            component.appendChild(isElement ? itemComponent : document.createElement(itemComponent));\n          }\n          if (item.text) {\n            const node = component.firstChild || component;\n            node.textContent = item.text;\n          }\n          itemCopy.component = component;\n          // save item for overflow menu\n          component.item = itemCopy;\n          component.setAttribute('theme', 'menu-bar-item');\n          button.appendChild(component);\n        } else if (item.text) {\n          button.textContent = item.text;\n        }\n        if (item.disabled) {\n          button.disabled = true;\n          button.setAttribute('tabindex', '-1');\n        } else {\n          button.setAttribute('tabindex', '0');\n        }\n        if (button.item.children) {\n          button.setAttribute('aria-haspopup', 'true');\n          button.setAttribute('aria-expanded', 'false');\n        }\n        button.setAttribute('part', 'menu-bar-button');\n        if (this.theme && this.theme !== '') {\n          button.setAttribute('theme', this.theme);\n        }\n        container.insertBefore(button, overflow);\n        button.setAttribute('role', 'menuitem');\n      });\n\n      this.__detectOverflow();\n    }\n\n    /** @private */\n    __onResize() {\n      this.__debounceOverflow = Debouncer.debounce(\n        this.__debounceOverflow,\n        animationFrame,\n        this.__detectOverflow.bind(this)\n      );\n    }\n  };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-menu-bar@2.0.0/node_modules/@vaadin/vaadin-menu-bar/src/vaadin-menu-bar-interactions-mixin.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nexport const InteractionsMixin = (superClass) =>\n  class InteractionsMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * If true, the submenu will open on hover (mouseover) instead of click.\n         * @attr {boolean} open-on-hover\n         */\n        openOnHover: {\n          type: Boolean\n        }\n      };\n    }\n\n    constructor() {\n      super();\n      this.__boundOnContextMenuKeydown = this.__onContextMenuKeydown.bind(this);\n    }\n\n    static get observers() {\n      return ['_itemsChanged(items, items.splices)', '_themeChanged(theme)'];\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this.addEventListener('keydown', (e) => this._onKeydown(e));\n      this.addEventListener('focusin', (e) => this._onFocusin(e));\n\n      this._subMenu.addEventListener('item-selected', this.__onItemSelected.bind(this));\n      this._subMenu.addEventListener('close-all-menus', this.__onEscapeClose.bind(this));\n\n      const overlay = this._subMenu.$.overlay;\n      overlay.addEventListener('keydown', this.__boundOnContextMenuKeydown);\n      overlay.addEventListener('vaadin-overlay-open', this.__alignOverlayPosition.bind(this));\n\n      const container = this._container;\n      container.addEventListener('click', this.__onButtonClick.bind(this));\n      container.addEventListener('mouseover', (e) => this._onMouseOver(e));\n    }\n\n    /** @protected */\n    connectedCallback() {\n      super.connectedCallback();\n      document.addEventListener('click', this.__boundOutsideClickListener, true);\n    }\n\n    /** @protected */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n      document.removeEventListener('click', this.__boundOutsideClickListener, true);\n    }\n\n    /** @private */\n    get __isRTL() {\n      return this.getAttribute('dir') === 'rtl';\n    }\n\n    /** @private */\n    _themeChanged(theme) {\n      if (theme) {\n        this._buttons.forEach((button) => button.setAttribute('theme', theme));\n        this._subMenu.setAttribute('theme', theme);\n      } else {\n        this._buttons.forEach((button) => button.removeAttribute('theme'));\n        this._subMenu.removeAttribute('theme');\n      }\n    }\n\n    /** @private */\n    _focusButton(button) {\n      button.focus();\n      button.setAttribute('focus-ring', '');\n      this._buttons.forEach((btn) => {\n        btn.setAttribute('tabindex', btn === button ? '0' : '-1');\n      });\n    }\n\n    /** @private */\n    _getButtonFromEvent(e) {\n      return Array.from(e.composedPath()).filter((el) => el.localName === 'vaadin-menu-bar-button')[0];\n    }\n\n    /**\n     * @param {!FocusEvent} event\n     * @protected\n     */\n    _onFocusin() {\n      const target = this.shadowRoot.querySelector('[part$=\"button\"][tabindex=\"0\"]');\n      if (target) {\n        this._buttons.forEach((btn) => {\n          btn.setAttribute('tabindex', btn === target ? '0' : '-1');\n        });\n      }\n    }\n\n    /**\n     * @param {!KeyboardEvent} event\n     * @protected\n     */\n    _onKeydown(event) {\n      const button = this._getButtonFromEvent(event);\n      if (button) {\n        if (event.keyCode === 40) {\n          // ArrowDown, prevent page scroll\n          event.preventDefault();\n          if (button === this._expandedButton) {\n            // Menu opened previously, focus first item\n            this._focusFirstItem();\n          } else {\n            this.__openSubMenu(button, event);\n          }\n        } else if (event.keyCode === 38) {\n          // ArrowUp, prevent page scroll\n          event.preventDefault();\n          if (button === this._expandedButton) {\n            // Menu opened previously, focus last item\n            this._focusLastItem();\n          } else {\n            this.__openSubMenu(button, event, { focusLast: true });\n          }\n        } else if (event.keyCode === 27 && button === this._expandedButton) {\n          this._close(true);\n        } else {\n          this._navigateByKey(event);\n        }\n      }\n    }\n\n    /** @private */\n    _navigateByKey(event) {\n      // IE names for arrows do not include the Arrow prefix\n      const key = event.key.replace(/^Arrow/, '');\n      const buttons = this._buttons;\n      const currentBtn = this.shadowRoot.activeElement || this._expandedButton;\n      const currentIdx = buttons.indexOf(currentBtn);\n      let idx;\n      let increment;\n      const dirIncrement = this.__isRTL ? -1 : 1;\n\n      switch (key) {\n        case 'Left':\n          increment = -dirIncrement;\n          idx = currentIdx - dirIncrement;\n          break;\n        case 'Right':\n          increment = dirIncrement;\n          idx = currentIdx + dirIncrement;\n          break;\n        case 'Home':\n          increment = 1;\n          idx = 0;\n          break;\n        case 'End':\n          increment = -1;\n          idx = buttons.length - 1;\n          break;\n        default:\n        // do nothing.\n      }\n\n      idx = this._getAvailableIndex(idx, increment, buttons);\n      if (idx >= 0) {\n        event.preventDefault();\n        const btn = buttons[idx];\n        const wasExpanded = currentBtn === this._expandedButton;\n        if (wasExpanded) {\n          this._close();\n        }\n        this._focusButton(btn);\n        if (wasExpanded && btn.item && btn.item.children) {\n          this.__openSubMenu(btn, event, { keepFocus: true });\n        }\n      }\n    }\n\n    /** @private */\n    _getAvailableIndex(index, increment, buttons) {\n      const totalItems = buttons.length;\n      let idx = index;\n      for (let i = 0; typeof idx === 'number' && i < totalItems; i++, idx += increment || 1) {\n        if (idx < 0) {\n          idx = totalItems - 1;\n        } else if (idx >= totalItems) {\n          idx = 0;\n        }\n\n        const btn = buttons[idx];\n        if (!btn.disabled && !btn.hasAttribute('hidden')) {\n          return idx;\n        }\n      }\n      return -1;\n    }\n\n    /** @private */\n    get _subMenu() {\n      return this.shadowRoot.querySelector('vaadin-menu-bar-submenu');\n    }\n\n    /** @private */\n    __alignOverlayPosition(e) {\n      /* c8 ignore next */\n      if (!this._expandedButton) {\n        // When `openOnHover` is true, quickly moving cursor can close submenu,\n        // so by the time when event listener gets executed button is null.\n        // See https://github.com/vaadin/vaadin-menu-bar/issues/85\n        return;\n      }\n      const overlay = e.target;\n      const { width, height, left } = this._expandedButton.getBoundingClientRect();\n      if (overlay.hasAttribute('bottom-aligned')) {\n        overlay.style.bottom = parseInt(getComputedStyle(overlay).bottom) + height + 'px';\n      }\n      const endAligned = overlay.hasAttribute('end-aligned');\n      if (endAligned) {\n        if (this.__isRTL) {\n          overlay.style.left = left + 'px';\n        } else {\n          overlay.style.right = parseInt(getComputedStyle(overlay).right) - width + 'px';\n        }\n      }\n    }\n\n    /** @private */\n    _itemsChanged() {\n      const subMenu = this._subMenu;\n      if (subMenu && subMenu.opened) {\n        subMenu.close();\n      }\n    }\n\n    /**\n     * @param {!MouseEvent} e\n     * @protected\n     */\n    _onMouseOver(e) {\n      const button = this._getButtonFromEvent(e);\n      if (button && button !== this._expandedButton) {\n        const isOpened = this._subMenu.opened;\n        if (button.item.children && (this.openOnHover || isOpened)) {\n          this.__openSubMenu(button, e);\n        } else if (isOpened) {\n          this._close();\n        }\n      }\n    }\n\n    /** @private */\n    __onContextMenuKeydown(e) {\n      const item = Array.from(e.composedPath()).filter((el) => el._item)[0];\n      if (item) {\n        const list = item.parentNode;\n        if (e.keyCode === 38 && item === list.items[0]) {\n          this._close(true);\n        }\n        // ArrowLeft, or ArrowRight on non-parent submenu item\n        if (e.keyCode === 37 || (e.keyCode === 39 && !item._item.children)) {\n          // Prevent ArrowLeft from being handled in context-menu\n          e.stopImmediatePropagation();\n          this._navigateByKey(e);\n          const button = this.shadowRoot.activeElement;\n          if (button && button.item && button.item.children) {\n            this.__openSubMenu(button, e, { keepFocus: true });\n          }\n        }\n      }\n    }\n\n    /** @private */\n    __fireItemSelected(value) {\n      this.dispatchEvent(new CustomEvent('item-selected', { detail: { value } }));\n    }\n\n    /** @private */\n    __onButtonClick(e) {\n      e.stopPropagation();\n      const button = this._getButtonFromEvent(e);\n      if (button) {\n        this.__openSubMenu(button, e);\n      }\n    }\n\n    /** @private */\n    __openSubMenu(button, event, options = {}) {\n      const subMenu = this._subMenu;\n      const item = button.item;\n\n      if (subMenu.opened) {\n        this._close();\n        if (subMenu.listenOn === button) {\n          return;\n        }\n      }\n\n      const items = item && item.children;\n      if (!items || items.length === 0) {\n        this.__fireItemSelected(item);\n        return;\n      }\n\n      subMenu.items = items;\n      subMenu.listenOn = button;\n      this._expandedButton = button;\n\n      const rect = button.getBoundingClientRect();\n\n      requestAnimationFrame(() => {\n        button.dispatchEvent(\n          new CustomEvent('opensubmenu', {\n            detail: {\n              x: this.__isRTL ? rect.right : rect.left,\n              y: rect.bottom,\n              children: items\n            }\n          })\n        );\n\n        button.setAttribute('expanded', '');\n        button.setAttribute('aria-expanded', 'true');\n      });\n\n      if (options.focusLast) {\n        this.__onceOpened(() => this._focusLastItem());\n      }\n\n      if (options.keepFocus) {\n        this.__onceOpened(() => {\n          this._focusButton(this._expandedButton);\n        });\n      }\n\n      // do not focus item when open not from keyboard\n      if (event.type !== 'keydown') {\n        this.__onceOpened(() => {\n          subMenu.$.overlay.$.overlay.focus();\n        });\n      }\n    }\n\n    /** @private */\n    _focusFirstItem() {\n      const list = this._subMenu.$.overlay.firstElementChild;\n      list.focus();\n    }\n\n    /** @private */\n    _focusLastItem() {\n      const list = this._subMenu.$.overlay.firstElementChild;\n      const item = list.items[list.items.length - 1];\n      item && item.focus();\n    }\n\n    /** @private */\n    __onceOpened(cb) {\n      this.style.pointerEvents = 'auto';\n      const overlay = this._subMenu.$.overlay;\n      const listener = () => {\n        cb();\n        overlay.removeEventListener('vaadin-overlay-open', listener);\n      };\n      overlay.addEventListener('vaadin-overlay-open', listener);\n    }\n\n    /** @private */\n    __onItemSelected(e) {\n      e.stopPropagation();\n      this._close();\n      this.__fireItemSelected(e.detail.value);\n    }\n\n    /** @private */\n    __onEscapeClose() {\n      this.__deactivateButton(true);\n    }\n\n    /** @private */\n    __deactivateButton(restoreFocus) {\n      const button = this._expandedButton;\n      if (button && button.hasAttribute('expanded')) {\n        button.removeAttribute('expanded');\n        button.setAttribute('aria-expanded', 'false');\n        if (restoreFocus) {\n          this._focusButton(button);\n        }\n        this._expandedButton = null;\n      }\n    }\n\n    /**\n     * @param {boolean} restoreFocus\n     * @protected\n     */\n    _close(restoreFocus) {\n      this.style.pointerEvents = '';\n      this.__deactivateButton(restoreFocus);\n      this._subMenu.opened && this._subMenu.close();\n    }\n  };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-menu-bar@2.0.0/node_modules/@vaadin/vaadin-menu-bar/src/vaadin-menu-bar-submenu.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { ContextMenuElement } from '@vaadin/vaadin-context-menu/src/vaadin-context-menu.js';\n\n/**\n * @extends PolymerElement\n */\nclass MenuBarSubmenuElement extends ContextMenuElement {\n  static get is() {\n    return 'vaadin-menu-bar-submenu';\n  }\n\n  constructor() {\n    super();\n\n    this.openOn = 'opensubmenu';\n  }\n\n  /**\n   * Overriding the observer to not add global \"contextmenu\" listener.\n   */\n  _openedChanged(opened) {\n    this.$.overlay.opened = opened;\n  }\n\n  /**\n   * Overriding the public method to reset expanded button state.\n   */\n  close() {\n    super.close();\n\n    // only handle 1st level submenu\n    if (this.hasAttribute('is-root')) {\n      this.getRootNode().host._close();\n    }\n  }\n}\n\ncustomElements.define(MenuBarSubmenuElement.is, MenuBarSubmenuElement);\n"
      }
     ]
    },
    {
     "id": 153,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-date-time-picker@2.0.0/node_modules/@vaadin/vaadin-date-time-picker/theme/lumo/vaadin-date-time-picker.js + 7 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-date-time-picker@2.0.0/node_modules/@vaadin/vaadin-date-time-picker/theme/lumo/vaadin-date-time-picker.js",
       "source": "import './vaadin-date-time-picker-styles.js';\nimport '../../src/vaadin-date-time-picker.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-date-time-picker@2.0.0/node_modules/@vaadin/vaadin-date-time-picker/theme/lumo/vaadin-date-time-picker-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-custom-field/theme/lumo/vaadin-custom-field.js';\nimport '@vaadin/vaadin-date-picker/theme/lumo/vaadin-date-picker.js';\nimport '@vaadin/vaadin-time-picker/theme/lumo/vaadin-time-picker.js';\n\nregisterStyles(\n  'vaadin-date-time-picker-date-text-field',\n  css`\n    [part~='input-field'] {\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n\n    /* RTL specific styles */\n    :host([dir='rtl']) [part~='input-field'] {\n      border-radius: var(--lumo-border-radius);\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n    }\n  `,\n  { moduleId: 'lumo-date-time-picker-date-text-field' }\n);\n\nregisterStyles(\n  'vaadin-date-time-picker-time-text-field',\n  css`\n    [part~='input-field'] {\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n    }\n\n    /* RTL specific styles */\n    :host([dir='rtl']) [part~='input-field'] {\n      border-radius: var(--lumo-border-radius);\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n  `,\n  { moduleId: 'lumo-date-time-picker-time-text-field' }\n);\n\nregisterStyles(\n  'vaadin-date-time-picker-date-picker',\n  css`\n    :host {\n      margin-right: 2px;\n    }\n\n    /* RTL specific styles */\n    :host([dir='rtl']) {\n      margin-right: auto;\n      margin-left: 2px;\n    }\n  `,\n  { moduleId: 'lumo-date-time-picker-date-picker' }\n);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-date-time-picker@2.0.0/node_modules/@vaadin/vaadin-date-time-picker/src/vaadin-date-time-picker.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { dateEquals } from '@vaadin/vaadin-date-picker/src/vaadin-date-picker-helper.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport './vaadin-date-time-picker-custom-field.js';\nimport './vaadin-date-time-picker-date-picker.js';\nimport './vaadin-date-time-picker-time-picker.js';\n\n/**\n * @typedef {object} TimePickerTime\n * @property {string | number} hours\n * @property {string | number} minutes\n * @property {string | number} [seconds]\n * @property {string | number} [milliseconds]\n */\n\n// Find a property definition from the prototype chain of a Polymer element class\nconst getPropertyFromPrototype = function (clazz, prop) {\n  while (clazz) {\n    if (clazz.properties && clazz.properties[prop]) {\n      return clazz.properties[prop];\n    }\n    clazz = clazz.__proto__;\n  }\n};\n\nconst datePickerClass = customElements.get('vaadin-date-time-picker-date-picker');\nconst timePickerClass = customElements.get('vaadin-date-time-picker-time-picker');\nconst datePickerI18nDefaults = getPropertyFromPrototype(datePickerClass, 'i18n').value();\nconst timePickerI18nDefaults = getPropertyFromPrototype(timePickerClass, 'i18n').value();\nconst datePickerI18nProps = Object.keys(datePickerI18nDefaults);\nconst timePickerI18nProps = Object.keys(timePickerI18nDefaults);\n\n/**\n * `<vaadin-date-time-picker>` is a Web Component providing a date time selection field.\n *\n * ```html\n * <vaadin-date-time-picker value=\"2019-09-16T15:00\"></vaadin-date-time-picker>\n * ```\n *\n * ```js\n * dateTimePicker.value = '2019-09-16T15:00';\n * ```\n *\n * When the selected `value` is changed, a `value-changed` event is triggered.\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description | Theme for Element\n * ----------|-------------|------------------\n * `date` | Date picker element | vaadin-date-time-picker\n * `time` | Time picker element | vaadin-date-time-picker\n *\n * The following state attributes are available for styling:\n *\n * Attribute | Description | Part name\n * ----------|-------------|----------\n * `disabled` | Set when the element is disabled | :host\n * `readonly` | Set when the element is read-only | :host\n *\n * See [ThemableMixin – Stylable Shadow Parts](https://github.com/vaadin/vaadin-themable-mixin#stylable-shadow-parts)\n *\n * In addition to `<vaadin-date-time-picker>` itself, the following internal\n * components are themable:\n *\n * - `<vaadin-custom-field>`, see\n *   [`custom-field` documentation](https://vaadin.com/components/vaadin-custom-field/html-api/elements/Vaadin.CustomFieldElement)\n *   for the custom field parts.\n * - `<vaadin-date-picker>`, see\n *   [`date-picker` documentation](https://vaadin.com/components/vaadin-date-picker/html-api/elements/Vaadin.DatePickerElement)\n *   for the date picker parts.\n * - `<vaadin-time-picker>`, see\n *   [`time-picker` documentation](https://vaadin.com/components/vaadin-time-picker/html-api/elements/Vaadin.TimePickerElement)\n *   for the time picker parts.\n *\n * Note: the `theme` attribute value set on `<vaadin-date-time-picker>` is\n * propagated to the internal themable components listed above.\n *\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n */\nclass DateTimePickerElement extends ElementMixin(ThemableMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        .slot-container {\n          display: flex;\n        }\n\n        [part='date'],\n        .slot-container ::slotted([slot='date-picker']) {\n          pointer-events: all;\n          min-width: 0;\n          flex: 1 1 auto;\n        }\n\n        [part='time'],\n        .slot-container ::slotted([slot='time-picker']) {\n          pointer-events: all;\n          min-width: 0;\n          flex: 1 1.65 auto;\n        }\n      </style>\n      <vaadin-date-time-picker-custom-field\n        id=\"customField\"\n        on-value-changed=\"__customFieldValueChanged\"\n        i18n=\"[[__customFieldValueFormat]]\"\n        label=\"[[label]]\"\n        theme$=\"[[theme]]\"\n        invalid=\"[[invalid]]\"\n        required=\"[[required]]\"\n        disabled$=\"[[disabled]]\"\n        readonly$=\"[[readonly]]\"\n        error-message=\"[[errorMessage]]\"\n        helper-text=\"[[helperText]]\"\n      >\n        <div class=\"slot-container\">\n          <slot name=\"date-picker\" id=\"dateSlot\">\n            <vaadin-date-time-picker-date-picker part=\"date\" theme$=\"[[theme]]\"></vaadin-date-time-picker-date-picker>\n          </slot>\n          <slot name=\"time-picker\" id=\"timeSlot\">\n            <vaadin-date-time-picker-time-picker part=\"time\" theme$=\"[[theme]]\"></vaadin-date-time-picker-time-picker>\n          </slot>\n        </div>\n        <slot name=\"helper\" slot=\"helper\">[[helperText]]</slot>\n      </vaadin-date-time-picker-custom-field>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-date-time-picker';\n  }\n\n  static get version() {\n    return '2.0.0';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * The name of the control, which is submitted with the form data.\n       */\n      name: {\n        type: String\n      },\n\n      /**\n       * Set to true if the value is invalid.\n       * @type {boolean}\n       */\n      invalid: {\n        type: Boolean,\n        reflectToAttribute: true,\n        notify: true,\n        value: false\n      },\n\n      /**\n       * Set to true to mark the input as required.\n       * @type {boolean}\n       */\n      required: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * The error message to display when the input is invalid.\n       * @attr {string} error-message\n       */\n      errorMessage: String,\n\n      /**\n       * The value for this element.\n       *\n       * Supported date time format is based on ISO 8601 (without a time zone designator):\n       * - Minute precision `\"YYYY-MM-DDThh:mm\"` (default)\n       * - Second precision `\"YYYY-MM-DDThh:mm:ss\"`\n       * - Millisecond precision `\"YYYY-MM-DDThh:mm:ss.fff\"`\n       * @type {string}\n       */\n      value: {\n        type: String,\n        notify: true,\n        value: '',\n        observer: '__valueChanged'\n      },\n\n      /**\n       * The earliest allowed value (date and time) that can be selected. All earlier values will be disabled.\n       *\n       * Supported date time format is based on ISO 8601 (without a time zone designator):\n       * - Minute precision `\"YYYY-MM-DDThh:mm\"`\n       * - Second precision `\"YYYY-MM-DDThh:mm:ss\"`\n       * - Millisecond precision `\"YYYY-MM-DDThh:mm:ss.fff\"`\n       *\n       * @type {string | undefined}\n       */\n      min: {\n        type: String,\n        observer: '__minChanged'\n      },\n\n      /**\n       * The latest value (date and time) that can be selected. All later values will be disabled.\n       *\n       * Supported date time format is based on ISO 8601 (without a time zone designator):\n       * - Minute precision `\"YYYY-MM-DDThh:mm\"`\n       * - Second precision `\"YYYY-MM-DDThh:mm:ss\"`\n       * - Millisecond precision `\"YYYY-MM-DDThh:mm:ss.fff\"`\n       *\n       * @type {string | undefined}\n       */\n      max: {\n        type: String,\n        observer: '__maxChanged'\n      },\n\n      /**\n       * The earliest value that can be selected. All earlier values will be disabled.\n       * @private\n       */\n      __minDateTime: {\n        type: Date,\n        value: ''\n      },\n\n      /**\n       * The latest value that can be selected. All later values will be disabled.\n       * @private\n       */\n      __maxDateTime: {\n        type: Date,\n        value: ''\n      },\n\n      /**\n       * A placeholder string for the date field.\n       * @attr {string} date-placeholder\n       */\n      datePlaceholder: {\n        type: String\n      },\n\n      /**\n       * A placeholder string for the time field.\n       * @attr {string} time-placeholder\n       */\n      timePlaceholder: {\n        type: String\n      },\n\n      /**\n       * String used for the helper text.\n       * @attr {string} helper-text\n       */\n      helperText: {\n        type: String,\n        value: ''\n      },\n\n      /**\n       * Specifies the number of valid intervals in a day used for\n       * configuring the items displayed in the time selection box.\n       *\n       * It also configures the precision of the time part of the value string. By default\n       * the component formats time values as `hh:mm` but setting a step value\n       * lower than one minute or one second, format resolution changes to\n       * `hh:mm:ss` and `hh:mm:ss.fff` respectively.\n       *\n       * Unit must be set in seconds, and for correctly configuring intervals\n       * in the dropdown, it need to evenly divide a day.\n       *\n       * Note: it is possible to define step that is dividing an hour in inexact\n       * fragments (i.e. 5760 seconds which equals 1 hour 36 minutes), but it is\n       * not recommended to use it for better UX.\n       */\n      step: {\n        type: Number\n      },\n\n      /**\n       * Date which should be visible in the date picker overlay when there is no value selected.\n       *\n       * The same date formats as for the `value` property are supported but without the time part.\n       * @attr {string} initial-position\n       */\n      initialPosition: String,\n\n      /**\n       * Set true to display ISO-8601 week numbers in the calendar. Notice that\n       * displaying week numbers is only supported when `i18n.firstDayOfWeek`\n       * is 1 (Monday).\n       * @attr {boolean} show-week-numbers\n       */\n      showWeekNumbers: {\n        type: Boolean\n      },\n\n      /**\n       * String used for the label element.\n       * @type {string}\n       */\n      label: {\n        type: String,\n        value: ''\n      },\n\n      /**\n       * Set to true to prevent the overlays from opening automatically.\n       * @attr {boolean} auto-open-disabled\n       */\n      autoOpenDisabled: Boolean,\n\n      /**\n       * Set to true to disable this element.\n       * @type {boolean}\n       */\n      disabled: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * Set to true to make this element read-only.\n       * @type {boolean}\n       */\n      readonly: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * Specify that this control should have input focus when the page loads.\n       * @type {boolean}\n       */\n      autofocus: {\n        type: Boolean\n      },\n\n      /**\n       * The current selected date time.\n       * @private\n       */\n      __selectedDateTime: {\n        type: Date\n      },\n\n      /** @private */\n      __customFieldValueFormat: {\n        type: Object,\n        value: () => ({\n          parseValue: (combinedValue) => combinedValue.split('T'),\n          formatValue: (inputValues) => inputValues.join('T')\n        })\n      },\n\n      /**\n       * The object used to localize this component.\n       * To change the default localization, replace the entire\n       * `i18n` object or just the properties you want to modify.\n       *\n       * The object is a combination of the i18n properties supported by\n       * `<vaadin-date-picker>` and `<vaadin-time-picker>`. See `i18n` property at:\n       * - [`date-picker` documentation](https://vaadin.com/components/vaadin-date-picker/html-api/elements/Vaadin.DatePickerElement)\n       * - [`time-picker` documentation](https://vaadin.com/components/vaadin-time-picker/html-api/elements/Vaadin.TimePickerElement)\n       * @type {!DateTimePickerI18n}\n       */\n      i18n: {\n        type: Object,\n        value: () => Object.assign({}, datePickerI18nDefaults, timePickerI18nDefaults)\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '__selectedDateTimeChanged(__selectedDateTime)',\n      '__datePlaceholderChanged(datePlaceholder)',\n      '__timePlaceholderChanged(timePlaceholder)',\n      '__stepChanged(step)',\n      '__initialPositionChanged(initialPosition)',\n      '__showWeekNumbersChanged(showWeekNumbers)',\n      '__requiredChanged(required)',\n      '__invalidChanged(invalid)',\n      '__disabledChanged(disabled)',\n      '__readonlyChanged(readonly)',\n      '__i18nChanged(i18n.*)',\n      '__autoOpenDisabledChanged(autoOpenDisabled)'\n    ];\n  }\n\n  constructor() {\n    super();\n    // Default value for \"min\" and \"max\" properties of vaadin-date-picker (for removing constraint)\n    this.__defaultDateMinMaxValue = undefined;\n    // Default value for \"min\" property of vaadin-time-picker (for removing constraint)\n    this.__defaultTimeMinValue = '00:00:00.000';\n    // Default value for \"max\" property of vaadin-time-picker (for removing constraint)\n    this.__defaultTimeMaxValue = '23:59:59.999';\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.addEventListener('focusout', (e) => {\n      if (e.relatedTarget !== this.__datePicker.$.overlay) {\n        this.validate();\n      }\n    });\n\n    this.__changeEventHandler = this.__changeEventHandler.bind(this);\n    this.__filterElements = (node) => node.nodeType === Node.ELEMENT_NODE;\n\n    this.__datePickerChanged();\n    this.__timePickerChanged();\n\n    this.$.dateSlot.addEventListener('slotchange', this.__datePickerChanged.bind(this));\n    this.$.timeSlot.addEventListener('slotchange', this.__timePickerChanged.bind(this));\n\n    if (this.autofocus && !this.disabled) {\n      window.requestAnimationFrame(() => this.focus());\n    }\n  }\n\n  /** @protected */\n  focus() {\n    this.$.customField.focus();\n  }\n\n  /** @private */\n  __syncI18n(target, source, props) {\n    props = props || Object.keys(source.i18n);\n    props.forEach((prop) => {\n      // eslint-disable-next-line no-prototype-builtins\n      if (source.i18n && source.i18n.hasOwnProperty(prop)) {\n        target.set(`i18n.${prop}`, source.i18n[prop]);\n      }\n    });\n  }\n\n  // This is needed only for the case when date or time picker is slotted/changed after ready\n  // since custom field doesn't automatically pick that change because we use a wrapper element\n  // in the custom field slot.\n  /** @private */\n  __updateCustomFieldInputs() {\n    const cfInputs = this.$.customField.inputs;\n    if (\n      this.__datePicker &&\n      this.__timePicker &&\n      (cfInputs[0] !== this.__datePicker || cfInputs[1] !== this.__timePicker)\n    ) {\n      this.$.customField._setInputs([this.__datePicker, this.__timePicker]);\n    }\n  }\n\n  /** @private */\n  __changeEventHandler() {\n    this.__doDispatchChange = true;\n  }\n\n  /** @private */\n  __removeChangeListener(node) {\n    if (node) {\n      node.removeEventListener('change', this.__changeEventHandler, false);\n    }\n  }\n\n  /** @private */\n  __addChangeListener(node) {\n    node.addEventListener('change', this.__changeEventHandler, false);\n  }\n\n  /** @private */\n  __datePickerChanged() {\n    const defaultDatePicker = this.shadowRoot.querySelector('[part=\"date\"]');\n    const assignedElements = this.$.dateSlot.assignedNodes({ flatten: true }).filter(this.__filterElements);\n    const datePicker = assignedElements[0];\n    if (this.__datePicker === datePicker) {\n      return;\n    }\n    this.__removeChangeListener(this.__datePicker);\n    this.__addChangeListener(datePicker);\n    this.__datePicker = datePicker;\n    this.__updateCustomFieldInputs();\n\n    if (datePicker === defaultDatePicker) {\n      // Synchronize properties to default date picker\n      datePicker.placeholder = this.datePlaceholder;\n      datePicker.invalid = this.invalid;\n      datePicker.initialPosition = this.initialPosition;\n      datePicker.showWeekNumbers = this.showWeekNumbers;\n      this.__syncI18n(datePicker, this, datePickerI18nProps);\n    } else {\n      // Synchronize properties from slotted date picker\n      this.datePlaceholder = datePicker.placeholder;\n      this.initialPosition = datePicker.initialPosition;\n      this.showWeekNumbers = datePicker.showWeekNumbers;\n      this.__syncI18n(this, datePicker, datePickerI18nProps);\n    }\n\n    // min and max are always synchronized from date time picker (host) to inner fields because time picker\n    // min and max need to be dynamically set depending on currently selected date instead of simple propagation\n    datePicker.min = this.__formatDateISO(this.__minDateTime, this.__defaultDateMinMaxValue);\n    datePicker.max = this.__formatDateISO(this.__maxDateTime, this.__defaultDateMinMaxValue);\n    datePicker.required = this.required;\n    datePicker.disabled = this.disabled;\n    datePicker.readonly = this.readonly;\n    datePicker.autoOpenDisabled = this.autoOpenDisabled;\n\n    // Disable default internal validation for the component\n    datePicker.validate = () => {};\n    datePicker._validateInput = () => {};\n  }\n\n  /** @private */\n  __timePickerChanged() {\n    const defaultTimePicker = this.shadowRoot.querySelector('[part=\"time\"]');\n    const assignedElements = this.$.timeSlot.assignedNodes({ flatten: true }).filter(this.__filterElements);\n    const timePicker = assignedElements[0];\n    if (this.__timePicker === timePicker) {\n      return;\n    }\n    this.__removeChangeListener(this.__timePicker);\n    this.__addChangeListener(timePicker);\n    this.__timePicker = timePicker;\n    this.__updateCustomFieldInputs();\n\n    if (timePicker === defaultTimePicker) {\n      // Synchronize properties to default time picker\n      timePicker.placeholder = this.timePlaceholder;\n      timePicker.step = this.step;\n      timePicker.invalid = this.invalid;\n      this.__syncI18n(timePicker, this, timePickerI18nProps);\n    } else {\n      // Synchronize properties from slotted time picker\n      this.timePlaceholder = timePicker.placeholder;\n      this.step = timePicker.step;\n      this.__syncI18n(this, timePicker, timePickerI18nProps);\n    }\n\n    // min and max are always synchronized from parent to slotted because time picker min and max\n    // need to be dynamically set depending on currently selected date instead of simple propagation\n    this.__updateTimePickerMinMax();\n    timePicker.required = this.required;\n    timePicker.disabled = this.disabled;\n    timePicker.readonly = this.readonly;\n    timePicker.autoOpenDisabled = this.autoOpenDisabled;\n\n    // Disable default internal validation for the component\n    timePicker.validate = () => {};\n  }\n\n  /** @private */\n  __updateTimePickerMinMax() {\n    if (this.__timePicker && this.__datePicker) {\n      const selectedDate = this.__parseDate(this.__datePicker.value);\n      const isMinMaxSameDay = dateEquals(this.__minDateTime, this.__maxDateTime);\n      const oldTimeValue = this.__timePicker.value;\n\n      if ((this.__minDateTime && dateEquals(selectedDate, this.__minDateTime)) || isMinMaxSameDay) {\n        this.__timePicker.min = this.__dateToIsoTimeString(this.__minDateTime);\n      } else {\n        this.__timePicker.min = this.__defaultTimeMinValue;\n      }\n\n      if ((this.__maxDateTime && dateEquals(selectedDate, this.__maxDateTime)) || isMinMaxSameDay) {\n        this.__timePicker.max = this.__dateToIsoTimeString(this.__maxDateTime);\n      } else {\n        this.__timePicker.max = this.__defaultTimeMaxValue;\n      }\n\n      // If time picker automatically adjusts the time value due to the new min or max\n      // revert the time value\n      if (this.__timePicker.value !== oldTimeValue) {\n        this.__timePicker.value = oldTimeValue;\n      }\n    }\n  }\n\n  /** @private */\n  __i18nChanged(changeRecord) {\n    if (this.__datePicker) {\n      this.__datePicker.set(changeRecord.path, changeRecord.value);\n    }\n    if (this.__timePicker) {\n      this.__timePicker.set(changeRecord.path, changeRecord.value);\n    }\n  }\n\n  /** @private */\n  __datePlaceholderChanged(datePlaceholder) {\n    if (this.__datePicker) {\n      this.__datePicker.placeholder = datePlaceholder;\n    }\n  }\n\n  /** @private */\n  __timePlaceholderChanged(timePlaceholder) {\n    if (this.__timePicker) {\n      this.__timePicker.placeholder = timePlaceholder;\n    }\n  }\n\n  /** @private */\n  __stepChanged(step) {\n    if (this.__timePicker && this.__timePicker.step !== step) {\n      const oldTimeValue = this.__timePicker.value;\n\n      this.__timePicker.step = step;\n\n      // If time picker value changes due to the new step (precision change)\n      // propagate the updated value change to custom-field (which doesn't\n      // automatically process programmatically triggered value updates)\n      if (this.__timePicker.value !== oldTimeValue) {\n        this.__triggerCustomFieldValueUpdate();\n      }\n    }\n  }\n\n  /** @private */\n  __triggerCustomFieldValueUpdate() {\n    if (this.__timePicker) {\n      this.__timePicker.dispatchEvent(new CustomEvent('change', { bubbles: true }));\n    }\n  }\n\n  /** @private */\n  __initialPositionChanged(initialPosition) {\n    if (this.__datePicker) {\n      this.__datePicker.initialPosition = initialPosition;\n    }\n  }\n\n  /** @private */\n  __showWeekNumbersChanged(showWeekNumbers) {\n    if (this.__datePicker) {\n      this.__datePicker.showWeekNumbers = showWeekNumbers;\n    }\n  }\n\n  /** @private */\n  __invalidChanged(invalid) {\n    if (this.__datePicker) {\n      this.__datePicker.invalid = invalid;\n    }\n    if (this.__timePicker) {\n      this.__timePicker.invalid = invalid;\n    }\n  }\n\n  /** @private */\n  __requiredChanged(required) {\n    if (this.__datePicker) {\n      this.__datePicker.required = required;\n    }\n    if (this.__timePicker) {\n      this.__timePicker.required = required;\n    }\n  }\n\n  /** @private */\n  __disabledChanged(disabled) {\n    if (this.__datePicker) {\n      this.__datePicker.disabled = disabled;\n    }\n    if (this.__timePicker) {\n      this.__timePicker.disabled = disabled;\n    }\n  }\n\n  /** @private */\n  __readonlyChanged(readonly) {\n    if (this.__datePicker) {\n      this.__datePicker.readonly = readonly;\n    }\n    if (this.__timePicker) {\n      this.__timePicker.readonly = readonly;\n    }\n  }\n\n  /**\n   * String (ISO date) to Date object\n   * @param {string} str e.g. 'yyyy-mm-dd'\n   * @return {Date | undefined}\n   * @private\n   */\n  __parseDate(str) {\n    return datePickerClass.prototype._parseDate(str);\n  }\n\n  /**\n   * Date object to string (ISO date)\n   * @param {Date} date\n   * @param {string} defaultValue\n   * @return {string} e.g. 'yyyy-mm-dd' (or defaultValue when date is falsy)\n   * @private\n   */\n  __formatDateISO(date, defaultValue) {\n    if (!date) {\n      return defaultValue;\n    }\n    return datePickerClass.prototype._formatISO(date);\n  }\n\n  /**\n   * Custom time object to string (ISO time)\n   * @param {!TimePickerTime} time Time components as properties { hours, minutes, seconds, milliseconds }\n   * @return {string} e.g. 'hh:mm', 'hh:mm:ss', 'hh:mm:ss.fff'\n   * @private\n   */\n  __formatTimeISO(time) {\n    return timePickerI18nDefaults.formatTime(time);\n  }\n\n  /**\n   * String (ISO time) to custom time object\n   * @param {string} str e.g. 'hh:mm', 'hh:mm:ss', 'hh:mm:ss.fff'\n   * @return {!TimePickerTime | undefined} Time components as properties { hours, minutes, seconds, milliseconds }\n   * @private\n   */\n  __parseTimeISO(str) {\n    return timePickerI18nDefaults.parseTime(str);\n  }\n\n  /**\n   * String (ISO date time) to Date object\n   * @param {string} str e.g. 'yyyy-mm-ddThh:mm', 'yyyy-mm-ddThh:mm:ss', 'yyyy-mm-ddThh:mm:ss.fff'\n   * @return {Date | undefined}\n   * @private\n   */\n  __parseDateTime(str) {\n    const [dateValue, timeValue] = str.split('T');\n    /* istanbul ignore if */\n    if (!(dateValue && timeValue)) {\n      return;\n    }\n\n    /** @type {Date} */\n    const date = this.__parseDate(dateValue);\n    if (!date) {\n      return;\n    }\n\n    const time = this.__parseTimeISO(timeValue);\n    if (!time) {\n      return;\n    }\n\n    date.setHours(parseInt(time.hours));\n    date.setMinutes(parseInt(time.minutes || 0));\n    date.setSeconds(parseInt(time.seconds || 0));\n    date.setMilliseconds(parseInt(time.milliseconds || 0));\n\n    return date;\n  }\n\n  /**\n   * Date object to string (ISO date time)\n   * @param {Date} date\n   * @return {string} e.g. 'yyyy-mm-ddThh:mm', 'yyyy-mm-ddThh:mm:ss', 'yyyy-mm-ddThh:mm:ss.fff'\n   *                  (depending on precision defined by \"step\" property)\n   * @private\n   */\n  __formatDateTime(date) {\n    if (!date) {\n      return '';\n    }\n    const dateValue = this.__formatDateISO(date, '');\n    const timeValue = this.__dateToIsoTimeString(date);\n    return `${dateValue}T${timeValue}`;\n  }\n\n  /**\n   * Date object to string (ISO time)\n   * @param {Date} date\n   * @return {string} e.g. 'hh:mm', 'hh:mm:ss', 'hh:mm:ss.fff' (depending on precision defined by \"step\" property)\n   * @private\n   */\n  __dateToIsoTimeString(date) {\n    return this.__formatTimeISO(\n      this.__validateTime({\n        hours: date.getHours(),\n        minutes: date.getMinutes(),\n        seconds: date.getSeconds(),\n        milliseconds: date.getMilliseconds()\n      })\n    );\n  }\n\n  /**\n   * @param {!TimePickerTime} timeObject\n   * @return {!TimePickerTime}\n   * @private\n   */\n  __validateTime(timeObject) {\n    if (timeObject) {\n      timeObject.seconds = this.__stepSegment < 3 ? undefined : timeObject.seconds;\n      timeObject.milliseconds = this.__stepSegment < 4 ? undefined : timeObject.milliseconds;\n    }\n    return timeObject;\n  }\n\n  /**\n   * Returns true if `value` is valid, and sets the `invalid` flag appropriately.\n   *\n   * @return {boolean} True if the value is valid.\n   */\n  validate() {\n    return !(this.invalid = !this.checkValidity());\n  }\n\n  /**\n   * Returns true if the current input value satisfies all constraints (if any)\n   *\n   * You can override the `checkValidity` method for custom validations.\n   * @return {boolean}\n   */\n  checkValidity() {\n    const hasInvalidFields = this.$.customField.inputs.filter((input) => !input.checkValidity.call(input)).length > 0;\n    const hasEmptyFields = this.required && this.$.customField.inputs.filter((el) => !el.value).length > 0;\n\n    if (hasInvalidFields || hasEmptyFields) {\n      return false;\n    }\n    return true;\n  }\n\n  // Copied from vaadin-time-picker\n  /** @private */\n  // eslint-disable-next-line getter-return\n  get __stepSegment() {\n    const step = this.step == undefined ? 60 : parseFloat(this.step);\n    if (step % 3600 === 0) {\n      // Accept hours\n      return 1;\n    } else if (step % 60 === 0 || !step) {\n      // Accept minutes\n      return 2;\n    } else if (step % 1 === 0) {\n      // Accept seconds\n      return 3;\n    } else if (step < 1) {\n      // Accept milliseconds\n      return 4;\n    }\n  }\n\n  /**\n   * @param {Date} date1\n   * @param {Date} date2\n   * @return {boolean}\n   * @private\n   */\n  __dateTimeEquals(date1, date2) {\n    if (!dateEquals(date1, date2)) {\n      return false;\n    }\n    return (\n      date1.getHours() === date2.getHours() &&\n      date1.getMinutes() === date2.getMinutes() &&\n      date1.getSeconds() === date2.getSeconds() &&\n      date1.getMilliseconds() === date2.getMilliseconds()\n    );\n  }\n\n  /** @private */\n  __handleDateTimeChange(property, parsedProperty, value, oldValue) {\n    if (!value) {\n      this[property] = '';\n      this[parsedProperty] = '';\n      return;\n    }\n\n    const dateTime = this.__parseDateTime(value);\n    if (!dateTime) {\n      // Invalid date, revert to old value\n      this[property] = oldValue;\n      return;\n    }\n    if (!this.__dateTimeEquals(this[parsedProperty], dateTime)) {\n      this[parsedProperty] = dateTime;\n    }\n  }\n\n  /** @private */\n  __valueChanged(value, oldValue) {\n    this.__handleDateTimeChange('value', '__selectedDateTime', value, oldValue);\n\n    if (this.__doDispatchChange) {\n      this.__dispatchChange();\n      this.validate();\n    }\n  }\n\n  /** @private */\n  __dispatchChange() {\n    this.dispatchEvent(new CustomEvent('change', { bubbles: true }));\n  }\n\n  /** @private */\n  __minChanged(value, oldValue) {\n    this.__handleDateTimeChange('min', '__minDateTime', value, oldValue);\n    if (this.__datePicker) {\n      this.__datePicker.min = this.__formatDateISO(this.__minDateTime, this.__defaultDateMinMaxValue);\n    }\n    this.__updateTimePickerMinMax();\n  }\n\n  /** @private */\n  __maxChanged(value, oldValue) {\n    this.__handleDateTimeChange('max', '__maxDateTime', value, oldValue);\n    if (this.__datePicker) {\n      this.__datePicker.max = this.__formatDateISO(this.__maxDateTime, this.__defaultDateMinMaxValue);\n    }\n    this.__updateTimePickerMinMax();\n  }\n\n  /** @private */\n  __selectedDateTimeChanged(selectedDateTime) {\n    const formattedValue = this.__formatDateTime(selectedDateTime);\n    if (this.value !== formattedValue) {\n      this.value = formattedValue;\n    }\n\n    // Setting the customField.value below triggers validation of the date picker and time picker.\n    // If the inputs are slotted (e.g. when using the Java API) and have an initial value this can\n    // happen before date picker ready() which would throw an error when date picker is trying to read\n    // `this.$.input` (as a result of value change triggered by setting custom field value).\n    // Workaround the problem by setting custom field value only if date picker is ready.\n    const inputs = this.$.customField.inputs;\n    const isDatePickerReady = Boolean(inputs && inputs[0] && inputs[0].$);\n    if (isDatePickerReady) {\n      const doDispatchChange = this.__doDispatchChange;\n\n      this.$.customField.value = this.value !== '' ? this.value : 'T';\n\n      this.__doDispatchChange = doDispatchChange;\n    }\n  }\n\n  /** @private */\n  __customFieldValueChanged(e) {\n    /** @type {string} */\n    const value = e.detail.value;\n\n    // Initial empty value from custom field\n    if (value === 'T' && !this.__customFieldInitialValueChangeReceived) {\n      this.__customFieldInitialValueChangeReceived = true;\n      // Ignore initial value from custom field so we don't override initial value of date time picker\n      return;\n    }\n\n    const [date, time] = value.split('T');\n\n    // Handle updating time picker min/max if the date changed.\n    // This may cause the time picker value to be adjusted.\n    // __oldDateValue is used only here and the if condition is only a minor performance optimization\n    // not to run the update checks unnecessarily if only the time was changed.\n    if (this.__oldDateValue !== date) {\n      this.__oldDateValue = date;\n      this.__updateTimePickerMinMax();\n    }\n\n    if (date && time) {\n      if (value !== this.value) {\n        this.value = value;\n      }\n    } else {\n      this.value = '';\n    }\n    this.__doDispatchChange = false;\n  }\n\n  /** @private */\n  __autoOpenDisabledChanged(autoOpenDisabled) {\n    if (this.__datePicker) {\n      this.__datePicker.autoOpenDisabled = autoOpenDisabled;\n    }\n    if (this.__timePicker) {\n      this.__timePicker.autoOpenDisabled = autoOpenDisabled;\n    }\n  }\n\n  /**\n   * Fired when the user commits a value change.\n   *\n   * @event change\n   */\n}\n\ncustomElements.define(DateTimePickerElement.is, DateTimePickerElement);\n\nexport { DateTimePickerElement };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-date-time-picker@2.0.0/node_modules/@vaadin/vaadin-date-time-picker/src/vaadin-date-time-picker-custom-field.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { CustomFieldElement } from '@vaadin/vaadin-custom-field/src/vaadin-custom-field.js';\nimport { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\n\nregisterStyles(\n  'vaadin-date-time-picker-custom-field',\n  css`\n    :host,\n    .container {\n      width: 100%;\n    }\n  `,\n  { moduleId: 'vaadin-date-time-picker-custom-field' }\n);\n\n/**\n * The custom-field element.\n *\n * ### Styling\n *\n * See [`<vaadin-custom-field>` documentation](https://github.com/vaadin/vaadin-custom-field/blob/master/src/vaadin-custom-field.html)\n * for `<vaadin-date-time-picker-custom-field>` parts and available slots (prefix, suffix etc.)\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends HTMLElement\n */\nclass DateTimePickerCustomFieldElement extends CustomFieldElement {\n  static get is() {\n    return 'vaadin-date-time-picker-custom-field';\n  }\n\n  connectedCallback() {\n    this.__toggleHasValue = function (value) {\n      if (value !== null && value !== '' && value.split('T').indexOf('') === -1) {\n        this.setAttribute('has-value', '');\n      } else {\n        this.removeAttribute('has-value');\n      }\n    };\n\n    super.connectedCallback();\n  }\n\n  validate() {\n    return;\n  }\n}\n\ncustomElements.define(DateTimePickerCustomFieldElement.is, DateTimePickerCustomFieldElement);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-date-time-picker@2.0.0/node_modules/@vaadin/vaadin-date-time-picker/src/vaadin-date-time-picker-date-picker.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { DatePickerElement } from '@vaadin/vaadin-date-picker/src/vaadin-date-picker.js';\nimport './vaadin-date-time-picker-date-text-field.js';\n\nlet memoizedTemplate;\n\n/**\n * The date-picker element.\n *\n * ### Styling\n *\n * See [`<vaadin-date-picker>` documentation](https://github.com/vaadin/vaadin-date-picker/blob/master/src/vaadin-date-picker.html)\n * for `<vaadin-date-time-picker-date-picker>` parts and available slots (prefix, suffix etc.)\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends HTMLElement\n */\nclass DateTimePickerDatePickerElement extends DatePickerElement {\n  static get is() {\n    return 'vaadin-date-time-picker-date-picker';\n  }\n\n  static get template() {\n    if (!memoizedTemplate) {\n      memoizedTemplate = super.template.cloneNode(true);\n\n      memoizedTemplate.innerHTML = memoizedTemplate.innerHTML.replace(\n        'vaadin-date-picker-text-field',\n        'vaadin-date-time-picker-date-text-field'\n      );\n    }\n    return memoizedTemplate;\n  }\n}\n\ncustomElements.define(DateTimePickerDatePickerElement.is, DateTimePickerDatePickerElement);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-date-time-picker@2.0.0/node_modules/@vaadin/vaadin-date-time-picker/src/vaadin-date-time-picker-time-picker.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { TimePickerElement } from '@vaadin/vaadin-time-picker/src/vaadin-time-picker.js';\nimport './vaadin-date-time-picker-time-text-field.js';\n\nlet memoizedTemplate;\n\n/**\n * The time-picker element.\n *\n * ### Styling\n *\n * See [`<vaadin-time-picker>` documentation](https://github.com/vaadin/vaadin-time-picker/blob/master/src/vaadin-time-picker.html)\n * for `<vaadin-date-time-picker-time-picker>` parts and available slots (prefix, suffix etc.)\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends HTMLElement\n */\nclass DateTimePickerTimePickerElement extends TimePickerElement {\n  static get is() {\n    return 'vaadin-date-time-picker-time-picker';\n  }\n\n  static get template() {\n    if (!memoizedTemplate) {\n      memoizedTemplate = super.template.cloneNode(true);\n\n      memoizedTemplate.innerHTML = memoizedTemplate.innerHTML.replace(\n        'vaadin-time-picker-text-field',\n        'vaadin-date-time-picker-time-text-field'\n      );\n    }\n    return memoizedTemplate;\n  }\n\n  _getInputElement() {\n    return this.shadowRoot.querySelector('vaadin-date-time-picker-time-text-field');\n  }\n}\n\ncustomElements.define(DateTimePickerTimePickerElement.is, DateTimePickerTimePickerElement);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-date-time-picker@2.0.0/node_modules/@vaadin/vaadin-date-time-picker/src/vaadin-date-time-picker-date-text-field.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { TextFieldElement } from '@vaadin/vaadin-text-field/src/vaadin-text-field.js';\n\n/**\n * The text-field element for date input.\n *\n * ### Styling\n *\n * See [`<vaadin-text-field>` documentation](https://github.com/vaadin/vaadin-text-field/blob/master/src/vaadin-text-field.html)\n * for `<vaadin-date-time-picker-date-text-field>` parts and available slots (prefix, suffix etc.)\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends HTMLElement\n */\nclass DateTimePickerDateTextFieldElement extends TextFieldElement {\n  static get is() {\n    return 'vaadin-date-time-picker-date-text-field';\n  }\n}\n\ncustomElements.define(DateTimePickerDateTextFieldElement.is, DateTimePickerDateTextFieldElement);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-date-time-picker@2.0.0/node_modules/@vaadin/vaadin-date-time-picker/src/vaadin-date-time-picker-time-text-field.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { TextFieldElement } from '@vaadin/vaadin-text-field/src/vaadin-text-field.js';\n\n/**\n * The text-field element for time input.\n *\n * ### Styling\n *\n * See [`<vaadin-text-field>` documentation](https://github.com/vaadin/vaadin-text-field/blob/master/src/vaadin-text-field.html)\n * for `<vaadin-date-time-picker-time-text-field>` parts and available slots (prefix, suffix etc.)\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends HTMLElement\n */\nclass DateTimePickerTimeTextFieldElement extends TextFieldElement {\n  static get is() {\n    return 'vaadin-date-time-picker-time-text-field';\n  }\n}\n\ncustomElements.define(DateTimePickerTimeTextFieldElement.is, DateTimePickerTimeTextFieldElement);\n"
      }
     ]
    },
    {
     "id": 155,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-accordion@1.2.0/node_modules/@vaadin/vaadin-accordion/theme/lumo/vaadin-accordion.js + 4 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-accordion@1.2.0/node_modules/@vaadin/vaadin-accordion/theme/lumo/vaadin-accordion.js",
       "source": "import './vaadin-accordion-panel.js';\nimport '../../src/vaadin-accordion.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-accordion@1.2.0/node_modules/@vaadin/vaadin-accordion/theme/lumo/vaadin-accordion-panel.js",
       "source": "import './vaadin-accordion-panel-styles.js';\nimport '../../src/vaadin-accordion-panel.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-accordion@1.2.0/node_modules/@vaadin/vaadin-accordion/src/vaadin-accordion.js",
       "source": "/**\n@license\nCopyright (c) 2018 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { AccordionPanelElement } from './vaadin-accordion-panel.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\n * `<vaadin-accordion>` is a Web Component implementing accordion widget —\n * a vertically stacked set of expandable panels. The component should be\n * used as a wrapper for two or more `<vaadin-accordion-panel>` components.\n *\n * Panel headings function as controls that enable users to open (expand)\n * or hide (collapse) their associated sections of content. The user can\n * toggle panels by mouse click, Enter and Space keys.\n *\n * Only one panel can be opened at a time, opening a new one forces\n * previous panel to close and hide its content.\n *\n * ```\n * <vaadin-accordion>\n *   <vaadin-accordion-panel>\n *     <div slot=\"summary\">Panel 1</div>\n *     This panel is opened, so the text is visible by default.\n *   </vaadin-accordion-panel>\n *   <vaadin-accordion-panel>\n *     <div slot=\"summary\">Panel 2</div>\n *     After opening this panel, the first one becomes closed.\n *   </vaadin-accordion-panel>\n * </vaadin-accordion>\n * ```\n *\n * ### Styling\n *\n * See the [`<vaadin-accordion-panel>`](#/elements/vaadin-accordion-panel)\n * documentation for the available state attributes and stylable shadow parts.\n *\n * **Note:** You can apply the theme to `<vaadin-accordion>` component itself,\n * especially by using the following CSS selector:\n *\n * ```\n * :host ::slotted(vaadin-accordion-panel) {\n *   margin-bottom: 5px;\n * }\n * ```\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends PolymerElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @demo demo/index.html\n */\nclass AccordionElement extends ThemableMixin(ElementMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: block;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n    </style>\n    <slot></slot>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-accordion';\n  }\n\n  static get version() {\n    return '1.2.0';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * The index of currently opened panel. First panel is opened by\n       * default. Only one panel can be opened at the same time.\n       * Setting null or undefined closes all the accordion panels.\n       * @type {number}\n       */\n      opened: {\n        type: Number,\n        value: 0,\n        notify: true,\n        reflectToAttribute: true\n      },\n\n      /**\n       * The list of `<vaadin-accordion-panel>` child elements.\n       * It is populated from the elements passed to the light DOM,\n       * and updated dynamically when adding or removing panels.\n       * @type {!Array<!AccordionPanelElement>}\n       */\n      items: {\n        type: Array,\n        readOnly: true,\n        notify: true\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '_updateItems(items, opened)'\n    ];\n  }\n\n  constructor() {\n    super();\n    this._boundUpdateOpened = this._updateOpened.bind(this);\n  }\n\n  /**\n   * @return {Element | null}\n   * @protected\n   */\n  get focused() {\n    return this.getRootNode().activeElement;\n  }\n\n  /**\n   * @protected\n   */\n  focus() {\n    if (this._observer) {\n      this._observer.flush();\n    }\n    const focusable = Array.isArray(this.items) && this.items[0];\n    if (focusable) {\n      focusable.focus();\n    }\n  }\n\n  ready() {\n    super.ready();\n\n    this.addEventListener('keydown', e => this._onKeydown(e));\n\n    this._observer = new FlattenedNodesObserver(this, info => {\n      this._setItems(this._filterItems(Array.from(this.children)));\n\n      this._filterItems(info.addedNodes).forEach(el => {\n        el.addEventListener('opened-changed', this._boundUpdateOpened);\n      });\n    });\n  }\n\n  /**\n   * @param {!Array<!Element>} array\n   * @return {!Array<!AccordionPanelElement>}\n   * @protected\n   */\n  _filterItems(array) {\n    return array.filter(el => el instanceof AccordionPanelElement);\n  }\n\n  /** @private */\n  _updateItems(items, opened) {\n    if (items) {\n      const itemToOpen = items[opened];\n      items.forEach(item => {\n        item.opened = item === itemToOpen;\n      });\n    }\n  }\n\n  /**\n   * @param {!KeyboardEvent} event\n   * @protected\n   */\n  _onKeydown(event) {\n    // only check keyboard events on details toggle buttons\n    const item = event.composedPath()[0];\n    if (!this.items.some(el => el.focusElement === item)) {\n      return;\n    }\n\n    // IE names for arrows do not include the Arrow prefix\n    const key = event.key.replace(/^Arrow/, '');\n\n    const currentIdx = this.items.indexOf(this.focused);\n    let idx;\n    let increment;\n\n    switch (key) {\n      case 'Up':\n        increment = -1;\n        idx = currentIdx - 1;\n        break;\n      case 'Down':\n        increment = 1;\n        idx = currentIdx + 1;\n        break;\n      case 'Home':\n        increment = 1;\n        idx = 0;\n        break;\n      case 'End':\n        increment = -1;\n        idx = this.items.length - 1;\n        break;\n      default:\n        // do nothing.\n    }\n\n    idx = this._getAvailableIndex(idx, increment);\n    if (idx >= 0) {\n      this.items[idx].focus();\n      this.items[idx].setAttribute('focus-ring', '');\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @param {number} increment\n   * @return {number}\n   * @protected\n   */\n  _getAvailableIndex(index, increment) {\n    const totalItems = this.items.length;\n    let idx = index;\n    for (let i = 0; typeof idx === 'number' && i < totalItems; i++, idx += increment || 1) {\n      if (idx < 0) {\n        idx = totalItems - 1;\n      } else if (idx >= totalItems) {\n        idx = 0;\n      }\n\n      const item = this.items[idx];\n      if (!item.disabled) {\n        return idx;\n      }\n    }\n    return -1;\n  }\n\n  /** @private */\n  _updateOpened(e) {\n    const target = this._filterItems(e.composedPath())[0];\n    const idx = this.items.indexOf(target);\n    if (e.detail.value) {\n      if (target.disabled || idx === -1) {\n        return;\n      }\n\n      this.opened = idx;\n\n      this.items.forEach(item => {\n        if (item !== target && item.opened) {\n          item.opened = false;\n        }\n      });\n    } else if (!this.items.some(item => item.opened)) {\n      this.opened = null;\n    }\n  }\n}\n\ncustomElements.define(AccordionElement.is, AccordionElement);\n\nexport { AccordionElement };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-accordion@1.2.0/node_modules/@vaadin/vaadin-accordion/theme/lumo/vaadin-accordion-panel-styles.js",
       "source": "import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-details/theme/lumo/vaadin-details-styles.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-accordion-panel\" theme-for=\"vaadin-accordion-panel\">\n  <template>\n    <style include=\"lumo-details\">\n      :host {\n        margin: 0;\n        border-bottom: solid 1px var(--lumo-contrast-10pct);\n      }\n\n      :host(:last-child) {\n        border-bottom: none;\n      }\n\n      :host([theme~=\"filled\"]) {\n        border-bottom: none;\n      }\n\n      :host([theme~=\"filled\"]:not(:last-child)) {\n        margin-bottom: 2px;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-accordion@1.2.0/node_modules/@vaadin/vaadin-accordion/src/vaadin-accordion-panel.js",
       "source": "/**\n@license\nCopyright (c) 2018 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { DetailsElement } from '@vaadin/vaadin-details/src/vaadin-details.js';\n\n/**\n * The accordion panel element.\n *\n * ### Styling\n *\n * The following shadow DOM parts are exposed for styling:\n *\n * Part name        | Description\n * -----------------|----------------\n * `summary`        | The element used to open and close collapsible content.\n * `toggle`         | The element used as indicator, can represent an icon.\n * `summary-content`| The wrapper for the slotted summary content.\n * `content`        | The wrapper for the collapsible panel content.\n *\n * The following attributes are exposed for styling:\n *\n * Attribute    | Description\n * -------------| -----------\n * `opened`     | Set when the collapsible content is expanded and visible.\n * `disabled`   | Set when the element is disabled.\n * `focus-ring` | Set when the element is focused using the keyboard.\n * `focused`    | Set when the element is focused.\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n */\nclass AccordionPanelElement extends DetailsElement {\n  static get is() {\n    return 'vaadin-accordion-panel';\n  }\n}\n\ncustomElements.define(AccordionPanelElement.is, AccordionPanelElement);\n\nexport { AccordionPanelElement };\n"
      }
     ]
    },
    {
     "id": 156,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-app-layout@2.2.0/node_modules/@vaadin/vaadin-app-layout/theme/lumo/vaadin-app-layout.js + 4 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-app-layout@2.2.0/node_modules/@vaadin/vaadin-app-layout/theme/lumo/vaadin-app-layout.js",
       "source": "import './vaadin-app-layout-styles.js';\nimport '../../src/vaadin-app-layout.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-app-layout@2.2.0/node_modules/@vaadin/vaadin-app-layout/theme/lumo/vaadin-app-layout-styles.js",
       "source": "import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-app-layout\" theme-for=\"vaadin-app-layout\">\n  <template>\n    <style>\n      [part=\"navbar\"]::before {\n        background: var(--lumo-base-color) linear-gradient(var(--lumo-contrast-5pct), var(--lumo-contrast-5pct));\n      }\n\n      :host(:not([dir='rtl']):not([overlay])) [part='drawer'] {\n        border-right: 1px solid var(--lumo-contrast-10pct);\n      }\n\n      :host([dir='rtl']:not([overlay])) [part='drawer'] {\n        border-left: 1px solid var(--lumo-contrast-10pct);\n      }\n\n      :host([overlay]) [part=\"drawer\"]::before {\n        background: var(--lumo-base-color);\n      }\n\n      [part=\"navbar\"]::before,\n      :host([overlay]) [part=\"drawer\"]::before {\n        position: absolute;\n        content: \"\";\n        width: 100%;\n        height: 100%;\n        z-index: -1;\n      }\n\n      :host([overlay]) [part='drawer']::before {\n        background: var(--lumo-base-color);\n        height: var(--_vaadin-app-layout-drawer-scroll-size, 100%);\n      }\n\n      [part=\"backdrop\"] {\n        background-color: var(--lumo-shade-20pct);\n        opacity: 1;\n      }\n\n      [part] ::slotted(h2),\n      [part] ::slotted(h3),\n      [part] ::slotted(h4) {\n        margin-top: var(--lumo-space-xs) !important;\n        margin-bottom: var(--lumo-space-xs) !important;\n      }\n\n      @supports (-webkit-backdrop-filter: blur(1px)) or (backdrop-filter: blur(1px)) {\n        [part=\"navbar\"]::before {\n          opacity: 0.8;\n        }\n\n        [part=\"navbar\"] {\n          -webkit-backdrop-filter: blur(24px);\n          backdrop-filter: blur(24px);\n        }\n\n        :host([overlay]) [part=\"drawer\"]::before {\n          opacity: 0.9;\n        }\n\n        :host([overlay]) [part=\"drawer\"] {\n          -webkit-backdrop-filter: blur(24px);\n          backdrop-filter: blur(24px);\n        }\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-app-layout@2.2.0/node_modules/@vaadin/vaadin-app-layout/src/vaadin-app-layout.js",
       "source": "/**\n@license\nVaadin App Layout\nCopyright (C) 2019 Vaadin Ltd\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport './safe-area-inset.js';\n\nimport './detect-ios-navbar.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { beforeNextRender, afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\n * `<vaadin-app-layout>` is a Web Component providing a quick and easy way to get a common application layout structure done.\n *\n * ```\n * <vaadin-app-layout primary-section=\"navbar|drawer\">\n *  <vaadin-drawer-toggle slot=\"navbar [touch-optimized]\"></vaadin-drawer-toggle>\n *  <h3 slot=\"navbar [touch-optimized]\">Company Name</h3>\n *  <vaadin-tabs orientation=\"vertical\" slot=\"drawer\">\n *    <vaadin-tab>Menu item 1</vaadin-tab>\n *  </vaadin-tabs>\n *  <!-- Everything else will be the page content -->\n *  <div>\n *    <h3>Page title</h3>\n *    <p>Page content</p>\n *  </div>\n * </vaadin-app-layout>\n * ```\n *\n * For best results, the component should be added to the root level of your application (i.e., as a direct child of `<body>`).\n *\n * The page should include a viewport meta tag which contains `viewport-fit=cover`, like the following:\n * ```\n * <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n * ```\n * This causes the viewport to be scaled to fill the device display.\n * To ensure that important content is displayed, use the provided css variables.\n * ```\n * --safe-area-inset-top\n * --safe-area-inset-right\n * --safe-area-inset-bottom\n * --safe-area-inset-left\n * ```\n *\n * ### Styling\n *\n * The following Shadow DOM parts of the `<vaadin-app-layout>` are available for styling:\n *\n * Part name     | Description\n * --------------|---------------------------------------------------------|\n * `navbar`      | Container for the navigation bar\n * `drawer`      | Container for the drawer area\n * `content`     | Container for page content.\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * ### Component's slots\n *\n * The following slots are available to be set\n *\n * Slot name          | Description\n * -------------------|---------------------------------------------------|\n * no name            | Default container for the page content\n * `navbar `          | Container for the top navbar area\n * `drawer`           | Container for an application menu\n * `touch-optimized`  | Container for the bottom navbar area (only visible for mobile devices)\n *\n *\n * See examples of setting the content into slots in the live demos.\n *\n * #### Touch optimized\n *\n * App Layout has a pseudo-slot `touch-optimized` in order to give more control of the presentation of\n * elements with `slot[navbar]`. Internally, when the user is interacting with App Layout from a\n * touchscreen device, the component will search for elements with `slot[navbar touch-optimized]` and move\n * them to the bottom of the page.\n *\n * ### Navigation\n *\n * As the drawer opens as an overlay in small devices, it makes sense to close it once a navigation happens.\n *\n * In order to do so, there are two options:\n * - If the `vaadin-app-layout` instance is available, then `drawerOpened` can be set to `false`\n * - If not, a custom event `close-overlay-drawer` can be dispatched either by calling\n *  `window.dispatchEvent(new CustomEvent('close-overlay-drawer'))` or by calling\n *  `Vaadin.AppLayoutElement.dispatchCloseOverlayDrawerEvent()`\n *\n * ### Scrolling areas\n *\n * By default, the component will act with the \"body scrolling\", so on mobile (iOS Safari and Android Chrome),\n * the toolbars will collapse when a scroll happens.\n *\n * To use the \"content scrolling\", in case of the content of the page relies on a pre-defined height (for instance,\n * it has a `height:100%`), then the developer can set `height: 100%` to both `html` and `body`.\n * That will make the `[content]` element of app layout scrollable.\n * On this case, the toolbars on mobile device won't collapse.\n *\n * @extends PolymerElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @demo demo/index.html\n */\nclass AppLayoutElement extends ElementMixin(ThemableMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: block;\n        box-sizing: border-box;\n        height: 100%;\n        --vaadin-app-layout-transition: 200ms;\n        transition: padding var(--vaadin-app-layout-transition);\n        --vaadin-app-layout-touch-optimized: false;\n        --vaadin-app-layout-navbar-offset-top: var(--_vaadin-app-layout-navbar-offset-size);\n        --vaadin-app-layout-navbar-offset-bottom: var(--_vaadin-app-layout-navbar-offset-size-bottom);\n        padding-top: var(--vaadin-app-layout-navbar-offset-top);\n        padding-bottom: var(--vaadin-app-layout-navbar-offset-bottom);\n        padding-left: var(--vaadin-app-layout-navbar-offset-left);\n      }\n\n      :host([dir=\"rtl\"]) {\n        padding-left: 0;\n        padding-right: var(--vaadin-app-layout-navbar-offset-left);\n      }\n\n      :host([hidden]),\n      [hidden] {\n        display: none !important;\n      }\n\n      :host([no-anim]) {\n        --vaadin-app-layout-transition: none !important;\n      }\n\n      :host([drawer-opened]) {\n        --vaadin-app-layout-drawer-offset-left: var(--_vaadin-app-layout-drawer-offset-size);\n      }\n\n      :host([overlay]) {\n        --vaadin-app-layout-drawer-offset-left: 0;\n        --vaadin-app-layout-navbar-offset-left: 0;\n      }\n\n      :host(:not([no-scroll])) [content] {\n        overflow: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      [content] {\n        height: 100%;\n      }\n\n      @media (pointer: coarse) and (max-width: 800px) and (min-height: 500px) {\n        :host {\n          --vaadin-app-layout-touch-optimized: true;\n        }\n      }\n\n      [part=\"navbar\"],\n      [part=\"navbar\"]::before {\n        position: fixed;\n        display: flex;\n        align-items: center;\n        top: 0;\n        right: 0;\n        left: 0;\n        transition: left var(--vaadin-app-layout-transition);\n        padding-top: var(--safe-area-inset-top);\n        padding-left: var(--safe-area-inset-left);\n        padding-right: var(--safe-area-inset-right);\n        z-index: 1;\n      }\n\n      :host(:not([dir=\"rtl\"])[primary-section=\"drawer\"][drawer-opened]:not([overlay])) [part=\"navbar\"] {\n        left: var(--vaadin-app-layout-drawer-offset-left, 0);\n      }\n\n      :host([dir=\"rtl\"][primary-section=\"drawer\"][drawer-opened]:not([overlay])) [part=\"navbar\"] {\n        right: var(--vaadin-app-layout-drawer-offset-left, 0);\n      }\n\n      :host([primary-section=\"drawer\"]) [part=\"drawer\"] {\n        top: 0;\n      }\n\n      [part=\"navbar\"][bottom] {\n        top: auto;\n        bottom: 0;\n        padding-bottom: var(--safe-area-inset-bottom);\n      }\n\n      [part=\"drawer\"] {\n        overflow: auto;\n        position: fixed;\n        top: var(--vaadin-app-layout-navbar-offset-top, 0);\n        right: auto;\n        bottom: var(--vaadin-app-layout-navbar-offset-bottom, var(--vaadin-viewport-offset-bottom, 0));\n        left: var(--vaadin-app-layout-navbar-offset-left, 0);\n        transition: transform var(--vaadin-app-layout-transition);\n        transform: translateX(-100%);\n        max-width: 90%;\n        width: 16em;\n        box-sizing: border-box;\n        padding: var(--safe-area-inset-top) 0 var(--safe-area-inset-bottom) var(--safe-area-inset-left);\n        outline: none;\n      }\n\n      :host([drawer-opened]) [part=\"drawer\"] {\n        transform: translateX(0%);\n        touch-action: manipulation;\n      }\n\n      [part=\"backdrop\"] {\n        background-color: #000;\n        opacity: 0.3;\n      }\n\n      :host(:not([drawer-opened])) [part=\"backdrop\"] {\n        opacity: 0;\n      }\n\n      :host([overlay]) [part=\"backdrop\"] {\n        position: fixed;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        pointer-events: none;\n        transition: opacity var(--vaadin-app-layout-transition);\n        -webkit-tap-highlight-color: transparent;\n      }\n\n      :host([overlay]) [part=\"drawer\"] {\n        top: 0;\n        bottom: 0;\n      }\n\n      :host([overlay]) [part=\"drawer\"],\n      :host([overlay]) [part=\"backdrop\"] {\n        z-index: 2;\n      }\n\n      :host([drawer-opened][overlay]) [part=\"backdrop\"] {\n        pointer-events: auto;\n        touch-action: manipulation;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"drawer\"] {\n        left: auto;\n        right: var(--vaadin-app-layout-navbar-offset-start, 0);\n        transform: translateX(100%);\n      }\n\n      :host([dir=\"rtl\"]) [part=\"navbar\"],\n      :host([dir=\"rtl\"]) [part=\"navbar\"]::before {\n        transition: right var(--vaadin-app-layout-transition);\n      }\n\n      :host([dir=\"rtl\"][drawer-opened]) [part='drawer'] {\n        transform: translateX(0%);\n      }\n\n      :host(:not([dir=\"rtl\"])[drawer-opened]:not([overlay])) {\n        padding-left: var(--vaadin-app-layout-drawer-offset-left);\n      }\n\n      :host([dir=\"rtl\"][drawer-opened]:not([overlay])) {\n        padding-right: var(--vaadin-app-layout-drawer-offset-left);\n      }\n\n      @media (max-width: 800px),\n      (max-height: 600px) {\n        :host {\n          --vaadin-app-layout-drawer-overlay: true;\n        }\n\n        [part=\"drawer\"] {\n          width: 20em;\n        }\n      }\n    </style>\n    <div part=\"navbar\" id=\"navbarTop\">\n      <slot name=\"navbar\"></slot>\n    </div>\n    <div part=\"backdrop\" on-click=\"_close\" on-touchstart=\"_close\"></div>\n    <div part=\"drawer\" id=\"drawer\">\n      <slot name=\"drawer\" id=\"drawerSlot\"></slot>\n    </div>\n    <div content=\"\">\n      <slot></slot>\n    </div>\n    <div part=\"navbar\" id=\"navbarBottom\" bottom=\"\" hidden=\"\">\n      <slot name=\"navbar-bottom\"></slot>\n    </div>\n    <div hidden=\"\"><slot id=\"touchSlot\" name=\"navbar touch-optimized\"></slot></div>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-app-layout';\n  }\n\n  static get version() {\n    return '2.2.0';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Defines whether navbar or drawer will come first visually.\n       * - By default (`primary-section=\"navbar\"`), the navbar takes the full available width and moves the drawer down.\n       * - If `primary-section=\"drawer\"` is set, then the drawer will move the navbar, taking the full available height.\n       * @attr {navbar|drawer} primary-section\n       * @type {!PrimarySection}\n       */\n      primarySection: {\n        type: String,\n        value: 'navbar',\n        notify: true,\n        reflectToAttribute: true,\n        observer: '_primarySectionObserver'\n      },\n\n      /**\n       * Controls whether the drawer is opened (visible) or not.\n       * Its default value depends on the viewport:\n       * - `true`, for desktop size views\n       * - `false`, for mobile size views\n       * @attr {boolean} drawer-opened\n       * @type {boolean}\n       */\n      drawerOpened: {\n        type: Boolean,\n        notify: true,\n        value: true,\n        reflectToAttribute: true,\n        observer: '_drawerOpenedObserver'\n      },\n\n      /**\n       *  Drawer is an overlay on top of the content\n       *  Controlled via CSS using `--vaadin-app-layout-drawer-overlay: true|false`;\n       * @type {boolean}\n       */\n      overlay: {\n        type: Boolean,\n        notify: true,\n        readOnly: true,\n        value: false,\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  constructor() {\n    super();\n    // TODO(jouni): might want to debounce\n    this.__boundResizeListener = this._resize.bind(this);\n    this.__drawerToggleClickListener = this._drawerToggleClick.bind(this);\n    this.__closeOverlayDrawerListener = this.__closeOverlayDrawer.bind(this);\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n\n    this._blockAnimationUntilAfterNextRender();\n\n    window.addEventListener('resize', this.__boundResizeListener);\n    this.addEventListener('drawer-toggle-click', this.__drawerToggleClickListener);\n\n    // Wait for all children to upgrade before trying to measure sizes\n    if (window.HTMLImports && !window.HTMLImports.useNative) {\n      Array.from(this.querySelectorAll('*')).forEach(child => {\n        if (child.localName.indexOf('-') > -1) {\n          window.customElements.whenDefined(child.localName).then(() => {\n            // TODO(jouni): might want to debounce\n            beforeNextRender(this, this._afterFirstRender);\n          });\n        }\n      });\n    } else {\n      beforeNextRender(this, this._afterFirstRender);\n    }\n\n    this._updateTouchOptimizedMode();\n\n    const navbarSlot = this.$.navbarTop.firstElementChild;\n    this._navbarChildObserver = new FlattenedNodesObserver(navbarSlot, (info) => {\n      this._updateTouchOptimizedMode();\n    });\n\n    this._touchChildObserver = new FlattenedNodesObserver(this.$.touchSlot, (info) => {\n      this._updateTouchOptimizedMode();\n    });\n\n    this._drawerChildObserver = new FlattenedNodesObserver(this.$.drawerSlot, (info) => {\n      this._updateDrawerSize();\n    });\n    this._updateDrawerSize();\n    this._updateOverlayMode();\n\n    window.addEventListener('close-overlay-drawer', this.__closeOverlayDrawerListener);\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this._navbarChildObserver && this._navbarChildObserver.disconnect();\n    this._drawerChildObserver && this._drawerChildObserver.disconnect();\n    this._touchChildObserver && this._touchChildObserver.disconnect();\n    window.removeEventListener('resize', this.__boundResizeListener);\n    this.removeEventListener('drawer-toggle-click', this.__drawerToggleClickListener);\n    this.removeEventListener('close-overlay-drawer', this.__drawerToggleClickListener);\n  }\n\n  /**\n   * Helper static method that dispatches a `close-overlay-drawer` event\n   */\n  static dispatchCloseOverlayDrawerEvent() {\n    window.dispatchEvent(new CustomEvent('close-overlay-drawer'));\n  }\n\n  /** @private */\n  _primarySectionObserver(value) {\n    const isValid = ['navbar', 'drawer'].indexOf(value) !== -1;\n    if (!isValid) {\n      this.set('primarySection', 'navbar');\n    }\n  }\n\n  /** @private */\n  _drawerOpenedObserver() {\n    const drawer = this.$.drawer;\n\n    drawer.removeAttribute('tabindex');\n\n    if (this.overlay) {\n      if (this.drawerOpened) {\n        drawer.setAttribute('tabindex', 0);\n        drawer.focus();\n        this._updateDrawerHeight();\n      }\n    }\n  }\n\n  /** @private */\n  _isShadyCSS() {\n    return window.ShadyCSS && !window.ShadyCSS.nativeCss;\n  }\n\n  /** @protected */\n  _afterFirstRender() {\n    this._blockAnimationUntilAfterNextRender();\n    this._updateOffsetSize();\n  }\n\n  /** @private */\n  _drawerToggleClick(e) {\n    e.stopPropagation();\n    this.drawerOpened = !this.drawerOpened;\n  }\n\n  /** @private */\n  __closeOverlayDrawer() {\n    if (this.overlay) {\n      this.drawerOpened = false;\n    }\n  }\n\n  /** @protected */\n  _updateDrawerSize() {\n    const childCount = this.querySelectorAll('[slot=drawer]').length;\n    const drawer = this.$.drawer;\n\n    if (childCount === 0) {\n      drawer.setAttribute('hidden', '');\n    } else {\n      drawer.removeAttribute('hidden');\n    }\n    this._updateOffsetSize();\n  }\n\n  /** @private */\n  _resize() {\n    this._blockAnimationUntilAfterNextRender();\n    this._updateTouchOptimizedMode();\n    this._updateOverlayMode();\n  }\n\n  /** @protected */\n  _updateOffsetSize() {\n    const navbar = this.shadowRoot.querySelector('[part=\"navbar\"]');\n    const navbarRect = navbar.getBoundingClientRect();\n\n    const navbarBottom = this.shadowRoot.querySelector('[part=\"navbar\"][bottom]');\n    const navbarBottomRect = navbarBottom.getBoundingClientRect();\n\n    if (this._isShadyCSS()) {\n      window.ShadyCSS.styleSubtree(this, {\n        '--_vaadin-app-layout-navbar-offset-size': navbarRect.height + 'px',\n        '--_vaadin-app-layout-navbar-offset-size-bottom': navbarBottomRect.height + 'px'\n      });\n    } else {\n      this.style.setProperty('--_vaadin-app-layout-navbar-offset-size', navbarRect.height + 'px');\n      this.style.setProperty('--_vaadin-app-layout-navbar-offset-size-bottom', navbarBottomRect.height + 'px');\n    }\n\n    const drawer = this.$.drawer;\n    const drawerRect = drawer.getBoundingClientRect();\n\n    if (this._isShadyCSS()) {\n      window.ShadyCSS.styleSubtree(this, {\n        '--_vaadin-app-layout-drawer-offset-size': drawerRect.width + 'px',\n        // Have to update both because ShadyCSS may not apply the one below if not in use\n        '--vaadin-app-layout-drawer-offset-left': 'var(--_vaadin-app-layout-drawer-offset-size)'\n      });\n    } else {\n      this.style.setProperty('--_vaadin-app-layout-drawer-offset-size', drawerRect.width + 'px');\n    }\n  }\n\n  /** @protected */\n  _updateDrawerHeight() {\n    const {scrollHeight, offsetHeight} = this.$.drawer;\n    const height = scrollHeight > offsetHeight ? `${scrollHeight}px` : '100%';\n\n    if (this._isShadyCSS()) {\n      window.ShadyCSS.styleSubtree(this, {\n        '--_vaadin-app-layout-drawer-scroll-size': height\n      });\n    } else {\n      this.style.setProperty('--_vaadin-app-layout-drawer-scroll-size', height);\n    }\n  }\n\n  /** @protected */\n  _updateOverlayMode() {\n    const overlay = this._getCustomPropertyValue('--vaadin-app-layout-drawer-overlay') == 'true';\n    const drawer = this.$.drawer;\n\n    if (!this.overlay && overlay) { // Changed from not overlay to overlay\n      this._drawerStateSaved = this.drawerOpened;\n      this.drawerOpened = false;\n    }\n\n    this._setOverlay(overlay);\n\n    if (this.overlay) {\n      drawer.setAttribute('role', 'dialog');\n      drawer.setAttribute('aria-modal', 'true');\n      drawer.setAttribute('aria-label', 'drawer');\n    } else {\n      if (this._drawerStateSaved) {\n        this.drawerOpened = this._drawerStateSaved;\n        this._drawerStateSaved = null;\n      }\n\n      drawer.removeAttribute('role');\n      drawer.removeAttribute('aria-modal');\n      drawer.removeAttribute('aria-label');\n    }\n\n    this._updateDrawerHeight();\n\n    // TODO(jouni): ARIA attributes. The drawer should act similar to a modal dialog when in ”overlay” mode\n  }\n\n  /** @protected */\n  _close() {\n    this.drawerOpened = false;\n  }\n\n  /** @private */\n  _getCustomPropertyValue(customProperty) {\n    let customPropertyValue;\n\n    if (this._isShadyCSS()) {\n      window.ShadyCSS.styleSubtree(this);\n      customPropertyValue = window.ShadyCSS.getComputedStyleValue(this, customProperty);\n    } else {\n      customPropertyValue = getComputedStyle(this).getPropertyValue(customProperty);\n    }\n\n    return (customPropertyValue || '').trim().toLowerCase();\n  }\n\n  /** @protected */\n  _updateTouchOptimizedMode() {\n    const touchOptimized = this._getCustomPropertyValue('--vaadin-app-layout-touch-optimized') == 'true';\n\n    const navbarItems = this.querySelectorAll('[slot*=\"navbar\"]');\n\n    if (navbarItems.length > 0) {\n      Array.from(navbarItems).forEach(navbar => {\n        if (navbar.getAttribute('slot').indexOf('touch-optimized') > -1) {\n          navbar.__touchOptimized = true;\n        }\n\n        if (touchOptimized && navbar.__touchOptimized) {\n          navbar.setAttribute('slot', 'navbar-bottom');\n        } else {\n          navbar.setAttribute('slot', 'navbar');\n        }\n      });\n    }\n\n    if (this.$.navbarTop.querySelector('[name=navbar]').assignedNodes().length === 0) {\n      this.$.navbarTop.setAttribute('hidden', '');\n    } else {\n      this.$.navbarTop.removeAttribute('hidden');\n    }\n\n    if (touchOptimized) {\n      this.$.navbarBottom.removeAttribute('hidden');\n    } else {\n      this.$.navbarBottom.setAttribute('hidden', '');\n    }\n\n    this._updateOffsetSize();\n  }\n\n  /** @protected */\n  _blockAnimationUntilAfterNextRender() {\n    this.setAttribute('no-anim', '');\n    afterNextRender(this, () => {\n      this.removeAttribute('no-anim');\n      if (this._isShadyCSS()) {\n        window.ShadyCSS.styleSubtree(this);\n      }\n    });\n  }\n\n  /**\n   * App Layout listens to `close-overlay-drawer` on the window level.\n   * A custom event can be dispatched and the App Layout will close the drawer in overlay.\n   *\n   * That can be used, for instance, when a navigation occurs when user clicks in a menu item inside the drawer.\n   *\n   * See `dispatchCloseOverlayDrawerEvent()` helper method.\n   *\n   * @event close-overlay-drawer\n   */\n}\n\ncustomElements.define(AppLayoutElement.is, AppLayoutElement);\n\nexport { AppLayoutElement };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-app-layout@2.2.0/node_modules/@vaadin/vaadin-app-layout/src/safe-area-inset.js",
       "source": "import '@polymer/polymer/lib/elements/custom-style.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<custom-style>\n  <style>\n    /* stylelint-disable length-zero-no-unit */\n    /* Use units so that the values can be used in calc() */\n    html {\n      --safe-area-inset-top: constant(safe-area-inset-top, 0px);\n      --safe-area-inset-right: constant(safe-area-inset-right, 0px);\n      --safe-area-inset-bottom: constant(safe-area-inset-bottom, 0px);\n      --safe-area-inset-left: constant(safe-area-inset-left, 0px);\n    }\n\n    @supports (padding-left: env(safe-area-inset-left)) {\n      html {\n        --safe-area-inset-top: env(safe-area-inset-top, 0px);\n        --safe-area-inset-right: env(safe-area-inset-right, 0px);\n        --safe-area-inset-bottom: env(safe-area-inset-bottom, 0px);\n        --safe-area-inset-left: env(safe-area-inset-left, 0px);\n      }\n    }\n    /* stylelint-enable */\n  </style>\n</custom-style>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-app-layout@2.2.0/node_modules/@vaadin/vaadin-app-layout/src/detect-ios-navbar.js",
       "source": "export const _detectIosNavbar = function() {\n  if (window.navigator.userAgent.match(/iPhone|iPad/i)) {\n    const innerHeight = window.innerHeight;\n    const innerWidth = window.innerWidth;\n    const landscape = innerWidth > innerHeight;\n    const clientHeight = document.documentElement.clientHeight;\n    if (landscape && clientHeight > innerHeight) {\n      document.documentElement.style.setProperty('--vaadin-viewport-offset-bottom', clientHeight - innerHeight + 'px');\n    } else {\n      document.documentElement.style.setProperty('--vaadin-viewport-offset-bottom', '');\n    }\n  }\n};\n\n_detectIosNavbar();\nwindow.addEventListener('resize', _detectIosNavbar);\n"
      }
     ]
    },
    {
     "id": 157,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-avatar@2.0.2/node_modules/@vaadin/vaadin-avatar/theme/lumo/vaadin-avatar-group.js + 4 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-avatar@2.0.2/node_modules/@vaadin/vaadin-avatar/theme/lumo/vaadin-avatar-group.js",
       "source": "import './vaadin-avatar.js';\nimport './vaadin-avatar-group-styles.js';\nimport '@vaadin/vaadin-item/theme/lumo/vaadin-item.js';\nimport '@vaadin/vaadin-list-box/theme/lumo/vaadin-list-box.js';\nimport '../../src/vaadin-avatar-group.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-avatar@2.0.2/node_modules/@vaadin/vaadin-avatar/theme/lumo/vaadin-avatar-group-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/menu-overlay.js';\n\nregisterStyles(\n  'vaadin-avatar-group',\n  css`\n    :host {\n      --vaadin-avatar-size: var(--lumo-size-m);\n    }\n\n    :host([theme~='small']) {\n      --vaadin-avatar-size: var(--lumo-size-s);\n    }\n\n    :host([theme~='xsmall']) {\n      --vaadin-avatar-size: var(--lumo-size-xs);\n    }\n\n    :host([theme~='xlarge']) {\n      --vaadin-avatar-group-overlap: 12px;\n      --vaadin-avatar-group-overlap-border: 3px;\n      --vaadin-avatar-size: var(--lumo-size-xl);\n    }\n\n    :host([theme~='large']) {\n      --vaadin-avatar-group-overlap: 10px;\n      --vaadin-avatar-group-overlap-border: 3px;\n      --vaadin-avatar-size: var(--lumo-size-l);\n    }\n\n    :host([theme~='small']) {\n      --vaadin-avatar-group-overlap: 6px;\n      --vaadin-avatar-group-overlap-border: 2px;\n      --vaadin-avatar-size: var(--lumo-size-s);\n    }\n\n    :host([theme~='xsmall']) {\n      --vaadin-avatar-group-overlap: 4px;\n      --vaadin-avatar-group-overlap-border: 2px;\n      --vaadin-avatar-size: var(--lumo-size-xs);\n    }\n  `,\n  { moduleId: 'lumo-avatar-group' }\n);\n\nregisterStyles(\n  'vaadin-avatar-group-overlay',\n  css`\n    :host {\n      --_lumo-list-box-item-selected-icon-display: none;\n      --_lumo-list-box-item-padding-left: calc(var(--lumo-space-m) + var(--lumo-border-radius) / 4);\n    }\n\n    [part='overlay'] {\n      outline: none;\n    }\n  `,\n  { include: ['lumo-overlay', 'lumo-menu-overlay-core'], moduleId: 'lumo-avatar-group-overlay' }\n);\n\nregisterStyles(\n  'vaadin-avatar-group-list-box',\n  css`\n    [part='items'] ::slotted(vaadin-item[theme='avatar-group-item']) {\n      padding: var(--lumo-space-xs);\n      padding-right: var(--lumo-space-m);\n    }\n\n    :host([dir='rtl']) [part='items'] ::slotted(vaadin-item[theme='avatar-group-item']) {\n      padding: var(--lumo-space-xs);\n      padding-left: var(--lumo-space-m);\n    }\n  `,\n  { moduleId: 'lumo-avatar-group-list-box' }\n);\n\nregisterStyles(\n  'vaadin-item',\n  css`\n    :host([theme='avatar-group-item']) [part='content'] {\n      display: flex;\n      align-items: center;\n    }\n\n    :host([theme='avatar-group-item']) ::slotted(vaadin-avatar) {\n      width: var(--lumo-size-xs);\n      height: var(--lumo-size-xs);\n    }\n\n    :host([theme='avatar-group-item']:not([dir='rtl'])) ::slotted(vaadin-avatar) {\n      margin-right: var(--lumo-space-s);\n    }\n\n    :host([theme='avatar-group-item'][dir='rtl']) ::slotted(vaadin-avatar) {\n      margin-left: var(--lumo-space-s);\n    }\n  `,\n  { moduleId: 'lumo-avatar-group-item' }\n);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-avatar@2.0.2/node_modules/@vaadin/vaadin-avatar/src/vaadin-avatar-group.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { calculateSplices } from '@polymer/polymer/lib/utils/array-splice.js';\nimport { mixinBehaviors } from '@polymer/polymer/lib/legacy/class.js';\nimport { timeOut } from '@polymer/polymer/lib/utils/async.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { IronA11yAnnouncer } from '@polymer/iron-a11y-announcer/iron-a11y-announcer.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { IronResizableBehavior } from '@polymer/iron-resizable-behavior/iron-resizable-behavior.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport '@vaadin/vaadin-item/src/vaadin-item.js';\nimport './vaadin-avatar-group-list-box.js';\nimport './vaadin-avatar-group-overlay.js';\nimport './vaadin-avatar.js';\n\nconst MINIMUM_DISPLAYED_AVATARS = 2;\n\n/**\n * `<vaadin-avatar-group>` is a Web Component providing avatar group displaying functionality.\n *\n * To create the avatar group, first add the component to the page:\n *\n * ```\n * <vaadin-avatar-group></vaadin-avatar-group>\n * ```\n *\n * And then use [`items`](#/elements/vaadin-avatar-group#property-items) property to initialize the structure:\n *\n * ```\n * document.querySelector('vaadin-avatar-group').items = [\n *   {name: 'John Doe'},\n *   {abbr: 'AB'}\n * ];\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are exposed for styling:\n *\n * Part name   | Description\n * ----------- | ---------------\n * `container` | The container element\n * `avatar`    | Individual avatars\n *\n * See [Styling Components](https://vaadin.com/docs/v14/themes/styling-components.html) documentation.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n */\nclass AvatarGroupElement extends ElementMixin(ThemableMixin(mixinBehaviors([IronResizableBehavior], PolymerElement))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          width: 100%; /* prevent collapsing inside non-stretching column flex */\n          --vaadin-avatar-group-overlap: 8px;\n          --vaadin-avatar-group-overlap-border: 2px;\n          --vaadin-avatar-size: 64px;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        [part='container'] {\n          display: flex;\n          position: relative;\n          width: 100%;\n          flex-wrap: nowrap;\n        }\n\n        [part='avatar']:not(:first-child) {\n          -webkit-mask-image: url('data:image/svg+xml;utf8,<svg viewBox=%220 0 300 300%22 fill=%22none%22 xmlns=%22http://www.w3.org/2000/svg%22><path fill-rule=%22evenodd%22 clip-rule=%22evenodd%22 d=%22M300 0H0V300H300V0ZM150 200C177.614 200 200 177.614 200 150C200 122.386 177.614 100 150 100C122.386 100 100 122.386 100 150C100 177.614 122.386 200 150 200Z%22 fill=%22black%22/></svg>');\n          mask-image: url('data:image/svg+xml;utf8,<svg viewBox=%220 0 300 300%22 fill=%22none%22 xmlns=%22http://www.w3.org/2000/svg%22><path fill-rule=%22evenodd%22 clip-rule=%22evenodd%22 d=%22M300 0H0V300H300V0ZM150 200C177.614 200 200 177.614 200 150C200 122.386 177.614 100 150 100C122.386 100 100 122.386 100 150C100 177.614 122.386 200 150 200Z%22 fill=%22black%22/></svg>');\n          -webkit-mask-size: calc(\n            300% + var(--vaadin-avatar-group-overlap-border) * 6 - var(--vaadin-avatar-outline-width) * 6\n          );\n          mask-size: calc(\n            300% + var(--vaadin-avatar-group-overlap-border) * 6 - var(--vaadin-avatar-outline-width) * 6\n          );\n        }\n\n        [part='avatar']:not([dir='rtl']):not(:first-child) {\n          margin-left: calc(var(--vaadin-avatar-group-overlap) * -1 - var(--vaadin-avatar-outline-width));\n          -webkit-mask-position: calc(50% - var(--vaadin-avatar-size) + var(--vaadin-avatar-group-overlap));\n          mask-position: calc(50% - var(--vaadin-avatar-size) + var(--vaadin-avatar-group-overlap));\n        }\n\n        [part='avatar'][dir='rtl']:not(:first-child) {\n          margin-right: calc(var(--vaadin-avatar-group-overlap) * -1);\n          -webkit-mask-position: calc(\n            50% + var(--vaadin-avatar-size) - var(--vaadin-avatar-group-overlap) + var(--vaadin-avatar-outline-width)\n          );\n          mask-position: calc(\n            50% + var(--vaadin-avatar-size) - var(--vaadin-avatar-group-overlap) + var(--vaadin-avatar-outline-width)\n          );\n        }\n      </style>\n      <div id=\"container\" part=\"container\">\n        <template id=\"items\" is=\"dom-repeat\" items=\"[[__computeItems(items.*, __itemsInView, maxItemsVisible)]]\">\n          <vaadin-avatar\n            name=\"[[item.name]]\"\n            abbr=\"[[item.abbr]]\"\n            img=\"[[item.img]]\"\n            part=\"avatar\"\n            theme$=\"[[theme]]\"\n            i18n=\"[[i18n]]\"\n            color-index=\"[[item.colorIndex]]\"\n          ></vaadin-avatar>\n        </template>\n        <vaadin-avatar\n          id=\"overflow\"\n          part=\"avatar\"\n          hidden$=\"[[__computeMoreHidden(items.length, __itemsInView, __maxReached)]]\"\n          abbr=\"[[__computeMore(items.length, __itemsInView, maxItemsVisible)]]\"\n          theme$=\"[[theme]]\"\n          on-click=\"_onOverflowClick\"\n          on-keydown=\"_onOverflowKeyDown\"\n          aria-haspopup=\"listbox\"\n        ></vaadin-avatar>\n      </div>\n      <vaadin-avatar-group-overlay id=\"overlay\" opened=\"{{_opened}}\" on-vaadin-overlay-close=\"_onVaadinOverlayClose\">\n        <template>\n          <vaadin-avatar-group-list-box on-keydown=\"_onListKeyDown\">\n            <template is=\"dom-repeat\" items=\"[[__computeExtraItems(items.*, __itemsInView, maxItemsVisible)]]\">\n              <vaadin-item theme=\"avatar-group-item\" role=\"option\">\n                <vaadin-avatar\n                  name=\"[[item.name]]\"\n                  abbr=\"[[item.abbr]]\"\n                  img=\"[[item.img]]\"\n                  i18n=\"[[i18n]]\"\n                  part=\"avatar\"\n                  theme$=\"[[theme]]\"\n                  color-index=\"[[item.colorIndex]]\"\n                  tabindex=\"-1\"\n                  aria-hidden=\"true\"\n                ></vaadin-avatar>\n                [[item.name]]\n              </vaadin-item>\n            </template>\n          </vaadin-avatar-group-list-box>\n        </template>\n      </vaadin-avatar-group-overlay>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-avatar-group';\n  }\n\n  static get version() {\n    return '2.0.2';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * An array containing the items which will be stamped as avatars.\n       *\n       * The items objects allow to configure [`name`](#/elements/vaadin-avatar#property-name),\n       * [`abbr`](#/elements/vaadin-avatar#property-abbr), [`img`](#/elements/vaadin-avatar#property-img)\n       * and [`colorIndex`](#/elements/vaadin-avatar#property-colorIndex) properties on the\n       * stamped avatars.\n       *\n       * #### Example\n       *\n       * ```js\n       * group.items = [\n       *   {\n       *     name: 'User name',\n       *     img: 'url-to-image.png'\n       *   },\n       *   {\n       *     abbr: 'JD',\n       *     colorIndex: 1\n       *   },\n       * ];\n       * ```\n       *\n       * @type {!Array<!AvatarGroupItem> | undefined}\n       */\n      items: {\n        type: Array\n      },\n\n      /**\n       * The maximum number of avatars to display. By default, all the avatars are displayed.\n       * When _maxItemsVisible_ is set, the overflowing avatars are grouped into one avatar with\n       * a dropdown. Setting 0 or 1 has no effect so there are always at least two avatars visible.\n       */\n      maxItemsVisible: {\n        type: Number\n      },\n\n      /**\n       * The object used to localize this component.\n       * To change the default localization, replace the entire\n       * _i18n_ object or just the property you want to modify.\n       *\n       * The object has the following JSON structure and default values:\n       * ```\n       * {\n       *   // Translation of the anonymous user avatar title.\n       *   anonymous: 'anonymous',\n       *   // Translation of the avatar group accessible label.\n       *   // {count} is replaced with the actual count of users.\n       *   activeUsers: {\n       *     one: 'Currently one active user',\n       *     many: 'Currently {count} active users'\n       *   },\n       *   // Screen reader announcement when user joins group.\n       *   // {user} is replaced with the name or abbreviation.\n       *   // When neither is set, \"anonymous\" is used instead.\n       *   joined: '{user} joined',\n       *   // Screen reader announcement when user leaves group.\n       *   // {user} is replaced with the name or abbreviation.\n       *   // When neither is set, \"anonymous\" is used instead.\n       *   left: '{user} left'\n       * }\n       * ```\n       * @type {!AvatarGroupI18n}\n       * @default {English/US}\n       */\n      i18n: {\n        type: Object,\n        value: () => {\n          return {\n            anonymous: 'anonymous',\n            activeUsers: {\n              one: 'Currently one active user',\n              many: 'Currently {count} active users'\n            },\n            joined: '{user} joined',\n            left: '{user} left'\n          };\n        }\n      },\n\n      /** @private */\n      __maxReached: {\n        type: Boolean,\n        computed: '__computeMaxReached(items.length, maxItemsVisible)'\n      },\n\n      /** @private */\n      __itemsInView: {\n        type: Number,\n        value: null\n      },\n\n      /** @private */\n      _opened: {\n        type: Boolean,\n        observer: '__openedChanged',\n        value: false\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '__computeMoreTitle(items.length, __itemsInView, maxItemsVisible)',\n      '__itemsChanged(items.splices, items.*)',\n      '__i18nItemsChanged(i18n.*, items.length)'\n    ];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    IronA11yAnnouncer.requestAvailability();\n\n    this.__boundSetPosition = this.__setPosition.bind(this);\n\n    this.addEventListener('iron-resize', this._onResize.bind(this));\n\n    this._overlayElement = this.shadowRoot.querySelector('vaadin-avatar-group-overlay');\n\n    afterNextRender(this, () => {\n      this.__setItemsInView();\n    });\n  }\n\n  /**\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @protected\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (name === 'dir') {\n      this.__setPosition();\n    }\n  }\n\n  /**\n   * @return {!Array<!HTMLElement>}\n   * @protected\n   */\n  get _avatars() {\n    return this.shadowRoot.querySelectorAll('vaadin-avatar');\n  }\n\n  /** @private */\n  __announce(text) {\n    this.dispatchEvent(\n      new CustomEvent('iron-announce', {\n        bubbles: true,\n        composed: true,\n        detail: {\n          text\n        }\n      })\n    );\n  }\n\n  /** @private */\n  __getMessage(user, action) {\n    return action.replace('{user}', user.name || user.abbr || this.i18n.anonymous);\n  }\n\n  /** @private */\n  _onOverflowClick(e) {\n    e.stopPropagation();\n    if (this._opened) {\n      this.$.overlay.close();\n    } else if (!e.defaultPrevented) {\n      this._opened = true;\n    }\n  }\n\n  /** @private */\n  _onOverflowKeyDown(e) {\n    if (!this._opened) {\n      if (/^(Enter|SpaceBar|\\s)$/.test(e.key)) {\n        e.preventDefault();\n        this._opened = true;\n      }\n    }\n  }\n\n  /** @private */\n  _onListKeyDown(event) {\n    if (event.key === 'Escape' || event.key === 'Esc' || /^(Tab)$/.test(event.key)) {\n      this._opened = false;\n    }\n  }\n\n  /** @private */\n  _onResize() {\n    this.__debounceResize = Debouncer.debounce(this.__debounceResize, timeOut.after(0), () => {\n      this.__setItemsInView();\n      this.__setPosition();\n    });\n  }\n\n  /** @private */\n  _onVaadinOverlayClose(e) {\n    if (e.detail.sourceEvent && e.detail.sourceEvent.composedPath().indexOf(this) !== -1) {\n      e.preventDefault();\n    }\n  }\n\n  /** @private */\n  __computeItems(arr, itemsInView, maxItemsVisible) {\n    const items = arr.base || [];\n    const limit = this.__getLimit(items.length, itemsInView, maxItemsVisible);\n    return limit ? items.slice(0, limit) : items;\n  }\n\n  /** @private */\n  __computeExtraItems(arr, itemsInView, maxItemsVisible) {\n    const items = arr.base || [];\n    const limit = this.__getLimit(items.length, itemsInView, maxItemsVisible);\n    return limit ? items.slice(limit) : items;\n  }\n\n  /** @private */\n  __computeMaxReached(items, maxItemsVisible) {\n    return maxItemsVisible != null && items > this.__getMax(maxItemsVisible);\n  }\n\n  /** @private */\n  __computeMore(items, itemsInView, maxItemsVisible) {\n    return `+${items - this.__getLimit(items, itemsInView, maxItemsVisible)}`;\n  }\n\n  /** @private */\n  __computeMoreHidden(items, itemsInView, maxReached) {\n    return !maxReached && !(itemsInView && itemsInView < items);\n  }\n\n  /** @private */\n  __computeMoreTitle(items, itemsInView, maxItemsVisible) {\n    const limit = this.__getLimit(items, itemsInView, maxItemsVisible);\n    if (limit == null) {\n      return;\n    }\n    const result = [];\n    for (let i = limit; i < items; i++) {\n      const item = this.items[i];\n      result.push(item.name || item.abbr || 'anonymous');\n    }\n    // override generated title attribute\n    this.$.overflow.setAttribute('title', result.join('\\n'));\n  }\n\n  /** @private */\n  __getLimit(items, itemsInView, maxItemsVisible) {\n    let limit = null;\n    // handle max set to 0 or 1\n    const adjustedMax = this.__getMax(maxItemsVisible);\n    if (maxItemsVisible != null && adjustedMax < items) {\n      limit = adjustedMax - 1;\n    } else if (itemsInView && itemsInView < items) {\n      limit = itemsInView;\n    }\n\n    return Math.min(limit, this.__calculateAvatarsFitWidth());\n  }\n\n  /** @private */\n  __getMax(maxItemsVisible) {\n    return Math.max(maxItemsVisible, MINIMUM_DISPLAYED_AVATARS);\n  }\n\n  /** @private */\n  __itemsChanged(splices, itemsChange) {\n    const items = itemsChange.base;\n    this.$.items.render();\n    this.__setItemsInView();\n\n    // mutation using group.splice('items')\n    if (splices && Array.isArray(splices.indexSplices)) {\n      splices.indexSplices.forEach((mutation) => {\n        this.__announceItemsChange(items, mutation);\n      });\n    } else if (Array.isArray(items) && Array.isArray(this.__oldItems)) {\n      // mutation using group.set('items')\n      const diff = calculateSplices(items, this.__oldItems);\n      diff.forEach((mutation) => {\n        this.__announceItemsChange(items, mutation);\n      });\n    }\n\n    this.__oldItems = items;\n  }\n\n  /** @private */\n  __announceItemsChange(items, mutation) {\n    const { addedCount, index, removed } = mutation;\n    let addedMsg = [];\n    let removedMsg = [];\n    if (addedCount) {\n      addedMsg = items\n        .slice(index, index + addedCount)\n        .map((user) => this.__getMessage(user, this.i18n.joined || '{user} joined'));\n    }\n\n    if (removed) {\n      removedMsg = removed.map((user) => this.__getMessage(user, this.i18n.left || '{user} left'));\n    }\n\n    const messages = removedMsg.concat(addedMsg);\n    if (messages.length > 0) {\n      this.__announce(messages.join(', '));\n    }\n  }\n\n  /** @private */\n  __i18nItemsChanged(i18n, items) {\n    const { base } = i18n;\n    if (base && base.activeUsers) {\n      const field = items === 1 ? 'one' : 'many';\n      if (base.activeUsers[field]) {\n        this.setAttribute('aria-label', base.activeUsers[field].replace('{count}', items || 0));\n      }\n    }\n  }\n\n  /** @private */\n  __openedChanged(opened, wasOpened) {\n    if (opened) {\n      if (!this._menuElement) {\n        this._menuElement = this._overlayElement.content.querySelector('vaadin-avatar-group-list-box');\n        this._menuElement.setAttribute('role', 'listbox');\n      }\n\n      this._openedWithFocusRing = this.$.overflow.hasAttribute('focus-ring');\n\n      const avatars = this._menuElement.querySelectorAll('vaadin-avatar');\n      avatars.forEach((avatar) => avatar.removeAttribute('title'));\n\n      this._menuElement.focus();\n      this.__setPosition();\n      window.addEventListener('scroll', this.__boundSetPosition, true);\n    } else if (wasOpened) {\n      this.$.overflow.focus();\n      if (this._openedWithFocusRing) {\n        this.$.overflow.setAttribute('focus-ring', '');\n      }\n      window.removeEventListener('scroll', this.__boundSetPosition, true);\n    }\n    this.$.overflow.setAttribute('aria-expanded', opened === true);\n  }\n\n  /** @private */\n  __setItemsInView() {\n    const avatars = this._avatars;\n    const items = this.items;\n\n    // always show at least two avatars\n    if (!items || !avatars || avatars.length < 3) {\n      return;\n    }\n\n    let result = this.__calculateAvatarsFitWidth();\n\n    // only show overlay if two or more avatars don't fit\n    if (result === items.length - 1) {\n      result = items.length;\n    }\n\n    // close overlay if all avatars become visible\n    if (result >= items.length && this._opened) {\n      this.$.overlay.close();\n      // FIXME: hack to avoid jump before closing\n      this.$.overlay._flushAnimation('closing');\n    }\n\n    // reserve space for overflow avatar\n    this.__itemsInView = result;\n  }\n\n  /** @private **/\n  __calculateAvatarsFitWidth() {\n    if (!this.shadowRoot || this._avatars.length < MINIMUM_DISPLAYED_AVATARS) {\n      return MINIMUM_DISPLAYED_AVATARS;\n    }\n\n    const avatars = this._avatars;\n\n    // assume all the avatars have the same width\n    const avatarWidth = avatars[0].clientWidth;\n\n    // take negative margin into account\n    const { marginLeft, marginRight } = getComputedStyle(avatars[1]);\n\n    const offset =\n      this.getAttribute('dir') == 'rtl'\n        ? parseInt(marginRight, 0) - parseInt(marginLeft, 0)\n        : parseInt(marginLeft, 0) - parseInt(marginRight, 0);\n\n    return Math.floor((this.$.container.offsetWidth - avatarWidth) / (avatarWidth + offset));\n  }\n\n  /** @private */\n  __setPosition() {\n    if (!this._opened) {\n      return;\n    }\n    const btnRect = this.$.overflow.getBoundingClientRect();\n    const viewportHeight = Math.min(window.innerHeight, document.documentElement.clientHeight);\n    const bottomAlign = btnRect.top > (viewportHeight - btnRect.height) / 2;\n\n    const isRtl = this.getAttribute('dir') === 'rtl';\n\n    if (isRtl) {\n      this._overlayElement.style.right = document.documentElement.clientWidth - btnRect.right + 'px';\n    } else {\n      this._overlayElement.style.left = btnRect.left + 'px';\n    }\n\n    if (bottomAlign) {\n      this._overlayElement.setAttribute('bottom-aligned', '');\n      this._overlayElement.style.removeProperty('top');\n      this._overlayElement.style.bottom = viewportHeight - btnRect.top + 'px';\n    } else {\n      this._overlayElement.removeAttribute('bottom-aligned');\n      this._overlayElement.style.removeProperty('bottom');\n      this._overlayElement.style.top = btnRect.bottom + 'px';\n    }\n  }\n}\n\ncustomElements.define(AvatarGroupElement.is, AvatarGroupElement);\n\nexport { AvatarGroupElement };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-avatar@2.0.2/node_modules/@vaadin/vaadin-avatar/src/vaadin-avatar-group-list-box.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { ListBoxElement } from '@vaadin/vaadin-list-box/src/vaadin-list-box.js';\n\n/**\n * The vaadin-avatar-group-list-box element.\n *\n * @extends HTMLElement\n */\nclass AvatarGroupListBoxElement extends ListBoxElement {\n  static get is() {\n    return 'vaadin-avatar-group-list-box';\n  }\n}\n\ncustomElements.define(AvatarGroupListBoxElement.is, AvatarGroupListBoxElement);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-avatar@2.0.2/node_modules/@vaadin/vaadin-avatar/src/vaadin-avatar-group-overlay.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { OverlayElement } from '@vaadin/vaadin-overlay/src/vaadin-overlay.js';\nimport { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\n\nregisterStyles(\n  'vaadin-avatar-group-overlay',\n  css`\n    :host {\n      align-items: flex-start;\n      justify-content: flex-start;\n    }\n\n    :host([bottom-aligned]) {\n      justify-content: flex-end;\n    }\n  `,\n  { moduleId: 'vaadin-avatar-group-overlay-styles' }\n);\n\n/**\n * The overlay element.\n *\n * ### Styling\n *\n * See [`<vaadin-overlay>` documentation](https://github.com/vaadin/vaadin-overlay/blob/master/src/vaadin-overlay.html)\n * for `<vaadin-avatar-group-overlay>` parts.\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends HTMLElement\n */\nclass AvatarGroupOverlayElement extends OverlayElement {\n  static get is() {\n    return 'vaadin-avatar-group-overlay';\n  }\n}\n\ncustomElements.define(AvatarGroupOverlayElement.is, AvatarGroupOverlayElement);\n"
      }
     ]
    },
    {
     "id": 158,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-select@3.0.0/node_modules/@vaadin/vaadin-select/theme/lumo/vaadin-select.js + 4 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-select@3.0.0/node_modules/@vaadin/vaadin-select/theme/lumo/vaadin-select.js",
       "source": "import './vaadin-select-styles.js';\nimport '../../src/vaadin-select.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-select@3.0.0/node_modules/@vaadin/vaadin-select/theme/lumo/vaadin-select-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/menu-overlay.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/field-button.js';\nimport '@vaadin/vaadin-text-field/theme/lumo/vaadin-text-field.js';\nimport '@vaadin/vaadin-item/theme/lumo/vaadin-item.js';\nimport '@vaadin/vaadin-list-box/theme/lumo/vaadin-list-box.js';\n\nregisterStyles(\n  'vaadin-select',\n  css`\n    :host {\n      outline: none;\n      -webkit-tap-highlight-color: transparent;\n    }\n\n    [selected] {\n      padding-left: 0;\n      padding-right: 0;\n      flex: auto;\n    }\n\n    :host([theme~='small']) [selected] {\n      padding: 0;\n      min-height: var(--lumo-size-s);\n    }\n\n    :host([theme~='align-left']) [selected] {\n      text-align: left;\n    }\n\n    :host([theme~='align-right']) [selected] {\n      text-align: right;\n    }\n\n    :host([theme~='align-center']) [selected] {\n      text-align: center;\n    }\n\n    [part='toggle-button']::before {\n      content: var(--lumo-icons-dropdown);\n    }\n\n    /* Highlight the toggle button when hovering over the entire component */\n    :host(:hover:not([readonly]):not([disabled])) [part='toggle-button'] {\n      color: var(--lumo-contrast-80pct);\n    }\n  `,\n  { include: ['lumo-field-button'], moduleId: 'lumo-select' }\n);\n\nregisterStyles(\n  'vaadin-select-text-field',\n  css`\n    :host([theme~='align-center']) ::slotted([part~='value']) {\n      --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent 0.25em, #000 1.5em);\n    }\n\n    :host([theme~='align-center']) ::slotted([part~='value']) {\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    :host([theme~='align-right']) ::slotted([part~='value']) {\n      --_lumo-text-field-overflow-mask-image: linear-gradient(to right, transparent 0.25em, #000 1.5em);\n    }\n\n    [part='input-field'] {\n      cursor: default;\n    }\n\n    [part='input-field'] ::slotted([part='value']) {\n      display: flex;\n    }\n\n    [part='input-field']:focus {\n      outline: none;\n    }\n\n    /* RTL specific styles */\n    :host([theme~='align-left'][dir='rtl']) ::slotted([part~='value']) {\n      --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent 0.25em, #000 1.5em);\n    }\n\n    :host([theme~='align-center'][dir='rtl']) ::slotted([part~='value']) {\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    :host([dir='rtl']) ::slotted([part~='value']),\n    :host([theme~='align-right'][dir='rtl']) ::slotted([part~='value']) {\n      --_lumo-text-field-overflow-mask-image: linear-gradient(to right, transparent 0.25em, #000 1.5em);\n    }\n  `,\n  { moduleId: 'lumo-select-text-field' }\n);\n\nregisterStyles(\n  'vaadin-select-overlay',\n  css`\n    :host {\n      --_lumo-item-selected-icon-display: block;\n    }\n\n    :host([bottom-aligned]) {\n      justify-content: flex-end;\n    }\n\n    [part~='overlay'] {\n      min-width: var(--vaadin-select-text-field-width);\n    }\n\n    /* Small viewport adjustment */\n    :host([phone]) {\n      top: 0 !important;\n      right: 0 !important;\n      bottom: var(--vaadin-overlay-viewport-bottom, 0) !important;\n      left: 0 !important;\n      align-items: stretch;\n      justify-content: flex-end;\n    }\n\n    :host([theme~='align-left']) {\n      text-align: left;\n    }\n\n    :host([theme~='align-right']) {\n      text-align: right;\n    }\n\n    :host([theme~='align-center']) {\n      text-align: center;\n    }\n  `,\n  { include: ['lumo-menu-overlay'], moduleId: 'lumo-select-overlay' }\n);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-select@3.0.0/node_modules/@vaadin/vaadin-select/src/vaadin-select.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { mixinBehaviors } from '@polymer/polymer/lib/legacy/class.js';\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ControlStateMixin } from '@vaadin/vaadin-control-state-mixin/vaadin-control-state-mixin.js';\nimport { IronResizableBehavior } from '@polymer/iron-resizable-behavior/iron-resizable-behavior.js';\nimport '@polymer/iron-media-query/iron-media-query.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport './vaadin-select-overlay.js';\nimport './vaadin-select-text-field.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `\n  <style>\n    @font-face {\n      font-family: \"vaadin-select-icons\";\n      src: url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAASEAAsAAAAABDgAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAABCAAAAGAAAABgDxIGKmNtYXAAAAFoAAAAVAAAAFQXVtKHZ2FzcAAAAbwAAAAIAAAACAAAABBnbHlmAAABxAAAAHwAAAB8CohkJ2hlYWQAAAJAAAAANgAAADYOavgEaGhlYQAAAngAAAAkAAAAJAarA8ZobXR4AAACnAAAABQAAAAUCAABP2xvY2EAAAKwAAAADAAAAAwAKABSbWF4cAAAArwAAAAgAAAAIAAHABduYW1lAAAC3AAAAYYAAAGGmUoJ+3Bvc3QAAARkAAAAIAAAACAAAwAAAAMEAAGQAAUAAAKZAswAAACPApkCzAAAAesAMwEJAAAAAAAAAAAAAAAAAAAAARAAAAAAAAAAAAAAAAAAAAAAQAAA6QADwP/AAEADwABAAAAAAQAAAAAAAAAAAAAAIAAAAAAAAwAAAAMAAAAcAAEAAwAAABwAAwABAAAAHAAEADgAAAAKAAgAAgACAAEAIOkA//3//wAAAAAAIOkA//3//wAB/+MXBAADAAEAAAAAAAAAAAAAAAEAAf//AA8AAQAAAAAAAAAAAAIAADc5AQAAAAABAAAAAAAAAAAAAgAANzkBAAAAAAEAAAAAAAAAAAACAAA3OQEAAAAAAQE/AUAC6QIVABQAAAEwFx4BFxYxMDc+ATc2MTAjKgEjIgE/ISJPIiEhIk8iIUNCoEJDAhUhIk8iISEiTyIhAAEAAAABAABvL5bdXw889QALBAAAAAAA1jHaeQAAAADWMdp5AAAAAALpAhUAAAAIAAIAAAAAAAAAAQAAA8D/wAAABAAAAAAAAukAAQAAAAAAAAAAAAAAAAAAAAUEAAAAAAAAAAAAAAAAAAAABAABPwAAAAAACgAUAB4APgABAAAABQAVAAEAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAADgCuAAEAAAAAAAEABwAAAAEAAAAAAAIABwBgAAEAAAAAAAMABwA2AAEAAAAAAAQABwB1AAEAAAAAAAUACwAVAAEAAAAAAAYABwBLAAEAAAAAAAoAGgCKAAMAAQQJAAEADgAHAAMAAQQJAAIADgBnAAMAAQQJAAMADgA9AAMAAQQJAAQADgB8AAMAAQQJAAUAFgAgAAMAAQQJAAYADgBSAAMAAQQJAAoANACkaWNvbW9vbgBpAGMAbwBtAG8AbwBuVmVyc2lvbiAxLjAAVgBlAHIAcwBpAG8AbgAgADEALgAwaWNvbW9vbgBpAGMAbwBtAG8AbwBuaWNvbW9vbgBpAGMAbwBtAG8AbwBuUmVndWxhcgBSAGUAZwB1AGwAYQByaWNvbW9vbgBpAGMAbwBtAG8AbwBuRm9udCBnZW5lcmF0ZWQgYnkgSWNvTW9vbi4ARgBvAG4AdAAgAGcAZQBuAGUAcgBhAHQAZQBkACAAYgB5ACAASQBjAG8ATQBvAG8AbgAuAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==) format('woff');\n      font-weight: normal;\n      font-style: normal;\n    }\n  </style>\n`;\n\ndocument.head.appendChild($_documentContainer.content);\n\n/**\n * `<vaadin-select>` is a Web Component for selecting values from a list of items. The content of the\n * the select can be populated in two ways: imperatively by using renderer callback function and\n * declaratively by using Polymer's Templates.\n *\n * ### Rendering\n *\n * By default, the select uses the content provided by using the renderer callback function.\n *\n * The renderer function provides `root`, `select` arguments.\n * Generate DOM content, append it to the `root` element and control the state\n * of the host element by accessing `select`.\n *\n * ```html\n * <vaadin-select id=\"select\"></vaadin-select>\n * ```\n * ```js\n * const select = document.querySelector('#select');\n * select.renderer = function(root, select) {\n *   const listBox = document.createElement('vaadin-list-box');\n *   // append 3 <vaadin-item> elements\n *   ['Jose', 'Manolo', 'Pedro'].forEach(function(name) {\n *     const item = document.createElement('vaadin-item');\n *     item.textContent = name;\n *     listBox.appendChild(item);\n *   });\n *\n *   // update the content\n *   root.appendChild(listBox);\n * };\n * ```\n *\n * Renderer is called on initialization of new select and on its opening.\n * DOM generated during the renderer call can be reused\n * in the next renderer call and will be provided with the `root` argument.\n * On first call it will be empty.\n *\n * ### Polymer Templates\n *\n * Alternatively, the content can be provided with Polymer's Template.\n * Select finds the first child template and uses that in case renderer callback function\n * is not provided. You can also set a custom template using the `template` property.\n *\n * ```\n * <vaadin-select>\n *   <template>\n *     <vaadin-list-box>\n *       <vaadin-item label=\"foo\">Foo</vaadin-item>\n *       <vaadin-item>Bar</vaadin-item>\n *       <vaadin-item>Baz</vaadin-item>\n *     </vaadin-list-box>\n *   </template>\n * </vaadin-select>\n * ```\n *\n * Hint: By setting the `label` property of inner vaadin-items you will\n * be able to change the visual representation of the selected value in the input part.\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `toggle-button` | The toggle button\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `opened` | Set when the select is open | :host\n * `invalid` | Set when the element is invalid | :host\n * `focused` | Set when the element is focused | :host\n * `focus-ring` | Set when the element is keyboard focused | :host\n * `readonly` | Set when the select is read only | :host\n *\n * `<vaadin-select>` element sets these custom CSS properties:\n *\n * Property name | Description | Theme for element\n * --- | --- | ---\n * `--vaadin-select-text-field-width` | Width of the select text field | `vaadin-select-overlay`\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * In addition to `<vaadin-select>` itself, the following internal\n * components are themable:\n *\n * - `<vaadin-select-text-field>`\n * - `<vaadin-select-overlay>`\n *\n * Note: the `theme` attribute value set on `<vaadin-select>` is\n * propagated to the internal themable components listed above.\n *\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ControlStateMixin\n * @mixes ThemableMixin\n */\nclass SelectElement extends ElementMixin(\n  ControlStateMixin(ThemableMixin(mixinBehaviors(IronResizableBehavior, PolymerElement)))\n) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n        }\n\n        vaadin-select-text-field {\n          width: 100%;\n          min-width: 0;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        [part='toggle-button'] {\n          font-family: 'vaadin-select-icons';\n        }\n\n        [part='toggle-button']::before {\n          content: '\\\\e900';\n        }\n      </style>\n\n      <vaadin-select-text-field\n        placeholder=\"[[placeholder]]\"\n        label=\"[[label]]\"\n        required=\"[[required]]\"\n        invalid=\"[[invalid]]\"\n        error-message=\"[[errorMessage]]\"\n        readonly$=\"[[readonly]]\"\n        helper-text=\"[[helperText]]\"\n        theme$=\"[[theme]]\"\n      >\n        <slot name=\"prefix\" slot=\"prefix\"></slot>\n        <slot name=\"helper\" slot=\"helper\">[[helperText]]</slot>\n        <div part=\"value\"></div>\n        <div part=\"toggle-button\" slot=\"suffix\" role=\"button\" aria-haspopup=\"listbox\" aria-label=\"Toggle\"></div>\n      </vaadin-select-text-field>\n      <vaadin-select-overlay\n        opened=\"{{opened}}\"\n        with-backdrop=\"[[_phone]]\"\n        phone$=\"[[_phone]]\"\n        theme$=\"[[theme]]\"\n      ></vaadin-select-overlay>\n\n      <iron-media-query query=\"[[_phoneMediaQuery]]\" query-matches=\"{{_phone}}\"></iron-media-query>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-select';\n  }\n\n  static get version() {\n    return '3.0.0';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Set when the select is open\n       * @type {boolean}\n       */\n      opened: {\n        type: Boolean,\n        value: false,\n        notify: true,\n        reflectToAttribute: true,\n        observer: '_openedChanged'\n      },\n\n      /**\n       * Custom function for rendering the content of the `<vaadin-select>`.\n       * Receives two arguments:\n       *\n       * - `root` The `<vaadin-select-overlay>` internal container\n       *   DOM element. Append your content to it.\n       * - `select` The reference to the `<vaadin-select>` element.\n       * @type {!SelectRenderer | undefined}\n       */\n      renderer: Function,\n\n      /**\n       * The error message to display when the select value is invalid\n       * @attr {string} error-message\n       * @type {string}\n       */\n      errorMessage: {\n        type: String,\n        value: ''\n      },\n\n      /**\n       * String used for the label element.\n       */\n      label: {\n        type: String\n      },\n\n      /**\n       * It stores the the `value` property of the selected item, providing the\n       * value for iron-form.\n       * When there’s an item selected, it's the value of that item, otherwise\n       * it's an empty string.\n       * On change or initialization, the component finds the item which matches the\n       * value and displays it.\n       * If no value is provided to the component, it selects the first item without\n       * value or empty value.\n       * Hint: If you do not want to select any item by default, you can either set all\n       * the values of inner vaadin-items, or set the vaadin-select value to\n       * an inexistent value in the items list.\n       * @type {string}\n       */\n      value: {\n        type: String,\n        value: '',\n        notify: true,\n        observer: '_valueChanged'\n      },\n\n      /**\n       * The current required state of the select. True if required.\n       */\n      required: {\n        type: Boolean,\n        reflectToAttribute: true,\n        observer: '_requiredChanged'\n      },\n\n      /**\n       * Set to true if the value is invalid.\n       * @type {boolean}\n       */\n      invalid: {\n        type: Boolean,\n        reflectToAttribute: true,\n        notify: true,\n        value: false\n      },\n\n      /**\n       * The name of this element.\n       */\n      name: {\n        type: String,\n        reflectToAttribute: true\n      },\n\n      /**\n       * A hint to the user of what can be entered in the control.\n       * The placeholder will be displayed in the case that there\n       * is no item selected, or the selected item has an empty\n       * string label, or the selected item has no label and it's\n       * DOM content is empty.\n       */\n      placeholder: {\n        type: String\n      },\n\n      /**\n       * String used for the helper text.\n       * @attr {string} helper-text\n       */\n      helperText: {\n        type: String,\n        value: ''\n      },\n\n      /**\n       * When present, it specifies that the element is read-only.\n       * @type {boolean}\n       */\n      readonly: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /** @private */\n      _phone: Boolean,\n\n      /** @private */\n      _phoneMediaQuery: {\n        value: '(max-width: 420px), (max-height: 420px)'\n      },\n\n      /** @private */\n      _overlayElement: Object,\n\n      /** @private */\n      _inputElement: Object,\n\n      /** @private */\n      _toggleElement: Object,\n\n      /** @private */\n      _items: Object,\n\n      /** @private */\n      _contentTemplate: Object,\n\n      /** @private */\n      _oldTemplate: Object,\n\n      /** @private */\n      _oldRenderer: Object\n    };\n  }\n\n  static get observers() {\n    return [\n      '_updateSelectedItem(value, _items)',\n      '_updateAriaExpanded(opened, _toggleElement, _inputElement)',\n      '_templateOrRendererChanged(_contentTemplate, renderer, _overlayElement)'\n    ];\n  }\n\n  constructor() {\n    super();\n    this._boundSetPosition = this._setPosition.bind(this);\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener('iron-resize', this._boundSetPosition);\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.removeEventListener('iron-resize', this._boundSetPosition);\n    // Making sure the select is closed and removed from DOM after detaching the select.\n    this.opened = false;\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this._overlayElement = this.shadowRoot.querySelector('vaadin-select-overlay');\n    this._valueElement = this.shadowRoot.querySelector('[part=\"value\"]');\n    this._toggleElement = this.shadowRoot.querySelector('[part=\"toggle-button\"]');\n    this._nativeInput = this.focusElement.shadowRoot.querySelector('input');\n    this._nativeInput.setAttribute('aria-hidden', true);\n    this._nativeInput.setAttribute('tabindex', -1);\n    this._nativeInput.style.pointerEvents = 'none';\n\n    this.focusElement.addEventListener('click', () => (this.opened = !this.readonly));\n    this.focusElement.addEventListener('keydown', (e) => this._onKeyDown(e));\n\n    this._observer = new FlattenedNodesObserver(this, (info) => this._setTemplateFromNodes(info.addedNodes));\n    this._observer.flush();\n  }\n\n  /** @private */\n  _setTemplateFromNodes(nodes) {\n    const template =\n      Array.from(nodes).filter((node) => node.localName && node.localName === 'template')[0] || this._contentTemplate;\n    this._overlayElement.template = this._contentTemplate = template;\n    this._setForwardHostProps();\n  }\n\n  /** @private */\n  _setForwardHostProps() {\n    if (this._overlayElement.content) {\n      const origForwardHostProp = this._overlayElement._instance && this._overlayElement._instance.forwardHostProp;\n\n      if (this._overlayElement._instance) {\n        this._overlayElement._instance.forwardHostProp = (...args) => {\n          origForwardHostProp.apply(this._overlayElement._instance, args);\n          setTimeout(() => {\n            this._updateValueSlot();\n          });\n        };\n\n        this._assignMenuElement();\n      }\n    }\n  }\n\n  /**\n   * Manually invoke existing renderer.\n   */\n  render() {\n    this._overlayElement.render();\n    if (this._menuElement && this._menuElement.items) {\n      this._updateSelectedItem(this.value, this._menuElement.items);\n    }\n  }\n\n  /** @private */\n  _removeNewRendererOrTemplate(template, oldTemplate, renderer, oldRenderer) {\n    if (template !== oldTemplate) {\n      this._contentTemplate = undefined;\n    } else if (renderer !== oldRenderer) {\n      this.renderer = undefined;\n    }\n  }\n\n  /** @private */\n  _templateOrRendererChanged(template, renderer, overlay) {\n    if (!overlay) {\n      return;\n    }\n\n    if (template && renderer) {\n      this._removeNewRendererOrTemplate(template, this._oldTemplate, renderer, this._oldRenderer);\n      throw new Error('You should only use either a renderer or a template for select content');\n    }\n\n    this._oldTemplate = template;\n    this._oldRenderer = renderer;\n\n    if (renderer) {\n      overlay.setProperties({ owner: this, renderer: renderer });\n      this.render();\n\n      if (overlay.content.firstChild) {\n        this._assignMenuElement();\n      }\n    }\n  }\n\n  /** @private */\n  _assignMenuElement() {\n    this._menuElement = Array.from(this._overlayElement.content.children).filter(\n      (element) => element.localName !== 'style'\n    )[0];\n\n    if (this._menuElement) {\n      this._menuElement.addEventListener('items-changed', () => {\n        this._items = this._menuElement.items;\n        this._items.forEach((item) => item.setAttribute('role', 'option'));\n      });\n      this._menuElement.addEventListener('selected-changed', () => this._updateValueSlot());\n      this._menuElement.addEventListener('keydown', (e) => this._onKeyDownInside(e));\n      this._menuElement.addEventListener(\n        'click',\n        () => {\n          this.__userInteraction = true;\n          this.opened = false;\n        },\n        true\n      );\n\n      this._menuElement.setAttribute('role', 'listbox');\n    }\n  }\n\n  /**\n   * @return {!HTMLElement}\n   * @protected\n   */\n  get focusElement() {\n    return this._inputElement || (this._inputElement = this.shadowRoot.querySelector('vaadin-select-text-field'));\n  }\n\n  /** @private */\n  _requiredChanged(required) {\n    this.setAttribute('aria-required', required);\n  }\n\n  /** @private */\n  _valueChanged(value, oldValue) {\n    if (value === '') {\n      this.focusElement.removeAttribute('has-value');\n    } else {\n      this.focusElement.setAttribute('has-value', '');\n    }\n\n    // Skip validation for the initial empty string value\n    if (value === '' && oldValue === undefined) {\n      return;\n    }\n    this.validate();\n  }\n\n  /**\n   * @param {!KeyboardEvent} e\n   * @protected\n   */\n  _onKeyDown(e) {\n    if (!this.readonly && !this.opened) {\n      if (/^(Enter|SpaceBar|\\s|ArrowDown|Down|ArrowUp|Up)$/.test(e.key)) {\n        e.preventDefault();\n        this.opened = true;\n      } else if (/[a-zA-Z0-9]/.test(e.key) && e.key.length === 1) {\n        const selected = this._menuElement.selected;\n        const currentIdx = selected !== undefined ? selected : -1;\n        const newIdx = this._menuElement._searchKey(currentIdx, e.key);\n        if (newIdx >= 0) {\n          this.__userInteraction = true;\n          this._updateSelectedItem(this._items[newIdx].value, this._items);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {!KeyboardEvent} e\n   * @protected\n   */\n  _onKeyDownInside(e) {\n    if (/^(Tab)$/.test(e.key)) {\n      this.opened = false;\n    }\n  }\n\n  /** @private */\n  _openedChanged(opened, wasOpened) {\n    if (opened) {\n      if (\n        !this._overlayElement ||\n        !this._menuElement ||\n        !this._toggleElement ||\n        !this.focusElement ||\n        this.disabled ||\n        this.readonly\n      ) {\n        this.opened = false;\n        return;\n      }\n\n      this._openedWithFocusRing = this.hasAttribute('focus-ring') || this.focusElement.hasAttribute('focus-ring');\n      this._menuElement.focus();\n      this._setPosition();\n      window.addEventListener('scroll', this._boundSetPosition, true);\n    } else if (wasOpened) {\n      if (this._phone) {\n        this._setFocused(false);\n      } else {\n        this.focusElement.focus();\n        if (this._openedWithFocusRing) {\n          this.focusElement.setAttribute('focus-ring', '');\n        }\n      }\n      this.validate();\n      window.removeEventListener('scroll', this._boundSetPosition, true);\n    }\n  }\n\n  /** @private */\n  _hasContent(selected) {\n    if (!selected) {\n      return false;\n    }\n    return Boolean(\n      selected.hasAttribute('label')\n        ? selected.getAttribute('label')\n        : selected.textContent.trim() || selected.children.length\n    );\n  }\n\n  /** @private */\n  _attachSelectedItem(selected) {\n    if (!selected) {\n      return;\n    }\n    let labelItem;\n    if (selected.hasAttribute('label')) {\n      labelItem = document.createElement('vaadin-item');\n      labelItem.textContent = selected.getAttribute('label');\n    } else {\n      labelItem = selected.cloneNode(true);\n    }\n\n    // store reference to the original item\n    labelItem._sourceItem = selected;\n\n    labelItem.removeAttribute('tabindex');\n    labelItem.removeAttribute('role');\n\n    this._valueElement.appendChild(labelItem);\n\n    labelItem.selected = true;\n  }\n\n  /** @private */\n  _updateAriaExpanded(opened, toggleElement, inputElement) {\n    toggleElement && toggleElement.setAttribute('aria-expanded', opened);\n    if (inputElement && inputElement.focusElement) {\n      inputElement.focusElement.setAttribute('aria-expanded', opened);\n    }\n  }\n\n  /** @private */\n  _updateValueSlot() {\n    this.opened = false;\n    this._valueElement.innerHTML = '';\n\n    const selected = this._items[this._menuElement.selected];\n\n    const hasContent = this._hasContent(selected);\n\n    // Toggle visibility of _valueElement vs fallback input with placeholder\n    this._valueElement.slot = hasContent ? 'input' : '';\n\n    this._attachSelectedItem(selected);\n\n    if (!this._valueChanging && selected) {\n      this._selectedChanging = true;\n      this.value = selected.value || '';\n      if (this.__userInteraction) {\n        this.dispatchEvent(new CustomEvent('change', { bubbles: true }));\n        this.__userInteraction = false;\n      }\n      delete this._selectedChanging;\n    }\n  }\n\n  /** @private */\n  _updateSelectedItem(value, items) {\n    if (items) {\n      this._menuElement.selected = items.reduce((prev, item, idx) => {\n        return prev === undefined && item.value === value ? idx : prev;\n      }, undefined);\n      if (!this._selectedChanging) {\n        this._valueChanging = true;\n        this._updateValueSlot();\n        delete this._valueChanging;\n      }\n    }\n  }\n\n  /**\n   * @param {boolean} focused\n   * @protected\n   */\n  _setFocused(focused) {\n    // Keep `focused` state when opening the overlay for styling purpose.\n    super._setFocused(this.opened || focused);\n    this.focusElement._setFocused(this.hasAttribute('focused'));\n    !this.hasAttribute('focused') && this.validate();\n  }\n\n  /** @private */\n  _setPosition() {\n    const inputRect = this._inputElement.shadowRoot.querySelector('[part~=\"input-field\"]').getBoundingClientRect();\n    const viewportHeight = Math.min(window.innerHeight, document.documentElement.clientHeight);\n    const bottomAlign = inputRect.top > (viewportHeight - inputRect.height) / 2;\n\n    const isRtl = this.getAttribute('dir') === 'rtl';\n    if (isRtl) {\n      this._overlayElement.style.right = document.documentElement.clientWidth - inputRect.right + 'px';\n    } else {\n      this._overlayElement.style.left = inputRect.left + 'px';\n    }\n\n    if (bottomAlign) {\n      this._overlayElement.setAttribute('bottom-aligned', '');\n      this._overlayElement.style.removeProperty('top');\n      this._overlayElement.style.bottom = viewportHeight - inputRect.bottom + 'px';\n    } else {\n      this._overlayElement.removeAttribute('bottom-aligned');\n      this._overlayElement.style.removeProperty('bottom');\n      this._overlayElement.style.top = inputRect.top + 'px';\n    }\n\n    this._overlayElement.updateStyles({ '--vaadin-select-text-field-width': inputRect.width + 'px' });\n  }\n\n  /**\n   * Returns true if `value` is valid, and sets the `invalid` flag appropriately.\n   *\n   * @return {boolean} True if the value is valid and sets the `invalid` flag appropriately\n   */\n  validate() {\n    return !(this.invalid = !(this.disabled || !this.required || this.value));\n  }\n\n  /**\n   * Fired when the user commits a value change.\n   *\n   * @event change\n   */\n}\n\ncustomElements.define(SelectElement.is, SelectElement);\n\nexport { SelectElement };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-select@3.0.0/node_modules/@vaadin/vaadin-select/src/vaadin-select-overlay.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { OverlayElement } from '@vaadin/vaadin-overlay/src/vaadin-overlay.js';\nimport { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\n\nregisterStyles(\n  'vaadin-select-overlay',\n  css`\n    :host {\n      align-items: flex-start;\n      justify-content: flex-start;\n    }\n  `,\n  { moduleId: 'vaadin-select-overlay-styles' }\n);\n\n/**\n * The overlay element.\n *\n * ### Styling\n *\n * See [`<vaadin-overlay>` documentation](https://github.com/vaadin/vaadin-overlay/blob/master/src/vaadin-overlay.html)\n * for `<vaadin-select-overlay>` parts.\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n */\nclass SelectOverlayElement extends OverlayElement {\n  static get is() {\n    return 'vaadin-select-overlay';\n  }\n}\n\ncustomElements.define(SelectOverlayElement.is, SelectOverlayElement);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-select@3.0.0/node_modules/@vaadin/vaadin-select/src/vaadin-select-text-field.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { TextFieldElement } from '@vaadin/vaadin-text-field/src/vaadin-text-field.js';\n\n/**\n * The text-field element.\n *\n * ### Styling\n *\n * See [`<vaadin-text-field>` documentation](https://github.com/vaadin/vaadin-text-field/blob/master/src/vaadin-text-field.html)\n * for `<vaadin-select-text-field>` parts and available slots (prefix, suffix etc.)\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n */\nclass SelectTextFieldElement extends TextFieldElement {\n  static get is() {\n    return 'vaadin-select-text-field';\n  }\n\n  get focusElement() {\n    return this.shadowRoot.querySelector('[part=input-field]');\n  }\n\n  get inputElement() {\n    return this.shadowRoot.querySelector('input');\n  }\n}\n\ncustomElements.define(SelectTextFieldElement.is, SelectTextFieldElement);\n"
      }
     ]
    },
    {
     "id": 159,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-login@2.0.0/node_modules/@vaadin/vaadin-login/theme/lumo/vaadin-login-overlay.js + 3 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-login@2.0.0/node_modules/@vaadin/vaadin-login/theme/lumo/vaadin-login-overlay.js",
       "source": "import '@vaadin/vaadin-text-field/theme/lumo/vaadin-text-field.js';\nimport '@vaadin/vaadin-text-field/theme/lumo/vaadin-password-field.js';\nimport '@vaadin/vaadin-button/theme/lumo/vaadin-button.js';\nimport '@vaadin/vaadin-overlay/theme/lumo/vaadin-overlay.js';\nimport './vaadin-login-form.js';\nimport './vaadin-login-overlay-styles.js';\nimport '../../src/vaadin-login-overlay.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-login@2.0.0/node_modules/@vaadin/vaadin-login/theme/lumo/vaadin-login-overlay-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport './vaadin-login-form-wrapper-styles.js';\n\nregisterStyles(\n  'vaadin-login-overlay-wrapper',\n  css`\n    :host {\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n    }\n\n    [part='backdrop'] {\n      background: var(--lumo-base-color) linear-gradient(var(--lumo-shade-5pct), var(--lumo-shade-5pct));\n    }\n\n    [part='content'] {\n      padding: 0;\n    }\n\n    [part='overlay'] {\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n      width: 100%;\n      height: 100%;\n    }\n\n    [part='card'] {\n      width: calc(var(--lumo-size-m) * 10);\n      background: var(--lumo-base-color) linear-gradient(var(--lumo-tint-5pct), var(--lumo-tint-5pct));\n    }\n\n    [part='brand'] {\n      padding: var(--lumo-space-l) var(--lumo-space-xl) var(--lumo-space-l) var(--lumo-space-l);\n      background-color: var(--lumo-primary-color);\n      color: var(--lumo-primary-contrast-color);\n      min-height: calc(var(--lumo-size-m) * 5);\n    }\n\n    [part='description'] {\n      line-height: var(--lumo-line-height-s);\n      color: var(--lumo-tint-70pct);\n      margin-bottom: 0;\n    }\n\n    [part='content'] {\n      height: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n\n    [part='card'] {\n      border-radius: var(--lumo-border-radius);\n      box-shadow: var(--lumo-box-shadow-s);\n      margin: var(--lumo-space-s);\n      height: auto;\n    }\n\n    /* Small screen */\n    @media only screen and (max-width: 500px) {\n      [part='overlay'],\n      [part='content'] {\n        height: 100%;\n      }\n\n      [part='content'] {\n        min-height: 100%;\n        background: var(--lumo-base-color);\n        align-items: flex-start;\n      }\n\n      [part='card'],\n      [part='overlay'] {\n        width: 100%;\n        border-radius: 0;\n        box-shadow: none;\n        margin: 0;\n      }\n\n      /* RTL styles */\n      :host([dir='rtl']) [part='brand'] {\n        padding: var(--lumo-space-l) var(--lumo-space-l) var(--lumo-space-l) var(--lumo-space-xl);\n      }\n    }\n\n    /* Landscape small screen */\n    @media only screen and (max-height: 600px) and (min-width: 600px) and (orientation: landscape) {\n      [part='card'] {\n        flex-direction: row;\n        align-items: stretch;\n        max-width: calc(var(--lumo-size-m) * 16);\n        width: 100%;\n      }\n\n      [part='brand'],\n      [part='form'] {\n        flex: auto;\n        flex-basis: 0;\n        box-sizing: border-box;\n      }\n\n      [part='brand'] {\n        justify-content: flex-start;\n      }\n\n      [part='form'] {\n        padding: var(--lumo-space-l);\n        overflow: auto;\n      }\n    }\n\n    /* Landscape really small screen */\n    @media only screen and (max-height: 500px) and (min-width: 600px) and (orientation: landscape),\n      only screen and (max-width: 600px) and (min-width: 600px) and (orientation: landscape) {\n      [part='content'] {\n        height: 100vh;\n      }\n\n      [part='card'] {\n        margin: 0;\n        width: 100%;\n        max-width: none;\n        height: 100%;\n        flex: auto;\n        border-radius: 0;\n        box-shadow: none;\n      }\n\n      [part='form'] {\n        height: 100%;\n        overflow: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n    }\n\n    /* Handle iPhone X notch */\n    @media only screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) {\n      [part='card'] {\n        padding-right: constant(safe-area-inset-right);\n        padding-right: env(safe-area-inset-right);\n\n        padding-left: constant(safe-area-inset-left);\n        padding-left: env(safe-area-inset-left);\n      }\n\n      [part='brand'] {\n        margin-left: calc(constant(safe-area-inset-left) * -1);\n        margin-left: calc(env(safe-area-inset-left) * -1);\n\n        padding-left: calc(var(--lumo-space-l) + constant(safe-area-inset-left));\n        padding-left: calc(var(--lumo-space-l) + env(safe-area-inset-left));\n      }\n\n      /* RTL styles */\n      :host([dir='rtl']) [part='card'] {\n        padding-left: constant(safe-area-inset-right);\n        padding-left: env(safe-area-inset-right);\n        padding-right: constant(safe-area-inset-left);\n        padding-right: env(safe-area-inset-left);\n      }\n\n      :host([dir='rtl']) [part='brand'] {\n        margin-right: calc(constant(safe-area-inset-left) * -1);\n        margin-right: calc(env(safe-area-inset-left) * -1);\n        padding-right: calc(var(--lumo-space-l) + constant(safe-area-inset-left));\n        padding-right: calc(var(--lumo-space-l) + env(safe-area-inset-left));\n      }\n    }\n  `,\n  { include: ['lumo-color', 'lumo-typography'], moduleId: 'vaadin-login-overlay-wrapper-lumo-styles' }\n);\n\nregisterStyles(\n  'vaadin-login-form-wrapper',\n  css`\n    :host([theme~='with-overlay']) {\n      min-height: 100%;\n      display: flex;\n      justify-content: center;\n      max-width: 100%;\n    }\n\n    /* Landscape small screen */\n    @media only screen and (max-height: 600px) and (min-width: 600px) and (orientation: landscape) {\n      :host([theme~='with-overlay']) [part='form'] {\n        height: 100%;\n        -webkit-overflow-scrolling: touch;\n        flex: 1;\n        padding: 2px;\n      }\n    }\n  `,\n  { include: ['lumo-color', 'lumo-typography'], moduleId: 'lumo-login-overlay' }\n);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-login@2.0.0/node_modules/@vaadin/vaadin-login/src/vaadin-login-overlay.js",
       "source": "/**\n * @license\n * Vaadin Login\n * Copyright (C) 2020 Vaadin Ltd\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { LoginMixin } from './vaadin-login-mixin.js';\nimport './vaadin-login-form.js';\nimport './vaadin-login-overlay-wrapper.js';\n\n/**\n * `<vaadin-login-overlay>` is a wrapper of the `<vaadin-login-form>` which opens a login form in an overlay and\n * having an additional `brand` part for application title and description. Using `<vaadin-login-overlay>` allows\n * password managers to work with login form.\n *\n * ```\n * <vaadin-login-overlay opened></vaadin-login-overlay>\n * ```\n *\n * ### Styling\n *\n * To style the element check: [`<vaadin-login-overlay-wrapper>`](#/elements/vaadin-login-overlay-wrapper),\n * [`<vaadin-login-form-wrapper>`](#/elements/vaadin-login-form-wrapper), [`<vaadin-login-form>`](#/elements/vaadin-login-form)\n * and `<vaadin-overlay>` elements\n *\n * @fires {CustomEvent} forgot-password - Fired when user clicks on the \"Forgot password\" button.\n * @fires {CustomEvent} login - Fired when a user submits the login.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @mixes LoginMixin\n */\nclass LoginOverlayElement extends LoginMixin(ElementMixin(ThemableMixin(PolymerElement))) {\n  static get template() {\n    return html`\n      <vaadin-login-overlay-wrapper\n        id=\"vaadinLoginOverlayWrapper\"\n        opened=\"{{opened}}\"\n        focus-trap\n        with-backdrop\n        title=\"[[title]]\"\n        description=\"[[description]]\"\n        theme$=\"[[theme]]\"\n      >\n        <vaadin-login-form\n          theme=\"with-overlay\"\n          id=\"vaadinLoginForm\"\n          action=\"{{action}}\"\n          disabled=\"{{disabled}}\"\n          error=\"{{error}}\"\n          no-forgot-password=\"{{noForgotPassword}}\"\n          i18n=\"{{i18n}}\"\n          on-login=\"_retargetEvent\"\n          on-forgot-password=\"_retargetEvent\"\n        ></vaadin-login-form>\n      </vaadin-login-overlay-wrapper>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-login-overlay';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Defines the application description\n       * @type {string}\n       */\n      description: {\n        type: String,\n        value: 'Application description',\n        notify: true\n      },\n\n      /**\n       * True if the overlay is currently displayed.\n       * @type {boolean}\n       */\n      opened: {\n        type: Boolean,\n        value: false,\n        observer: '_onOpenedChange'\n      },\n\n      /**\n       * Defines the application title\n       * @type {string}\n       */\n      title: {\n        type: String,\n        value: 'App name'\n      }\n    };\n  }\n\n  static get observers() {\n    return ['__i18nChanged(i18n.header.*)'];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this._preventClosingLogin = this._preventClosingLogin.bind(this);\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.$.vaadinLoginOverlayWrapper.addEventListener('vaadin-overlay-outside-click', this._preventClosingLogin);\n    this.$.vaadinLoginOverlayWrapper.addEventListener('vaadin-overlay-escape-press', this._preventClosingLogin);\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this.$.vaadinLoginOverlayWrapper.removeEventListener('vaadin-overlay-outside-click', this._preventClosingLogin);\n    this.$.vaadinLoginOverlayWrapper.removeEventListener('vaadin-overlay-escape-press', this._preventClosingLogin);\n    this.$.vaadinLoginOverlayWrapper.opened = false;\n  }\n\n  /** @private */\n  __i18nChanged(i18n) {\n    const header = i18n.base;\n    if (!header) {\n      return;\n    }\n    this.title = header.title;\n    this.description = header.description;\n  }\n\n  /** @private */\n  _preventClosingLogin(e) {\n    e.preventDefault();\n  }\n\n  /** @private */\n  _onOpenedChange() {\n    if (!this.opened) {\n      this.$.vaadinLoginForm.$.vaadinLoginUsername.value = '';\n      this.$.vaadinLoginForm.$.vaadinLoginPassword.value = '';\n      this.disabled = false;\n\n      if (this._undoTeleport) {\n        this._undoTeleport();\n      }\n    } else {\n      this._undoTeleport = this._teleport(this._getElementsToTeleport());\n\n      // Overlay sets pointerEvents on body to `none`, which breaks LastPass popup\n      // Reverting it back to the previous state\n      // https://github.com/vaadin/vaadin-overlay/blob/041cde4481b6262eac68d3a699f700216d897373/src/vaadin-overlay.html#L660\n      document.body.style.pointerEvents = this.$.vaadinLoginOverlayWrapper._previousDocumentPointerEvents;\n    }\n  }\n\n  /** @private */\n  _teleport(elements) {\n    const teleported = Array.from(elements).map((e) => {\n      return this.$.vaadinLoginOverlayWrapper.appendChild(e);\n    });\n    // Function to undo the teleport\n    return () => {\n      while (teleported.length > 0) {\n        this.appendChild(teleported.shift());\n      }\n    };\n  }\n\n  /** @private */\n  _getElementsToTeleport() {\n    return this.querySelectorAll('[slot=title]');\n  }\n}\n\ncustomElements.define(LoginOverlayElement.is, LoginOverlayElement);\n\nexport { LoginOverlayElement };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-login@2.0.0/node_modules/@vaadin/vaadin-login/src/vaadin-login-overlay-wrapper.js",
       "source": "/**\n * @license\n * Vaadin Login\n * Copyright (C) 2020 Vaadin Ltd\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { OverlayElement } from '@vaadin/vaadin-overlay/src/vaadin-overlay.js';\nimport { DomModule } from '@polymer/polymer/lib/elements/dom-module.js';\n\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"vaadin-login-overlay-wrapper-template\">\n  <template>\n    <style>\n      [part=\"overlay\"] {\n        outline: none;\n      }\n\n      [part=\"card\"] {\n        max-width: 100%;\n        box-sizing: border-box;\n        overflow: hidden;\n        display: flex;\n        flex-direction: column;\n      }\n\n      [part=\"brand\"] {\n        box-sizing: border-box;\n        overflow: hidden;\n        flex-grow: 1;\n        flex-shrink: 0;\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-end;\n      }\n\n      [part=\"brand\"] h1 {\n        color: inherit;\n        margin: 0;\n      }\n    </style>\n    <section part=\"card\">\n      <div part=\"brand\">\n        <slot name=\"title\">\n          <h1 part=\"title\">[[title]]</h1>\n        </slot>\n        <p part=\"description\">[[description]]</p>\n      </div>\n      <div part=\"form\">\n        <slot></slot>\n      </div>\n    </section>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n\nlet memoizedTemplate;\n\n/**\n * `<vaadin-login-overlay-wrapper>` is a helper element for `<vaadin-login-overlay>` that provides\n * responsive template for the login form.\n *\n * ### Styling\n *\n * The following Shadow DOM parts of the `<vaadin-login-overlay-wrapper>` are available for styling:\n *\n * Part name       | Description\n * ----------------|---------------------------------------------------------|\n * `card`          | Container for the entire component's content\n * `brand`         | Container for application title and description\n * `form`          | Container for the `<vaadin-login-form>` component\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * ### Component's slots\n *\n * The following slots are available for being set\n *\n * Slot name    | Description\n * -------------|-----------------------------------------------|\n * no name      | Default placeholder for the `<vaadin-login-form>`\n * `title`      | Placeholder for customizing the title\n *\n * See the usage example in `<vaadin-login-overlay>`.\n *\n * @extends HTMLElement\n * @private\n */\nclass LoginOverlayWrapperElement extends OverlayElement {\n  static get is() {\n    return 'vaadin-login-overlay-wrapper';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Title of the application.\n       */\n      title: {\n        type: String\n      },\n\n      /**\n       * Application description. Displayed under the title.\n       */\n      description: {\n        type: String\n      }\n    };\n  }\n\n  static get template() {\n    if (!memoizedTemplate) {\n      // Clone the superclass template\n      memoizedTemplate = super.template.cloneNode(true);\n\n      // Retrieve the elements from component's template\n      const thisTemplate = DomModule.import(this.is + '-template', 'template');\n      const card = thisTemplate.content.querySelector('[part=card]');\n      const styles = thisTemplate.content.querySelector('style');\n\n      // Append elements to cloned template\n      const content = memoizedTemplate.content.querySelector('#content');\n      content.replaceChild(card, content.children[0]);\n      content.appendChild(styles);\n    }\n\n    return memoizedTemplate;\n  }\n}\n\ncustomElements.define(LoginOverlayWrapperElement.is, LoginOverlayWrapperElement);\n"
      }
     ]
    },
    {
     "id": 163,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-app-layout@2.2.0/node_modules/@vaadin/vaadin-app-layout/theme/lumo/vaadin-drawer-toggle.js + 2 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-app-layout@2.2.0/node_modules/@vaadin/vaadin-app-layout/theme/lumo/vaadin-drawer-toggle.js",
       "source": "import './vaadin-drawer-toggle-styles.js';\nimport '../../src/vaadin-drawer-toggle.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-app-layout@2.2.0/node_modules/@vaadin/vaadin-app-layout/theme/lumo/vaadin-drawer-toggle-styles.js",
       "source": "import '@vaadin/vaadin-button/theme/lumo/vaadin-button-styles.js';\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-drawer-toggle\" theme-for=\"vaadin-drawer-toggle\">\n  <template>\n    <style include=\"lumo-button\">\n      :host {\n        width: var(--lumo-size-l);\n        height: var(--lumo-size-l);\n        min-width: auto;\n        margin: 0 var(--lumo-space-s);\n        padding: 0;\n        background: transparent;\n      }\n\n      [part=\"icon\"],\n      [part=\"icon\"]::after,\n      [part=\"icon\"]::before {\n        position: inherit;\n        height: auto;\n        width: auto;\n        background: transparent;\n        top: auto;\n      }\n\n      [part=icon]::before {\n        font-family: lumo-icons;\n        font-size: var(--lumo-icon-size-m);\n        content: var(--lumo-icons-menu);\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-app-layout@2.2.0/node_modules/@vaadin/vaadin-app-layout/src/vaadin-drawer-toggle.js",
       "source": "/**\n@license\nVaadin Drawer Toggle\nCopyright (C) 2018 Vaadin Ltd\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { ButtonElement } from '@vaadin/vaadin-button/src/vaadin-button.js';\n\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\n * The Drawer Toggle component controls the drawer in App Layout component.\n *\n * ```\n * <vaadin-app-layout>\n *   <vaadin-drawer-toggle slot=\"navbar\">Toggle drawer</vaadin-drawer-toggle>\n * </vaadin-app-layout>\n * ```\n *\n * @demo demo/index.html\n */\nclass DrawerToggleElement extends ButtonElement {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n        cursor: default;\n        position: relative;\n        outline: none;\n        height: 24px;\n        width: 24px;\n        padding: 4px;\n      }\n\n      #button {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        opacity: 0;\n        cursor: inherit;\n      }\n\n      [part=\"icon\"],\n      [part=\"icon\"]::after,\n      [part=\"icon\"]::before {\n        position: absolute;\n        top: 8px;\n        height: 3px;\n        width: 24px;\n        background-color: #000;\n      }\n\n      [part=\"icon\"]::after,\n      [part=\"icon\"]::before {\n        content: \"\";\n      }\n\n      [part=\"icon\"]::after {\n        top: 6px;\n      }\n\n      [part=\"icon\"]::before {\n        top: 12px;\n      }\n    </style>\n    <slot>\n      <div part=\"icon\"></div>\n    </slot>\n    <button id=\"button\" type=\"button\" aria-label\\$=\"[[ariaLabel]]\"></button>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-drawer-toggle';\n  }\n\n  static get properties() {\n    return {\n      ariaLabel: String\n    };\n  }\n\n  constructor() {\n    super();\n\n    this.addEventListener('click', e => {\n      this.dispatchEvent(new CustomEvent('drawer-toggle-click', {bubbles: true, composed: true}));\n    });\n  }\n}\n\ncustomElements.define(DrawerToggleElement.is, DrawerToggleElement);\n\nexport { DrawerToggleElement };\n"
      }
     ]
    },
    {
     "id": 164,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-checkbox@3.0.0/node_modules/@vaadin/vaadin-checkbox/theme/lumo/vaadin-checkbox-group.js + 2 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-checkbox@3.0.0/node_modules/@vaadin/vaadin-checkbox/theme/lumo/vaadin-checkbox-group.js",
       "source": "import './vaadin-checkbox-styles.js';\nimport './vaadin-checkbox-group-styles.js';\nimport '../../src/vaadin-checkbox-group.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-checkbox@3.0.0/node_modules/@vaadin/vaadin-checkbox/theme/lumo/vaadin-checkbox-group-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/required-field.js';\n\nregisterStyles(\n  'vaadin-checkbox-group',\n  css`\n    :host {\n      color: var(--lumo-body-text-color);\n      font-size: var(--lumo-font-size-m);\n      font-family: var(--lumo-font-family);\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n      -webkit-tap-highlight-color: transparent;\n      padding: var(--lumo-space-xs) 0;\n    }\n\n    :host::before {\n      height: var(--lumo-size-m);\n      box-sizing: border-box;\n      display: inline-flex;\n      align-items: center;\n    }\n\n    :host([theme~='vertical']) [part='group-field'] {\n      display: flex;\n      flex-direction: column;\n    }\n\n    [part='label'] {\n      padding-bottom: 0.7em;\n    }\n\n    :host([disabled]) [part='label'] {\n      color: var(--lumo-disabled-text-color);\n      -webkit-text-fill-color: var(--lumo-disabled-text-color);\n    }\n\n    :host([focused]:not([disabled])) [part='label'] {\n      color: var(--lumo-primary-text-color);\n    }\n\n    :host(:hover:not([disabled]):not([focused])) [part='label'],\n    :host(:hover:not([disabled]):not([focused])) [part='helper-text'],\n    :host(:hover:not([disabled]):not([focused])) [part='helper-text'] ::slotted(*) {\n      color: var(--lumo-body-text-color);\n    }\n\n    :host([has-helper]) [part='helper-text']::before {\n      content: '';\n      display: block;\n      height: 0.4em;\n    }\n\n    [part='helper-text'],\n    [part='helper-text'] ::slotted(*) {\n      display: block;\n      color: var(--lumo-secondary-text-color);\n      font-size: var(--lumo-font-size-xs);\n      line-height: var(--lumo-line-height-xs);\n      margin-left: calc(var(--lumo-border-radius-m) / 4);\n      transition: color 0.2s;\n    }\n\n    /* helper-text position */\n    :host([has-helper][theme~='helper-above-field']) [part='helper-text']::before {\n      display: none;\n    }\n\n    :host([has-helper][theme~='helper-above-field']) [part='helper-text']::after {\n      content: '';\n      display: block;\n      height: 0.4em;\n    }\n\n    :host([has-helper][theme~='helper-above-field']) [part='label'] {\n      order: 0;\n      padding-bottom: 0.4em;\n    }\n\n    :host([has-helper][theme~='helper-above-field']) [part='helper-text'] {\n      order: 1;\n    }\n\n    :host([has-helper][theme~='helper-above-field']) [part='group-field'] {\n      order: 2;\n    }\n\n    :host([has-helper][theme~='helper-above-field']) [part='error-message'] {\n      order: 3;\n    }\n\n    /* Touch device adjustment */\n    @media (pointer: coarse) {\n      :host(:hover:not([disabled]):not([focused])) [part='label'] {\n        color: var(--lumo-secondary-text-color);\n      }\n    }\n  `,\n  { moduleId: 'lumo-checkbox-group', include: ['lumo-required-field'] }\n);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-checkbox@3.0.0/node_modules/@vaadin/vaadin-checkbox/src/vaadin-checkbox-group.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { DirMixin } from '@vaadin/vaadin-element-mixin/vaadin-dir-mixin.js';\nimport { CheckboxElement } from './vaadin-checkbox.js';\n\n/**\n * `<vaadin-checkbox-group>` is a Polymer element for grouping vaadin-checkboxes.\n *\n * ```html\n * <vaadin-checkbox-group label=\"Preferred language of contact:\">\n *  <vaadin-checkbox value=\"en\">English</vaadin-checkbox>\n *  <vaadin-checkbox value=\"fr\">Français</vaadin-checkbox>\n *  <vaadin-checkbox value=\"de\">Deutsch</vaadin-checkbox>\n * </vaadin-checkbox-group>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `label` | The label element\n * `group-field` | The element that wraps checkboxes\n * `error-message` | The error message element\n *\n * The following state attributes are available for styling:\n *\n * Attribute  | Description | Part name\n * -----------|-------------|------------\n * `disabled`   | Set when the checkbox group and its children are disabled. | :host\n * `focused` | Set when the checkbox group contains focus | :host\n * `has-label` | Set when the element has a label | :host\n * `has-value` | Set when the element has a value | :host\n * `has-helper` | Set when the element has helper text or slot | :host\n * `has-error-message` | Set when the element has an error message, regardless if the field is valid or not | :host\n * `required` | Set when the element is required | :host\n * `invalid` | Set when the element is invalid | :host\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n *\n * @extends HTMLElement\n * @mixes ThemableMixin\n * @mixes DirMixin\n * @element vaadin-checkbox-group\n */\nclass CheckboxGroupElement extends ThemableMixin(DirMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-flex;\n        }\n\n        :host::before {\n          content: '\\\\2003';\n          width: 0;\n          display: inline-block;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        .vaadin-group-field-container {\n          display: flex;\n          flex-direction: column;\n        }\n\n        [part='label']:empty {\n          display: none;\n        }\n      </style>\n\n      <div class=\"vaadin-group-field-container\">\n        <label part=\"label\">[[label]]</label>\n\n        <div part=\"group-field\">\n          <slot id=\"slot\"></slot>\n        </div>\n\n        <div\n          part=\"helper-text\"\n          on-click=\"focus\"\n          aria-live=\"assertive\"\n          aria-hidden$=\"[[_getHelperTextAriaHidden(helperText, _hasSlottedHelper)]]\"\n        >\n          <slot name=\"helper\">[[helperText]]</slot>\n        </div>\n\n        <div\n          part=\"error-message\"\n          aria-live=\"assertive\"\n          aria-hidden$=\"[[_getErrorMessageAriaHidden(invalid, errorMessage)]]\"\n          >[[errorMessage]]</div\n        >\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-checkbox-group';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * The current disabled state of the checkbox group. True if group and all internal checkboxes are disabled.\n       */\n      disabled: {\n        type: Boolean,\n        reflectToAttribute: true,\n        observer: '_disabledChanged'\n      },\n\n      /**\n       * String used for the label element.\n       */\n      label: {\n        type: String,\n        value: '',\n        observer: '_labelChanged'\n      },\n\n      /**\n       * Value of the checkbox group.\n       * Note: toggling the checkboxes modifies the value by creating new\n       * array each time, to override Polymer dirty-checking for arrays.\n       * You can still use Polymer array mutation methods to update the value.\n       * @type {!Array<!string>}\n       */\n      value: {\n        type: Array,\n        value: () => [],\n        notify: true\n      },\n\n      /**\n       * Error to show when the input value is invalid.\n       * @attr {string} error-message\n       */\n      errorMessage: {\n        type: String,\n        value: '',\n        observer: '_errorMessageChanged'\n      },\n\n      /**\n       * String used for the helper text.\n       * @attr {string} helper-text\n       * @type {string | null}\n       */\n      helperText: {\n        type: String,\n        value: '',\n        observer: '_helperTextChanged'\n      },\n\n      /**\n       * Specifies that the user must fill in a value.\n       */\n      required: {\n        type: Boolean,\n        reflectToAttribute: true\n      },\n\n      /**\n       * This property is set to true when the control value is invalid.\n       * @type {boolean}\n       */\n      invalid: {\n        type: Boolean,\n        reflectToAttribute: true,\n        notify: true,\n        value: false\n      },\n\n      /** @private */\n      _hasSlottedHelper: Boolean\n    };\n  }\n\n  static get observers() {\n    return ['_updateValue(value, value.splices)'];\n  }\n\n  ready() {\n    super.ready();\n\n    this.addEventListener('focusin', () => this._setFocused(this._containsFocus()));\n\n    this.addEventListener('focusout', (e) => {\n      // validate when stepping out of the checkbox group\n      if (\n        !this._checkboxes.some(\n          (checkbox) => e.relatedTarget === checkbox || checkbox.shadowRoot.contains(e.relatedTarget)\n        )\n      ) {\n        this.validate();\n        this._setFocused(false);\n      }\n    });\n\n    const checkedChangedListener = (e) => {\n      this._changeSelectedCheckbox(e.target);\n    };\n\n    this._observer = new FlattenedNodesObserver(this, (info) => {\n      const addedCheckboxes = this._filterCheckboxes(info.addedNodes);\n\n      addedCheckboxes.forEach((checkbox) => {\n        checkbox.addEventListener('checked-changed', checkedChangedListener);\n        if (this.disabled) {\n          checkbox.disabled = true;\n        }\n        if (checkbox.checked) {\n          this._addCheckboxToValue(checkbox.value);\n        } else if (this.value.indexOf(checkbox.value) > -1) {\n          checkbox.checked = true;\n        }\n      });\n\n      this._filterCheckboxes(info.removedNodes).forEach((checkbox) => {\n        checkbox.removeEventListener('checked-changed', checkedChangedListener);\n        if (checkbox.checked) {\n          this._removeCheckboxFromValue(checkbox.value);\n        }\n      });\n\n      this._setOrToggleHasHelperAttribute();\n\n      const hasValue = (checkbox) => {\n        const { value } = checkbox;\n        return checkbox.hasAttribute('value') || (value && value !== 'on');\n      };\n      if (!addedCheckboxes.every(hasValue)) {\n        console.warn('Please add value attribute to all checkboxes in checkbox group');\n      }\n    });\n  }\n\n  /**\n   * Returns true if `value` is valid.\n   *\n   * @return {boolean} True if the value is valid.\n   */\n  validate() {\n    this.invalid = this.required && this.value.length === 0;\n    return !this.invalid;\n  }\n\n  /** @private */\n  get _checkboxes() {\n    return this._filterCheckboxes(this.querySelectorAll('*'));\n  }\n\n  /** @private */\n  _filterCheckboxes(nodes) {\n    return Array.from(nodes).filter((child) => child instanceof CheckboxElement);\n  }\n\n  /** @private */\n  _disabledChanged(disabled) {\n    this.setAttribute('aria-disabled', disabled);\n\n    this._checkboxes.forEach((checkbox) => (checkbox.disabled = disabled));\n  }\n\n  /**\n   * @param {string} value\n   * @protected\n   */\n  _addCheckboxToValue(value) {\n    if (this.value.indexOf(value) === -1) {\n      this.value = this.value.concat(value);\n    }\n  }\n\n  /**\n   * @param {string} value\n   * @protected\n   */\n  _removeCheckboxFromValue(value) {\n    this.value = this.value.filter((v) => v !== value);\n  }\n\n  /**\n   * @param {CheckboxElement} checkbox\n   * @protected\n   */\n  _changeSelectedCheckbox(checkbox) {\n    if (this._updatingValue) {\n      return;\n    }\n\n    if (checkbox.checked) {\n      this._addCheckboxToValue(checkbox.value);\n    } else {\n      this._removeCheckboxFromValue(checkbox.value);\n    }\n  }\n\n  /** @private */\n  _updateValue(value) {\n    // setting initial value to empty array, skip validation\n    if (value.length === 0 && this._oldValue === undefined) {\n      return;\n    }\n\n    if (value.length) {\n      this.setAttribute('has-value', '');\n    } else {\n      this.removeAttribute('has-value');\n    }\n\n    this._oldValue = value;\n    // set a flag to avoid updating loop\n    this._updatingValue = true;\n    // reflect the value array to checkboxes\n    this._checkboxes.forEach((checkbox) => {\n      checkbox.checked = value.indexOf(checkbox.value) > -1;\n    });\n    this._updatingValue = false;\n\n    this.validate();\n  }\n\n  /** @private */\n  _labelChanged(label) {\n    this._setOrToggleAttribute('has-label', !!label);\n  }\n\n  /** @private */\n  _errorMessageChanged(errorMessage) {\n    this._setOrToggleAttribute('has-error-message', !!errorMessage);\n  }\n\n  /** @private */\n  _helperTextChanged(helperText) {\n    this._setOrToggleAttribute('has-helper', !!helperText);\n  }\n\n  /** @private */\n  _setOrToggleAttribute(name, value) {\n    if (!name) {\n      return;\n    }\n\n    if (value) {\n      this.setAttribute(name, typeof value === 'boolean' ? '' : value);\n    } else {\n      this.removeAttribute(name);\n    }\n  }\n\n  /** @private */\n  _getErrorMessageAriaHidden(invalid, errorMessage) {\n    return (!errorMessage || !invalid).toString();\n  }\n\n  /**\n   * @return {boolean}\n   * @protected\n   */\n  _containsFocus() {\n    const activeElement = this.getRootNode().activeElement;\n    return this.contains(activeElement);\n  }\n\n  /**\n   * @param {boolean} focused\n   * @protected\n   */\n  _setFocused(focused) {\n    if (focused) {\n      this.setAttribute('focused', '');\n    } else {\n      this.removeAttribute('focused');\n    }\n  }\n\n  /** @private */\n  _setOrToggleHasHelperAttribute() {\n    const slottedNodes = this.shadowRoot.querySelector(`[name=\"helper\"]`).assignedNodes();\n    // Only has slotted helper if not a text node\n    // Text nodes are added by the helperText prop and not the helper slot\n    // The filter is added due to shady DOM triggering this slotchange event on helperText prop change\n    this._hasSlottedHelper = slottedNodes.filter((node) => node.nodeType !== 3).length > 0;\n\n    this._setOrToggleAttribute('has-helper', this._hasSlottedHelper ? 'slotted' : !!this.helperText);\n  }\n\n  /** @private */\n  _getHelperTextAriaHidden(helperText, hasSlottedHelper) {\n    return (!(helperText || hasSlottedHelper)).toString();\n  }\n}\n\ncustomElements.define(CheckboxGroupElement.is, CheckboxGroupElement);\n\nexport { CheckboxGroupElement };\n"
      }
     ]
    },
    {
     "id": 165,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-combo-box@6.0.1/node_modules/@vaadin/vaadin-combo-box/theme/lumo/vaadin-combo-box.js + 2 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-combo-box@6.0.1/node_modules/@vaadin/vaadin-combo-box/theme/lumo/vaadin-combo-box.js",
       "source": "import './vaadin-combo-box-dropdown-styles.js';\nimport './vaadin-combo-box-item-styles.js';\nimport './vaadin-combo-box-styles.js';\nimport '../../src/vaadin-combo-box.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-combo-box@6.0.1/node_modules/@vaadin/vaadin-combo-box/theme/lumo/vaadin-combo-box-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/field-button.js';\nimport '@vaadin/vaadin-text-field/theme/lumo/vaadin-text-field.js';\n\nregisterStyles(\n  'vaadin-combo-box',\n  css`\n    :host {\n      outline: none;\n    }\n\n    [part='toggle-button']::before {\n      content: var(--lumo-icons-dropdown);\n    }\n  `,\n  { moduleId: 'lumo-combo-box', include: ['lumo-field-button'] }\n);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-combo-box@6.0.1/node_modules/@vaadin/vaadin-combo-box/src/vaadin-combo-box.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { ControlStateMixin } from '@vaadin/vaadin-control-state-mixin/vaadin-control-state-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ComboBoxMixin } from './vaadin-combo-box-mixin.js';\nimport '@vaadin/vaadin-text-field/src/vaadin-text-field.js';\nimport './vaadin-combo-box-dropdown-wrapper.js';\nimport { ComboBoxDataProviderMixin } from './vaadin-combo-box-data-provider-mixin.js';\n\n/**\n * `<vaadin-combo-box>` is a combo box element combining a dropdown list with an\n * input field for filtering the list of items. If you want to replace the default\n * input field with a custom implementation, you should use the\n * [`<vaadin-combo-box-light>`](#/elements/vaadin-combo-box-light) element.\n *\n * Items in the dropdown list must be provided as a list of `String` values.\n * Defining the items is done using the `items` property, which can be assigned\n * with data-binding, using an attribute or directly with the JavaScript property.\n *\n * ```html\n * <vaadin-combo-box\n *     label=\"Fruit\"\n *     items=\"[[data]]\">\n * </vaadin-combo-box>\n * ```\n *\n * ```js\n * combobox.items = ['apple', 'orange', 'banana'];\n * ```\n *\n * When the selected `value` is changed, a `value-changed` event is triggered.\n *\n * ### Item rendering\n *\n * `<vaadin-combo-box>` supports using custom renderer callback function for defining the\n * content of `<vaadin-combo-box-item>`.\n *\n * The renderer function provides `root`, `comboBox`, `model` arguments when applicable.\n * Generate DOM content by using `model` object properties if needed, append it to the `root`\n * element and control the state of the host element by accessing `comboBox`. Before generating new\n * content, users are able to check if there is already content in `root` for reusing it.\n *\n * ```html\n * <vaadin-combo-box id=\"combo-box\"></vaadin-combo-box>\n * ```\n * ```js\n * const comboBox = document.querySelector('#combo-box');\n * comboBox.items = [{'label': 'Hydrogen', 'value': 'H'}];\n * comboBox.renderer = function(root, comboBox, model) {\n *   root.innerHTML = model.index + ': ' +\n *                    model.item.label + ' ' +\n *                    '<b>' + model.item.value + '</b>';\n * };\n * ```\n *\n * Renderer is called on the opening of the combo-box and each time the related model is updated.\n * DOM generated during the renderer call can be reused\n * in the next renderer call and will be provided with the `root` argument.\n * On first call it will be empty.\n *\n * ### Item Template\n *\n * Alternatively, the content of the `<vaadin-combo-box-item>` can be populated by using\n * custom item template provided in the light DOM:\n *\n * ```html\n * <vaadin-combo-box items='[{\"label\": \"Hydrogen\", \"value\": \"H\"}]'>\n *   <template>\n *     [[index]]: [[item.label]] <b>[[item.value]</b>\n *   </template>\n * </vaadin-combo-box>\n * ```\n *\n * The following properties are available for item template bindings:\n *\n * Property name | Type | Description\n * --------------|------|------------\n * `index`| Number | Index of the item in the `items` array\n * `item` | String or Object | The item reference\n * `selected` | Boolean | True when item is selected\n * `focused` | Boolean | True when item is focused\n *\n * ### Lazy Loading with Function Data Provider\n *\n * In addition to assigning an array to the items property, you can alternatively\n * provide the `<vaadin-combo-box>` data through the\n * [`dataProvider`](#/elements/vaadin-combo-box#property-dataProvider) function property.\n * The `<vaadin-combo-box>` calls this function lazily, only when it needs more data\n * to be displayed.\n *\n * See the [`dataProvider`](#/elements/vaadin-combo-box#property-dataProvider) in\n * the API reference below for the detailed data provider arguments description,\n * and the “Lazy Loading“ example on “Basics” page in the demos.\n *\n * __Note that when using function data providers, the total number of items\n * needs to be set manually. The total number of items can be returned\n * in the second argument of the data provider callback:__\n *\n * ```javascript\n * comboBox.dataProvider = function(params, callback) {\n *   var url = 'https://api.example/data' +\n *       '?page=' + params.page +        // the requested page index\n *       '&per_page=' + params.pageSize; // number of items on the page\n *   var xhr = new XMLHttpRequest();\n *   xhr.onload = function() {\n *     var response = JSON.parse(xhr.responseText);\n *     callback(\n *       response.employees, // requested page of items\n *       response.totalSize  // total number of items\n *     );\n *   };\n *   xhr.open('GET', url, true);\n *   xhr.send();\n * };\n * ```\n *\n * ### Styling\n *\n * The following custom properties are available for styling:\n *\n * Custom property | Description | Default\n * ----------------|-------------|-------------\n * `--vaadin-combo-box-overlay-max-height` | Property that determines the max height of overlay | `65vh`\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `text-field` | The text field\n * `toggle-button` | The toggle button\n *\n * See [`<vaadin-overlay>` documentation](https://github.com/vaadin/vaadin-overlay/blob/master/src/vaadin-overlay.html)\n * for `<vaadin-combo-box-overlay>` parts.\n *\n * See [`<vaadin-text-field>` documentation](https://vaadin.com/components/vaadin-text-field/html-api/elements/Vaadin.TextFieldElement)\n * for the text field parts.\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `opened` | Set when the combo box dropdown is open | :host\n * `disabled` | Set to a disabled combo box | :host\n * `readonly` | Set to a read only combo box | :host\n * `has-value` | Set when the element has a value | :host\n * `invalid` | Set when the element is invalid | :host\n * `focused` | Set when the element is focused | :host\n * `focus-ring` | Set when the element is keyboard focused | :host\n * `loading` | Set when new items are expected | :host\n *\n * In addition to `<vaadin-combo-box>` itself, the following internal\n * components are themable:\n *\n * - `<vaadin-text-field>`\n * - `<vaadin-combo-box-overlay>`\n * - `<vaadin-combo-box-item>`\n *\n * Note: the `theme` attribute value set on `<vaadin-combo-box>` is\n * propagated to the internal themable components listed above.\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} custom-value-set - Fired when the user sets a custom value.\n * @fires {CustomEvent} filter-changed - Fired when the `filter` property changes.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\n * @fires {CustomEvent} selected-item-changed - Fired when the `selectedItem` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ControlStateMixin\n * @mixes ComboBoxDataProviderMixin\n * @mixes ComboBoxMixin\n * @mixes ThemableMixin\n */\nclass ComboBoxElement extends ElementMixin(\n  ControlStateMixin(ThemableMixin(ComboBoxDataProviderMixin(ComboBoxMixin(PolymerElement))))\n) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        :host([opened]) {\n          pointer-events: auto;\n        }\n\n        [part='text-field'] {\n          width: 100%;\n          min-width: 0;\n        }\n      </style>\n\n      <vaadin-text-field\n        part=\"text-field\"\n        id=\"input\"\n        pattern=\"[[pattern]]\"\n        prevent-invalid-input=\"[[preventInvalidInput]]\"\n        value=\"{{_inputElementValue}}\"\n        autocomplete=\"off\"\n        invalid=\"[[invalid]]\"\n        label=\"[[label]]\"\n        name=\"[[name]]\"\n        placeholder=\"[[placeholder]]\"\n        required=\"[[required]]\"\n        disabled=\"[[disabled]]\"\n        readonly=\"[[readonly]]\"\n        helper-text=\"[[helperText]]\"\n        error-message=\"[[errorMessage]]\"\n        autocapitalize=\"none\"\n        autofocus=\"[[autofocus]]\"\n        on-change=\"_stopPropagation\"\n        on-input=\"_inputValueChanged\"\n        clear-button-visible=\"[[clearButtonVisible]]\"\n        theme$=\"[[theme]]\"\n      >\n        <slot name=\"prefix\" slot=\"prefix\"></slot>\n        <slot name=\"helper\" slot=\"helper\">[[helperText]]</slot>\n\n        <div part=\"toggle-button\" id=\"toggleButton\" slot=\"suffix\" role=\"button\" aria-label=\"Toggle\"></div>\n      </vaadin-text-field>\n\n      <vaadin-combo-box-dropdown-wrapper\n        id=\"overlay\"\n        opened=\"[[opened]]\"\n        renderer=\"[[renderer]]\"\n        position-target=\"[[_getPositionTarget()]]\"\n        _focused-index=\"[[_focusedIndex]]\"\n        _item-id-path=\"[[itemIdPath]]\"\n        _item-label-path=\"[[itemLabelPath]]\"\n        loading=\"[[loading]]\"\n        theme=\"[[theme]]\"\n      ></vaadin-combo-box-dropdown-wrapper>\n    `;\n  }\n\n  constructor() {\n    super();\n    /**\n     * @property\n     */\n    this.theme;\n  }\n\n  static get is() {\n    return 'vaadin-combo-box';\n  }\n\n  static get version() {\n    return '6.0.1';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * The label for this element.\n       */\n      label: {\n        type: String,\n        reflectToAttribute: true\n      },\n\n      /**\n       * Set to true to mark the input as required.\n       * @type {boolean}\n       */\n      required: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Set to true to disable this input.\n       * @type {boolean}\n       */\n      disabled: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Set to true to prevent the user from entering invalid input.\n       * @attr {boolean} prevent-invalid-input\n       */\n      preventInvalidInput: {\n        type: Boolean\n      },\n\n      /**\n       * A pattern to validate the `input` with.\n       */\n      pattern: {\n        type: String\n      },\n\n      /**\n       * The error message to display when the input is invalid.\n       * @attr {string} error-message\n       */\n      errorMessage: {\n        type: String\n      },\n\n      /** @type {boolean} */\n      autofocus: {\n        type: Boolean\n      },\n\n      /**\n       * A placeholder string in addition to the label.\n       * @type {string}\n       */\n      placeholder: {\n        type: String,\n        value: ''\n      },\n\n      /**\n       * String used for the helper text.\n       * @attr {string} helper-text\n       */\n      helperText: {\n        type: String,\n        value: ''\n      },\n\n      /**\n       * Set to true to prevent the user from picking a value or typing in the input.\n       * @type {boolean}\n       */\n      readonly: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * Set to true to display the clear icon which clears the input.\n       * @attr {boolean} clear-button-visible\n       * @type {boolean}\n       */\n      clearButtonVisible: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  static get observers() {\n    return ['_updateAriaExpanded(opened)'];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this._nativeInput = this.inputElement.focusElement;\n    this._toggleElement = this.$.toggleButton;\n    this._clearElement = this.inputElement.shadowRoot.querySelector('[part=\"clear-button\"]');\n\n    // Stop propagation of Esc in capturing phase so that\n    // vaadin-text-field will not handle Esc as a shortcut\n    // to clear the value.\n    // We need to set this listener for \"this.inputElement\"\n    // instead of just \"this\", otherwise keyboard navigation behaviour\n    // breaks a bit on Safari and some related tests fail.\n    this.inputElement.addEventListener(\n      'keydown',\n      (e) => {\n        if (e.keyCode === 27) {\n          this._stopPropagation(e);\n          // Trigger _onEscape method of vaadin-combo-box-mixin because\n          // bubbling phase is not reached.\n          this._onEscape(e);\n        }\n      },\n      true\n    );\n\n    this._nativeInput.setAttribute('role', 'combobox');\n    this._nativeInput.setAttribute('aria-autocomplete', 'list');\n    this._updateAriaExpanded();\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    this._preventInputBlur();\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this._restoreInputBlur();\n  }\n\n  /** @private */\n  _getPositionTarget() {\n    return this.$.input;\n  }\n\n  /** @private */\n  _updateAriaExpanded() {\n    if (this._nativeInput) {\n      this._nativeInput.setAttribute('aria-expanded', this.opened);\n      this._toggleElement.setAttribute('aria-expanded', this.opened);\n    }\n  }\n\n  /** @return {!TextFieldElement | undefined} */\n  get inputElement() {\n    return this.$.input;\n  }\n\n  /**\n   * Focusable element used by vaadin-control-state-mixin\n   * @return {!HTMLElement}\n   */\n  get focusElement() {\n    // inputElement might not be defined on property changes before ready.\n    return this.inputElement || this;\n  }\n}\n\ncustomElements.define(ComboBoxElement.is, ComboBoxElement);\n\nexport { ComboBoxElement };\n"
      }
     ]
    },
    {
     "id": 166,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-form-layout@2.3.0/node_modules/@vaadin/vaadin-form-layout/theme/lumo/vaadin-form-item.js + 2 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-form-layout@2.3.0/node_modules/@vaadin/vaadin-form-layout/theme/lumo/vaadin-form-item.js",
       "source": "import './vaadin-form-item-styles.js';\nimport '../../src/vaadin-form-item.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-form-layout@2.3.0/node_modules/@vaadin/vaadin-form-layout/theme/lumo/vaadin-form-item-styles.js",
       "source": "import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-form-item\" theme-for=\"vaadin-form-item\">\n  <template>\n    <style>\n      :host {\n        --vaadin-form-item-row-spacing: 0;\n      }\n\n      /* font-weight, margin-bottom, transition and line-height same values as for part label in text-field */\n      [part=\"label\"] {\n        color: var(--lumo-secondary-text-color);\n        font-family: var(--lumo-font-family);\n        font-size: var(--lumo-font-size-s);\n        font-weight: 500;\n        margin-top: var(--lumo-space-m);\n        margin-left: calc(var(--lumo-border-radius) / 4);\n        margin-bottom: var(--lumo-space-xs);\n        transition: color 0.4s;\n        line-height: 1.333;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-form-layout@2.3.0/node_modules/@vaadin/vaadin-form-layout/src/vaadin-form-item.js",
       "source": "/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n/**\n * `<vaadin-form-item>` is a Web Component providing labelled form item wrapper\n * for using inside `<vaadin-form-layout>`.\n *\n * `<vaadin-form-item>` accepts any number of children as the input content,\n * and also has a separate named `label` slot:\n *\n * ```html\n * <vaadin-form-item>\n *   <label slot=\"label\">Label aside</label>\n *   <input>\n * </vaadin-form-item>\n * ```\n *\n * Any content can be used. For instance, you can have multiple input elements\n * with surrounding text. The label can be an element of any type:\n *\n * ```html\n * <vaadin-form-item>\n *   <span slot=\"label\">Date of Birth</span>\n *   <input placeholder=\"YYYY\" size=\"4\"> -\n *   <input placeholder=\"MM\" size=\"2\"> -\n *   <input placeholder=\"DD\" size=\"2\"><br>\n *   <em>Example: 1900-01-01</em>\n * </vaadin-form-item>\n * ```\n *\n * The label is optional and can be omitted:\n *\n * ```html\n * <vaadin-form-item>\n *   <input type=\"checkbox\"> Subscribe to our Newsletter\n * </vaadin-form-item>\n * ```\n *\n * By default, the `label` slot content is displayed aside of the input content.\n * When `label-position=\"top\"` is set, the `label` slot content is displayed on top:\n *\n * ```html\n * <vaadin-form-item label-position=\"top\">\n *   <label slot=\"label\">Label on top</label>\n *   <input>\n * </vaadin-form-item>\n * ```\n *\n * **Note:** Normally, `<vaadin-form-item>` is used as a child of\n * a `<vaadin-form-layout>` element. Setting `label-position` is unnecessary,\n * because the `label-position` attribute is triggered automatically by the parent\n * `<vaadin-form-layout>`, depending on its width and responsive behavior.\n *\n * ### Input Width\n *\n * By default, `<vaadin-form-item>` does not manipulate the width of the slotted\n * input elements. Optionally you can stretch the child input element to fill\n * the available width for the input content by adding the `full-width` class:\n *\n * ```html\n * <vaadin-form-item>\n *   <label slot=\"label\">Label</label>\n *   <input class=\"full-width\">\n * </vaadin-form-item>\n * ```\n *\n * ### Styling\n *\n * The `label-position` host attribute can be used to target the label on top state:\n *\n * <pre><code>\n * &lt;dom-module id=\"my-form-item-theme\" theme-for=\"vaadin-form-item\"&gt;\n *   &lt;template&gt;\n *     &lt;style&gt;\n *       :host {\n *         /&#42; default state styles, label aside &#42;/\n *       }\n *\n *       :host([label-position=\"top\"]) {\n *         /&#42; label on top state styles &#42;/\n *       }\n *     &lt;/style&gt;\n *   &lt;/template&gt;\n * &lt;/dom-module&gt;\n * </code></pre>\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ---|---\n * label | The label slot container\n *\n * ### Custom CSS Properties Reference\n *\n * The following custom CSS properties are available on the `<vaadin-form-item>`\n * element:\n *\n * Custom CSS property | Description | Default\n * ---|---|---\n * `--vaadin-form-item-label-width` | Width of the label column when the labels are aside | `8em`\n * `--vaadin-form-item-label-spacing` | Spacing between the label column and the input column when the labels are aside | `1em`\n * `--vaadin-form-item-row-spacing` | Height of the spacing between the form item elements | `1em`\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends PolymerElement\n * @mixes ThemableMixin\n * @demo demo/index.html\n */\nclass FormItemElement extends ThemableMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: inline-flex;\n        flex-direction: row;\n        align-items: baseline;\n\n        /* CSS API for host */\n        --vaadin-form-item-label-width: 8em;\n        --vaadin-form-item-label-spacing: 1em;\n        --vaadin-form-item-row-spacing: 1em;\n\n        margin: calc(0.5 * var(--vaadin-form-item-row-spacing)) 0;\n      }\n\n      :host([label-position=\"top\"]) {\n        flex-direction: column;\n        align-items: stretch;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      #label {\n        width: var(--vaadin-form-item-label-width);\n        flex: 0 0 auto;\n      }\n\n      :host([label-position=\"top\"]) #label {\n        width: auto;\n      }\n\n      #spacing {\n        width: var(--vaadin-form-item-label-spacing);\n        flex: 0 0 auto;\n      }\n\n      #content {\n        flex: 1 1 auto;\n      }\n\n      #content ::slotted(.full-width) {\n        box-sizing: border-box;\n        width: 100%;\n        min-width: 0;\n      }\n    </style>\n    <div id=\"label\" part=\"label\" on-click=\"_onLabelClick\">\n      <slot name=\"label\" id=\"labelSlot\"></slot>\n    </div>\n    <div id=\"spacing\"></div>\n    <div id=\"content\">\n      <slot id=\"contentSlot\"></slot>\n    </div>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-form-item';\n  }\n\n  static get properties() {\n    return {\n    };\n  }\n\n  /** @private */\n  _onLabelClick(e) {\n    // No `Array.prototype.find` in MSIE, using `filter` instead :-(\n    const firstContentElementChild = Array.prototype.filter.call(\n      this.$.contentSlot.assignedNodes(),\n      (e) => e.nodeType === Node.ELEMENT_NODE\n    )[0];\n    if (firstContentElementChild) {\n      firstContentElementChild.focus();\n      firstContentElementChild.click();\n    }\n  }\n}\n\ncustomElements.define(FormItemElement.is, FormItemElement);\n\nexport { FormItemElement };\n"
      }
     ]
    },
    {
     "id": 167,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-form-layout@2.3.0/node_modules/@vaadin/vaadin-form-layout/theme/lumo/vaadin-form-layout.js + 2 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-form-layout@2.3.0/node_modules/@vaadin/vaadin-form-layout/theme/lumo/vaadin-form-layout.js",
       "source": "import './vaadin-form-layout-styles.js';\nimport '../../src/vaadin-form-layout.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-form-layout@2.3.0/node_modules/@vaadin/vaadin-form-layout/theme/lumo/vaadin-form-layout-styles.js",
       "source": "import '@vaadin/vaadin-lumo-styles/spacing.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-form-layout\" theme-for=\"vaadin-form-layout\">\n  <template>\n    <style>\n      :host {\n        --vaadin-form-layout-column-spacing: var(--lumo-space-l);\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-form-layout@2.3.0/node_modules/@vaadin/vaadin-form-layout/src/vaadin-form-layout.js",
       "source": "/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { IronResizableBehavior } from '@polymer/iron-resizable-behavior/iron-resizable-behavior.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { beforeNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { mixinBehaviors } from '@polymer/polymer/lib/legacy/class.js';\n/**\n * `<vaadin-form-layout>` is a Web Component providing configurable responsive\n * layout for form elements.\n *\n * ```html\n * <vaadin-form-layout>\n *\n *   <vaadin-form-item>\n *     <label slot=\"label\">First Name</label>\n *     <input class=\"full-width\" value=\"Jane\">\n *   </vaadin-form-item>\n *\n *   <vaadin-form-item>\n *     <label slot=\"label\">Last Name</label>\n *     <input class=\"full-width\" value=\"Doe\">\n *   </vaadin-form-item>\n *\n *   <vaadin-form-item>\n *     <label slot=\"label\">Email</label>\n *     <input class=\"full-width\" value=\"jane.doe@example.com\">\n *   </vaadin-form-item>\n *\n * </vaadin-form-layout>\n * ```\n *\n * It supports any child elements as layout items.\n *\n * By default, it makes a layout of two columns if the element width is equal or\n * wider than 40em, and a single column layout otherwise.\n *\n * The number of columns and the responsive behavior are customizable with\n * the `responsiveSteps` property.\n *\n * ### Spanning Items on Multiple Columns\n *\n * You can use `colspan` attribute on the items.\n * In the example below, the first text field spans on two columns:\n *\n * ```html\n * <vaadin-form-layout>\n *\n *   <vaadin-form-item colspan=\"2\">\n *     <label slot=\"label\">Address</label>\n *     <input class=\"full-width\">\n *   </vaadin-form-item>\n *\n *   <vaadin-form-item>\n *     <label slot=\"label\">First Name</label>\n *     <input class=\"full-width\" value=\"Jane\">\n *   </vaadin-form-item>\n *\n *   <vaadin-form-item>\n *     <label slot=\"label\">Last Name</label>\n *     <input class=\"full-width\" value=\"Doe\">\n *   </vaadin-form-item>\n *\n * </vaadin-form-layout>\n * ```\n *\n * ### Explicit New Row\n *\n * Use the `<br>` line break element to wrap the items on a new row:\n *\n * ```html\n * <vaadin-form-layout>\n *\n *   <vaadin-form-item>\n *     <label slot=\"label\">Email</label>\n *     <input class=\"full-width\">\n *   </vaadin-form-item>\n *\n *   <br>\n *\n *   <vaadin-form-item>\n *     <label slot=\"label\">Confirm Email</label>\n *     <input class=\"full-width\">\n *   </vaadin-form-item>\n *\n * </vaadin-form-layout>\n * ```\n *\n * ### CSS Properties Reference\n *\n * The following custom CSS properties are available on the `<vaadin-form-layout>`\n * element:\n *\n * Custom CSS property | Description | Default\n * ---|---|---\n * `--vaadin-form-layout-column-spacing` | Length of the spacing between columns | `2em`\n *\n * @extends PolymerElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @demo demo/index.html\n */\nclass FormLayoutElement extends\n  ElementMixin(\n    ThemableMixin(\n      mixinBehaviors([IronResizableBehavior], PolymerElement))) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: block;\n        max-width: 100%;\n        animation: 1ms vaadin-form-layout-appear;\n        /* CSS API for host */\n        --vaadin-form-layout-column-spacing: 2em; /* (default) */\n        align-self: stretch;\n      }\n\n      @keyframes vaadin-form-layout-appear {\n        to {\n          opacity: 1 !important; /* stylelint-disable-line keyframe-declaration-no-important */\n        }\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      #layout {\n        display: flex;\n\n        align-items: baseline; /* default \\`stretch\\` is not appropriate */\n\n        flex-wrap: wrap; /* the items should wrap */\n      }\n\n      #layout ::slotted(*) {\n        /* Items should neither grow nor shrink. */\n        flex-grow: 0;\n        flex-shrink: 0;\n\n        /* Margins make spacing between the columns */\n        margin-left: calc(0.5 * var(--vaadin-form-layout-column-spacing));\n        margin-right: calc(0.5 * var(--vaadin-form-layout-column-spacing));\n      }\n\n      #layout ::slotted(br) {\n        display: none;\n      }\n    </style>\n    <div id=\"layout\">\n      <slot id=\"slot\"></slot>\n    </div>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-form-layout';\n  }\n\n  static get version() {\n    return '2.3.0';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * @typedef FormLayoutResponsiveStep\n       * @type {object}\n       * @property {string} minWidth - The threshold value for this step in CSS length units.\n       * @property {number} columns - Number of columns. Only natural numbers are valid.\n       * @property {string} labelsPosition - Labels position option, valid values: `\"aside\"` (default), `\"top\"`.\n       */\n\n      /**\n       * Allows specifying a responsive behavior with the number of columns\n       * and the label position depending on the layout width.\n       *\n       * Format: array of objects, each object defines one responsive step\n       * with `minWidth` CSS length, `columns` number, and optional\n       * `labelsPosition` string of `\"aside\"` or `\"top\"`. At least one item is required.\n       *\n       * #### Examples\n       *\n       * ```javascript\n       * formLayout.responsiveSteps = [{columns: 1}];\n       * // The layout is always a single column, labels aside.\n       * ```\n       *\n       * ```javascript\n       * formLayout.responsiveSteps = [\n       *   {minWidth: 0, columns: 1},\n       *   {minWidth: '40em', columns: 2}\n       * ];\n       * // Sets two responsive steps:\n       * // 1. When the layout width is < 40em, one column, labels aside.\n       * // 2. Width >= 40em, two columns, labels aside.\n       * ```\n       *\n       * ```javascript\n       * formLayout.responsiveSteps = [\n       *   {minWidth: 0, columns: 1, labelsPosition: 'top'},\n       *   {minWidth: '20em', columns: 1},\n       *   {minWidth: '40em', columns: 2}\n       * ];\n       * // Default value. Three responsive steps:\n       * // 1. Width < 20em, one column, labels on top.\n       * // 2. 20em <= width < 40em, one column, labels aside.\n       * // 3. Width >= 40em, two columns, labels aside.\n       * ```\n       *\n       * @type {!Array<!FormLayoutResponsiveStep>}\n       */\n      responsiveSteps: {\n        type: Array,\n        value: function() {\n          return [\n            {minWidth: 0, columns: 1, labelsPosition: 'top'},\n            {minWidth: '20em', columns: 1},\n            {minWidth: '40em', columns: 2}\n          ];\n        },\n        observer: '_responsiveStepsChanged'\n      },\n\n      /**\n       * Current number of columns in the layout\n       * @private\n       */\n      _columnCount: {\n        type: Number\n      },\n\n      /**\n       * Indicates that labels are on top\n       * @private\n       */\n      _labelsOnTop: {\n        type: Boolean\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '_invokeUpdateStyles(_columnCount, _labelsOnTop)'\n    ];\n  }\n\n  /** @protected */\n  ready() {\n    // Here we create and attach a style element that we use for validating\n    // CSS values in `responsiveSteps`. We can’t add this to the `<template>`,\n    // because Polymer will throw it away. We need to create this before\n    // `super.ready()`, because `super.ready()` invokes property observers,\n    // and the observer for `responsiveSteps` does CSS value validation.\n    this._styleElement = document.createElement('style');\n    this.root.appendChild(this._styleElement);\n    // Ensure there is a child text node in the style element\n    this._styleElement.textContent = ' ';\n    if (window.ShadyDOM) {\n      // With ShadyDOM, setting textContent attaches text content nodes\n      // asynchronously, but we need it right away.\n      window.ShadyDOM.flush();\n    }\n\n    super.ready();\n\n    this.addEventListener('iron-resize', this._selectResponsiveStep);\n    this.addEventListener('animationend', this.__onAnimationEnd);\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n\n    beforeNextRender(this, this._selectResponsiveStep);\n    beforeNextRender(this, this.updateStyles);\n\n    this._observeChildrenColspanChange();\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this.__mutationObserver.disconnect();\n    this.__childObserver.disconnect();\n  }\n\n  /** @private */\n  _observeChildrenColspanChange() {\n    // Observe changes in form items' `colspan` attribute and update styles\n    const mutationObserverConfig = {attributes: true};\n\n    this.__mutationObserver = new MutationObserver(mutationRecord => {\n      mutationRecord.forEach(mutation => {\n        if (mutation.type === 'attributes'\n          && ((mutation.attributeName === 'colspan')\n          || (mutation.attributeName === 'hidden'))) {\n          this._invokeUpdateStyles();\n        }\n      });\n    });\n\n    this.__childObserver = new FlattenedNodesObserver(this, info => {\n      const addedNodes = this._getObservableNodes(info.addedNodes);\n      const removedNodes = this._getObservableNodes(info.removedNodes);\n\n      addedNodes.forEach(child => {\n        this.__mutationObserver.observe(child, mutationObserverConfig);\n      });\n\n      if (addedNodes.length > 0 || removedNodes.length > 0) {\n        this._invokeUpdateStyles();\n      }\n    });\n  }\n\n  /** @private */\n  _getObservableNodes(nodeList) {\n    const ignore = ['template', 'style', 'dom-repeat', 'dom-if'];\n    return Array.from(nodeList)\n      .filter(node => node.nodeType === Node.ELEMENT_NODE && ignore.indexOf(node.localName.toLowerCase()) === -1);\n  }\n\n  /** @private */\n  _naturalNumberOrOne(n) {\n    if (typeof n === 'number' && n >= 1 && n < Infinity) {\n      return Math.floor(n);\n    }\n    return 1;\n  }\n\n  /** @private */\n  _isValidCSSLength(value) {\n    // Let us choose a CSS property for validating CSS <length> values:\n    // - `border-spacing` accepts `<length> | inherit`, it’s the best! But\n    //   it does not disallow invalid values at all in MSIE :-(\n    // - `letter-spacing` and `word-spacing` accept\n    //   `<length> | normal | inherit`, and disallows everything else, like\n    //   `<percentage>`, `auto` and such, good enough.\n    // - `word-spacing` is used since its shorter.\n\n    // Disallow known keywords allowed as the `word-spacing` value\n    if (value === 'inherit' || value === 'normal') {\n      return false;\n    }\n\n    // Use the value in a stylesheet and check the parsed value. Invalid\n    // input value results in empty parsed value.\n    this._styleElement.firstChild.nodeValue = `#styleElement { word-spacing: ${value}; }`;\n\n    if (!this._styleElement.sheet) {\n      // Stylesheet is not ready, probably not attached to the document yet.\n      return true;\n    }\n\n    // Safari 9 sets invalid CSS rules' value to `null`\n    return ['', null].indexOf(this._styleElement.sheet.cssRules[0].style.getPropertyValue('word-spacing')) < 0;\n  }\n\n  /** @private */\n  _responsiveStepsChanged(responsiveSteps, oldResponsiveSteps) {\n    try {\n      if (!Array.isArray(responsiveSteps)) {\n        throw new Error('Invalid \"responsiveSteps\" type, an Array is required.');\n      }\n\n      if (responsiveSteps.length < 1) {\n        throw new Error('Invalid empty \"responsiveSteps\" array, at least one item is required.');\n      }\n\n      responsiveSteps.forEach(step => {\n        if (this._naturalNumberOrOne(step.columns) !== step.columns) {\n          throw new Error(`Invalid 'columns' value of ${step.columns}, a natural number is required.`);\n        }\n\n        if (step.minWidth !== undefined && !this._isValidCSSLength(step.minWidth)) {\n          throw new Error(`Invalid 'minWidth' value of ${step.minWidth}, a valid CSS length required.`);\n        }\n\n        if (step.labelsPosition !== undefined && ['aside', 'top'].indexOf(step.labelsPosition) === -1) {\n          throw new Error(`Invalid 'labelsPosition' value of ${step.labelsPosition}, 'aside' or 'top' string is required.`);\n        }\n      });\n    } catch (e) {\n      if (oldResponsiveSteps && oldResponsiveSteps !== responsiveSteps) {\n        console.warn(`${e.message} Using previously set 'responsiveSteps' instead.`);\n        this.responsiveSteps = oldResponsiveSteps;\n      } else {\n        console.warn(`${e.message} Using default 'responsiveSteps' instead.`);\n        this.responsiveSteps = [\n          {minWidth: 0, columns: 1, labelsPosition: 'top'},\n          {minWidth: '20em', columns: 1},\n          {minWidth: '40em', columns: 2}\n        ];\n      }\n    }\n\n    this._selectResponsiveStep();\n  }\n\n  /** @private */\n  __onAnimationEnd(e) {\n    if (e.animationName.indexOf('vaadin-form-layout-appear') === 0) {\n      this._selectResponsiveStep();\n    }\n  }\n\n  /** @private */\n  _selectResponsiveStep() {\n    // Iterate through responsiveSteps and choose the step\n    let selectedStep;\n    const tmpStyleProp = 'background-position';\n    this.responsiveSteps.forEach(step => {\n      // Convert minWidth to px units for comparison\n      this.$.layout.style.setProperty(tmpStyleProp, step.minWidth);\n      const stepMinWidthPx = parseFloat(getComputedStyle(this.$.layout).getPropertyValue(tmpStyleProp));\n\n      // Compare step min-width with the host width, select the passed step\n      if (stepMinWidthPx <= this.offsetWidth) {\n        selectedStep = step;\n      }\n    });\n    this.$.layout.style.removeProperty(tmpStyleProp);\n\n    // Sometimes converting units is not possible, e.g, when element is\n    // not connected. Then the `selectedStep` stays `undefined`.\n    if (selectedStep) {\n      // Apply the chosen responsive step’s properties\n      this._columnCount = selectedStep.columns;\n      this._labelsOnTop = selectedStep.labelsPosition === 'top';\n    }\n\n    if (/\\b(Edge|Trident)\\//.test(navigator.userAgent)) {\n      if (this.offsetWidth !== this._lastOffsetWidth) {\n        this.updateStyles(); // force breaks sizes update in IE and Edge\n        this._lastOffsetWidth = this.offsetWidth;\n      }\n    }\n  }\n\n  /** @private */\n  _invokeUpdateStyles() {\n    this.updateStyles();\n  }\n\n  /**\n   * Set custom CSS property values and update the layout.\n   * @param {Object<string, string>=} properties\n   * @protected\n   */\n  updateStyles(properties) {\n    super.updateStyles(properties);\n\n    /*\n      The item width formula:\n\n          itemWidth = colspan / columnCount * 100% - columnSpacing\n\n      We have to subtract columnSpacing, because the column spacing space is taken\n      by item margins of 1/2 * spacing on both sides\n    */\n\n    const columnSpacing = window.ShadyCSS\n      ? window.ShadyCSS.getComputedStyleValue(this, '--vaadin-form-layout-column-spacing')\n      : getComputedStyle(this).getPropertyValue('--vaadin-form-layout-column-spacing');\n\n    const direction = getComputedStyle(this).direction;\n    const marginStartProp = 'margin-' + (direction === 'ltr' ? 'left' : 'right');\n    const marginEndProp = 'margin-' + (direction === 'ltr' ? 'right' : 'left');\n\n    const containerWidth = this.offsetWidth;\n\n    if (window.ShadyDOM) {\n      window.ShadyDOM.flush(); // `getComputedStyle` below needs that\n    }\n\n    let col = 0;\n    Array.from(this.children)\n      .filter(child => child.localName === 'br' || getComputedStyle(child).display !== 'none')\n      .forEach((child, index, children) => {\n        if (child.localName === 'br') {\n          // Reset column count on line break\n          col = 0;\n          return;\n        }\n\n        let colspan;\n        colspan = this._naturalNumberOrOne(parseFloat(child.getAttribute('colspan')));\n\n        // Never span further than the number of columns\n        colspan = Math.min(colspan, this._columnCount);\n\n        const childRatio = colspan / this._columnCount;\n\n        // Note: using 99.9% for 100% fixes rounding errors in MS Edge\n        // (< v16), otherwise the items might wrap, resizing is wobbly.\n        child.style.width = `calc(${childRatio * 99.9}% - ${1 - childRatio} * ${columnSpacing})`;\n\n        if (col + colspan > this._columnCount) {\n          // Too big to fit on this row, let’s wrap it\n          col = 0;\n        }\n\n\n        // At the start edge\n        if (col === 0) {\n          child.style.setProperty(marginStartProp, '0px');\n        } else {\n          child.style.removeProperty(marginStartProp);\n        }\n\n        const nextIndex = index + 1;\n        const nextLineBreak = nextIndex < children.length && children[nextIndex].localName === 'br';\n\n        // At the end edge\n        if (col + colspan === this._columnCount) {\n          child.style.setProperty(marginEndProp, '0px');\n        } else if (nextLineBreak) {\n          const colspanRatio = (this._columnCount - col - colspan) / this._columnCount;\n          child.style.setProperty(marginEndProp, `calc(${colspanRatio * containerWidth}px + ${colspanRatio} * ${columnSpacing})`);\n        } else {\n          child.style.removeProperty(marginEndProp);\n        }\n\n        // Move the column counter\n        col = (col + colspan) % this._columnCount;\n\n        if (child.localName === 'vaadin-form-item') {\n          if (this._labelsOnTop) {\n            child.setAttribute('label-position', 'top');\n          } else {\n            child.removeAttribute('label-position');\n          }\n        }\n      });\n  }\n}\n\ncustomElements.define(FormLayoutElement.is, FormLayoutElement);\n\nexport { FormLayoutElement };\n"
      }
     ]
    },
    {
     "id": 168,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/theme/lumo/vaadin-grid-tree-toggle.js + 2 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/theme/lumo/vaadin-grid-tree-toggle.js",
       "source": "import './vaadin-grid-tree-toggle-styles.js';\nimport '../../src/vaadin-grid-tree-toggle.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/theme/lumo/vaadin-grid-tree-toggle-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\n\nregisterStyles(\n  'vaadin-grid-tree-toggle',\n  css`\n    :host {\n      --vaadin-grid-tree-toggle-level-offset: 2em;\n      align-items: center;\n      vertical-align: middle;\n      margin-left: calc(var(--lumo-space-s) * -1);\n      -webkit-tap-highlight-color: transparent;\n    }\n\n    :host(:not([leaf])) {\n      cursor: default;\n    }\n\n    [part='toggle'] {\n      display: inline-block;\n      font-size: 1.5em;\n      line-height: 1;\n      width: 1em;\n      height: 1em;\n      text-align: center;\n      color: var(--lumo-contrast-50pct);\n      /* Increase touch target area */\n      padding: calc(1em / 3);\n      margin: calc(1em / -3);\n    }\n\n    :host(:not([dir='rtl'])) [part='toggle'] {\n      margin-right: 0;\n    }\n\n    @media (hover: hover) {\n      :host(:hover) [part='toggle'] {\n        color: var(--lumo-contrast-80pct);\n      }\n    }\n\n    [part='toggle']::before {\n      font-family: 'lumo-icons';\n      display: inline-block;\n      height: 100%;\n    }\n\n    :host(:not([expanded])) [part='toggle']::before {\n      content: var(--lumo-icons-angle-right);\n    }\n\n    :host([expanded]) [part='toggle']::before {\n      content: var(--lumo-icons-angle-right);\n      transform: rotate(90deg);\n    }\n\n    /* Experimental support for hierarchy connectors, using an unsupported selector */\n    :host([theme~='connectors']) #level-spacer {\n      position: relative;\n      z-index: -1;\n      font-size: 1em;\n      height: 1.5em;\n    }\n\n    :host([theme~='connectors']) #level-spacer::before {\n      display: block;\n      content: '';\n      margin-top: calc(var(--lumo-space-m) * -1);\n      height: calc(var(--lumo-space-m) + 3em);\n      background-image: linear-gradient(\n        to right,\n        transparent calc(var(--vaadin-grid-tree-toggle-level-offset) - 1px),\n        var(--lumo-contrast-10pct) calc(var(--vaadin-grid-tree-toggle-level-offset) - 1px)\n      );\n      background-size: var(--vaadin-grid-tree-toggle-level-offset) var(--vaadin-grid-tree-toggle-level-offset);\n      background-position: calc(var(--vaadin-grid-tree-toggle-level-offset) / 2 - 2px) 0;\n    }\n\n    /* RTL specific styles */\n\n    :host([dir='rtl']) {\n      margin-left: 0;\n      margin-right: calc(var(--lumo-space-s) * -1);\n    }\n\n    :host([dir='rtl']) [part='toggle'] {\n      margin-left: 0;\n    }\n\n    :host([dir='rtl'][expanded]) [part='toggle']::before {\n      transform: rotate(-90deg);\n    }\n\n    :host([dir='rtl'][theme~='connectors']) #level-spacer::before {\n      background-image: linear-gradient(\n        to left,\n        transparent calc(var(--vaadin-grid-tree-toggle-level-offset) - 1px),\n        var(--lumo-contrast-10pct) calc(var(--vaadin-grid-tree-toggle-level-offset) - 1px)\n      );\n      background-position: calc(100% - (var(--vaadin-grid-tree-toggle-level-offset) / 2 - 2px)) 0;\n    }\n\n    :host([dir='rtl']:not([expanded])) [part='toggle']::before,\n    :host([dir='rtl'][expanded]) [part='toggle']::before {\n      content: var(--lumo-icons-angle-left);\n    }\n  `,\n  { moduleId: 'lumo-grid-tree-toggle' }\n);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-grid@6.0.1/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-tree-toggle.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { DirMixin } from '@vaadin/vaadin-element-mixin/vaadin-dir-mixin.js';\nimport { isFocusable } from './vaadin-grid-active-item-mixin.js';\n\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `\n  <style>\n    @font-face {\n      font-family: \"vaadin-grid-tree-icons\";\n      src: url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAQkAA0AAAAABrwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAAECAAAABoAAAAcgHwa6EdERUYAAAPsAAAAHAAAAB4AJwAOT1MvMgAAAZQAAAA/AAAAYA8TBIJjbWFwAAAB8AAAAFUAAAFeGJvXWmdhc3AAAAPkAAAACAAAAAgAAAAQZ2x5ZgAAAlwAAABLAAAAhIrPOhFoZWFkAAABMAAAACsAAAA2DsJI02hoZWEAAAFcAAAAHQAAACQHAgPHaG10eAAAAdQAAAAZAAAAHAxVAgBsb2NhAAACSAAAABIAAAASAIAAVG1heHAAAAF8AAAAGAAAACAACgAFbmFtZQAAAqgAAAECAAACTwflzbdwb3N0AAADrAAAADYAAABZQ7Ajh3icY2BkYGAA4twv3Vfi+W2+MnCzMIDANSOmbGSa2YEZRHEwMIEoAAoiB6sAeJxjYGRgYD7w/wADAwsDCDA7MDAyoAI2AFEEAtIAAAB4nGNgZGBg4GBgZgDRDAxMDGgAAAGbABB4nGNgZp7JOIGBlYGBaSbTGQYGhn4IzfiawZiRkwEVMAqgCTA4MDA+38d84P8BBgdmIAapQZJVYGAEAGc/C54AeJxjYYAAxlAIzQTELAwMBxgZGB0ACy0BYwAAAHicY2BgYGaAYBkGRgYQiADyGMF8FgYbIM3FwMHABISMDArP9/3/+/8/WJXC8z0Q9v8nEp5gHVwMMMAIMo+RDYiZoQJMQIKJARUA7WBhGN4AACFKDtoAAAAAAAAAAAgACAAQABgAJgA0AEIAAHichYvBEYBADAKBVHBjBT4swl9KS2k05o0XHd/yW1hAfBFwCv9sIlJu3nZaNS3PXAaXXHI8Lge7DlzF7C1RgXc7xkK6+gvcD2URmQB4nK2RQWoCMRiFX3RUqtCli65yADModOMBLLgQSqHddRFnQghIAnEUvEA3vUUP0LP0Fj1G+yb8R5iEhO9/ef/7FwFwj28o9EthiVp4hBlehcfUP4Ur8o/wBAv8CU+xVFvhOR7UB7tUdUdlVRJ6HnHWTnhM/V24In8JT5j/KzzFSi2E53hUz7jCcrcIiDDwyKSW1JEct2HdIPH1DFytbUM0PofWdNk5E5oUqb/Q6HHBiVGZpfOXkyUMEj5IyBuNmYZQjBobfsuassvnkKLe1OuBBj0VQ8cRni2xjLWsHaM0jrjx3peYA0/vrdmUYqe9iy7bzrX6eNP7Jh1SijX+AaUVbB8AAHicY2BiwA84GBgYmRiYGJkZmBlZGFkZ2djScyoLMgzZS/MyDQwMwLSruZMzlHaB0q4A76kLlwAAAAEAAf//AA94nGNgZGBg4AFiMSBmYmAEQnYgZgHzGAAD6wA2eJxjYGBgZACCKxJigiD6mhFTNowGACmcA/8AAA==) format('woff');\n      font-weight: normal;\n      font-style: normal;\n    }\n  </style>\n`;\n\ndocument.head.appendChild($_documentContainer.content);\n\n/**\n * `<vaadin-grid-tree-toggle>` is a helper element for the `<vaadin-grid>`\n * that provides toggle and level display functionality for the item tree.\n *\n * #### Example:\n * ```html\n * <vaadin-grid-column>\n *   <template class=\"header\">Package name</template>\n *   <template>\n *     <vaadin-grid-tree-toggle\n *         leaf=\"[[!item.hasChildren]]\"\n *         expanded=\"{{expanded}}\"\n *         level=\"[[level]]\">\n *       [[item.name]]\n *     </vaadin-grid-tree-toggle>\n *   </template>\n * </vaadin-grid-column>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ---|---\n * `toggle` | The tree toggle icon\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * ---|---|---\n * `expanded` | When present, the toggle is expanded | :host\n * `leaf` | When present, the toggle is not expandable, i. e., the current item is a leaf | :host\n *\n * The following custom CSS properties are available on\n * the `<vaadin-grid-tree-toggle>` element:\n *\n * Custom CSS property | Description | Default\n * ---|---|---\n * `--vaadin-grid-tree-toggle-level-offset` | Visual offset step for each tree sublevel | `1em`\n *\n * @fires {CustomEvent} expanded-changed - Fired when the `expanded` property changes.\n *\n * @extends HTMLElement\n * @mixes ThemableMixin\n */\nclass GridTreeToggleElement extends ThemableMixin(DirMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-flex;\n          align-items: baseline;\n\n          /* CSS API for :host */\n          --vaadin-grid-tree-toggle-level-offset: 1em;\n          --_collapsed-icon: '\\\\e7be\\\\00a0';\n        }\n\n        :host([dir='rtl']) {\n          --_collapsed-icon: '\\\\e7bd\\\\00a0';\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        :host(:not([leaf])) {\n          cursor: pointer;\n        }\n\n        #level-spacer,\n        [part='toggle'] {\n          flex: none;\n        }\n\n        #level-spacer {\n          display: inline-block;\n          width: calc(var(---level, '0') * var(--vaadin-grid-tree-toggle-level-offset));\n        }\n\n        [part='toggle']::before {\n          font-family: 'vaadin-grid-tree-icons';\n          line-height: 1em; /* make icon font metrics not affect baseline */\n        }\n\n        :host(:not([expanded])) [part='toggle']::before {\n          content: var(--_collapsed-icon);\n        }\n\n        :host([expanded]) [part='toggle']::before {\n          content: '\\\\e7bc\\\\00a0'; /* icon glyph + single non-breaking space */\n        }\n\n        :host([leaf]) [part='toggle'] {\n          visibility: hidden;\n        }\n      </style>\n\n      <span id=\"level-spacer\"></span>\n      <span part=\"toggle\"></span>\n      <slot></slot>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-grid-tree-toggle';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Current level of the tree represented with a horizontal offset\n       * of the toggle button.\n       * @type {number}\n       */\n      level: {\n        type: Number,\n        value: 0,\n        observer: '_levelChanged'\n      },\n\n      /**\n       * Hides the toggle icon and disables toggling a tree sublevel.\n       * @type {boolean}\n       */\n      leaf: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * Sublevel toggle state.\n       * @type {boolean}\n       */\n      expanded: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        notify: true\n      }\n    };\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.addEventListener('click', (e) => this._onClick(e));\n  }\n\n  /** @private */\n  _onClick(e) {\n    if (this.leaf) {\n      return;\n    }\n    if (isFocusable(e.target)) {\n      return;\n    }\n\n    e.preventDefault();\n    this.expanded = !this.expanded;\n  }\n\n  /** @private */\n  _levelChanged(level) {\n    const value = Number(level).toString();\n    this.style.setProperty('---level', value);\n  }\n}\n\ncustomElements.define(GridTreeToggleElement.is, GridTreeToggleElement);\n\nexport { GridTreeToggleElement };\n"
      }
     ]
    },
    {
     "id": 169,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-notification@1.6.1/node_modules/@vaadin/vaadin-notification/theme/lumo/vaadin-notification.js + 2 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-notification@1.6.1/node_modules/@vaadin/vaadin-notification/theme/lumo/vaadin-notification.js",
       "source": "import './vaadin-notification-styles.js';\nimport '../../src/vaadin-notification.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-notification@1.6.1/node_modules/@vaadin/vaadin-notification/theme/lumo/vaadin-notification-styles.js",
       "source": "import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-notification-card\" theme-for=\"vaadin-notification-card\">\n  <template>\n    <style>\n      :host {\n        position: relative;\n        margin: var(--lumo-space-s);\n      }\n\n      [part=\"overlay\"] {\n        background: var(--lumo-base-color) linear-gradient(var(--lumo-contrast-5pct), var(--lumo-contrast-5pct));\n        border-radius: var(--lumo-border-radius);\n        box-shadow: 0 0 0 1px var(--lumo-contrast-10pct), var(--lumo-box-shadow-l);\n        font-family: var(--lumo-font-family);\n        font-size: var(--lumo-font-size-m);\n        font-weight: 400;\n        line-height: var(--lumo-line-height-s);\n        letter-spacing: 0;\n        text-transform: none;\n        -webkit-text-size-adjust: 100%;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n      }\n\n      [part=\"content\"] {\n        padding: var(--lumo-space-wide-l);\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n      }\n\n      [part=\"content\"] ::slotted(vaadin-button) {\n        flex: none;\n        margin: 0 calc(var(--lumo-space-s) * -1) 0 var(--lumo-space-m);\n      }\n\n      :host([slot^=\"middle\"]) {\n        width: 20em;\n        max-width: 80vw;\n        margin: var(--lumo-space-s) auto;\n      }\n\n      :host([slot\\$=\"stretch\"]) {\n        margin: 0;\n      }\n\n      :host([slot\\$=\"stretch\"]) [part=\"overlay\"] {\n        border-radius: 0;\n      }\n\n      @media (min-width: 421px) {\n        :host(:not([slot\\$=\"stretch\"])) {\n          display: flex;\n        }\n\n        :host([slot\\$=\"end\"]) {\n          justify-content: flex-end;\n        }\n\n        :host([slot^=\"middle\"]),\n        :host([slot\\$=\"center\"]) {\n          display: flex;\n          justify-content: center;\n        }\n      }\n\n      @keyframes lumo-notification-exit-fade-out {\n        100% {\n          opacity: 0;\n        }\n      }\n\n      @keyframes lumo-notification-enter-fade-in {\n        0% {\n          opacity: 0;\n        }\n      }\n\n      @keyframes lumo-notification-enter-slide-down {\n        0% {\n          transform: translateY(-200%);\n          opacity: 0;\n        }\n      }\n\n      @keyframes lumo-notification-exit-slide-up {\n        100% {\n          transform: translateY(-200%);\n          opacity: 0;\n        }\n      }\n\n      @keyframes lumo-notification-enter-slide-up {\n        0% {\n          transform: translateY(200%);\n          opacity: 0;\n        }\n      }\n\n      @keyframes lumo-notification-exit-slide-down {\n        100% {\n          transform: translateY(200%);\n          opacity: 0;\n        }\n      }\n\n      :host([slot=\"middle\"][opening]) {\n        animation: lumo-notification-enter-fade-in 300ms;\n      }\n\n      :host([slot=\"middle\"][closing]) {\n        animation: lumo-notification-exit-fade-out 300ms;\n      }\n\n      :host([slot^=\"top\"][opening]) {\n        animation: lumo-notification-enter-slide-down 300ms;\n      }\n\n      :host([slot^=\"top\"][closing]) {\n        animation: lumo-notification-exit-slide-up 300ms;\n      }\n\n      :host([slot^=\"bottom\"][opening]) {\n        animation: lumo-notification-enter-slide-up 300ms;\n      }\n\n      :host([slot^=\"bottom\"][closing]) {\n        animation: lumo-notification-exit-slide-down 300ms;\n      }\n\n      :host([theme~=\"primary\"]) [part=\"overlay\"] {\n        background: var(--lumo-primary-color);\n        color: var(--lumo-primary-contrast-color);\n        box-shadow: var(--lumo-box-shadow-l);\n      }\n\n      :host([theme~=\"primary\"]) {\n        --_lumo-button-background-color: var(--lumo-shade-20pct);\n        --_lumo-button-color: var(--lumo-primary-contrast-color);\n        --_lumo-button-primary-background-color: var(--lumo-primary-contrast-color);\n        --_lumo-button-primary-color: var(--lumo-primary-text-color);\n      }\n\n      :host([theme~=\"contrast\"]) [part=\"overlay\"] {\n        background: var(--lumo-contrast);\n        color: var(--lumo-base-color);\n        box-shadow: var(--lumo-box-shadow-l);\n      }\n\n      :host([theme~=\"contrast\"]) {\n        --_lumo-button-background-color: var(--lumo-contrast-20pct);\n        --_lumo-button-color: var(--lumo-base-color);\n        --_lumo-button-primary-background-color: var(--lumo-base-color);\n        --_lumo-button-primary-color: var(--lumo-contrast);\n      }\n\n      :host([theme~=\"success\"]) [part=\"overlay\"] {\n        background: var(--lumo-success-color);\n        color: var(--lumo-success-contrast-color);\n        box-shadow: var(--lumo-box-shadow-l);\n      }\n\n      :host([theme~=\"success\"]) {\n        --_lumo-button-background-color: var(--lumo-shade-20pct);\n        --_lumo-button-color: var(--lumo-success-contrast-color);\n        --_lumo-button-primary-background-color: var(--lumo-success-contrast-color);\n        --_lumo-button-primary-color: var(--lumo-success-text-color);\n      }\n\n      :host([theme~=\"error\"]) [part=\"overlay\"] {\n        background: var(--lumo-error-color);\n        color: var(--lumo-error-contrast-color);\n        box-shadow: var(--lumo-box-shadow-l);\n      }\n\n      :host([theme~=\"error\"]) {\n        --_lumo-button-background-color: var(--lumo-shade-20pct);\n        --_lumo-button-color: var(--lumo-error-contrast-color);\n        --_lumo-button-primary-background-color: var(--lumo-error-contrast-color);\n        --_lumo-button-primary-color: var(--lumo-error-text-color);\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-notification@1.6.1/node_modules/@vaadin/vaadin-notification/src/vaadin-notification.js",
       "source": "/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { templatize } from '@polymer/polymer/lib/utils/templatize.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ThemePropertyMixin } from '@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js';\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n/**\n * The container element for all notifications.\n *\n * @extends PolymerElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n */\nclass NotificationContainer extends ThemableMixin(ElementMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        position: fixed;\n        z-index: 1000;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n        box-sizing: border-box;\n\n        display: flex;\n        flex-direction: column;\n        align-items: stretch;\n        pointer-events: none;\n      }\n\n      [region-group] {\n        flex: 1 1 0%;\n        display: flex;\n      }\n\n      [region-group=\"top\"] {\n        align-items: flex-start;\n      }\n\n      [region-group=\"bottom\"] {\n        align-items: flex-end;\n      }\n\n      [region-group] > [region] {\n        flex: 1 1 0%;\n      }\n\n      @media (max-width: 420px) {\n        [region-group] {\n          flex-direction: column;\n          align-items: stretch;\n        }\n\n        [region-group=\"top\"] {\n          justify-content: flex-start;\n        }\n\n        [region-group=\"bottom\"] {\n          justify-content: flex-end;\n        }\n\n        [region-group] > [region] {\n          flex: initial;\n        }\n      }\n    </style>\n\n    <div region=\"top-stretch\"><slot name=\"top-stretch\"></slot></div>\n    <div region-group=\"top\">\n      <div region=\"top-start\"><slot name=\"top-start\"></slot></div>\n      <div region=\"top-center\"><slot name=\"top-center\"></slot></div>\n      <div region=\"top-end\"><slot name=\"top-end\"></slot></div>\n    </div>\n    <div region=\"middle\"><slot name=\"middle\"></slot></div>\n    <div region-group=\"bottom\">\n      <div region=\"bottom-start\"><slot name=\"bottom-start\"></slot></div>\n      <div region=\"bottom-center\"><slot name=\"bottom-center\"></slot></div>\n      <div region=\"bottom-end\"><slot name=\"bottom-end\"></slot></div>\n    </div>\n    <div region=\"bottom-stretch\"><slot name=\"bottom-stretch\"></slot></div>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-notification-container';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * True when the container is opened\n       * @type {boolean}\n       */\n      opened: {\n        type: Boolean,\n        value: false,\n        observer: '_openedChanged'\n      }\n    };\n  }\n\n  /** @private */\n  _openedChanged(opened) {\n    if (opened) {\n      document.body.appendChild(this);\n      if (this._boundIosResizeListener) {\n        this._detectIosNavbar();\n        window.addEventListener('resize', this._boundIosResizeListener);\n      }\n    } else {\n      document.body.removeChild(this);\n      if (this._boundIosResizeListener) {\n        window.removeEventListener('resize', this._boundIosResizeListener);\n      }\n    }\n  }\n\n  constructor() {\n    super();\n\n    if (/iPad|iPhone|iPod/.test(navigator.userAgent)) {\n      this._boundIosResizeListener = () => this._detectIosNavbar();\n    }\n  }\n\n  /** @private */\n  _detectIosNavbar() {\n    const innerHeight = window.innerHeight;\n    const innerWidth = window.innerWidth;\n    const landscape = innerWidth > innerHeight;\n    const clientHeight = document.documentElement.clientHeight;\n    if (landscape && clientHeight > innerHeight) {\n      this.style.bottom = (clientHeight - innerHeight) + 'px';\n    } else {\n      this.style.bottom = '0';\n    }\n  }\n}\n\n/**\n * The container element for the notification\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `overlay` | The notification container\n * `content` | The content of the notification\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends PolymerElement\n * @mixes ThemableMixin\n */\nclass NotificationCard extends ThemableMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: block;\n      }\n\n      [part=\"overlay\"] {\n        pointer-events: auto;\n      }\n    </style>\n\n    <div part=\"overlay\">\n      <div part=\"content\">\n        <slot></slot>\n      </div>\n    </div>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-notification-card';\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.setAttribute('role', 'alert');\n    this.setAttribute('aria-live', 'polite');\n  }\n}\n\n/**\n *\n * `<vaadin-notification>` is a Web Component providing accessible and customizable notifications (toasts).\n * The content of the notification can be populated in two ways: imperatively by using renderer callback function\n * and declaratively by using Polymer's Templates.\n *\n * ### Rendering\n *\n * By default, the notification uses the content provided by using the renderer callback function.\n *\n * The renderer function provides `root`, `notification` arguments.\n * Generate DOM content, append it to the `root` element and control the state\n * of the host element by accessing `notification`. Before generating new content,\n * users are able to check if there is already content in `root` for reusing it.\n *\n * ```html\n * <vaadin-notification id=\"notification\"></vaadin-notification>\n * ```\n * ```js\n * const notification = document.querySelector('#notification');\n * notification.renderer = function(root) {\n *   root.textContent = \"Your work has been saved\";\n * };\n * ```\n *\n * Renderer is called on the opening of the notification.\n * DOM generated during the renderer call can be reused\n * in the next renderer call and will be provided with the `root` argument.\n * On first call it will be empty.\n *\n * ### Polymer Templates\n *\n * Alternatively, the content can be provided with Polymer's Template.\n * Notification finds the first child template and uses that in case renderer callback function\n * is not provided. You can also set a custom template using the `template` property.\n *\n * ```\n * <vaadin-notification>\n *   <template>\n *     Your work has been saved\n *   </template>\n * </vaadin-notification>\n * ```\n *\n * ### Styling\n *\n * `<vaadin-notification>` uses `<vaadin-notification-card>` internal\n * themable component as the actual visible notification cards. See\n * the stylable parts the\n * [`<vaadin-notification-card>` API](https://vaadin.com/components/vaadin-notification/html-api/elements/Vaadin.NotificationCard).\n *\n * Note: the `theme` attribute value set on `<vaadin-notification>` is\n * propagated to the internal `<vaadin-notification-card>`.\n *\n * @extends PolymerElement\n * @mixes ThemePropertyMixin\n * @mixes ElementMixin\n * @demo demo/index.html\n */\nclass NotificationElement extends ThemePropertyMixin(ElementMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: none;\n      }\n    </style>\n    <vaadin-notification-card id=\"vaadin-notification-card\" theme\\$=\"[[theme]]\">\n    </vaadin-notification-card>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-notification';\n  }\n\n  static get version() {\n    return '1.6.1';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * The duration in milliseconds to show the notification.\n       * Set to `0` or a negative number to disable the notification auto-closing.\n       * @type {number}\n       */\n      duration: {\n        type: Number,\n        value: 5000\n      },\n\n      /**\n       * True if the notification is currently displayed.\n       * @type {boolean}\n       */\n      opened: {\n        type: Boolean,\n        value: false,\n        notify: true,\n        observer: '_openedChanged'\n      },\n\n      /**\n       * Alignment of the notification in the viewport\n       * Valid values are `top-stretch|top-start|top-center|top-end|middle|bottom-start|bottom-center|bottom-end|bottom-stretch`\n       * @type {!NotificationPosition}\n       */\n      position: {\n        type: String,\n        value: 'bottom-start',\n        observer: '_positionChanged'\n      },\n\n      /**\n       * Custom function for rendering the content of the notification.\n       * Receives two arguments:\n       *\n       * - `root` The `<vaadin-notification-card>` DOM element. Append\n       *   your content to it.\n       * - `notification` The reference to the `<vaadin-notification>` element.\n       * @type {!NotificationRenderer | undefined}\n       */\n      renderer: Function,\n\n      /**\n       * The template of the notification card content.\n       * @type {!HTMLTemplateElement | undefined}\n       * @protected\n       */\n      _notificationTemplate: Object\n    };\n  }\n\n  static get observers() {\n    return [\n      '_durationChanged(duration, opened)',\n      '_templateOrRendererChanged(_notificationTemplate, renderer, opened)'\n    ];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this._observer = new FlattenedNodesObserver(this, info => {\n      this._setTemplateFromNodes(info.addedNodes);\n    });\n  }\n\n  /**\n   * @param {!Array<!Node>} nodes\n   * @protected\n   */\n  _setTemplateFromNodes(nodes) {\n    this._notificationTemplate = nodes.filter(node => node.localName && node.localName === 'template')[0] || this._notificationTemplate;\n  }\n\n  /**\n   * Manually invoke existing renderer.\n   */\n  render() {\n    if (typeof this.renderer !== 'function') {\n      return;\n    }\n    this.renderer(this._card, this);\n  }\n\n  /** @private */\n  _removeNewRendererOrTemplate(template, oldTemplate, renderer, oldRenderer) {\n    if (template !== oldTemplate) {\n      this._notificationTemplate = undefined;\n    } else if (renderer !== oldRenderer) {\n      this.renderer = undefined;\n    }\n  }\n\n  /** @private */\n  _templateOrRendererChanged(template, renderer, opened) {\n    if (template && renderer) {\n      this._removeNewRendererOrTemplate(template, this._oldTemplate, renderer, this._oldRenderer);\n      throw new Error('You should only use either a renderer or a template for notification content');\n    }\n\n    this._oldTemplate = template;\n\n    const rendererChanged = this._oldRenderer !== renderer;\n    this._oldRenderer = renderer;\n\n    if (renderer) {\n      this._card = this.$['vaadin-notification-card'];\n\n      if (rendererChanged) {\n        while (this._card.firstChild) {\n          this._card.removeChild(this._card.firstChild);\n        }\n      }\n\n      if (opened) {\n        if (!this._didAnimateNotificationAppend) {\n          this._animatedAppendNotificationCard();\n        }\n        this.render();\n      }\n    }\n  }\n\n  /**\n   * Opens the notification.\n   */\n  open() {\n    this.opened = true;\n  }\n\n  /**\n   * Closes the notification.\n   */\n  close() {\n    this.opened = false;\n  }\n\n  /** @private */\n  get _container() {\n    if (!NotificationElement._container) {\n      NotificationElement._container = document.createElement('vaadin-notification-container');\n      document.body.appendChild(NotificationElement._container);\n    }\n    return NotificationElement._container;\n  }\n\n  /** @private */\n  _openedChanged(opened) {\n    if (opened) {\n      this._container.opened = true;\n      if (!this._instance && !this.renderer) {\n        this._ensureTemplatized();\n      }\n\n      this._animatedAppendNotificationCard();\n      setTimeout(() => this._updateShadyButtonStyles());\n    } else if (this._card) {\n      this._closeNotificationCard();\n    }\n  }\n\n  /** @private */\n  _ensureTemplatized() {\n    this._notificationTemplate = this.querySelector('template') || this._notificationTemplate;\n\n    if (!this._notificationTemplate) {\n      return;\n    }\n\n    if (!this._notificationTemplate._Templatizer) {\n      this._notificationTemplate._Templatizer = templatize(this._notificationTemplate, this, {\n        forwardHostProp: function(prop, value) {\n          if (this._instance) {\n            this._instance.forwardHostProp(prop, value);\n          }\n        }\n      });\n    }\n    this._instance = new this._notificationTemplate._Templatizer({});\n\n    const templateRoot = this._notificationTemplate.getRootNode();\n    const isScoped = templateRoot !== document;\n    this._card = this.$['vaadin-notification-card'];\n    this._cardContent = this._card.shadowRoot.querySelector('[part~=\"content\"]');\n    if (isScoped) {\n\n      if (!this._cardContent.shadowRoot) {\n        this._cardContent.attachShadow({mode: 'open'});\n      }\n      if (window.ShadyCSS && !window.ShadyCSS.nativeShadow) {\n        // Shady DOM\n        var shadyStyleScope = templateRoot.host && templateRoot.host.localName;\n        if (shadyStyleScope && shadyStyleScope.indexOf('-') === -1) {\n          shadyStyleScope = templateRoot.host.getAttribute('is');\n        }\n\n        if (shadyStyleScope) {\n          this._cardContent.setAttribute('is', shadyStyleScope);\n        }\n      } else {\n        // Shadow DOM\n        const scopeCssText = Array.from(templateRoot.querySelectorAll('style'))\n          .reduce((result, style) => result + style.textContent, '')\n          // The overlay root’s :host styles should not apply inside the overlay\n          .replace(/:host/g, ':host-nomatch');\n\n        if (scopeCssText) {\n          const style = document.createElement('style');\n          style.textContent = scopeCssText;\n          this._cardContent.shadowRoot.appendChild(style);\n        }\n      }\n\n      this._cardContent.shadowRoot.appendChild(this._instance.root);\n    } else {\n      this._card.appendChild(this._instance.root);\n    }\n\n    this._card.setAttribute('aria-label', this._card.textContent.trim());\n  }\n\n  /** @private */\n  _animatedAppendNotificationCard() {\n    if (this._card) {\n      this._card.setAttribute('opening', '');\n      this._appendNotificationCard();\n      const listener = () => {\n        this._card.removeEventListener('animationend', listener);\n        this._card.removeAttribute('opening');\n      };\n      this._card.addEventListener('animationend', listener);\n      this._didAnimateNotificationAppend = true;\n    } else {\n      this._didAnimateNotificationAppend = false;\n    }\n  }\n\n  /** @private */\n  _appendNotificationCard() {\n    if (!this._card) {\n      return;\n    }\n\n    if (!this._container.shadowRoot.querySelector(`slot[name=\"${this.position}\"]`)) {\n      window.console.warn(\n        `Invalid alignment parameter provided: position=${this.position}`);\n      return;\n    }\n\n    this._card.slot = this.position;\n    if (this._container.firstElementChild && /top/.test(this.position)) {\n      this._container.insertBefore(this._card, this._container.firstElementChild);\n    } else {\n      this._container.appendChild(this._card);\n    }\n  }\n\n  /** @private */\n  _removeNotificationCard() {\n    this._card.parentNode && this._card.parentNode.removeChild(this._card);\n    this._card.removeAttribute('closing');\n    this._container.opened = Boolean(this._container.firstElementChild);\n  }\n\n  /** @private */\n  _closeNotificationCard() {\n    this._durationTimeoutId && clearTimeout(this._durationTimeoutId);\n    this._animatedRemoveNotificationCard();\n  }\n\n  /** @private */\n  _animatedRemoveNotificationCard() {\n    this._card.setAttribute('closing', '');\n    const name = getComputedStyle(this._card).getPropertyValue('animation-name');\n    if (name && name != 'none') {\n      const listener = () => {\n        this._removeNotificationCard();\n        this._card.removeEventListener('animationend', listener);\n      };\n      this._card.addEventListener('animationend', listener);\n    } else {\n      this._removeNotificationCard();\n    }\n  }\n\n  /** @private */\n  _positionChanged(position) {\n    if (this.opened) {\n      this._animatedAppendNotificationCard();\n    }\n  }\n\n  /** @private */\n  _durationChanged(duration, opened) {\n    if (opened) {\n      clearTimeout(this._durationTimeoutId);\n      if (duration > 0) {\n        this._durationTimeoutId = setTimeout(() => this.close(), duration);\n      }\n    }\n  }\n\n  /** @private */\n  _updateShadyButtonStyles() {\n    // ShadyCSS doesn't propagate CSS properties to slotted children,\n    // so this is done manually to allow vaadin-buttons to be themed\n    // correctly on IE11\n    if (window.ShadyCSS && !this.__buttonStylesPending) {\n      customElements.whenDefined('vaadin-button').then(() => {\n        const isButton = node => node instanceof customElements.get('vaadin-button');\n        Array.from(this._card.querySelectorAll('*')).filter(isButton).forEach(btn => {\n          const styles = ['--_lumo-button-color', '--_lumo-button-background-color',\n            '--_lumo-button-primary-color', '--_lumo-button-primary-background-color']\n            .reduce((obj, propName) => {\n              const propValue = window.ShadyCSS.getComputedStyleValue(this._card, propName);\n              propValue && (obj[propName] = propValue);\n              return obj;\n            }, {});\n          btn.updateStyles(styles);\n        });\n        this.__buttonStylesPending = false;\n      });\n      this.__buttonStylesPending = true;\n    }\n  }\n}\n\ncustomElements.define(NotificationContainer.is, NotificationContainer);\ncustomElements.define(NotificationCard.is, NotificationCard);\ncustomElements.define(NotificationElement.is, NotificationElement);\n\nexport { NotificationElement };\n"
      }
     ]
    },
    {
     "id": 170,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-ordered-layout@1.4.0/node_modules/@vaadin/vaadin-ordered-layout/vaadin-scroller.js + 2 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-ordered-layout@1.4.0/node_modules/@vaadin/vaadin-ordered-layout/vaadin-scroller.js",
       "source": "import './theme/lumo/vaadin-scroller.js';\nexport * from './src/vaadin-scroller.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-ordered-layout@1.4.0/node_modules/@vaadin/vaadin-ordered-layout/src/vaadin-scroller.js",
       "source": "/**\n@license\nCopyright (c) 2020 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n/**\n * `<vaadin-scroller>` provides a simple way to enable scrolling when its content is overflowing.\n *\n * ```\n * <vaadin-scroller>\n *   <div>Content</div>\n * </vaadin-scroller>\n * ```\n *\n * @extends PolymerElement\n * @mixes ThemableMixin\n * @mixes ElementMixin\n */\nclass ScrollerElement extends ElementMixin(ThemableMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      :host {\n        display: block;\n        overflow: auto;\n      }\n\n      :host([scroll-direction='vertical']) {\n        overflow-x: hidden;\n      }\n\n      :host([scroll-direction='horizontal']) {\n        overflow-y: hidden;\n      }\n\n      :host([scroll-direction='none']) {\n        overflow: hidden;\n      }\n    </style>\n\n    <slot></slot>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-scroller';\n  }\n\n  static get properties() {\n    return {\n      /**\n      * This property indicates the scroll direction. Supported values are `vertical`, `horizontal`, `none`.\n      * When `scrollDirection` is undefined scrollbars will be shown in both directions.\n      * @type {!ScrollerScrollDirection}\n      */\n      scrollDirection: {\n        type: String,\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  static get version() {\n    return '1.4.0';\n  }\n}\n\ncustomElements.define(ScrollerElement.is, ScrollerElement);\n\nexport { ScrollerElement };\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-ordered-layout@1.4.0/node_modules/@vaadin/vaadin-ordered-layout/theme/lumo/vaadin-scroller.js",
       "source": "import '../../src/vaadin-scroller.js';\n"
      }
     ]
    },
    {
     "id": 171,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-radio-button@1.5.1/node_modules/@vaadin/vaadin-radio-button/theme/lumo/vaadin-radio-group.js + 2 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-radio-button@1.5.1/node_modules/@vaadin/vaadin-radio-button/theme/lumo/vaadin-radio-group.js",
       "source": "import './vaadin-radio-button.js';\nimport './vaadin-radio-group-styles.js';\nimport '../../src/vaadin-radio-group.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-radio-button@1.5.1/node_modules/@vaadin/vaadin-radio-button/theme/lumo/vaadin-radio-group-styles.js",
       "source": "import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/required-field.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-radio-group\" theme-for=\"vaadin-radio-group\">\n  <template>\n    <style include=\"lumo-required-field\">\n      :host {\n        color: var(--lumo-body-text-color);\n        font-size: var(--lumo-font-size-m);\n        font-family: var(--lumo-font-family);\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        -webkit-tap-highlight-color: transparent;\n        padding: var(--lumo-space-xs) 0;\n      }\n\n      :host::before {\n        height: var(--lumo-size-m);\n        box-sizing: border-box;\n        display: inline-flex;\n        align-items: center;\n      }\n\n      :host([theme~=\"vertical\"]) [part=\"group-field\"] {\n        display: flex;\n        flex-direction: column;\n      }\n\n      [part=\"label\"] {\n        padding-bottom: 0.7em;\n      }\n\n      :host([focused]:not([readonly])) [part=\"label\"] {\n        color: var(--lumo-primary-text-color);\n      }\n\n      :host(:hover:not([readonly]):not([focused])) [part=\"label\"],\n      :host(:hover:not([readonly])) [part=\"helper-text\"],\n      :host(:hover:not([readonly])) [part=\"helper-text\"] ::slotted(*) {\n        color: var(--lumo-body-text-color);\n      }\n\n      :host([has-helper]) [part=\"helper-text\"]::before {\n        content: \"\";\n        display: block;\n        height: 0.4em;\n      }\n\n      [part=\"helper-text\"],\n      [part=\"helper-text\"] ::slotted(*) {\n        display: block;\n        color: var(--lumo-secondary-text-color);\n        font-size: var(--lumo-font-size-xs);\n        line-height: var(--lumo-line-height-xs);\n        margin-left: calc(var(--lumo-border-radius-m) / 4);\n        transition: color 0.2s;\n      }\n\n      /* helper-text position */\n\n      :host([has-helper][theme~=\"helper-above-field\"]) [part=\"helper-text\"]::before {\n        display: none;\n      }\n\n      :host([has-helper][theme~=\"helper-above-field\"]) [part=\"helper-text\"]::after {\n        content: \"\";\n        display: block;\n        height: 0.4em;\n      }\n\n      :host([has-helper][theme~=\"helper-above-field\"]) [part=\"label\"] {\n        order: 0;\n        padding-bottom: 0.4em;\n      }\n\n      :host([has-helper][theme~=\"helper-above-field\"]) [part=\"helper-text\"] {\n        order: 1;\n      }\n\n      :host([has-helper][theme~=\"helper-above-field\"]) [part=\"group-field\"] {\n        order: 2;\n      }\n\n      :host([has-helper][theme~=\"helper-above-field\"]) [part=\"error-message\"] {\n        order: 3;\n      }\n\n      /* Touch device adjustment */\n      @media (pointer: coarse) {\n        :host(:hover:not([readonly]):not([focused])) [part=\"label\"] {\n          color: var(--lumo-secondary-text-color);\n        }\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-radio-button@1.5.1/node_modules/@vaadin/vaadin-radio-button/src/vaadin-radio-group.js",
       "source": "/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { DirMixin } from '@vaadin/vaadin-element-mixin/vaadin-dir-mixin.js';\nimport { RadioButtonElement } from './vaadin-radio-button.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n/**\n * `<vaadin-radio-group>` is a Web Component for grouping vaadin-radio-buttons.\n *\n * ```html\n * <vaadin-radio-group>\n *   <vaadin-radio-button name=\"foo\">Foo</vaadin-radio-button>\n *   <vaadin-radio-button name=\"bar\">Bar</vaadin-radio-button>\n *   <vaadin-radio-button name=\"baz\">Baz</vaadin-radio-button>\n * </vaadin-radio-group>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `label` | The label element\n * `group-field` | The element that wraps radio-buttons\n *\n * The following state attributes are available for styling:\n *\n * Attribute  | Description | Part name\n * -----------|-------------|------------\n * `disabled`   | Set when the radio group and its children are disabled. | :host\n * `readonly` | Set to a readonly radio group | :host\n * `invalid` | Set when the element is invalid | :host\n * `has-label` | Set when the element has a label | :host\n * `has-value` | Set when the element has a value | :host\n * `has-helper` | Set when the element has helper text or slot | :host\n * `has-error-message` | Set when the element has an error message, regardless if the field is valid or not | :host\n * `focused` | Set when the element contains focus | :host\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends PolymerElement\n * @mixes ThemableMixin\n * @mixes DirMixin\n * @element vaadin-radio-group\n * @demo demo/index.html\n */\nclass RadioGroupElement extends ThemableMixin(DirMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: inline-flex;\n\n        /* Prevent horizontal overflow in IE 11 instead of wrapping radios */\n        max-width: 100%;\n      }\n\n      :host::before {\n        content: \"\\\\2003\";\n        width: 0;\n        display: inline-block;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      .vaadin-group-field-container {\n        display: flex;\n        flex-direction: column;\n\n        /* Prevent horizontal overflow in IE 11 instead of wrapping radios */\n        width: 100%;\n      }\n\n      [part=\"label\"]:empty {\n        display: none;\n      }\n    </style>\n\n    <div class=\"vaadin-group-field-container\">\n      <label part=\"label\">[[label]]</label>\n\n      <div part=\"group-field\">\n        <slot id=\"slot\"></slot>\n      </div>\n\n      <div part=\"helper-text\" on-click=\"focus\" id=\"[[_helperTextId]]\" aria-live=\"assertive\" aria-hidden\\$=\"[[_getHelperTextAriaHidden(helperText, _helperTextId, _hasSlottedHelper)]]\">\n        <slot name=\"helper\">[[helperText]]</slot>\n      </div>\n\n      <div part=\"error-message\" id=\"[[_errorId]]\" aria-live=\"assertive\" aria-hidden\\$=\"[[_getErrorMessageAriaHidden(invalid, errorMessage, _errorId)]]\">[[errorMessage]]</div>\n    </div>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-radio-group';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * The current disabled state of the radio group. True if group and all internal radio buttons are disabled.\n       */\n      disabled: {\n        type: Boolean,\n        reflectToAttribute: true,\n        observer: '_disabledChanged'\n      },\n\n      /**\n       * This attribute indicates that the user cannot modify the value of the control.\n       */\n      readonly: {\n        type: Boolean,\n        reflectToAttribute: true,\n        observer: '_readonlyChanged'\n      },\n\n      /**\n       * This property is set to true when the value is invalid.\n       * @type {boolean}\n       */\n      invalid: {\n        type: Boolean,\n        reflectToAttribute: true,\n        notify: true,\n        value: false\n      },\n\n      /**\n       * Specifies that the user must fill in a value.\n       */\n      required: {\n        type: Boolean,\n        reflectToAttribute: true\n      },\n\n      /**\n       * Error to show when the input value is invalid.\n       * @attr {string} error-message\n       * @type {string}\n       */\n      errorMessage: {\n        type: String,\n        value: '',\n        observer: '_errorMessageChanged'\n      },\n\n      /** @private */\n      _errorId: {\n        type: String\n      },\n\n      /** @private */\n      _helperTextId: {\n        type: String\n      },\n\n      /** @private */\n      _hasSlottedHelper: Boolean,\n\n      /** @private */\n      _checkedButton: {\n        type: Object\n      },\n\n      /**\n       * String used for the label element.\n       * @type {string}\n       */\n      label: {\n        type: String,\n        value: '',\n        observer: '_labelChanged'\n      },\n\n      /**\n       * String used for the helper text.\n       * @attr {string} helper-text\n       * @type {string | null}\n       */\n      helperText: {\n        type: String,\n        value: '',\n        observer: '_helperTextChanged'\n      },\n\n      /**\n       * Value of the radio group.\n       */\n      value: {\n        type: String,\n        notify: true,\n        observer: '_valueChanged'\n      }\n    };\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this._addListeners();\n\n    this._observer = new FlattenedNodesObserver(this, info => {\n      const checkedChangedListener = e => {\n        if (e.target.checked) {\n          this._changeSelectedButton(e.target);\n        }\n      };\n\n      // reverse() is used to set the last checked radio button value to radio group value\n      this._filterRadioButtons(info.addedNodes).reverse().forEach(button => {\n        button.addEventListener('checked-changed', checkedChangedListener);\n        if (this.disabled) {\n          button.disabled = true;\n        }\n        if (button.checked) {\n          this._changeSelectedButton(button);\n        }\n      });\n\n      this._filterRadioButtons(info.removedNodes).forEach(button => {\n        button.removeEventListener('checked-changed', checkedChangedListener);\n        if (button == this._checkedButton) {\n          this.value = undefined;\n        }\n      });\n\n      this._setOrToggleHasHelperAttribute();\n    });\n\n    if (this._radioButtons.length) {\n      this._setFocusable(0);\n    }\n\n    this.setAttribute('role', 'radiogroup');\n\n    const uniqueId = RadioGroupElement._uniqueId = 1 + RadioGroupElement._uniqueId || 0;\n    this._errorId = `${this.constructor.is}-error-${uniqueId}`;\n    this._helperTextId = `${this.constructor.is}-helper-${uniqueId}`;\n  }\n\n  /** @private */\n  get _radioButtons() {\n    return this._filterRadioButtons(this.querySelectorAll('*'));\n  }\n\n  /**\n   * @param {boolean} focused\n   * @protected\n   */\n  _setFocused(focused) {\n    if (focused) {\n      this.setAttribute('focused', '');\n    } else {\n      this.removeAttribute('focused');\n    }\n  }\n\n  /** @private */\n  _filterRadioButtons(nodes) {\n    return Array.from(nodes)\n      .filter(child => child instanceof RadioButtonElement);\n  }\n\n  /** @private */\n  _disabledChanged(disabled) {\n    this.setAttribute('aria-disabled', disabled);\n    this._updateDisableButtons();\n  }\n\n  /** @private */\n  _updateDisableButtons() {\n    this._radioButtons.forEach(button => {\n      if (this.disabled) {\n        button.disabled = true;\n      } else if (this.readonly) {\n        // it's not possible to set readonly to radio buttons, but we can\n        // unchecked ones instead.\n        button.disabled = button !== this._checkedButton && this.readonly;\n      } else {\n        button.disabled = false;\n      }\n    });\n  }\n\n  /** @private */\n  _readonlyChanged(newV, oldV) {\n    (newV || oldV) && this._updateDisableButtons();\n  }\n\n  /** @private */\n  _addListeners() {\n    this.addEventListener('keydown', e => {\n      // if e.target is vaadin-radio-group then assign to checkedRadioButton currently checked radio button\n      var checkedRadioButton = (e.target == this) ? this._checkedButton : e.target;\n      const horizontalRTL = this.getAttribute('dir') === 'rtl'\n        && this.theme !== 'vertical';\n\n      // LEFT, UP - select previous radio button\n      if (e.keyCode === 37 || e.keyCode === 38) {\n        e.preventDefault();\n        this._selectIncButton(horizontalRTL, checkedRadioButton);\n      }\n\n      // RIGHT, DOWN - select next radio button\n      if (e.keyCode === 39 || e.keyCode === 40) {\n        e.preventDefault();\n        this._selectIncButton(!horizontalRTL, checkedRadioButton);\n      }\n    });\n\n    this.addEventListener('focusin', () => this._setFocused(this._containsFocus()));\n\n    // Need to check e.composed as a workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=1472887\n    // otherwise FF runs validation on keyboard focus\n    this.addEventListener('focusout', e => {\n      e.composed && this.validate();\n      this._setFocused(false);\n    });\n  }\n\n  /**\n   * @param {boolean} next\n   * @param {!RadioButtonElement} checkedRadioButton\n   * @protected\n   */\n  _selectIncButton(next, checkedRadioButton) {\n    if (next) {\n      this._selectNextButton(checkedRadioButton);\n    } else {\n      this._selectPreviousButton(checkedRadioButton);\n    }\n  }\n\n  /**\n   * @param {!RadioButtonElement} element\n   * @param {boolean=} setFocusRing\n   * @protected\n   */\n  _selectButton(element, setFocusRing) {\n    if (this._containsFocus()) {\n      element.focus();\n      if (setFocusRing) {\n        element.setAttribute('focus-ring', '');\n      }\n    }\n    this._changeSelectedButton(element, setFocusRing);\n  }\n\n  /**\n   * @return {boolean}\n   * @protected\n   */\n  _containsFocus() {\n    const root = this.getRootNode();\n    // Safari 9 needs polyfilled `_activeElement` to return correct node\n    const activeElement = root._activeElement !== undefined ? root._activeElement : root.activeElement;\n    return this.contains(activeElement);\n  }\n\n  /**\n   * @return {boolean}\n   * @protected\n   */\n  _hasEnabledButtons() {\n    return !this._radioButtons.every((button) => button.disabled);\n  }\n\n  /**\n   * @param {!RadioButtonElement} element\n   * @protected\n   */\n  _selectNextButton(element) {\n    if (!this._hasEnabledButtons()) {\n      return;\n    }\n\n    var nextButton = element.nextElementSibling || this.firstElementChild;\n\n    if (nextButton.disabled) {\n      this._selectNextButton(nextButton);\n    } else {\n      this._selectButton(nextButton, true);\n    }\n  }\n\n  /**\n   * @param {!RadioButtonElement} element\n   * @protected\n   */\n  _selectPreviousButton(element) {\n    if (!this._hasEnabledButtons()) {\n      return;\n    }\n\n    var previousButton = element.previousElementSibling || this.lastElementChild;\n\n    if (previousButton.disabled) {\n      this._selectPreviousButton(previousButton);\n    } else {\n      this._selectButton(previousButton, true);\n    }\n  }\n\n  /**\n   * @param {RadioButtonElement} button\n   * @param {boolean=} fireChangeEvent\n   * @protected\n   */\n  _changeSelectedButton(button, fireChangeEvent) {\n    if (this._checkedButton === button) {\n      return;\n    }\n\n    this._checkedButton = button;\n\n    if (this._checkedButton) {\n      this.value = this._checkedButton.value;\n    }\n\n    this._radioButtons.forEach(button => {\n      if (button === this._checkedButton) {\n        if (fireChangeEvent) {\n          button.click();\n        } else {\n          button.checked = true;\n        }\n      } else {\n        button.checked = false;\n      }\n    });\n\n    this.validate();\n    this.readonly && this._updateDisableButtons();\n    button && this._setFocusable(this._radioButtons.indexOf(button));\n  }\n\n  /** @private */\n  _valueChanged(newV, oldV) {\n    if (oldV && (newV === '' || newV === null || newV === undefined)) {\n      this._changeSelectedButton(null);\n      this.removeAttribute('has-value');\n      return;\n    }\n\n    if (!this._checkedButton || newV != this._checkedButton.value) {\n      const newCheckedButton = this._radioButtons.filter(button => button.value == newV)[0];\n\n      if (newCheckedButton) {\n        this._selectButton(newCheckedButton);\n        this.setAttribute('has-value', '');\n      } else {\n        console.warn(`No <vaadin-radio-button> with value ${newV} found.`);\n      }\n    }\n  }\n\n  /**\n   * Returns true if `value` is valid.\n   * `<iron-form>` uses this to check the validity or all its elements.\n   *\n   * @return {boolean} True if the value is valid.\n   */\n  validate() {\n    return !(this.invalid = !this.checkValidity());\n  }\n\n  /**\n   * Returns true if the current input value satisfies all constraints (if any)\n   * @return {boolean}\n   */\n  checkValidity() {\n    return !this.required || !!this.value;\n  }\n\n  /**\n   * @param {number} idx\n   * @protected\n   */\n  _setFocusable(idx) {\n    const items = this._radioButtons;\n    items.forEach(e => e.tabindex = e === items[idx] ? 0 : -1);\n  }\n\n  /** @private */\n  _labelChanged(label) {\n    this._setOrToggleAttribute('has-label', !!label);\n  }\n\n  /** @private */\n  _errorMessageChanged(errorMessage) {\n    this._setOrToggleAttribute('has-error-message', !!errorMessage);\n  }\n\n  /** @private */\n  _helperTextChanged(helperText) {\n    this._setOrToggleAttribute('has-helper', !!helperText);\n  }\n\n  /** @private */\n  _setOrToggleAttribute(name, value) {\n    if (!name) {\n      return;\n    }\n\n    if (value) {\n      this.setAttribute(name, (typeof value === 'boolean') ? '' : value);\n    } else {\n      this.removeAttribute(name);\n    }\n  }\n\n  /** @private */\n  _setOrToggleHasHelperAttribute() {\n    const slottedNodes = this.shadowRoot.querySelector(`[name=\"helper\"]`).assignedNodes();\n    // Only has slotted helper if not a text node\n    // Text nodes are added by the helperText prop and not the helper slot\n    // The filter is added due to shady DOM triggering this slotchange event on helperText prop change\n    this._hasSlottedHelper = slottedNodes.filter(node => node.nodeType !== 3).length > 0;\n\n    this._setOrToggleAttribute('has-helper', this._hasSlottedHelper ? 'slotted' : !!this.helperText);\n  }\n\n  /** @private */\n  _getActiveErrorId(invalid, errorMessage, errorId) {\n    return errorMessage && invalid ? errorId : undefined;\n  }\n\n  /** @private */\n  _getErrorMessageAriaHidden(invalid, errorMessage, errorId) {\n    return (!this._getActiveErrorId(invalid, errorMessage, errorId)).toString();\n  }\n\n  _getHelperTextAriaHidden(helperText, helperTextId, hasSlottedHelper) {\n    return (!(helperText || hasSlottedHelper)).toString();\n  }\n}\n\ncustomElements.define(RadioGroupElement.is, RadioGroupElement);\n\nexport { RadioGroupElement };\n"
      }
     ]
    },
    {
     "id": 172,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-split-layout@4.3.0/node_modules/@vaadin/vaadin-split-layout/theme/lumo/vaadin-split-layout.js + 2 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-split-layout@4.3.0/node_modules/@vaadin/vaadin-split-layout/theme/lumo/vaadin-split-layout.js",
       "source": "import './vaadin-split-layout-styles.js';\nimport '../../src/vaadin-split-layout.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-split-layout@4.3.0/node_modules/@vaadin/vaadin-split-layout/theme/lumo/vaadin-split-layout-styles.js",
       "source": "import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-split-layout\" theme-for=\"vaadin-split-layout\">\n  <template>\n    <style>\n      [part=\"splitter\"] {\n        min-width: var(--lumo-space-s);\n        min-height: var(--lumo-space-s);\n        background-color: var(--lumo-contrast-5pct);\n        transition: 0.1s background-color;\n      }\n\n      [part=\"handle\"] {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: var(--lumo-size-m);\n        height: var(--lumo-size-m);\n      }\n\n      [part=\"handle\"]::after {\n        content: \"\";\n        display: block;\n        width: 4px;\n        height: 100%;\n        max-width: 100%;\n        max-height: 100%;\n        border-radius: var(--lumo-border-radius);\n        background-color: var(--lumo-contrast-30pct);\n        transition: 0.1s opacity, 0.1s background-color;\n      }\n\n      :host([orientation=\"vertical\"]) [part=\"handle\"]::after {\n        width: 100%;\n        height: 4px;\n      }\n\n      /* Hover style */\n\n      [part=\"splitter\"]:hover [part=\"handle\"]::after {\n        background-color: var(--lumo-contrast-40pct);\n      }\n\n      /* Disable hover for touch devices */\n      @media (pointer: coarse) {\n        [part=\"splitter\"]:hover [part=\"handle\"]::after {\n          background-color: var(--lumo-contrast-30pct);\n        }\n      }\n\n      /* Active style */\n\n      [part=\"splitter\"]:active [part=\"handle\"]::after {\n        background-color: var(--lumo-contrast-50pct);\n      }\n\n      /* Small/minimal */\n\n      :host([theme~=\"small\"]) > [part=\"splitter\"] {\n        border-left: 1px solid var(--lumo-contrast-10pct);\n        border-top: 1px solid var(--lumo-contrast-10pct);\n      }\n\n      :host([theme~=\"small\"]) > [part=\"splitter\"],\n      :host([theme~=\"minimal\"]) > [part=\"splitter\"] {\n        min-width: 0;\n        min-height: 0;\n        background-color: transparent;\n      }\n\n      :host([theme~=\"small\"]) > [part=\"splitter\"]::after,\n      :host([theme~=\"minimal\"]) > [part=\"splitter\"]::after {\n        content: \"\";\n        position: absolute;\n        top: -4px;\n        right: -4px;\n        bottom: -4px;\n        left: -4px;\n      }\n\n      :host([theme~=\"small\"]) > [part=\"splitter\"] > [part=\"handle\"]::after,\n      :host([theme~=\"minimal\"]) > [part=\"splitter\"] > [part=\"handle\"]::after {\n        opacity: 0;\n      }\n\n      :host([theme~=\"small\"]) > [part=\"splitter\"]:hover > [part=\"handle\"]::after,\n      :host([theme~=\"small\"]) > [part=\"splitter\"]:active > [part=\"handle\"]::after,\n      :host([theme~=\"minimal\"]) > [part=\"splitter\"]:hover > [part=\"handle\"]::after,\n      :host([theme~=\"minimal\"]) > [part=\"splitter\"]:active > [part=\"handle\"]::after {\n        opacity: 1;\n      }\n\n      /* RTL specific styles */\n\n      :host([theme~=\"small\"][dir=\"rtl\"]) > [part=\"splitter\"] {\n        border-left: auto;\n        border-right: 1px solid var(--lumo-contrast-10pct);\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-split-layout@4.3.0/node_modules/@vaadin/vaadin-split-layout/src/vaadin-split-layout.js",
       "source": "/**\n@license\nCopyright (c) 2016 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners.js';\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { IronResizableBehavior } from '@polymer/iron-resizable-behavior/iron-resizable-behavior.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { mixinBehaviors } from '@polymer/polymer/lib/legacy/class.js';\n/**\n * `<vaadin-split-layout>` is a Web Component implementing a split layout for two\n * content elements with a draggable splitter between them.\n *\n * ```html\n * <vaadin-split-layout>\n *   <div>First content element</div>\n *   <div>Second content element</div>\n * </vaadin-split-layout>\n * ```\n *\n * ### Horizontal and Vertical Layouts\n *\n * By default, the split's orientation is horizontal, meaning that the content elements are\n * positioned side by side in a flex container with a horizontal layout.\n *\n * You can change the split mode to vertical by setting the `orientation` attribute to `\"vertical\"`:\n *\n * ```html\n * <vaadin-split-layout orientation=\"vertical\">\n *   <div>Content on the top</div>\n *   <div>Content on the bottom</div>\n * </vaadin-split-layout>\n * ```\n *\n * ### Layouts Combination\n *\n * For the layout contents, we usually use `<div>` elements in the examples,\n * although you can use any other elements as well.\n *\n * For instance, in order to have a nested vertical split layout inside a\n * horizontal one, you can include `<vaadin-split-layout>` as a content element\n * inside another split layout:\n *\n * ```html\n * <vaadin-split-layout>\n *   <div>First content element</div>\n *   <vaadin-split-layout orientation=\"vertical\">\n *     <div>Second content element</div>\n *     <div>Third content element</div>\n *   </vaadin-split-layout>\n * </vaadin-split-layout>\n * ```\n *\n * You can also trigger the vertical mode in JavaScript by setting the property:\n * `splitLayout.orientation = \"vertical\";`.\n *\n * ### Split Layout Element Height\n *\n * `<vaadin-split-layout>` element itself is a flex container. It does not inherit\n * the parent height by default, but rather sets its height depending on the\n * content.\n *\n * You can use CSS to set the fixed height for the split layout, as usual with any\n * block element:\n *\n * ```html\n * <vaadin-split-layout style=\"height: 200px;\">\n *   <div>First content element</div>\n *   <div>Second content element</div>\n * </vaadin-split-layout>\n * ```\n *\n * It is possible to define percentage height as well. Note that you have to set\n * the parent height in order to make percentages work correctly. In the following\n * example, the `<body>` is resized to fill the entire viewport, and the\n * `<vaadin-split-layout>` element is set to take 100% height of the `<body>`:\n *\n * ```html\n * <body style=\"height: 100vh; margin: 0;\">\n *   <vaadin-split-layout style=\"height: 100%;\">\n *     <div>First</div>\n *     <div>Second</div>\n *   </vaadin-split-layout>\n * </body>\n * ```\n *\n * Alternatively, you can use a flexbox layout to make `<vaadin-split-layout>`\n * fill up the parent:\n *\n * ```html\n * <body style=\"height: 100vh; margin: 0; display: flex;\">\n *   <vaadin-split-layout style=\"flex: 1;\">\n *     <div>First</div>\n *     <div>Second</div>\n *   </vaadin-split-layout>\n * </body>\n * ```\n *\n * ### Initial Splitter Position\n *\n * The initial splitter position is determined from the sizes of the content elements\n * inside the split layout. Therefore, changing `width` on the content elements\n * affects the initial splitter position for the horizontal layouts, while `height`\n * affects the vertical ones.\n *\n * Note that when the total size of the content elements does not fit the layout,\n * the content elements are scaled proportionally.\n *\n * When setting initial sizes with relative units, such as percentages, it is\n * recommended to assign the size for both content elements:\n *\n * ```html\n * <vaadin-split-layout>\n *   <div style=\"width: 75%;\">Three fourths</div>\n *   <div style=\"width: 25%;\">One fourth</div>\n * </vaadin-split-layout>\n * ```\n *\n * ### Size Limits\n *\n * The `min-width`/`min-height`, and `max-width`/`max-height` CSS size values\n * for the content elements are respected and used to limit the splitter position\n * when it is dragged.\n *\n * It is preferred to set the limits only for a single content element, in order\n * to avoid size conflicts:\n *\n * ```html\n * <vaadin-split-layout>\n *   <div style=\"min-width: 50px; max-width: 150px;\">First</div>\n *   <div>Second</div>\n * </vaadin-split-layout>\n * ```\n *\n * ### Resize Notification\n *\n * This element implements `IronResizableBehavior` to notify the nested resizables\n * when the splitter is dragged. In order to define a resizable and receive that\n * notification in a nested element, include `IronResizableBehavior` and listen\n * for the `iron-resize` event.\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description | Theme for Element\n * ----------------|----------------|----------------\n * `splitter` | Split element | vaadin-split-layout\n * `handle` | The handle of the splitter | vaadin-split-layout\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends PolymerElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @mixes GestureEventListeners\n * @demo demo/index.html\n */\nclass SplitLayoutElement extends\n  ElementMixin(\n    ThemableMixin(\n      GestureEventListeners(\n        mixinBehaviors([IronResizableBehavior], PolymerElement)))) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: flex;\n        overflow: hidden !important;\n        transform: translateZ(0);\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      :host([orientation=\"vertical\"]) {\n        flex-direction: column;\n      }\n\n      :host ::slotted(*) {\n        flex: 1 1 auto;\n        overflow: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      [part=\"splitter\"] {\n        flex: none;\n        position: relative;\n        z-index: 1;\n        overflow: visible;\n        min-width: 8px;\n        min-height: 8px;\n      }\n\n      :host(:not([orientation=\"vertical\"])) > [part=\"splitter\"] {\n        cursor: ew-resize;\n      }\n\n      :host([orientation=\"vertical\"]) > [part=\"splitter\"] {\n        cursor: ns-resize;\n      }\n\n      [part=\"handle\"] {\n        width: 40px;\n        height: 40px;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate3d(-50%, -50%, 0);\n      }\n    </style>\n    <slot id=\"primary\" name=\"primary\"></slot>\n    <div part=\"splitter\" id=\"splitter\" on-track=\"_onHandleTrack\" on-down=\"_setPointerEventsNone\" on-up=\"_restorePointerEvents\">\n      <div part=\"handle\"></div>\n    </div>\n    <slot id=\"secondary\" name=\"secondary\"></slot>\n\n    <div hidden=\"\">\n      <!-- Workaround to fix a Shady style scoping issue caused by dynamic slot naming of the child elements (primary/secondary) -->\n      <slot></slot>\n    </div>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-split-layout';\n  }\n\n  static get version() {\n    return '4.3.0';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * The split layout's orientation. Possible values are: `horizontal|vertical`.\n       * @type {!SplitLayoutOrientation}\n       */\n      orientation: {\n        type: String,\n        reflectToAttribute: true,\n        value: 'horizontal'\n      },\n\n      /** @private */\n      _previousPrimaryPointerEvents: String,\n\n      /** @private */\n      _previousSecondaryPointerEvents: String\n    };\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    new FlattenedNodesObserver(this, this._processChildren);\n  }\n\n  /** @private */\n  _processChildren() {\n    this.getEffectiveChildren().forEach((child, i) => {\n      if (i === 0) {\n        this._primaryChild = child;\n        child.setAttribute('slot', 'primary');\n      } else if (i == 1) {\n        this._secondaryChild = child;\n        child.setAttribute('slot', 'secondary');\n      } else {\n        child.removeAttribute('slot');\n      }\n    });\n  }\n\n  /** @private */\n  _setFlexBasis(element, flexBasis, containerSize) {\n    flexBasis = Math.max(0, Math.min(flexBasis, containerSize));\n    if (flexBasis === 0) {\n      // Pure zero does not play well in Safari\n      flexBasis = 0.000001;\n    }\n    element.style.flex = '1 1 ' + flexBasis + 'px';\n  }\n\n  /** @private */\n  _setPointerEventsNone(event) {\n    if (!this._primaryChild || !this._secondaryChild) {\n      return;\n    }\n    this._previousPrimaryPointerEvents = this._primaryChild.style.pointerEvents;\n    this._previousSecondaryPointerEvents = this._secondaryChild.style.pointerEvents;\n    this._primaryChild.style.pointerEvents = 'none';\n    this._secondaryChild.style.pointerEvents = 'none';\n\n    event.preventDefault();\n  }\n\n  /** @private */\n  _restorePointerEvents() {\n    if (!this._primaryChild || !this._secondaryChild) {\n      return;\n    }\n    this._primaryChild.style.pointerEvents = this._previousPrimaryPointerEvents;\n    this._secondaryChild.style.pointerEvents = this._previousSecondaryPointerEvents;\n  }\n\n  /** @private */\n  _onHandleTrack(event) {\n    if (!this._primaryChild || !this._secondaryChild) {\n      return;\n    }\n\n    var size = this.orientation === 'vertical' ? 'height' : 'width';\n    if (event.detail.state === 'start') {\n      this._startSize = {\n        container: this.getBoundingClientRect()[size] - this.$.splitter.getBoundingClientRect()[size],\n        primary: this._primaryChild.getBoundingClientRect()[size],\n        secondary: this._secondaryChild.getBoundingClientRect()[size]\n      };\n\n      return;\n    }\n\n    var distance = this.orientation === 'vertical' ? event.detail.dy : event.detail.dx;\n    const isRtl = this.orientation !== 'vertical' && this.getAttribute('dir') === 'rtl';\n    const dirDistance = isRtl ? -distance : distance;\n\n    this._setFlexBasis(this._primaryChild, this._startSize.primary + dirDistance, this._startSize.container);\n    this._setFlexBasis(this._secondaryChild, this._startSize.secondary - dirDistance, this._startSize.container);\n\n    this.notifyResize();\n\n    if (event.detail.state === 'end') {\n      this.dispatchEvent(new CustomEvent('splitter-dragend'));\n\n      delete this._startSize;\n    }\n  }\n\n  /**\n   * Can be called to manually notify a resizable and its descendant\n   * resizables of a resize change.\n   */\n  notifyResize() {\n    // NOTE: we have this method here to include it to TypeScript definitions.\n    // gen-typescript-declarations does not generate types for `mixinBehaviors`\n    super.notifyResize();\n  }\n\n  /**\n   * Fired when the splitter is dragged. Non-bubbling. Fired for the splitter\n   * element and any nested elements with `IronResizableBehavior`.\n   *\n   * @event iron-resize\n   */\n\n  /**\n   * Fired after dragging the splitter have ended.\n   *\n   * @event splitter-dragend\n   */\n}\n\ncustomElements.define(SplitLayoutElement.is, SplitLayoutElement);\n\nexport { SplitLayoutElement };\n"
      }
     ]
    },
    {
     "id": 173,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-tabs@4.0.0/node_modules/@vaadin/vaadin-tabs/theme/lumo/vaadin-tabs.js + 2 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-tabs@4.0.0/node_modules/@vaadin/vaadin-tabs/theme/lumo/vaadin-tabs.js",
       "source": "import './vaadin-tab.js';\nimport './vaadin-tabs-styles.js';\nimport '../../src/vaadin-tabs.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-tabs@4.0.0/node_modules/@vaadin/vaadin-tabs/theme/lumo/vaadin-tabs-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\n\nregisterStyles(\n  'vaadin-tabs',\n  css`\n    :host {\n      -webkit-tap-highlight-color: transparent;\n    }\n\n    :host(:not([orientation='vertical'])) {\n      box-shadow: inset 0 -1px 0 0 var(--lumo-contrast-10pct);\n      position: relative;\n      min-height: var(--lumo-size-l);\n    }\n\n    :host([orientation='horizontal']) [part='tabs'] ::slotted(vaadin-tab:not([theme~='icon-on-top'])) {\n      justify-content: center;\n    }\n\n    :host([orientation='vertical']) {\n      box-shadow: -1px 0 0 0 var(--lumo-contrast-10pct);\n    }\n\n    :host([orientation='horizontal']) [part='tabs'] {\n      margin: 0 0.75rem;\n    }\n\n    :host([orientation='vertical']) [part='tabs'] {\n      width: 100%;\n      margin: 0.5rem 0;\n    }\n\n    [part='forward-button'],\n    [part='back-button'] {\n      position: absolute;\n      z-index: 1;\n      font-family: lumo-icons;\n      color: var(--lumo-tertiary-text-color);\n      font-size: var(--lumo-icon-size-m);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 1.5em;\n      height: 100%;\n      transition: 0.2s opacity;\n      top: 0;\n    }\n\n    [part='forward-button']:hover,\n    [part='back-button']:hover {\n      color: inherit;\n    }\n\n    :host(:not([dir='rtl'])) [part='forward-button'] {\n      right: 0;\n    }\n\n    [part='forward-button']::after {\n      content: var(--lumo-icons-angle-right);\n    }\n\n    [part='back-button']::after {\n      content: var(--lumo-icons-angle-left);\n    }\n\n    /* Tabs overflow */\n\n    [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: none;\n      -webkit-mask-image: var(--_lumo-tabs-overflow-mask-image);\n      mask-image: var(--_lumo-tabs-overflow-mask-image);\n    }\n\n    /* Horizontal tabs overflow */\n\n    /* Both ends overflowing */\n    :host([overflow~='start'][overflow~='end']:not([orientation='vertical'])) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(\n        90deg,\n        transparent 2em,\n        #000 4em,\n        #000 calc(100% - 4em),\n        transparent calc(100% - 2em)\n      );\n    }\n\n    /* End overflowing */\n    :host([overflow~='end']:not([orientation='vertical'])) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(90deg, #000 calc(100% - 4em), transparent calc(100% - 2em));\n    }\n\n    /* Start overflowing */\n    :host([overflow~='start']:not([orientation='vertical'])) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(90deg, transparent 2em, #000 4em);\n    }\n\n    /* Vertical tabs overflow */\n\n    /* Both ends overflowing */\n    :host([overflow~='start'][overflow~='end'][orientation='vertical']) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(transparent, #000 2em, #000 calc(100% - 2em), transparent);\n    }\n\n    /* End overflowing */\n    :host([overflow~='end'][orientation='vertical']) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(#000 calc(100% - 2em), transparent);\n    }\n\n    /* Start overflowing */\n    :host([overflow~='start'][orientation='vertical']) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(transparent, #000 2em);\n    }\n\n    :host [part='tabs'] ::slotted(:not(vaadin-tab)) {\n      margin-left: var(--lumo-space-m);\n    }\n\n    /* Centered */\n\n    :host([theme~='centered'][orientation='horizontal']) [part='tabs'] {\n      justify-content: center;\n    }\n\n    /* Small */\n\n    :host([theme~='small']),\n    :host([theme~='small']) [part='tabs'] {\n      min-height: var(--lumo-size-m);\n    }\n\n    :host([theme~='small']) [part='tabs'] ::slotted(vaadin-tab) {\n      font-size: var(--lumo-font-size-s);\n    }\n\n    /* Minimal */\n\n    :host([theme~='minimal']) {\n      box-shadow: none;\n      --_lumo-tab-marker-display: none;\n    }\n\n    /* Hide-scroll-buttons */\n\n    :host([theme~='hide-scroll-buttons']) [part='back-button'],\n    :host([theme~='hide-scroll-buttons']) [part='forward-button'] {\n      display: none;\n    }\n\n    /* prettier-ignore */\n    :host([theme~='hide-scroll-buttons'][overflow~='start'][overflow~='end']:not([orientation='vertical'])) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(\n        90deg,\n        transparent,\n        #000 2em,\n        #000 calc(100% - 2em),\n        transparent 100%\n      );\n    }\n\n    :host([theme~='hide-scroll-buttons'][overflow~='end']:not([orientation='vertical'])) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(90deg, #000 calc(100% - 2em), transparent 100%);\n    }\n\n    :host([theme~='hide-scroll-buttons'][overflow~='start']:not([orientation='vertical'])) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(90deg, transparent, #000 2em);\n    }\n\n    /* Equal-width tabs */\n    :host([theme~='equal-width-tabs']) {\n      flex: auto;\n    }\n\n    :host([theme~='equal-width-tabs']) [part='tabs'] ::slotted(vaadin-tab) {\n      flex: 1 0 0%;\n    }\n\n    /* RTL specific styles */\n\n    :host([dir='rtl']) [part='forward-button']::after {\n      content: var(--lumo-icons-angle-left);\n    }\n\n    :host([dir='rtl']) [part='back-button']::after {\n      content: var(--lumo-icons-angle-right);\n    }\n\n    :host([orientation='vertical'][dir='rtl']) {\n      box-shadow: 1px 0 0 0 var(--lumo-contrast-10pct);\n    }\n\n    :host([dir='rtl']) [part='forward-button'] {\n      left: 0;\n    }\n\n    :host([dir='rtl']) [part='tabs'] ::slotted(:not(vaadin-tab)) {\n      margin-left: 0;\n      margin-right: var(--lumo-space-m);\n    }\n\n    /* Both ends overflowing */\n    :host([dir='rtl'][overflow~='start'][overflow~='end']:not([orientation='vertical'])) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(\n        -90deg,\n        transparent 2em,\n        #000 4em,\n        #000 calc(100% - 4em),\n        transparent calc(100% - 2em)\n      );\n    }\n\n    /* End overflowing */\n    :host([dir='rtl'][overflow~='end']:not([orientation='vertical'])) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(-90deg, #000 calc(100% - 4em), transparent calc(100% - 2em));\n    }\n\n    /* Start overflowing */\n    :host([dir='rtl'][overflow~='start']:not([orientation='vertical'])) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(-90deg, transparent 2em, #000 4em);\n    }\n\n    :host([dir='rtl'][theme~='hide-scroll-buttons'][overflow~='start'][overflow~='end']:not([orientation='vertical']))\n      [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(\n        -90deg,\n        transparent,\n        #000 2em,\n        #000 calc(100% - 2em),\n        transparent 100%\n      );\n    }\n\n    :host([dir='rtl'][theme~='hide-scroll-buttons'][overflow~='end']:not([orientation='vertical'])) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(-90deg, #000 calc(100% - 2em), transparent 100%);\n    }\n\n    :host([dir='rtl'][theme~='hide-scroll-buttons'][overflow~='start']:not([orientation='vertical'])) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(-90deg, transparent, #000 2em);\n    }\n  `,\n  { moduleId: 'lumo-tabs' }\n);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-tabs@4.0.0/node_modules/@vaadin/vaadin-tabs/src/vaadin-tabs.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { mixinBehaviors } from '@polymer/polymer/lib/legacy/class.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ListMixin } from '@vaadin/vaadin-list-mixin/vaadin-list-mixin.js';\nimport { IronResizableBehavior } from '@polymer/iron-resizable-behavior/iron-resizable-behavior.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport './vaadin-tab.js';\n\n/**\n * `<vaadin-tabs>` is a Web Component for easy switching between different views.\n *\n * ```\n *   <vaadin-tabs selected=\"4\">\n *     <vaadin-tab>Page 1</vaadin-tab>\n *     <vaadin-tab>Page 2</vaadin-tab>\n *     <vaadin-tab>Page 3</vaadin-tab>\n *     <vaadin-tab>Page 4</vaadin-tab>\n *   </vaadin-tabs>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name         | Description\n * ------------------|--------------------------------------\n * `back-button`     | Button for moving the scroll back\n * `tabs`            | The tabs container\n * `forward-button`  | Button for moving the scroll forward\n *\n * The following state attributes are available for styling:\n *\n * Attribute  | Description | Part name\n * -----------|-------------|------------\n * `orientation` | Tabs disposition, valid values are `horizontal` and `vertical`. | :host\n * `overflow` | It's set to `start`, `end`, none or both. | :host\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @fires {CustomEvent} items-changed - Fired when the `items` property changes.\n * @fires {CustomEvent} selected-changed - Fired when the `selected` property changes.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ListMixin\n * @mixes ThemableMixin\n */\nclass TabsElement extends ElementMixin(\n  ListMixin(ThemableMixin(mixinBehaviors([IronResizableBehavior], PolymerElement)))\n) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: flex;\n          align-items: center;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        :host([orientation='vertical']) {\n          display: block;\n        }\n\n        :host([orientation='horizontal']) [part='tabs'] {\n          flex-grow: 1;\n          display: flex;\n          align-self: stretch;\n          overflow-x: auto;\n          -webkit-overflow-scrolling: touch;\n        }\n\n        /* This seems more future-proof than \\`overflow: -moz-scrollbars-none\\` which is marked obsolete\n         and is no longer guaranteed to work:\n         https://developer.mozilla.org/en-US/docs/Web/CSS/overflow#Mozilla_Extensions */\n        @-moz-document url-prefix() {\n          :host([orientation='horizontal']) [part='tabs'] {\n            overflow: hidden;\n          }\n        }\n\n        :host([orientation='horizontal']) [part='tabs']::-webkit-scrollbar {\n          display: none;\n        }\n\n        :host([orientation='vertical']) [part='tabs'] {\n          height: 100%;\n          overflow-y: auto;\n          -webkit-overflow-scrolling: touch;\n        }\n\n        [part='back-button'],\n        [part='forward-button'] {\n          pointer-events: none;\n          opacity: 0;\n          cursor: default;\n        }\n\n        :host([overflow~='start']) [part='back-button'],\n        :host([overflow~='end']) [part='forward-button'] {\n          pointer-events: auto;\n          opacity: 1;\n        }\n\n        [part='back-button']::after {\n          content: '◀';\n        }\n\n        [part='forward-button']::after {\n          content: '▶';\n        }\n\n        :host([orientation='vertical']) [part='back-button'],\n        :host([orientation='vertical']) [part='forward-button'] {\n          display: none;\n        }\n\n        /* RTL specific styles */\n\n        :host([dir='rtl']) [part='back-button']::after {\n          content: '▶';\n        }\n\n        :host([dir='rtl']) [part='forward-button']::after {\n          content: '◀';\n        }\n      </style>\n      <div on-click=\"_scrollBack\" part=\"back-button\"></div>\n\n      <div id=\"scroll\" part=\"tabs\">\n        <slot></slot>\n      </div>\n\n      <div on-click=\"_scrollForward\" part=\"forward-button\"></div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-tabs';\n  }\n\n  static get version() {\n    return '4.0.0';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Set tabs disposition. Possible values are `horizontal|vertical`\n       * @type {!ListOrientation}\n       */\n      orientation: {\n        value: 'horizontal',\n        type: String\n      },\n\n      /**\n       * The index of the selected tab.\n       */\n      selected: {\n        value: 0,\n        type: Number\n      }\n    };\n  }\n\n  static get observers() {\n    return ['_updateOverflow(items.*)'];\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener('iron-resize', () => this._updateOverflow());\n    this._scrollerElement.addEventListener('scroll', () => this._updateOverflow());\n    this.setAttribute('role', 'tablist');\n\n    // Wait for the vaadin-tab elements to upgrade and get styled\n    afterNextRender(this, () => {\n      this._updateOverflow();\n    });\n  }\n\n  /** @private */\n  _scrollForward() {\n    this._scroll(-this.__direction * this._scrollOffset);\n  }\n\n  /** @private */\n  _scrollBack() {\n    this._scroll(this.__direction * this._scrollOffset);\n  }\n\n  /**\n   * @return {number}\n   * @protected\n   */\n  get _scrollOffset() {\n    return this._vertical ? this._scrollerElement.offsetHeight : this._scrollerElement.offsetWidth;\n  }\n\n  /**\n   * @return {!HTMLElement}\n   * @protected\n   */\n  get _scrollerElement() {\n    return this.$.scroll;\n  }\n\n  /** @private */\n  get __direction() {\n    return !this._vertical && this.getAttribute('dir') === 'rtl' ? 1 : -1;\n  }\n\n  /** @private */\n  _updateOverflow() {\n    const scrollPosition = this._vertical\n      ? this._scrollerElement.scrollTop\n      : this.__getNormalizedScrollLeft(this._scrollerElement);\n    const scrollSize = this._vertical ? this._scrollerElement.scrollHeight : this._scrollerElement.scrollWidth;\n\n    let overflow = scrollPosition > 0 ? 'start' : '';\n    overflow += scrollPosition + this._scrollOffset < scrollSize ? ' end' : '';\n\n    if (this.__direction == 1) {\n      overflow = overflow.replace(/start|end/gi, (matched) => {\n        return matched === 'start' ? 'end' : 'start';\n      });\n    }\n\n    overflow ? this.setAttribute('overflow', overflow.trim()) : this.removeAttribute('overflow');\n  }\n}\n\ncustomElements.define(TabsElement.is, TabsElement);\n\nexport { TabsElement };\n"
      }
     ]
    },
    {
     "id": 174,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-text-field@3.0.2/node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-email-field.js + 2 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-text-field@3.0.2/node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-email-field.js",
       "source": "import './vaadin-email-field-styles.js';\nimport './vaadin-text-field.js';\nimport '../../src/vaadin-email-field.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-text-field@3.0.2/node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-email-field-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\n\nregisterStyles(\n  'vaadin-email-field',\n  css`\n    :host([dir='rtl']) [part='value']:placeholder-shown,\n    :host([dir='rtl']) [part='input-field'] ::slotted(input:placeholder-shown) {\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    :host([dir='rtl']) [part='value'],\n    :host([dir='rtl']) [part='input-field'] ::slotted(input) {\n      --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent, #000 1.25em);\n    }\n  `,\n  { moduleId: 'lumo-email-field' }\n);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-text-field@3.0.2/node_modules/@vaadin/vaadin-text-field/src/vaadin-email-field.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { TextFieldElement } from './vaadin-text-field.js';\nimport { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\n\nregisterStyles(\n  'vaadin-email-field',\n  css`\n    :host([dir='rtl']) [part='input-field'] {\n      direction: ltr;\n    }\n\n    :host([dir='rtl']) [part='value']::placeholder {\n      direction: rtl;\n      text-align: left;\n    }\n\n    :host([dir='rtl']) [part='input-field'] ::slotted(input)::placeholder {\n      direction: rtl;\n      text-align: left;\n    }\n  `,\n  { moduleId: 'vaadin-email-field-styles' }\n);\n\n/**\n * `<vaadin-email-field>` is a Web Component for email field control in forms.\n *\n * ```html\n * <vaadin-email-field label=\"Email\">\n * </vaadin-email-field>\n * ```\n *\n * ### Styling\n *\n * See vaadin-text-field.html for the styling documentation\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @fires {Event} input - Fired when the value is changed by the user: on every typing keystroke, and the value is cleared using the clear button.\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n *\n * @extends TextFieldElement\n */\nclass EmailFieldElement extends TextFieldElement {\n  static get is() {\n    return 'vaadin-email-field';\n  }\n\n  static get version() {\n    return '3.0.2';\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.inputElement.type = 'email';\n    this.inputElement.autocapitalize = 'off';\n  }\n\n  /** @protected */\n  _createConstraintsObserver() {\n    // NOTE: pattern needs to be set before constraints observer is initialized\n    this.pattern = this.pattern || '^([a-zA-Z0-9_\\\\.\\\\-+])+@[a-zA-Z0-9-.]+\\\\.[a-zA-Z0-9-]{2,}$';\n\n    super._createConstraintsObserver();\n  }\n}\n\ncustomElements.define(EmailFieldElement.is, EmailFieldElement);\n\nexport { EmailFieldElement };\n"
      }
     ]
    },
    {
     "id": 175,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-text-field@3.0.2/node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-text-area.js + 2 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-text-field@3.0.2/node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-text-area.js",
       "source": "import './vaadin-text-area-styles.js';\nimport './vaadin-text-field.js';\nimport '../../src/vaadin-text-area.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-text-field@3.0.2/node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-text-area-styles.js",
       "source": "import { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\nimport '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport './vaadin-text-field-styles.js';\n\nregisterStyles(\n  'vaadin-text-area',\n  css`\n    [part='input-field'],\n    [part='input-field'] ::slotted(textarea) {\n      /* Equal to the implicit padding in vaadin-text-field */\n      padding-top: calc((var(--lumo-text-field-size) - 1em * var(--lumo-line-height-s)) / 2);\n      padding-bottom: calc((var(--lumo-text-field-size) - 1em * var(--lumo-line-height-s)) / 2);\n      height: auto;\n      box-sizing: border-box;\n      transition: background-color 0.1s;\n      line-height: var(--lumo-line-height-s);\n    }\n\n    :host(:not([readonly])) [part='input-field']::after {\n      display: none;\n    }\n\n    :host([readonly]) [part='input-field'] {\n      border: 1px dashed var(--lumo-contrast-30pct);\n    }\n\n    :host([readonly]) [part='input-field']::after {\n      border: none;\n    }\n\n    :host(:hover:not([readonly]):not([focused])) [part='input-field'] {\n      background-color: var(--lumo-contrast-20pct);\n    }\n\n    @media (pointer: coarse) {\n      :host(:hover:not([readonly]):not([focused])) [part='input-field'] {\n        background-color: var(--lumo-contrast-10pct);\n      }\n\n      :host(:active:not([readonly]):not([focused])) [part='input-field'] {\n        background-color: var(--lumo-contrast-20pct);\n      }\n    }\n\n    [part='value'],\n    [part='input-field'] ::slotted(textarea) {\n      line-height: inherit;\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    /* Vertically align icon prefix/suffix with the first line of text */\n    [part='input-field'] ::slotted(iron-icon) {\n      margin-top: calc((var(--lumo-icon-size-m) - 1em * var(--lumo-line-height-s)) / -2);\n    }\n\n    [part='input-field'] [part='value'],\n    [part='input-field'] ::slotted(textarea) {\n      white-space: pre-wrap; /* override \"nowrap\" from <vaadin-text-field> */\n      align-self: stretch; /* override \"baseline\" from <vaadin-text-field> */\n    }\n  `,\n  { moduleId: 'lumo-text-area', include: ['lumo-text-field'] }\n);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-text-field@3.0.2/node_modules/@vaadin/vaadin-text-field/src/vaadin-text-area.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { TextFieldMixin } from './vaadin-text-field-mixin.js';\nimport { ControlStateMixin } from '@vaadin/vaadin-control-state-mixin/vaadin-control-state-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\n\n/**\n * `<vaadin-text-area>` is a Web Component for text area control in forms.\n *\n * ```html\n * <vaadin-text-area label=\"Add description\">\n * </vaadin-text-area>\n * ```\n *\n * ### Prefixes and suffixes\n *\n * These are child elements of a `<vaadin-text-area>` that are displayed\n * inline with the input, before or after.\n * In order for an element to be considered as a prefix, it must have the slot\n * attribute set to `prefix` (and similarly for `suffix`).\n *\n * ```html\n * <vaadin-text-area label=\"Add description\">\n *   <div slot=\"prefix\">Details:</div>\n *   <div slot=\"suffix\">The end!</div>\n * </vaadin-text-area>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `label` | The label element\n * `input-field` | The element that wraps prefix, value and suffix\n * `value` | The text value element inside the `input-field` element\n * `error-message` | The error message element\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `disabled` | Set to a disabled text field | :host\n * `has-value` | Set when the element has a value | :host\n * `has-label` | Set when the element has a label | :host\n * `has-helper` | Set when the element has helper text | :host\n * `has-error-message` | Set when the element has an error message | :host\n * `invalid` | Set when the element is invalid | :host\n * `focused` | Set when the element is focused | :host\n * `focus-ring` | Set when the element is keyboard focused | :host\n * `readonly` | Set to a readonly text field | :host\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @fires {Event} input - Fired when the value is changed by the user: on every typing keystroke, and the value is cleared using the clear button.\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n *\n * @extends HTMLElement\n * @mixes TextFieldMixin\n * @mixes ControlStateMixin\n * @mixes ElementMixin\n * @mixes ThemableMixin\n */\nclass TextAreaElement extends ElementMixin(TextFieldMixin(ControlStateMixin(ThemableMixin(PolymerElement)))) {\n  static get template() {\n    return html`\n      <style include=\"vaadin-text-field-shared-styles\">\n        .vaadin-text-area-container {\n          flex: auto;\n        }\n\n        /* The label, helper text and the error message should neither grow nor shrink. */\n        [part='label'],\n        [part='helper-text'],\n        [part='error-message'] {\n          flex: none;\n        }\n\n        [part='input-field'] {\n          overflow: auto;\n          -webkit-overflow-scrolling: touch;\n        }\n\n        [part='value'] {\n          resize: none;\n        }\n\n        [part='value'],\n        [part='input-field'] ::slotted(*) {\n          align-self: flex-start;\n        }\n\n        @keyframes vaadin-text-area-appear {\n          to {\n            opacity: 1;\n          }\n        }\n\n        :host {\n          animation: 1ms vaadin-text-area-appear;\n        }\n      </style>\n\n      <div class=\"vaadin-text-area-container\">\n        <label part=\"label\" on-click=\"focus\" id=\"[[_labelId]]\">[[label]]</label>\n\n        <div part=\"input-field\" id=\"[[_inputId]]\">\n          <slot name=\"prefix\"></slot>\n\n          <slot name=\"textarea\">\n            <textarea part=\"value\"></textarea>\n          </slot>\n\n          <div part=\"clear-button\" id=\"clearButton\" role=\"button\" aria-label$=\"[[i18n.clear]]\"></div>\n          <slot name=\"suffix\"></slot>\n        </div>\n\n        <div part=\"helper-text\" on-click=\"focus\" id=\"[[_helperTextId]]\">\n          <slot name=\"helper\">[[helperText]]</slot>\n        </div>\n\n        <div\n          part=\"error-message\"\n          id=\"[[_errorId]]\"\n          aria-live=\"assertive\"\n          aria-hidden$=\"[[_getErrorMessageAriaHidden(invalid, errorMessage, _errorId)]]\"\n          >[[errorMessage]]</div\n        >\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-text-area';\n  }\n\n  static get version() {\n    return '3.0.2';\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this._updateHeight();\n    this.addEventListener('animationend', this._onAnimationEnd);\n    this.__safari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  }\n\n  /** @private */\n  _onAnimationEnd(e) {\n    if (e.animationName.indexOf('vaadin-text-area-appear') === 0) {\n      this._updateHeight();\n    }\n  }\n\n  /**\n   * @return {string}\n   * @protected\n   */\n  get _slottedTagName() {\n    return 'textarea';\n  }\n\n  /**\n   * @param {unknown} newVal\n   * @param {unknown} oldVal\n   * @protected\n   */\n  _valueChanged(newVal, oldVal) {\n    super._valueChanged(newVal, oldVal);\n\n    this._updateHeight();\n  }\n\n  /** @private */\n  _updateHeight() {\n    const inputField = this.root.querySelector('[part=input-field]');\n    const scrollTop = inputField.scrollTop;\n    const input = this.inputElement;\n\n    const inputWidth = getComputedStyle(input).width;\n\n    const valueLength = this.value ? this.value.length : 0;\n    // Only clear the height when the content shortens to minimize scrollbar flickering.\n    if (this._oldValueLength >= valueLength) {\n      // Fix the input element width so its scroll height isn't affected by host's disappearing scrollbars\n      input.style.maxWidth = inputWidth;\n      input.style.height = 'auto';\n      // Avoid a jumpy Safari rendering issue\n      if (this.__safari) {\n        inputField.style.display = 'block';\n      }\n    }\n    this._oldValueLength = valueLength;\n\n    const inputHeight = input.scrollHeight;\n    if (inputHeight > input.clientHeight) {\n      input.style.height = inputHeight + 'px';\n    }\n\n    // Restore\n    input.style.removeProperty('max-width');\n    inputField.style.removeProperty('display');\n    inputField.scrollTop = scrollTop;\n\n    this._dispatchIronResizeEventIfNeeded('InputHeight', inputHeight);\n  }\n\n  /**\n   * Fired when the text-area height changes.\n   *\n   * @event iron-resize\n   */\n}\n\ncustomElements.define(TextAreaElement.is, TextAreaElement);\n\nexport { TextAreaElement };\n"
      }
     ]
    },
    {
     "id": 176,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-upload@5.0.0/node_modules/@vaadin/vaadin-upload/theme/lumo/vaadin-upload.js + 2 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-upload@5.0.0/node_modules/@vaadin/vaadin-upload/theme/lumo/vaadin-upload.js",
       "source": "import './vaadin-upload-styles.js';\nimport '../../src/vaadin-upload.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-upload@5.0.0/node_modules/@vaadin/vaadin-upload/theme/lumo/vaadin-upload-styles.js",
       "source": "import '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/field-button.js';\nimport '@vaadin/vaadin-button/theme/lumo/vaadin-button.js';\nimport '@vaadin/vaadin-progress-bar/theme/lumo/vaadin-progress-bar.js';\nimport { registerStyles, css } from '@vaadin/vaadin-themable-mixin/register-styles.js';\n\nregisterStyles(\n  'vaadin-upload',\n  css`\n    :host {\n      line-height: var(--lumo-line-height-m);\n    }\n\n    :host(:not([nodrop])) {\n      overflow: hidden;\n      border: 1px dashed var(--lumo-contrast-20pct);\n      border-radius: var(--lumo-border-radius-s);\n      padding: var(--lumo-space-m);\n      transition: background-color 0.6s, border-color 0.6s;\n    }\n\n    [part='primary-buttons'] > * {\n      display: inline-block;\n      white-space: nowrap;\n    }\n\n    [part='drop-label'] {\n      display: inline-block;\n      white-space: normal;\n      padding: 0 var(--lumo-space-s);\n      color: var(--lumo-secondary-text-color);\n      font-family: var(--lumo-font-family);\n    }\n\n    :host([dragover-valid]) {\n      border-color: var(--lumo-primary-color-50pct);\n      background: var(--lumo-primary-color-10pct);\n      transition: background-color 0.1s, border-color 0.1s;\n    }\n\n    :host([dragover-valid]) [part='drop-label'] {\n      color: var(--lumo-primary-text-color);\n    }\n\n    [part='drop-label-icon'] {\n      display: inline-block;\n    }\n\n    [part='drop-label-icon']::before {\n      content: var(--lumo-icons-upload);\n      font-family: lumo-icons;\n      font-size: var(--lumo-icon-size-m);\n      line-height: 1;\n      vertical-align: -0.25em;\n    }\n  `,\n  { moduleId: 'lumo-upload' }\n);\n\nregisterStyles(\n  'vaadin-upload-file',\n  css`\n    :host {\n      padding: var(--lumo-space-s) 0;\n    }\n\n    :host(:not(:first-child)) {\n      border-top: 1px solid var(--lumo-contrast-10pct);\n    }\n\n    [part='row'] {\n      display: flex;\n      align-items: baseline;\n      justify-content: space-between;\n    }\n\n    [part='status'],\n    [part='error'] {\n      color: var(--lumo-secondary-text-color);\n      font-size: var(--lumo-font-size-s);\n    }\n\n    [part='info'] {\n      display: flex;\n      align-items: baseline;\n      flex: auto;\n    }\n\n    [part='meta'] {\n      width: 0.001px;\n      flex: 1 1 auto;\n    }\n\n    [part='name'] {\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    [part='commands'] {\n      display: flex;\n      align-items: baseline;\n      flex: none;\n    }\n\n    [part='done-icon'],\n    [part='warning-icon'] {\n      margin-right: var(--lumo-space-xs);\n    }\n\n    /* When both icons are hidden, let us keep space for one */\n    [part='done-icon'][hidden] + [part='warning-icon'][hidden] {\n      display: block !important;\n      visibility: hidden;\n    }\n\n    [part='done-icon'],\n    [part='warning-icon'] {\n      font-size: var(--lumo-icon-size-m);\n      font-family: 'lumo-icons';\n      line-height: 1;\n    }\n\n    [part='start-button'],\n    [part='retry-button'],\n    [part='clear-button'] {\n      flex: none;\n      margin-left: var(--lumo-space-xs);\n    }\n\n    [part='done-icon']::before,\n    [part='warning-icon']::before,\n    [part='start-button']::before,\n    [part='retry-button']::before,\n    [part='clear-button']::before {\n      vertical-align: -0.25em;\n    }\n\n    [part='done-icon']::before {\n      content: var(--lumo-icons-checkmark);\n      color: var(--lumo-primary-text-color);\n    }\n\n    [part='warning-icon']::before {\n      content: var(--lumo-icons-error);\n      color: var(--lumo-error-text-color);\n    }\n\n    [part='start-button']::before {\n      content: var(--lumo-icons-play);\n    }\n\n    [part='retry-button']::before {\n      content: var(--lumo-icons-reload);\n    }\n\n    [part='clear-button']::before {\n      content: var(--lumo-icons-cross);\n    }\n\n    [part='error'] {\n      color: var(--lumo-error-text-color);\n    }\n\n    [part='progress'] {\n      width: auto;\n      margin-left: calc(var(--lumo-icon-size-m) + var(--lumo-space-xs));\n      margin-right: calc(var(--lumo-icon-size-m) + var(--lumo-space-xs));\n    }\n\n    [part='progress'][complete],\n    [part='progress'][error] {\n      display: none;\n    }\n  `,\n  { include: ['lumo-field-button'], moduleId: 'lumo-upload-file' }\n);\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-upload@5.0.0/node_modules/@vaadin/vaadin-upload/src/vaadin-upload.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport { resetMouseCanceller } from '@polymer/polymer/lib/utils/gestures.js';\nimport '@polymer/polymer/lib/elements/dom-repeat.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport '@vaadin/vaadin-button/src/vaadin-button.js';\nimport './vaadin-upload-icons.js';\nimport './vaadin-upload-file.js';\n\n/**\n * `<vaadin-upload>` is a Web Component for uploading multiple files with drag and drop support.\n *\n * Example:\n *\n * ```\n * <vaadin-upload></vaadin-upload>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ---|---\n * `primary-buttons` | Upload container\n * `upload-button` | Upload button\n * `drop-label` | Label for drop indicator\n * `drop-label-icon` | Icon for drop indicator\n * `file-list` | File list container\n *\n * The following state attributes are available for styling:\n *\n * Attribute | Description | Part name\n * ---|---|---\n * `nodrop` | Set when drag and drop is disabled (e. g., on touch devices) | `:host`\n * `dragover` | A file is being dragged over the element | `:host`\n * `dragover-valid` | A dragged file is valid with `maxFiles` and `accept` criteria | `:host`\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @fires {CustomEvent} file-reject - Fired when a file cannot be added to the queue due to a constrain.\n * @fires {CustomEvent} files-changed - Fired when the `files` property changes.\n * @fires {CustomEvent} max-files-reached-changed - Fired when the `maxFilesReached` property changes.\n * @fires {CustomEvent} upload-before - Fired before the XHR is opened.\n * @fires {CustomEvent} upload-start - Fired when the XHR is sent.\n * @fires {CustomEvent} upload-progress - Fired as many times as the progress is updated.\n * @fires {CustomEvent} upload-success - Fired in case the upload process succeeded.\n * @fires {CustomEvent} upload-error - Fired in case the upload process failed.\n * @fires {CustomEvent} upload-request - Fired when the XHR has been opened but not sent yet.\n * @fires {CustomEvent} upload-response - Fired when on the server response before analyzing it.\n * @fires {CustomEvent} upload-retry - Fired when retry upload is requested.\n * @fires {CustomEvent} upload-abort - Fired when upload abort is requested.\n *\n * @extends HTMLElement\n * @mixes ThemableMixin\n * @mixes ElementMixin\n */\nclass UploadElement extends ElementMixin(ThemableMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          position: relative;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        [hidden] {\n          display: none !important;\n        }\n      </style>\n\n      <div part=\"primary-buttons\">\n        <div id=\"addFiles\" on-touchend=\"_onAddFilesTouchEnd\" on-click=\"_onAddFilesClick\">\n          <slot name=\"add-button\">\n            <vaadin-button part=\"upload-button\" id=\"addButton\" disabled=\"[[maxFilesReached]]\">\n              [[_i18nPlural(maxFiles, i18n.addFiles, i18n.addFiles.*)]]\n            </vaadin-button>\n          </slot>\n        </div>\n        <div part=\"drop-label\" hidden$=\"[[nodrop]]\" id=\"dropLabelContainer\">\n          <slot name=\"drop-label-icon\">\n            <div part=\"drop-label-icon\"></div>\n          </slot>\n          <slot name=\"drop-label\" id=\"dropLabel\"> [[_i18nPlural(maxFiles, i18n.dropFiles, i18n.dropFiles.*)]] </slot>\n        </div>\n      </div>\n      <slot name=\"file-list\">\n        <div id=\"fileList\" part=\"file-list\">\n          <template is=\"dom-repeat\" items=\"[[files]]\" as=\"file\">\n            <vaadin-upload-file file=\"[[file]]\"></vaadin-upload-file>\n          </template>\n        </div>\n      </slot>\n      <slot></slot>\n      <input\n        type=\"file\"\n        id=\"fileInput\"\n        hidden\n        on-change=\"_onFileInputChange\"\n        accept$=\"{{accept}}\"\n        multiple$=\"[[_isMultiple(maxFiles)]]\"\n        capture$=\"[[capture]]\"\n      />\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-upload';\n  }\n\n  static get version() {\n    return '5.0.0';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Define whether the element supports dropping files on it for uploading.\n       * By default it's enabled in desktop and disabled in touch devices\n       * because mobile devices do not support drag events in general. Setting\n       * it false means that drop is enabled even in touch-devices, and true\n       * disables drop in all devices.\n       *\n       * @type {boolean}\n       * @default true in touch-devices, false otherwise.\n       */\n      nodrop: {\n        type: Boolean,\n        reflectToAttribute: true,\n        value: function () {\n          try {\n            return !!document.createEvent('TouchEvent');\n          } catch (e) {\n            return false;\n          }\n        }\n      },\n\n      /**\n       * The server URL. The default value is an empty string, which means that\n       * _window.location_ will be used.\n       * @type {string}\n       */\n      target: {\n        type: String,\n        value: ''\n      },\n\n      /**\n       * HTTP Method used to send the files. Only POST and PUT are allowed.\n       * @type {!UploadMethod}\n       */\n      method: {\n        type: String,\n        value: 'POST'\n      },\n\n      /**\n       * Key-Value map to send to the server. If you set this property as an\n       * attribute, use a valid JSON string, for example:\n       * ```\n       * <vaadin-upload headers='{\"X-Foo\": \"Bar\"}'></vaadin-upload>\n       * ```\n       * @type {object | string}\n       */\n      headers: {\n        type: Object,\n        value: {}\n      },\n\n      /**\n       * Max time in milliseconds for the entire upload process, if exceeded the\n       * request will be aborted. Zero means that there is no timeout.\n       * @type {number}\n       */\n      timeout: {\n        type: Number,\n        value: 0\n      },\n\n      /** @private */\n      _dragover: {\n        type: Boolean,\n        value: false,\n        observer: '_dragoverChanged'\n      },\n\n      /**\n       * The array of files being processed, or already uploaded.\n       *\n       * Each element is a [`File`](https://developer.mozilla.org/en-US/docs/Web/API/File)\n       * object with a number of extra properties  to track the upload process:\n       * - `uploadTarget`: The target URL used to upload this file.\n       * - `elapsed`: Elapsed time since the upload started.\n       * - `elapsedStr`: Human-readable elapsed time.\n       * - `remaining`: Number of seconds remaining for the upload to finish.\n       * - `remainingStr`: Human-readable remaining time for the upload to finish.\n       * - `progress`: Percentage of the file already uploaded.\n       * - `speed`: Upload speed in kB/s.\n       * - `size`: File size in bytes.\n       * - `totalStr`: Human-readable total size of the file.\n       * - `loaded`: Bytes transferred so far.\n       * - `loadedStr`: Human-readable uploaded size at the moment.\n       * - `status`: Status of the upload process.\n       * - `error`: Error message in case the upload failed.\n       * - `abort`: True if the file was canceled by the user.\n       * - `complete`: True when the file was transferred to the server.\n       * - `uploading`: True while transferring data to the server.\n       * @type {!Array<!UploadFile>}\n       */\n      files: {\n        type: Array,\n        notify: true,\n        value: function () {\n          return [];\n        }\n      },\n\n      /**\n       * Limit of files to upload, by default it is unlimited. If the value is\n       * set to one, native file browser will prevent selecting multiple files.\n       * @attr {number} max-files\n       * @type {number}\n       */\n      maxFiles: {\n        type: Number,\n        value: Infinity\n      },\n\n      /**\n       * Specifies if the maximum number of files have been uploaded\n       * @attr {boolean} max-files-reached\n       * @type {boolean}\n       */\n      maxFilesReached: {\n        type: Boolean,\n        value: false,\n        notify: true,\n        readOnly: true,\n        computed: '_maxFilesAdded(maxFiles, files.length)'\n      },\n\n      /**\n       * Specifies the types of files that the server accepts.\n       * Syntax: a comma-separated list of MIME type patterns (wildcards are\n       * allowed) or file extensions.\n       * Notice that MIME types are widely supported, while file extensions\n       * are only implemented in certain browsers, so avoid using it.\n       * Example: accept=\"video/*,image/tiff\" or accept=\".pdf,audio/mp3\"\n       * @type {string}\n       */\n      accept: {\n        type: String,\n        value: ''\n      },\n\n      /**\n       * Specifies the maximum file size in bytes allowed to upload.\n       * Notice that it is a client-side constraint, which will be checked before\n       * sending the request. Obviously you need to do the same validation in\n       * the server-side and be sure that they are aligned.\n       * @attr {number} max-file-size\n       * @type {number}\n       */\n      maxFileSize: {\n        type: Number,\n        value: Infinity\n      },\n\n      /**\n       * Specifies if the dragover is validated with maxFiles and\n       * accept properties.\n       * @private\n       */\n      _dragoverValid: {\n        type: Boolean,\n        value: false,\n        observer: '_dragoverValidChanged'\n      },\n\n      /**\n       * Specifies the 'name' property at Content-Disposition\n       * @attr {string} form-data-name\n       * @type {string}\n       */\n      formDataName: {\n        type: String,\n        value: 'file'\n      },\n\n      /**\n       * Prevents upload(s) from immediately uploading upon adding file(s).\n       * When set, you must manually trigger uploads using the `uploadFiles` method\n       * @attr {boolean} no-auto\n       * @type {boolean}\n       */\n      noAuto: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Set the withCredentials flag on the request.\n       * @attr {boolean} with-credentials\n       * @type {boolean}\n       */\n      withCredentials: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Pass-through to input's capture attribute. Allows user to trigger device inputs\n       * such as camera or microphone immediately.\n       */\n      capture: String,\n\n      /**\n       * The object used to localize this component.\n       * For changing the default localization, change the entire\n       * _i18n_ object or just the property you want to modify.\n       *\n       * The object has the following JSON structure and default values:\n\n      {\n        dropFiles: {\n        one: 'Drop file here',\n        many: 'Drop files here'\n        },\n        addFiles: {\n        one: 'Select File...',\n        many: 'Upload Files...'\n        },\n        cancel: 'Cancel',\n        error: {\n        tooManyFiles: 'Too Many Files.',\n        fileIsTooBig: 'File is Too Big.',\n        incorrectFileType: 'Incorrect File Type.'\n        },\n        uploading: {\n        status: {\n          connecting: 'Connecting...',\n          stalled: 'Stalled',\n          processing: 'Processing File...',\n          held: 'Queued'\n        },\n        remainingTime: {\n          prefix: 'remaining time: ',\n          unknown: 'unknown remaining time'\n        },\n        error: {\n          serverUnavailable: 'Server Unavailable',\n          unexpectedServerError: 'Unexpected Server Error',\n          forbidden: 'Forbidden'\n        }\n        },\n        units: {\n        size: ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n        sizeBase: 1000\n        },\n        formatSize: function(bytes) {\n        // returns the size followed by the best suitable unit\n        },\n        formatTime: function(seconds, [secs, mins, hours]) {\n        // returns a 'HH:MM:SS' string\n        }\n      }\n\n      * @type {!UploadI18n}\n      * @default {English}\n      */\n      i18n: {\n        type: Object,\n        value: function () {\n          return {\n            dropFiles: {\n              one: 'Drop file here',\n              many: 'Drop files here'\n            },\n            addFiles: {\n              one: 'Upload File...',\n              many: 'Upload Files...'\n            },\n            cancel: 'Cancel',\n            error: {\n              tooManyFiles: 'Too Many Files.',\n              fileIsTooBig: 'File is Too Big.',\n              incorrectFileType: 'Incorrect File Type.'\n            },\n            uploading: {\n              status: {\n                connecting: 'Connecting...',\n                stalled: 'Stalled',\n                processing: 'Processing File...',\n                held: 'Queued'\n              },\n              remainingTime: {\n                prefix: 'remaining time: ',\n                unknown: 'unknown remaining time'\n              },\n              error: {\n                serverUnavailable: 'Server Unavailable',\n                unexpectedServerError: 'Unexpected Server Error',\n                forbidden: 'Forbidden'\n              }\n            },\n            units: {\n              size: ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n            }\n          };\n        }\n      }\n    };\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.addEventListener('dragover', this._onDragover.bind(this));\n    this.addEventListener('dragleave', this._onDragleave.bind(this));\n    this.addEventListener('drop', this._onDrop.bind(this));\n    this.addEventListener('file-retry', this._onFileRetry.bind(this));\n    this.addEventListener('file-abort', this._onFileAbort.bind(this));\n    this.addEventListener('file-remove', this._onFileRemove.bind(this));\n    this.addEventListener('file-start', this._onFileStart.bind(this));\n  }\n\n  /** @private */\n  _formatSize(bytes) {\n    if (typeof this.i18n.formatSize === 'function') {\n      return this.i18n.formatSize(bytes);\n    }\n\n    // https://wiki.ubuntu.com/UnitsPolicy\n    const base = this.i18n.units.sizeBase || 1000;\n    const unit = ~~(Math.log(bytes) / Math.log(base));\n    const dec = Math.max(0, Math.min(3, unit - 1));\n    const size = parseFloat((bytes / Math.pow(base, unit)).toFixed(dec));\n    return size + ' ' + this.i18n.units.size[unit];\n  }\n\n  /** @private */\n  _splitTimeByUnits(time) {\n    const unitSizes = [60, 60, 24, Infinity];\n    const timeValues = [0];\n\n    for (var i = 0; i < unitSizes.length && time > 0; i++) {\n      timeValues[i] = time % unitSizes[i];\n      time = Math.floor(time / unitSizes[i]);\n    }\n\n    return timeValues;\n  }\n\n  /** @private */\n  _formatTime(seconds, split) {\n    if (typeof this.i18n.formatTime === 'function') {\n      return this.i18n.formatTime(seconds, split);\n    }\n\n    // Fill HH:MM:SS with leading zeros\n    while (split.length < 3) {\n      split.push(0);\n    }\n\n    return split\n      .reverse()\n      .map((number) => {\n        return (number < 10 ? '0' : '') + number;\n      })\n      .join(':');\n  }\n\n  /** @private */\n  _formatFileProgress(file) {\n    return (\n      file.totalStr +\n      ': ' +\n      file.progress +\n      '% (' +\n      (file.loaded > 0\n        ? this.i18n.uploading.remainingTime.prefix + file.remainingStr\n        : this.i18n.uploading.remainingTime.unknown) +\n      ')'\n    );\n  }\n\n  /** @private */\n  _maxFilesAdded(maxFiles, numFiles) {\n    return maxFiles >= 0 && numFiles >= maxFiles;\n  }\n\n  /** @private */\n  _onDragover(event) {\n    event.preventDefault();\n    if (!this.nodrop && !this._dragover) {\n      this._dragoverValid = !this.maxFilesReached;\n      this._dragover = true;\n    }\n    event.dataTransfer.dropEffect = !this._dragoverValid || this.nodrop ? 'none' : 'copy';\n  }\n\n  /** @private */\n  _onDragleave(event) {\n    event.preventDefault();\n    if (this._dragover && !this.nodrop) {\n      this._dragover = this._dragoverValid = false;\n    }\n  }\n\n  /** @private */\n  _onDrop(event) {\n    if (!this.nodrop) {\n      event.preventDefault();\n      this._dragover = this._dragoverValid = false;\n      this._addFiles(event.dataTransfer.files);\n    }\n  }\n\n  /** @private */\n  _createXhr() {\n    return new XMLHttpRequest();\n  }\n\n  /** @private */\n  _configureXhr(xhr) {\n    if (typeof this.headers == 'string') {\n      try {\n        this.headers = JSON.parse(this.headers);\n      } catch (e) {\n        this.headers = undefined;\n      }\n    }\n    for (var key in this.headers) {\n      xhr.setRequestHeader(key, this.headers[key]);\n    }\n    if (this.timeout) {\n      xhr.timeout = this.timeout;\n    }\n    xhr.withCredentials = this.withCredentials;\n  }\n\n  /** @private */\n  _setStatus(file, total, loaded, elapsed) {\n    file.elapsed = elapsed;\n    file.elapsedStr = this._formatTime(file.elapsed, this._splitTimeByUnits(file.elapsed));\n    file.remaining = Math.ceil(elapsed * (total / loaded - 1));\n    file.remainingStr = this._formatTime(file.remaining, this._splitTimeByUnits(file.remaining));\n    file.speed = ~~(total / elapsed / 1024);\n    file.totalStr = this._formatSize(total);\n    file.loadedStr = this._formatSize(loaded);\n    file.status = this._formatFileProgress(file);\n  }\n\n  /**\n   * Triggers the upload of any files that are not completed\n   *\n   * @param {!UploadFile | !Array<!UploadFile>=} files - Files being uploaded. Defaults to all outstanding files\n   */\n  uploadFiles(files) {\n    if (files && !Array.isArray(files)) {\n      files = [files];\n    }\n    files = files || this.files;\n    files = files.filter((file) => !file.complete);\n    Array.prototype.forEach.call(files, this._uploadFile.bind(this));\n  }\n\n  /** @private */\n  _uploadFile(file) {\n    if (file.uploading) {\n      return;\n    }\n\n    const ini = Date.now();\n    const xhr = (file.xhr = this._createXhr(file));\n\n    let stalledId, last;\n    // onprogress is called always after onreadystatechange\n    xhr.upload.onprogress = (e) => {\n      clearTimeout(stalledId);\n\n      last = Date.now();\n      const elapsed = (last - ini) / 1000;\n      const loaded = e.loaded,\n        total = e.total,\n        progress = ~~((loaded / total) * 100);\n      file.loaded = loaded;\n      file.progress = progress;\n      file.indeterminate = loaded <= 0 || loaded >= total;\n\n      if (file.error) {\n        file.indeterminate = file.status = undefined;\n      } else if (!file.abort) {\n        if (progress < 100) {\n          this._setStatus(file, total, loaded, elapsed);\n          stalledId = setTimeout(() => {\n            file.status = this.i18n.uploading.status.stalled;\n            this._notifyFileChanges(file);\n          }, 2000);\n        } else {\n          file.loadedStr = file.totalStr;\n          file.status = this.i18n.uploading.status.processing;\n          file.uploading = false;\n        }\n      }\n\n      this._notifyFileChanges(file);\n      this.dispatchEvent(new CustomEvent('upload-progress', { detail: { file, xhr } }));\n    };\n\n    // More reliable than xhr.onload\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState == 4) {\n        clearTimeout(stalledId);\n        file.indeterminate = file.uploading = false;\n        if (file.abort) {\n          this._notifyFileChanges(file);\n          return;\n        }\n        file.status = '';\n        // Custom listener can modify the default behavior either\n        // preventing default, changing the xhr, or setting the file error\n        const evt = this.dispatchEvent(\n          new CustomEvent('upload-response', {\n            detail: { file, xhr },\n            cancelable: true\n          })\n        );\n\n        if (!evt) {\n          return;\n        }\n        if (xhr.status === 0) {\n          file.error = this.i18n.uploading.error.serverUnavailable;\n        } else if (xhr.status >= 500) {\n          file.error = this.i18n.uploading.error.unexpectedServerError;\n        } else if (xhr.status >= 400) {\n          file.error = this.i18n.uploading.error.forbidden;\n        }\n\n        file.complete = !file.error;\n        this.dispatchEvent(\n          new CustomEvent(`upload-${file.error ? 'error' : 'success'}`, {\n            detail: { file, xhr }\n          })\n        );\n        this._notifyFileChanges(file);\n      }\n    };\n\n    const formData = new FormData();\n\n    file.uploadTarget = file.uploadTarget || this.target || '';\n    file.formDataName = this.formDataName;\n\n    const evt = this.dispatchEvent(\n      new CustomEvent('upload-before', {\n        detail: { file, xhr },\n        cancelable: true\n      })\n    );\n    if (!evt) {\n      return;\n    }\n\n    formData.append(file.formDataName, file, file.name);\n\n    xhr.open(this.method, file.uploadTarget, true);\n    this._configureXhr(xhr);\n\n    file.status = this.i18n.uploading.status.connecting;\n    file.uploading = file.indeterminate = true;\n    file.complete = file.abort = file.error = file.held = false;\n\n    xhr.upload.onloadstart = () => {\n      this.dispatchEvent(\n        new CustomEvent('upload-start', {\n          detail: { file, xhr }\n        })\n      );\n      this._notifyFileChanges(file);\n    };\n\n    // Custom listener could modify the xhr just before sending it\n    // preventing default\n    const uploadEvt = this.dispatchEvent(\n      new CustomEvent('upload-request', {\n        detail: { file, xhr, formData },\n        cancelable: true\n      })\n    );\n    if (uploadEvt) {\n      xhr.send(formData);\n    }\n  }\n\n  /** @private */\n  _retryFileUpload(file) {\n    const evt = this.dispatchEvent(\n      new CustomEvent('upload-retry', {\n        detail: { file, xhr: file.xhr },\n        cancelable: true\n      })\n    );\n    if (evt) {\n      this._uploadFile(file);\n    }\n  }\n\n  /** @private */\n  _abortFileUpload(file) {\n    const evt = this.dispatchEvent(\n      new CustomEvent('upload-abort', {\n        detail: { file, xhr: file.xhr },\n        cancelable: true\n      })\n    );\n    if (evt) {\n      file.abort = true;\n      if (file.xhr) {\n        file.xhr.abort();\n      }\n      this._notifyFileChanges(file);\n    }\n  }\n\n  /** @private */\n  _notifyFileChanges(file) {\n    var p = 'files.' + this.files.indexOf(file) + '.';\n    for (let i in file) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (file.hasOwnProperty(i)) {\n        this.notifyPath(p + i, file[i]);\n      }\n    }\n  }\n\n  /** @private */\n  _addFiles(files) {\n    Array.prototype.forEach.call(files, this._addFile.bind(this));\n  }\n\n  /**\n   * Add the file for uploading. Called internally for each file after picking files from dialog or dropping files.\n   *\n   * @param {!UploadFile} file File being added\n   * @protected\n   */\n  _addFile(file) {\n    if (this.maxFilesReached) {\n      this.dispatchEvent(\n        new CustomEvent('file-reject', {\n          detail: { file, error: this.i18n.error.tooManyFiles }\n        })\n      );\n      return;\n    }\n    if (this.maxFileSize >= 0 && file.size > this.maxFileSize) {\n      this.dispatchEvent(\n        new CustomEvent('file-reject', {\n          detail: { file, error: this.i18n.error.fileIsTooBig }\n        })\n      );\n      return;\n    }\n    const fileExt = file.name.match(/\\.[^.]*$|$/)[0];\n    const re = new RegExp('^(' + this.accept.replace(/[, ]+/g, '|').replace(/\\/\\*/g, '/.*') + ')$', 'i');\n    if (this.accept && !(re.test(file.type) || re.test(fileExt))) {\n      this.dispatchEvent(\n        new CustomEvent('file-reject', {\n          detail: { file, error: this.i18n.error.incorrectFileType }\n        })\n      );\n      return;\n    }\n    file.loaded = 0;\n    file.held = true;\n    file.status = this.i18n.uploading.status.held;\n    this.unshift('files', file);\n\n    if (!this.noAuto) {\n      this._uploadFile(file);\n    }\n  }\n\n  /**\n   * Remove file from upload list. Called internally if file upload was canceled.\n   * @param {!UploadFile} file File to remove\n   * @protected\n   */\n  _removeFile(file) {\n    if (this.files.indexOf(file) > -1) {\n      this.splice('files', this.files.indexOf(file), 1);\n    }\n  }\n\n  /** @private */\n  _onAddFilesTouchEnd(e) {\n    // Cancel the event to avoid the following click event\n    e.preventDefault();\n    // FIXME(platosha): workaround for Polymer Gestures mouseCanceller\n    // cancelling the following synthetic click. See also:\n    // https://github.com/Polymer/polymer/issues/5289\n    this.__resetMouseCanceller();\n    this._onAddFilesClick();\n  }\n\n  /** @private */\n  __resetMouseCanceller() {\n    resetMouseCanceller();\n  }\n\n  /** @private */\n  _onAddFilesClick() {\n    if (this.maxFilesReached) {\n      return;\n    }\n\n    this.$.fileInput.value = '';\n    this.$.fileInput.click();\n  }\n\n  /** @private */\n  _onFileInputChange(event) {\n    this._addFiles(event.target.files);\n  }\n\n  /** @private */\n  _onFileStart(event) {\n    this._uploadFile(event.detail.file);\n  }\n\n  /** @private */\n  _onFileRetry(event) {\n    this._retryFileUpload(event.detail.file);\n  }\n\n  /** @private */\n  _onFileAbort(event) {\n    this._abortFileUpload(event.detail.file);\n  }\n\n  /** @private */\n  _onFileRemove(event) {\n    this._removeFile(event.detail.file);\n  }\n\n  /** @private */\n  _dragoverChanged(dragover) {\n    dragover ? this.setAttribute('dragover', dragover) : this.removeAttribute('dragover');\n  }\n\n  /** @private */\n  _dragoverValidChanged(dragoverValid) {\n    dragoverValid ? this.setAttribute('dragover-valid', dragoverValid) : this.removeAttribute('dragover-valid');\n  }\n\n  /** @private */\n  _i18nPlural(value, plural) {\n    return value == 1 ? plural.one : plural.many;\n  }\n\n  /** @private */\n  _isMultiple(maxFiles) {\n    return maxFiles != 1;\n  }\n\n  /**\n   * Fired when a file cannot be added to the queue due to a constrain:\n   *  file-size, file-type or maxFiles\n   *\n   * @event file-reject\n   * @param {Object} detail\n   * @param {Object} detail.file the file added\n   * @param {string} detail.error the cause\n   */\n\n  /**\n   * Fired before the XHR is opened. Could be used for changing the request\n   * URL. If the default is prevented, then XHR would not be opened.\n   *\n   * @event upload-before\n   * @param {Object} detail\n   * @param {Object} detail.xhr the xhr\n   * @param {Object} detail.file the file being uploaded\n   * @param {Object} detail.file.uploadTarget the upload request URL, initialized with the value of vaadin-upload `target` property\n   */\n\n  /**\n   * Fired when the XHR has been opened but not sent yet. Useful for appending\n   * data keys to the FormData object, for changing some parameters like\n   * headers, etc. If the event is defaultPrevented, `vaadin-upload` will not\n   * send the request allowing the user to do something on his own.\n   *\n   * @event upload-request\n   * @param {Object} detail\n   * @param {Object} detail.xhr the xhr\n   * @param {Object} detail.file the file being uploaded\n   * @param {Object} detail.formData the FormData object\n   */\n\n  /**\n   * Fired when the XHR is sent.\n   *\n   * @event upload-start\n   * @param {Object} detail\n   * @param {Object} detail.xhr the xhr\n   * @param {Object} detail.file the file being uploaded\n   */\n\n  /**\n   * Fired as many times as the progress is updated.\n   *\n   * @event upload-progress\n   * @param {Object} detail\n   * @param {Object} detail.xhr the xhr\n   * @param {Object} detail.file the file being uploaded with loaded info\n   */\n\n  /**\n   * Fired when we have the actual server response, and before the component\n   * analyses it. It's useful for developers to make the upload fail depending\n   * on the server response. If the event is defaultPrevented the vaadin-upload\n   * will return allowing the user to do something on his own like retry the\n   * upload, etc. since he has full access to the `xhr` and `file` objects.\n   * Otherwise, if the event is not prevented default `vaadin-upload` continues\n   * with the normal workflow checking the `xhr.status` and `file.error`\n   * which also might be modified by the user to force a customized response.\n   *\n   * @event upload-response\n   * @param {Object} detail\n   * @param {Object} detail.xhr the xhr\n   * @param {Object} detail.file the file being uploaded\n   */\n\n  /**\n   * Fired in case the upload process succeed.\n   *\n   * @event upload-success\n   * @param {Object} detail\n   * @param {Object} detail.xhr the xhr\n   * @param {Object} detail.file the file being uploaded with loaded info\n   */\n\n  /**\n   * Fired in case the upload process failed.\n   *\n   * @event upload-error\n   * @param {Object} detail\n   * @param {Object} detail.xhr the xhr\n   * @param {Object} detail.file the file being uploaded\n   */\n\n  /**\n   * Fired when retry upload is requested. If the default is prevented, then\n   * retry would not be performed.\n   *\n   * @event upload-retry\n   * @param {Object} detail\n   * @param {Object} detail.xhr the previous upload xhr\n   * @param {Object} detail.file the file being uploaded\n   */\n\n  /**\n   * Fired when retry abort is requested. If the default is prevented, then the\n   * file upload would not be aborted.\n   *\n   * @event upload-abort\n   * @param {Object} detail\n   * @param {Object} detail.xhr the xhr\n   * @param {Object} detail.file the file being uploaded\n   */\n}\n\ncustomElements.define(UploadElement.is, UploadElement);\n\nexport { UploadElement };\n"
      }
     ]
    },
    {
     "id": 181,
     "name": "../node_modules/.pnpm/@vaadin+vaadin-text-field@3.0.2/node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-integer-field.js + 1 modules",
     "modules": [
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-text-field@3.0.2/node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-integer-field.js",
       "source": "import './vaadin-number-field.js';\nimport '../../src/vaadin-integer-field.js';\n"
      },
      {
       "name": "../node_modules/.pnpm/@vaadin+vaadin-text-field@3.0.2/node_modules/@vaadin/vaadin-text-field/src/vaadin-integer-field.js",
       "source": "/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { NumberFieldElement } from './vaadin-number-field.js';\n\n/**\n * `<vaadin-integer-field>` is a Web Component for integer field control in forms.\n *\n * ```html\n * <vaadin-integer-field label=\"Number\">\n * </vaadin-integer-field>\n * ```\n *\n * @fires {Event} input - Fired when the value is changed by the user: on every typing keystroke, and the value is cleared using the clear button.\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n *\n * @extends NumberFieldElement\n */\nclass IntegerFieldElement extends NumberFieldElement {\n  static get is() {\n    return 'vaadin-integer-field';\n  }\n\n  static get version() {\n    return '3.0.2';\n  }\n\n  static get properties() {\n    // Hide inherited props that don't work with <input type=\"number\"> from JSDoc.\n    return {\n      /** @private */\n      pattern: String,\n\n      /** @private */\n      preventInvalidInput: Boolean,\n\n      /** @private */\n      minlength: Number,\n\n      /** @private */\n      maxlength: Number\n    };\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this._enabledCharPattern = '[-+\\\\d]';\n  }\n\n  /**\n   * @param {unknown} newVal\n   * @param {unknown} oldVal\n   * @protected\n   */\n  _valueChanged(newVal, oldVal) {\n    if (newVal !== '' && !this.__isInteger(newVal)) {\n      console.warn(`Trying to set non-integer value \"${newVal}\" to <vaadin-integer-field>.` + ` Clearing the value.`);\n      this.value = '';\n      return;\n    }\n    super._valueChanged(newVal, oldVal);\n  }\n\n  /**\n   * @param {number} newVal\n   * @param {number | undefined} oldVal\n   * @protected\n   */\n  _stepChanged(newVal, oldVal) {\n    if (!this.__hasOnlyDigits(newVal)) {\n      console.warn(\n        `Trying to set invalid step size \"${newVal}\",` +\n          ` which is not a positive integer, to <vaadin-integer-field>.` +\n          ` Resetting the default value 1.`\n      );\n      this.step = 1;\n      return;\n    }\n    super._stepChanged(newVal, oldVal);\n  }\n\n  /** @private */\n  __isInteger(value) {\n    return /^(-\\d)?\\d*$/.test(String(value));\n  }\n\n  /** @private */\n  __hasOnlyDigits(value) {\n    return /^\\d*$/.test(String(value));\n  }\n}\n\nwindow.customElements.define(IntegerFieldElement.is, IntegerFieldElement);\n\nexport { IntegerFieldElement };\n"
      }
     ]
    }
   ]
  },
  {
   "id": 3,
   "names": [],
   "files": [
    "VAADIN/build/vaadin-3-3c5f47892c025a464241.cache.js"
   ],
   "hash": "c86cec26aac4ca369528",
   "modules": [
    {
     "id": 145,
     "name": "../target/flow-frontend/datepickerConnector.js",
     "source": "(function () {\n    const tryCatchWrapper = function (callback) {\n        return window.Vaadin.Flow.tryCatchWrapper(callback, 'Vaadin Date Picker', 'vaadin-date-picker');\n    };\n\n    /* helper class for parsing regex from formatted date string */\n\n    class FlowDatePickerPart {\n        constructor(initial) {\n            this.initial = initial;\n            this.index = 0;\n            this.value = 0;\n        }\n\n        static compare(part1, part2) {\n            if (part1.index < part2.index) {\n                return -1;\n            }\n            if (part1.index > part2.index) {\n                return 1;\n            }\n            return 0;\n        }\n    }\n    window.Vaadin.Flow.datepickerConnector = {\n        initLazy: datepicker => tryCatchWrapper(function (datepicker) {\n            // Check whether the connector was already initialized for the datepicker\n            if (datepicker.$connector) {\n                return;\n            }\n\n            datepicker.$connector = {};\n\n            /* init helper parts for reverse-engineering date-regex */\n            datepicker.$connector.dayPart = new FlowDatePickerPart(\"22\");\n            datepicker.$connector.monthPart = new FlowDatePickerPart(\"11\");\n            datepicker.$connector.yearPart = new FlowDatePickerPart(\"1987\");\n            datepicker.$connector.parts = [datepicker.$connector.dayPart, datepicker.$connector.monthPart, datepicker.$connector.yearPart];\n\n            // Old locale should always be the default vaadin-date-picker component\n            // locale {English/US} as we init lazily and the date-picker formats\n            // the date using the default i18n settings and we need to use the input\n            // value as we may need to parse user input so we can't use the _selectedDate value.\n            let oldLocale = \"en-us\";\n\n            datepicker.addEventListener('blur', tryCatchWrapper(e => {\n                if (!e.target.value && e.target.invalid) {\n                    console.warn(\"Invalid value in the DatePicker.\");\n                }\n            }));\n\n            const cleanString = tryCatchWrapper(function (string) {\n                // Clear any non ascii characters from the date string,\n                // mainly the LEFT-TO-RIGHT MARK.\n                // This is a problem for many Microsoft browsers where `toLocaleDateString`\n                // adds the LEFT-TO-RIGHT MARK see https://en.wikipedia.org/wiki/Left-to-right_mark\n                return string.replace(/[^\\x00-\\x7F]/g, \"\");\n            });\n\n            const getInputValue = tryCatchWrapper(function () {\n                let inputValue = '';\n                try {\n                    inputValue = datepicker._inputValue;\n                } catch(err) {\n                    /* component not ready: falling back to stored value */\n                    inputValue = datepicker.value || '';\n                }\n                return inputValue;\n            });\n\n            datepicker.$connector.setLocale = tryCatchWrapper(function (locale) {\n\n                try {\n                    // Check whether the locale is supported or not\n                    new Date().toLocaleDateString(locale);\n                } catch (e) {\n                    locale = \"en-US\";\n                    console.warn(\"The locale is not supported, using default locale setting(en-US).\");\n                }\n\n                let currentDate = false;\n                let inputValue = getInputValue();\n                if (datepicker.i18n.parseDate !== 'undefined' && inputValue) {\n                    /* get current date with old parsing */\n                    currentDate = datepicker.i18n.parseDate(inputValue);\n                }\n\n                /* create test-string where to extract parsing regex */\n                let testDate = new Date(Date.UTC(datepicker.$connector.yearPart.initial, datepicker.$connector.monthPart.initial - 1, datepicker.$connector.dayPart.initial));\n                let testString = cleanString(testDate.toLocaleDateString(locale, { timeZone: 'UTC' }));\n                datepicker.$connector.parts.forEach(function (part) {\n                    part.index = testString.indexOf(part.initial);\n                });\n                /* sort items to match correct places in regex groups */\n                datepicker.$connector.parts.sort(FlowDatePickerPart.compare);\n                /* create regex\n                * regex will be the date, so that:\n                * - day-part is '(\\d{1,2})' (1 or 2 digits),\n                * - month-part is '(\\d{1,2})' (1 or 2 digits),\n                * - year-part is '(\\d{1,4})' (1 to 4 digits)\n                *\n                * and everything else is left as is.\n                * For example, us date \"10/20/2010\" => \"(\\d{1,2})/(\\d{1,2})/(\\d{1,4})\".\n                *\n                * The sorting part solves that which part is which (for example,\n                * here the first part is month, second day and third year)\n                *  */\n                datepicker.$connector.regex = testString.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n                    .replace(datepicker.$connector.dayPart.initial, \"(\\\\d{1,2})\")\n                    .replace(datepicker.$connector.monthPart.initial, \"(\\\\d{1,2})\")\n                    .replace(datepicker.$connector.yearPart.initial, \"(\\\\d{1,4})\");\n\n                datepicker.i18n.formatDate = tryCatchWrapper(function (date) {\n                    let rawDate = datepicker._parseDate(`${date.year}-${date.month + 1}-${date.day}`);\n\n                    // Workaround for Safari DST offset issue when using Date.toLocaleDateString().\n                    // This is needed to keep the correct date in formatted result even if Safari\n                    // makes an error of an hour or more in the result with some past dates.\n                    // See https://github.com/vaadin/vaadin-date-picker-flow/issues/126#issuecomment-508169514\n                    rawDate.setHours(12)\n\n                    return cleanString(rawDate.toLocaleDateString(locale));\n                });\n\n                datepicker.i18n.parseDate = tryCatchWrapper(function (dateString) {\n                    dateString = cleanString(dateString);\n\n                    if (dateString.length == 0) {\n                        return;\n                    }\n\n                    let match = dateString.match(datepicker.$connector.regex);\n                    if (match && match.length == 4) {\n                        for (let i = 1; i < 4; i++) {\n                            datepicker.$connector.parts[i-1].value = parseInt(match[i]);\n                        }\n                        return {\n                            day: datepicker.$connector.dayPart.value,\n                            month: datepicker.$connector.monthPart.value - 1,\n                            year: datepicker.$connector.yearPart.value\n                        };\n                    }  else {\n                        return false;\n                    }\n                });\n\n                if (inputValue === \"\") {\n                    oldLocale = locale;\n                } else if (currentDate) {\n                    /* set current date to invoke use of new locale */\n                    datepicker._selectedDate = datepicker._parseDate(`${currentDate.year}-${currentDate.month + 1}-${currentDate.day}`);\n                }\n            });\n        })(datepicker)\n    };\n})();\n"
    },
    {
     "id": 146,
     "name": "../target/flow-frontend/menubarConnector.js",
     "source": "/*\n * Copyright 2000-2019 Vaadin Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\n(function () {\n  const tryCatchWrapper = function (callback) {\n    return window.Vaadin.Flow.tryCatchWrapper(callback, 'Vaadin Menu Bar', 'vaadin-menu-bar');\n  };\n\n  window.Vaadin.Flow.menubarConnector = {\n    initLazy: function (menubar) {\n      if (menubar.$connector) {\n        return;\n      }\n      menubar.$connector = {\n\n        updateButtons: tryCatchWrapper(function () {\n          if (!menubar.shadowRoot) {\n            // workaround for https://github.com/vaadin/flow/issues/5722\n            setTimeout(() => menubar.$connector.updateButtons());\n            return;\n          }\n\n          // Propagate disabled state from items to parent buttons\n          menubar.items.forEach(item => item.disabled = item.component.disabled);\n\n          // Remove hidden items entirely from the array. Just hiding them\n          // could cause the overflow button to be rendered without items.\n          // resetContent needs to be called to make buttons visible again.\n          //\n          // The items-prop needs to be set even when all items are visible\n          // to update the disabled state and re-render buttons.\n          menubar.items = menubar.items.filter(item => !item.component.hidden);\n\n          // Propagate click events from the menu buttons to the item components\n          menubar._buttons.forEach(button => {\n            if (button.item && button.item.component) {\n              button.addEventListener('click', e => {\n                if (e.composedPath().indexOf(button.item.component) === -1) {\n                  button.item.component.click();\n                }\n              });\n            }\n          });\n        })\n      };\n    }\n  };\n})();\n"
    },
    {
     "id": 147,
     "name": "../target/flow-frontend/selectConnector.js",
     "source": "(function () {\n    const tryCatchWrapper = function (callback) {\n        return window.Vaadin.Flow.tryCatchWrapper(callback, 'Vaadin Select', 'vaadin-select');\n    };\n\n    window.Vaadin.Flow.selectConnector = {\n        initLazy: select => tryCatchWrapper(function (select) {\n            const _findListBoxElement = tryCatchWrapper(function () {\n                for (let i = 0; i < select.childElementCount; i++) {\n                    const child = select.children[i];\n                    if (\"VAADIN-LIST-BOX\" === child.tagName.toUpperCase()) {\n                        return child;\n                    }\n                }\n            });\n\n            // do not init this connector twice for the given select\n            if (select.$connector) {\n                return;\n            }\n\n            select.$connector = {};\n\n            select.renderer = tryCatchWrapper(function (root) {\n                const listBox = _findListBoxElement();\n                if (listBox) {\n                    if (root.firstChild) {\n                        root.removeChild(root.firstChild);\n                    }\n                    root.appendChild(listBox);\n                }\n            });\n        })(select)\n    };\n})();\n"
    },
    {
     "id": 148,
     "name": "../target/flow-frontend/timepickerConnector.js",
     "source": "(function () {\n    const tryCatchWrapper = function (callback) {\n        return window.Vaadin.Flow.tryCatchWrapper(callback, 'Vaadin Time Picker', 'vaadin-time-picker');\n    };\n\n    // Execute callback when predicate returns true.\n    // Try again later if predicate returns false.\n    function when(predicate, callback, timeout = 0) {\n        if (predicate()) {\n            callback();\n        } else {\n            setTimeout(() => when(predicate, callback, 200), timeout);\n        }\n    }\n\n    window.Vaadin.Flow.timepickerConnector = {\n        initLazy: timepicker => tryCatchWrapper(function (timepicker) {\n            // Check whether the connector was already initialized for the timepicker\n            if (timepicker.$connector) {\n                return;\n            }\n\n            timepicker.$connector = {};\n\n            const getAmPmString = function (locale, testTime) {\n                const testTimeString = testTime.toLocaleTimeString(locale);\n                // AM/PM string is anything from one letter in eastern arabic to standard two letters,\n                // to having space in between, dots ...\n                // cannot disqualify whitespace since some locales use a. m. / p. m.\n                // TODO when more scripts support is added (than Arabic), need to exclude those numbers too\n                const endWithAmPmRegex = /[^\\d\\u0660-\\u0669]+$/g;\n                let amPmString = testTimeString.match(endWithAmPmRegex);\n                if (!amPmString) {\n                    // eg. chinese (and some else too) starts with am/pm\n                    amPmString = testTimeString.match(/^[^\\d\\u0660-\\u0669]+/g);\n                }\n                if (amPmString) {\n                    amPmString = amPmString[0].trim();\n                }\n                return amPmString;\n            };\n            const testPmTime = new Date('August 19, 1975 23:15:30');\n            const testAmTime = new Date('August 19, 1975 05:15:30');\n\n            const getPmString = function (locale) {\n                return getAmPmString(locale, testPmTime);\n\n            };\n            const getAmString = function (locale) {\n                return getAmPmString(locale, testAmTime);\n            };\n\n            // map from unicode eastern arabic number characters to arabic numbers\n            const arabicDigitMap = {\n                '\\\\u0660': '0',\n                '\\\\u0661': '1',\n                '\\\\u0662': '2',\n                '\\\\u0663': '3',\n                '\\\\u0664': '4',\n                '\\\\u0665': '5',\n                '\\\\u0666': '6',\n                '\\\\u0667': '7',\n                '\\\\u0668': '8',\n                '\\\\u0669': '9'\n            };\n\n            // parses eastern arabic number characters to arabic numbers (0-9)\n            const anyNumberCharToArabicNumberReplacer = function (charsToReplace) {\n                return charsToReplace.replace(/[\\u0660-\\u0669]/g, function (char) {\n                    const unicode = '\\\\u0' + char.charCodeAt(0).toString(16);\n                    return arabicDigitMap[unicode];\n                });\n            };\n\n            const parseAnyCharsToInt = function (anyNumberChars) {\n                return parseInt(anyNumberCharToArabicNumberReplacer(anyNumberChars));\n            };\n\n            const parseMillisecondCharsToInt =function (millisecondChars) {\n                millisecondChars = anyNumberCharToArabicNumberReplacer(millisecondChars);\n                // digits are either .1 .01 or .001 so need to \"shift\"\n                if (millisecondChars.length === 1) {\n                    millisecondChars += \"00\";\n                } else if (millisecondChars.length === 2) {\n                    millisecondChars += \"0\";\n                }\n                return parseInt(millisecondChars);\n            };\n\n            // detecting milliseconds from input, expects am/pm removed from end, eg. .0 or .00 or .000\n            const millisecondRegExp = /[[\\.][\\d\\u0660-\\u0669]{1,3}$/;\n\n            timepicker.$connector.setLocale = tryCatchWrapper(function (locale) {\n                // capture previous value if any\n                let previousValueObject;\n                if (timepicker.value && timepicker.value !== '') {\n                    previousValueObject = timepicker.i18n.parseTime(timepicker.value);\n                }\n\n                try {\n                    // Check whether the locale is supported by the browser or not\n                    testPmTime.toLocaleTimeString(locale);\n                } catch (e) {\n                    locale = \"en-US\";\n                    // FIXME should do a callback for server to throw an exception ?\n                    throw new Error(\"vaadin-time-picker: The locale \" + locale + \" is not supported, falling back to default locale setting(en-US).\");\n                }\n\n                // 1. 24 or 12 hour clock, if latter then what are the am/pm strings ?\n                const pmString = getPmString(locale);\n                const amString = getAmString(locale);\n\n                // 2. What is the separator ?\n                let localeTimeString = testPmTime.toLocaleTimeString(locale);\n                // since the next regex picks first non-number-whitespace, need to discard possible PM from beginning (eg. chinese locale)\n                if (pmString && localeTimeString.startsWith(pmString)) {\n                    localeTimeString = localeTimeString.replace(pmString, '');\n                }\n                const separator = localeTimeString.match(/[^\\u0660-\\u0669\\s\\d]/);\n\n                // 3. regexp that allows to find the numbers with optional separator and continuing searching after it\n                const numbersRegExp = new RegExp('([\\\\d\\\\u0660-\\\\u0669]){1,2}(?:' + separator + ')?', 'g');\n\n                const includeSeconds = function () {\n                    return timepicker.step && timepicker.step < 60;\n                };\n\n                const includeMilliSeconds = function () {\n                    return timepicker.step && timepicker.step < 1;\n                };\n\n                // the web component expects the correct granularity used for the time string,\n                // thus need to format the time object in correct granularity by passing the format options\n                let cachedStep;\n                let cachedOptions;\n                const getTimeFormatOptions = function () {\n                    // calculate the format options if none done cached or step has changed\n                    if (!cachedOptions || cachedStep !== timepicker.step) {\n                        cachedOptions = {\n                            hour: \"numeric\",\n                            minute: \"numeric\",\n                            second: includeSeconds() ? \"numeric\" : undefined,\n                        };\n                        cachedStep = timepicker.step;\n                    }\n                    return cachedOptions;\n                };\n\n                const formatMilliseconds = function (localeTimeString, milliseconds) {\n                    if (includeMilliSeconds()) {\n                        // might need to inject milliseconds between seconds and AM/PM\n                        let cleanedTimeString = localeTimeString;\n                        if (localeTimeString.endsWith(amString)) {\n                            cleanedTimeString = localeTimeString.replace(\" \" + amString, '');\n                        } else if (localeTimeString.endsWith(pmString)) {\n                            cleanedTimeString = localeTimeString.replace(\" \" + pmString, '');\n                        }\n                        if (milliseconds) {\n                            let millisecondsString = milliseconds < 10 ? \"0\" : \"\";\n                            millisecondsString += milliseconds < 100 ? \"0\" : \"\";\n                            millisecondsString += milliseconds;\n                            cleanedTimeString += \".\" + millisecondsString;\n                        } else {\n                            cleanedTimeString += \".000\";\n                        }\n                        if (localeTimeString.endsWith(amString)) {\n                            cleanedTimeString = cleanedTimeString + \" \" + amString;\n                        } else if (localeTimeString.endsWith(pmString)) {\n                            cleanedTimeString = cleanedTimeString + \" \" + pmString;\n                        }\n                        return cleanedTimeString;\n                    }\n                    return localeTimeString;\n                };\n\n                let cachedTimeString;\n                let cachedTimeObject;\n\n                timepicker.i18n = {\n                    formatTime: tryCatchWrapper(function (timeObject) {\n                        if (timeObject) {\n                            let timeToBeFormatted = new Date();\n                            timeToBeFormatted.setHours(timeObject.hours);\n                            timeToBeFormatted.setMinutes(timeObject.minutes);\n                            timeToBeFormatted.setSeconds(timeObject.seconds !== undefined ? timeObject.seconds : 0);\n                            let localeTimeString = timeToBeFormatted.toLocaleTimeString(locale, getTimeFormatOptions());\n                            // milliseconds not part of the time format API\n                            localeTimeString = formatMilliseconds(localeTimeString, timeObject.milliseconds);\n                            return localeTimeString;\n                        }\n                    }),\n                    parseTime: tryCatchWrapper(function (timeString) {\n                        if (timeString && timeString === cachedTimeString && cachedTimeObject) {\n                            return cachedTimeObject;\n                        }\n                        if (timeString) {\n                            const pm = timeString.search(pmString);\n                            const am = timeString.search(amString);\n                            let numbersOnlyTimeString = timeString.replace(amString, '').replace(pmString, '').trim();\n                            // reset regex to beginning or things can explode when the length of the input changes\n                            numbersRegExp.lastIndex = 0;\n                            let hours = numbersRegExp.exec(numbersOnlyTimeString);\n                            if (hours) {\n                                hours = parseAnyCharsToInt(hours[0].replace(separator, ''));\n                                // handle 12 am -> 0\n                                // do not do anything if am & pm are not used or if those are the same,\n                                // as with locale bg-BG there is always ч. at the end of the time\n                                if (pm !== am) {\n                                    if (hours === 12 && am !== -1) {\n                                        hours = 0;\n                                    } else {\n                                        hours += (pm !== -1 && hours !== 12 ? 12 : 0)\n                                    }\n                                }\n                                const minutes = numbersRegExp.exec(numbersOnlyTimeString);\n                                const seconds = minutes && numbersRegExp.exec(numbersOnlyTimeString);\n                                // reset to end or things can explode\n                                let milliseconds = seconds && includeMilliSeconds() && millisecondRegExp.exec(numbersOnlyTimeString);\n                                // handle case where last numbers are seconds and . is the separator (invalid regexp match)\n                                if (milliseconds && milliseconds['index'] <= seconds['index']) {\n                                    milliseconds = undefined;\n                                }\n                                // hours is a number at this point, others are either arrays or null\n                                // the string in [0] from the arrays includes the separator too\n                                cachedTimeObject = hours !== undefined && {\n                                    hours: hours,\n                                    minutes: minutes ? parseAnyCharsToInt(minutes[0].replace(separator, '')) : 0,\n                                    seconds: seconds ? parseAnyCharsToInt(seconds[0].replace(separator, '')) : 0,\n                                    milliseconds: minutes && seconds && milliseconds ? parseMillisecondCharsToInt(milliseconds[0].replace('.', '')) : 0\n                                };\n                                cachedTimeString = timeString;\n                                return cachedTimeObject;\n                            }\n                            // when nothing is returned, the component shows the invalid state for the input\n                        }\n                    })\n                };\n\n                if (previousValueObject) {\n                    when(() => timepicker.shadowRoot, () => {\n                        const newValue = timepicker.i18n.formatTime(previousValueObject);\n                        // FIXME works but uses private API, needs fixes in web component\n                        if (timepicker.__inputElement.value !== newValue) {\n                            timepicker.__inputElement.value = newValue;\n                            timepicker.__dropdownElement.value = newValue;\n                            timepicker.__onInputChange();\n                        }\n                    });\n                }\n            });\n        })(timepicker)\n    };\n})();\n"
    },
    {
     "id": 149,
     "name": "../target/flow-frontend/vaadin-big-decimal-field.js",
     "source": "/*\n * Copyright 2000-2019 Vaadin Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n(function() {\n\n  let memoizedTemplate;\n\n  customElements.whenDefined('vaadin-text-field').then(() => {\n\n    class BigDecimalFieldElement extends customElements.get('vaadin-text-field') {\n\n      static get template() {\n        if (!memoizedTemplate) {\n          memoizedTemplate = super.template.cloneNode(true);\n          memoizedTemplate.innerHTML +=\n            `<style>\n                  :host {\n                    width: 8em;\n                  }\n\n                  :host([dir=\"rtl\"]) [part=\"input-field\"] {\n                    direction: ltr;\n                  }\n\n                  :host([dir=\"rtl\"]) [part=\"value\"]::placeholder {\n                    direction: rtl;\n                  }\n\n                  :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input)::placeholder {\n                    direction: rtl;\n                  }\n\n                  :host([dir=\"rtl\"]) [part=\"value\"]:-ms-input-placeholder,\n                  :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input):-ms-input-placeholder {\n                    direction: rtl;\n                  }\n\n                  :host([dir=\"rtl\"]:not([has-controls])) [part=\"value\"]::placeholder {\n                    text-align: left;\n                  }\n\n                  :host([dir=\"rtl\"]:not([has-controls])) [part=\"input-field\"] ::slotted(input)::placeholder {\n                    text-align: left;\n                  }\n\n                  :host([dir=\"rtl\"]:not([has-controls])) [part=\"value\"]:-ms-input-placeholder,\n                  :host([dir=\"rtl\"]:not([has-controls])) [part=\"input-field\"] ::slotted(input):-ms-input-placeholder {\n                    text-align: left;\n                  }\n\n                  :host([dir=\"rtl\"]) [part=\"value\"],\n                  :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input) {\n                    --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent, #000 1.25em) !important;\n                  }\n            </style>`;\n        }\n        return memoizedTemplate;\n      }\n\n      static get is() {\n        return 'vaadin-big-decimal-field';\n      }\n\n      static get properties() {\n        return {\n          _decimalSeparator: {\n            type: String,\n            value: '.',\n            observer: '__decimalSeparatorChanged'\n          }\n        }\n      }\n\n      ready() {\n        super.ready();\n        this.inputElement.setAttribute('inputmode', 'decimal');\n      }\n\n      __decimalSeparatorChanged(separator, oldSeparator) {\n        this._enabledCharPattern = '[\\\\d-+' + separator + ']';\n\n        if (this.value && oldSeparator) {\n          this.value = this.value.split(oldSeparator).join(separator);\n        }\n      }\n\n    }\n\n    customElements.define(BigDecimalFieldElement.is, BigDecimalFieldElement);\n\n  });\n})();\n"
    },
    {
     "id": 186,
     "name": "../target/frontend/generated-flow-imports-fallback.js + 3 modules",
     "modules": [
      {
       "name": "../target/frontend/generated-flow-imports-fallback.js",
       "source": "export const addCssBlock = function(block, before = false) {\n const tpl = document.createElement('template');\n tpl.innerHTML = block;\n document.head[before ? 'insertBefore' : 'appendChild'](tpl.content, document.head.firstChild);\n};\nimport '@polymer/iron-icon/iron-icon.js';\nimport '@polymer/iron-list/iron-list.js';\nimport '@vaadin/flow-frontend/comboBoxConnector.js';\nimport '@vaadin/flow-frontend/datepickerConnector.js';\nimport '@vaadin/flow-frontend/ironListConnector.js';\nimport '@vaadin/flow-frontend/ironListStyles.js';\nimport '@vaadin/flow-frontend/menubarConnector.js';\nimport '@vaadin/flow-frontend/selectConnector.js';\nimport '@vaadin/flow-frontend/timepickerConnector.js';\nimport '@vaadin/flow-frontend/vaadin-big-decimal-field.js';\nimport '@vaadin/vaadin-accordion/theme/lumo/vaadin-accordion.js';\nimport '@vaadin/vaadin-app-layout/theme/lumo/vaadin-app-layout.js';\nimport '@vaadin/vaadin-app-layout/theme/lumo/vaadin-drawer-toggle.js';\nimport '@vaadin/vaadin-avatar/theme/lumo/vaadin-avatar-group.js';\nimport '@vaadin/vaadin-avatar/theme/lumo/vaadin-avatar.js';\nimport '@vaadin/vaadin-checkbox/theme/lumo/vaadin-checkbox-group.js';\nimport '@vaadin/vaadin-combo-box/theme/lumo/vaadin-combo-box.js';\nimport '@vaadin/vaadin-custom-field/theme/lumo/vaadin-custom-field.js';\nimport '@vaadin/vaadin-date-picker/theme/lumo/vaadin-date-picker.js';\nimport '@vaadin/vaadin-date-time-picker/theme/lumo/vaadin-date-time-picker.js';\nimport '@vaadin/vaadin-details/theme/lumo/vaadin-details.js';\nimport '@vaadin/vaadin-form-layout/theme/lumo/vaadin-form-item.js';\nimport '@vaadin/vaadin-form-layout/theme/lumo/vaadin-form-layout.js';\nimport '@vaadin/vaadin-grid/theme/lumo/vaadin-grid-tree-toggle.js';\nimport '@vaadin/vaadin-item/theme/lumo/vaadin-item.js';\nimport '@vaadin/vaadin-list-box/theme/lumo/vaadin-list-box.js';\nimport '@vaadin/vaadin-login/theme/lumo/vaadin-login-form.js';\nimport '@vaadin/vaadin-login/theme/lumo/vaadin-login-overlay.js';\nimport '@vaadin/vaadin-menu-bar/theme/lumo/vaadin-menu-bar.js';\nimport '@vaadin/vaadin-notification/theme/lumo/vaadin-notification.js';\nimport '@vaadin/vaadin-ordered-layout/vaadin-scroller.js';\nimport '@vaadin/vaadin-progress-bar/theme/lumo/vaadin-progress-bar.js';\nimport '@vaadin/vaadin-radio-button/theme/lumo/vaadin-radio-button.js';\nimport '@vaadin/vaadin-radio-button/theme/lumo/vaadin-radio-group.js';\nimport '@vaadin/vaadin-select/theme/lumo/vaadin-select.js';\nimport '@vaadin/vaadin-split-layout/theme/lumo/vaadin-split-layout.js';\nimport '@vaadin/vaadin-tabs/theme/lumo/vaadin-tab.js';\nimport '@vaadin/vaadin-tabs/theme/lumo/vaadin-tabs.js';\nimport '@vaadin/vaadin-text-field/theme/lumo/vaadin-email-field.js';\nimport '@vaadin/vaadin-text-field/theme/lumo/vaadin-integer-field.js';\nimport '@vaadin/vaadin-text-field/theme/lumo/vaadin-number-field.js';\nimport '@vaadin/vaadin-text-field/theme/lumo/vaadin-password-field.js';\nimport '@vaadin/vaadin-text-field/theme/lumo/vaadin-text-area.js';\nimport '@vaadin/vaadin-time-picker/theme/lumo/vaadin-time-picker.js';\nimport '@vaadin/vaadin-upload/src/vaadin-upload-file.js';\nimport '@vaadin/vaadin-upload/theme/lumo/vaadin-upload.js';"
      },
      {
       "name": "../target/flow-frontend/comboBoxConnector.js",
       "source": "import { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { timeOut } from '@polymer/polymer/lib/utils/async.js';\nimport { ComboBoxPlaceholder } from '@vaadin/vaadin-combo-box/src/vaadin-combo-box-placeholder.js';\n\n(function () {\n    const tryCatchWrapper = function (callback) {\n        return window.Vaadin.Flow.tryCatchWrapper(callback, 'Vaadin Combo Box', 'vaadin-combo-box');\n    };\n\n    window.Vaadin.Flow.comboBoxConnector = {\n        initLazy: comboBox => tryCatchWrapper(function (comboBox) {\n\n            // Check whether the connector was already initialized for the ComboBox\n            if (comboBox.$connector) {\n                return;\n            }\n\n            comboBox.$connector = {};\n\n            // holds pageIndex -> callback pairs of subsequent indexes (current active range)\n            const pageCallbacks = {};\n            let cache = {};\n            let lastFilter = '';\n            const placeHolder = new window.Vaadin.ComboBoxPlaceholder();\n            const MAX_RANGE_COUNT = Math.max(comboBox.pageSize * 2, 500); // Max item count in active range\n\n            const serverFacade = (() => {\n                // Private variables\n                let lastFilterSentToServer = '';\n                let dataCommunicatorResetNeeded = false;\n\n                // Public methods\n                const needsDataCommunicatorReset = () => dataCommunicatorResetNeeded = true;\n                const getLastFilterSentToServer = () => lastFilterSentToServer;\n                const requestData = (startIndex, endIndex, params) => {\n                    const count = endIndex - startIndex;\n                    const filter = params.filter;\n\n                    comboBox.$server.setRequestedRange(startIndex, count, filter);\n                    lastFilterSentToServer = filter;\n                    if(dataCommunicatorResetNeeded) {\n                        comboBox.$server.resetDataCommunicator();\n                        dataCommunicatorResetNeeded = false;\n                    }\n                };\n\n                return {needsDataCommunicatorReset, getLastFilterSentToServer, requestData};\n\n            })();\n\n            const clearPageCallbacks = (pages = Object.keys(pageCallbacks)) => {\n                // Flush and empty the existing requests\n                pages.forEach(page => {\n                    pageCallbacks[page]([], comboBox.size);\n                    delete pageCallbacks[page];\n\n                    // Empty the comboBox's internal cache without invoking observers by filling\n                    // the filteredItems array with placeholders (comboBox will request for data when it\n                    // encounters a placeholder)\n                    const pageStart = parseInt(page) * comboBox.pageSize;\n                    const pageEnd = pageStart + comboBox.pageSize;\n                    const end = Math.min(pageEnd, comboBox.filteredItems.length);\n                    for (let i = pageStart; i < end; i++) {\n                        comboBox.filteredItems[i] = placeHolder;\n                    }\n                });\n            }\n\n            comboBox.dataProvider = function (params, callback) {\n                if (params.pageSize != comboBox.pageSize) {\n                    throw 'Invalid pageSize';\n                }\n\n                if (comboBox._clientSideFilter) {\n                    // For clientside filter we first make sure we have all data which we also\n                    // filter based on comboBox.filter. While later we only filter clientside data.\n\n                    if (cache[0]) {\n                        performClientSideFilter(cache[0], callback)\n                        return;\n\n                    } else {\n                        // If client side filter is enabled then we need to first ask all data\n                        // and filter it on client side, otherwise next time when user will\n                        // input another filter, eg. continue to type, the local cache will be only\n                        // what was received for the first filter, which may not be the whole\n                        // data from server (keep in mind that client side filter is enabled only\n                        // when the items count does not exceed one page).\n                        params.filter = \"\";\n                    }\n                }\n\n                const filterChanged = params.filter !== lastFilter;\n                if (filterChanged) {\n                    cache = {};\n                    lastFilter = params.filter;\n                    this._debouncer = Debouncer.debounce(\n                        this._debouncer,\n                        timeOut.after(500),\n                        () => {\n                            if (serverFacade.getLastFilterSentToServer() === params.filter) {\n                                // Fixes the case when the filter changes\n                                // to something else and back to the original value\n                                // within debounce timeout, and the\n                                // DataCommunicator thinks it doesn't need to send data\n                                serverFacade.needsDataCommunicatorReset();\n                            }\n                            if(params.filter !== lastFilter) {\n                                throw new Error(\"Expected params.filter to be '\"\n                                    + lastFilter + \"' but was '\" + params.filter + \"'\");\n                            }\n                            // Call the method again after debounce.\n                            clearPageCallbacks();\n                            comboBox.dataProvider(params, callback)\n                        });\n                    return;\n                }\n\n                if (cache[params.page]) {\n                    // This may happen after skipping pages by scrolling fast\n                    commitPage(params.page, callback);\n                } else {\n                    pageCallbacks[params.page] = callback\n                    const activePages = Object.keys(pageCallbacks).map(page => parseInt(page));\n                    const rangeMin = Math.min(...activePages);\n                    const rangeMax = Math.max(...activePages);\n\n                    if (activePages.length * params.pageSize > MAX_RANGE_COUNT) {\n                        if (params.page === rangeMin) {\n                            clearPageCallbacks([String(rangeMax)]);\n                        } else {\n                            clearPageCallbacks([String(rangeMin)]);\n                        }\n                        comboBox.dataProvider(params, callback);\n                    } else if (rangeMax - rangeMin + 1 !== activePages.length) {\n                        // Wasn't a sequential page index, clear the cache so combo-box will request for new pages\n                        clearPageCallbacks();\n                    } else {\n                        // The requested page was sequential, extend the requested range\n                        const startIndex = params.pageSize * rangeMin;\n                        const endIndex = params.pageSize * (rangeMax + 1);\n\n                        if (!this._debouncer || !this._debouncer.isActive()) {\n                            serverFacade.requestData(startIndex, endIndex, params);\n                        } else {\n                            this._debouncer = Debouncer.debounce(\n                                this._debouncer,\n                                timeOut.after(200),\n                                () => serverFacade.requestData(startIndex, endIndex, params));\n                        }\n                    }\n                }\n            }\n\n            comboBox.$connector.filter = tryCatchWrapper(function (item, filter) {\n                filter = filter ? filter.toString().toLowerCase() : '';\n                return comboBox._getItemLabel(item).toString().toLowerCase().indexOf(filter) > -1;\n            });\n\n            comboBox.$connector.set = tryCatchWrapper(function (index, items, filter) {\n                if (filter != serverFacade.getLastFilterSentToServer()) {\n                    return;\n                }\n\n                if (index % comboBox.pageSize != 0) {\n                    throw 'Got new data to index ' + index + ' which is not aligned with the page size of ' + comboBox.pageSize;\n                }\n\n                if (index === 0 && items.length === 0 && pageCallbacks[0]) {\n                    // Makes sure that the dataProvider callback is called even when server\n                    // returns empty data set (no items match the filter).\n                    cache[0] = [];\n                    return;\n                }\n\n                const firstPageToSet = index / comboBox.pageSize;\n                const updatedPageCount = Math.ceil(items.length / comboBox.pageSize);\n\n                for (let i = 0; i < updatedPageCount; i++) {\n                    let page = firstPageToSet + i;\n                    let slice = items.slice(i * comboBox.pageSize, (i + 1) * comboBox.pageSize);\n\n                    cache[page] = slice;\n                }\n            });\n\n            comboBox.$connector.updateData = tryCatchWrapper(function (items) {\n                // IE11 doesn't work with the transpiled version of the forEach.\n                for (let i = 0; i < items.length; i++) {\n                    let item = items[i];\n\n                    for (let j = 0; j < comboBox.filteredItems.length; j++) {\n                        if (comboBox.filteredItems[j].key === item.key) {\n                            comboBox.set('filteredItems.' + j, item);\n                            break;\n                        }\n                    }\n                }\n            });\n\n            comboBox.$connector.updateSize = tryCatchWrapper(function (newSize) {\n                if (!comboBox._clientSideFilter) {\n                    // FIXME: It may be that this size set is unnecessary, since when\n                    // providing data to combobox via callback we may use data's size.\n                    // However, if this size reflect the whole data size, including\n                    // data not fetched yet into client side, and combobox expect it\n                    // to be set as such, the at least, we don't need it in case the\n                    // filter is clientSide only, since it'll increase the height of\n                    // the popup at only at first user filter to this size, while the\n                    // filtered items count are less.\n                    comboBox.size = newSize;\n                }\n            });\n\n            comboBox.$connector.reset = tryCatchWrapper(function () {\n                clearPageCallbacks();\n                cache = {};\n                comboBox.clearCache();\n            });\n\n            comboBox.$connector.confirm = tryCatchWrapper(function (id, filter) {\n\n                if (filter != serverFacade.getLastFilterSentToServer()) {\n                    return;\n                }\n\n                // We're done applying changes from this batch, resolve pending\n                // callbacks\n                let activePages = Object.getOwnPropertyNames(pageCallbacks);\n                for (let i = 0; i < activePages.length; i++) {\n                    let page = activePages[i];\n\n                    if (cache[page]) {\n                        commitPage(page, pageCallbacks[page]);\n                    }\n                }\n\n                // Let server know we're done\n                comboBox.$server.confirmUpdate(id);\n            });\n\n            customElements.whenDefined('vaadin-combo-box').then(tryCatchWrapper(() => {\n                const _isItemSelected = comboBox.$.overlay._isItemSelected;\n                // Override comboBox's _isItemSelected logic to handle remapped items\n                comboBox.$.overlay._isItemSelected = (item, selectedItem, itemIdPath) => {\n                    let selected = _isItemSelected.call(comboBox, item, selectedItem, itemIdPath);\n\n                    if (comboBox._selectedKey) {\n                        if (comboBox.filteredItems.indexOf(selectedItem) > -1) {\n                            delete comboBox._selectedKey;\n                        } else {\n                            selected = selected || item.key === comboBox._selectedKey;\n                        }\n                    }\n\n                    return selected;\n                }\n            }));\n\n\n            comboBox.$connector.enableClientValidation = tryCatchWrapper(function( enable ){\n                let input = null;\n                if ( comboBox.$ ){\n                    input = comboBox.$[\"input\"];\n                }\n                if (input){\n                    if ( enable){\n                        enableClientValidation(comboBox);\n                        enableTextFieldClientValidation(input);\n                    }\n                    else {\n                        disableClientValidation(comboBox);\n                        disableTextFieldClientValidation(input,comboBox );\n                    }\n\n                    comboBox.validate();\n                }\n                else {\n                    setTimeout( function(){\n                        comboBox.$connector.enableClientValidation(enable);\n                    }, 10);\n                }\n            });\n\n            const disableClientValidation =  tryCatchWrapper(function (combo){\n                if ( typeof combo.$checkValidity == 'undefined'){\n                    combo.$checkValidity = combo.checkValidity;\n                    combo.checkValidity = function() { return !comboBox.invalid; };\n                }\n                if ( typeof combo.$validate == 'undefined'){\n                    combo.$validate = combo.validate;\n                    combo.validate = function() {\n                        return !(comboBox.focusElement.invalid = comboBox.invalid);\n                    };\n                }\n            });\n\n            const disableTextFieldClientValidation =  tryCatchWrapper(function (field, comboBox){\n                if ( typeof field.$checkValidity == 'undefined'){\n                    field.$checkValidity = field.checkValidity;\n                    field.checkValidity = function() { return !comboBox.invalid; };\n                }\n            });\n\n            const enableTextFieldClientValidation = tryCatchWrapper(function (field){\n                if ( field.$checkValidity ){\n                    field.checkValidity = field.$checkValidity;\n                    delete field.$checkValidity;\n                }\n            });\n\n            const enableClientValidation = tryCatchWrapper(function (combo){\n                if ( combo.$checkValidity ){\n                    combo.checkValidity = combo.$checkValidity;\n                    delete combo.$checkValidity;\n                }\n                if ( combo.$validate ){\n                    combo.validate = combo.$validate;\n                    delete combo.$validate;\n                }\n            });\n\n            const commitPage = tryCatchWrapper(function (page, callback) {\n                let data = cache[page];\n\n                if (comboBox._clientSideFilter) {\n                    performClientSideFilter(data, callback)\n\n                } else {\n                    // Remove the data if server-side filtering, but keep it for client-side\n                    // filtering\n                    delete cache[page];\n\n                    // FIXME: It may be that we ought to provide data.length instead of\n                    // comboBox.size and remove updateSize function.\n                    callback(data, comboBox.size);\n                }\n            });\n\n            // Perform filter on client side (here) using the items from specified page\n            // and submitting the filtered items to specified callback.\n            // The filter used is the one from combobox, not the lastFilter stored since\n            // that may not reflect user's input.\n            const performClientSideFilter = tryCatchWrapper(function (page, callback) {\n\n                let filteredItems = page;\n\n                if (comboBox.filter) {\n                    filteredItems = page.filter(item =>\n                        comboBox.$connector.filter(item, comboBox.filter));\n                }\n\n                callback(filteredItems, filteredItems.length);\n            });\n\n            // https://github.com/vaadin/vaadin-combo-box-flow/issues/232\n            comboBox.addEventListener('opened-changed', tryCatchWrapper(e =>\n                {e.detail.value && (comboBox.$.overlay._selector._manageFocus = () => {})}));\n\n            // Prevent setting the custom value as the 'value'-prop automatically\n            comboBox.addEventListener('custom-value-set', tryCatchWrapper(e => e.preventDefault()));\n        })(comboBox)\n    }\n})();\n\nwindow.Vaadin.ComboBoxPlaceholder = ComboBoxPlaceholder;\n"
      },
      {
       "name": "../target/flow-frontend/ironListConnector.js",
       "source": "import { Debouncer } from \"@polymer/polymer/lib/utils/debounce.js\";\nimport { timeOut } from \"@polymer/polymer/lib/utils/async.js\";\n\nwindow.Vaadin.Flow.ironListConnector = {\n  initLazy: function(list) {\n    // Check whether the connector was already initialized for the Iron list\n    if (list.$connector) {\n      return;\n    }\n\n    const extraItemsBuffer = 20;\n\n    let lastRequestedRange = [0, 0];\n\n    list.$connector = {};\n    list.$connector.placeholderItem = { __placeholder: true };\n\n    const updateRequestedItem = function() {\n      /*\n       * TODO Iron list seems to do a small index adjustment after scrolling\n       * has stopped. This causes a redundant request to be sent to make a\n       * corresponding minimal change to the buffer. We should avoid these\n       * requests by making the logic skip doing a request if the available\n       * buffer is within some tolerance compared to the requested buffer.\n       */\n      let firstNeededItem = list._virtualStart;\n      let lastNeededItem = list._virtualEnd;\n\n      let first = Math.max(0, firstNeededItem - extraItemsBuffer);\n      let last = Math.min(lastNeededItem + extraItemsBuffer, list.items.length);\n\n      if (lastRequestedRange[0] != first || lastRequestedRange[1] != last) {\n        lastRequestedRange = [first, last];\n        const count = 1 + last - first;\n        list.$server.setRequestedRange(first, count);\n      }\n    };\n\n    let requestDebounce;\n    const scheduleUpdateRequest = function() {\n      requestDebounce = Debouncer.debounce(\n        requestDebounce,\n        timeOut.after(10),\n        updateRequestedItem\n      );\n    };\n\n    /*\n     * Ensure all items that iron list will be looking at are actually defined.\n     * If this is not done, the component will keep looking ahead through the\n     * array until finding enough present items to render. In our case, that's\n     * a really slow way of achieving nothing since the rest of the array is\n     * empty.\n     */\n    const originalAssign = list._assignModels;\n    list._assignModels = function() {\n      const tempItems = [];\n      const start = list._virtualStart;\n      const count = Math.min(list.items.length, list._physicalCount);\n      for (let i = 0; i < count; i++) {\n        if (list.items[start + i] === undefined) {\n          tempItems.push(i);\n          list.items[start + i] = list.$connector.placeholderItem;\n        }\n      }\n\n      originalAssign.apply(list, arguments);\n\n      /*\n       * TODO: Keep track of placeholder items in the \"active\" range and\n       * avoid deleting them so that the next pass will be faster. Instead,\n       * the end of each pass should only delete placeholders that are no\n       * longer needed.\n       */\n      for (let i = 0; i < tempItems.length; i++) {\n        delete list.items[start + tempItems[i]];\n      }\n\n      /*\n       * Check if we need to do anything once things have settled down.\n       * This method is called multiple times in sequence for the same user\n       * action, but we only want to do the check once.\n       */\n      scheduleUpdateRequest();\n    };\n\n    list.items = [];\n\n    list.$connector.set = function(index, items) {\n      for (let i = 0; i < items.length; i++) {\n        const itemsIndex = index + i;\n        list.items[itemsIndex] = items[i];\n      }\n      // Do a full render since dirty detection for splices is broken\n      list._render();\n    };\n\n    list.$connector.updateData = function(items) {\n      // Find the items by key inside the list update them\n      const oldItems = list.items;\n      const mapByKey = {};\n      let leftToUpdate = items.length;\n\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        mapByKey[item.key] = item;\n      }\n\n      for (let i = 0; i < oldItems.length; i++) {\n        const oldItem = oldItems[i];\n        const newItem = mapByKey[oldItem.key];\n        if (newItem) {\n          list.items[i] = newItem;\n          list.notifyPath(\"items.\" + i);\n          leftToUpdate--;\n          if (leftToUpdate == 0) {\n            break;\n          }\n        }\n      }\n    };\n\n    list.$connector.clear = function(index, length) {\n      for (let i = 0; i < length; i++) {\n        const itemsIndex = index + i;\n        delete list.items[itemsIndex];\n\n        // Most likely a no-op since the affected index isn't in view\n        list.notifyPath(\"items.\" + itemsIndex);\n      }\n    };\n\n    list.$connector.updateSize = function(newSize) {\n      const delta = newSize - list.items.length;\n      if (delta > 0) {\n        list.items.length = newSize;\n\n        list.notifySplices(\"items\", [\n          {\n            index: newSize - delta,\n            removed: [],\n            addedCount: delta,\n            object: list.items,\n            type: \"splice\"\n          }\n        ]);\n      } else if (delta < 0) {\n        const removed = list.items.slice(newSize, list.items.length);\n        list.items.splice(newSize);\n        list.notifySplices(\"items\", [\n          {\n            index: newSize,\n            removed: removed,\n            addedCount: 0,\n            object: list.items,\n            type: \"splice\"\n          }\n        ]);\n      }\n    };\n\n    list.$connector.setPlaceholderItem = function(placeholderItem) {\n      if (!placeholderItem) {\n        placeholderItem = {};\n      }\n      placeholderItem.__placeholder = true;\n      list.$connector.placeholderItem = placeholderItem;\n    };\n  }\n};\n"
      },
      {
       "name": "../target/flow-frontend/ironListStyles.js",
       "source": "import '@polymer/polymer/lib/elements/custom-style.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<style>\n/* Fixes zero width in flex layouts */\niron-list {\n  flex: auto;\n  align-self: stretch;\n}\n</style>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
      }
     ]
    }
   ]
  },
  {
   "id": 4,
   "names": [],
   "files": [
    "VAADIN/build/vaadin-4-004a579b55987c182205.cache.js"
   ],
   "hash": "651d2ada644153be6fcb",
   "modules": [
    {
     "id": 143,
     "name": "../target/flow-frontend/dndConnector.js",
     "source": "window.Vaadin = window.Vaadin || {};\nwindow.Vaadin.Flow = window.Vaadin.Flow || {};\nwindow.Vaadin.Flow.dndConnector = {\n\n  __ondragenterListener: function (event) {\n    // TODO filter by data type\n    // TODO prevent dropping on itself (by default)\n    const effect = event.currentTarget['__dropEffect'];\n    if (!event.currentTarget.hasAttribute('disabled')) {\n      if (effect) {\n        event.dataTransfer.dropEffect = effect;\n      }\n\n      if (effect && effect !== 'none') {\n        /* #7108: if drag moves on top of drop target's children, first another ondragenter event\n         * is fired and then a ondragleave event. This happens again once the drag\n         * moves on top of another children, or back on top of the drop target element.\n         * Thus need to \"cancel\" the following ondragleave, to not remove class name.\n         * Drop event will happen even when dropped to a child element. */\n        if (event.currentTarget.classList.contains(\"v-drag-over-target\")) {\n          event.currentTarget['__skip-leave'] = true;\n        } else {\n          event.currentTarget.classList.add(\"v-drag-over-target\");\n        }\n        // enables browser specific pseudo classes (at least FF)\n        event.preventDefault();\n        event.stopPropagation(); // don't let parents know\n      }\n    }\n  },\n\n  __ondragoverListener: function (event) {\n    // TODO filter by data type\n    // TODO filter by effectAllowed != dropEffect due to Safari & IE11 ?\n    if (!event.currentTarget.hasAttribute('disabled')) {\n      const effect = event.currentTarget['__dropEffect'];\n      if (effect) {\n        event.dataTransfer.dropEffect = effect;\n      }\n      // allows the drop && don't let parents know\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  },\n\n  __ondragleaveListener: function (event) {\n    if (event.currentTarget['__skip-leave']) {\n      event.currentTarget['__skip-leave'] = false;\n    } else {\n      event.currentTarget.classList.remove(\"v-drag-over-target\");\n    }\n    // #7109 need to stop or any parent drop target might not get highlighted,\n    // as ondragenter for it is fired before the child gets dragleave.\n    event.stopPropagation();\n  },\n\n  __ondropListener: function (event) {\n    const effect = event.currentTarget['__dropEffect'];\n    if (effect) {\n      event.dataTransfer.dropEffect = effect;\n    }\n    event.currentTarget.classList.remove(\"v-drag-over-target\");\n    // prevent browser handling && don't let parents know\n    event.preventDefault();\n    event.stopPropagation();\n  },\n\n  updateDropTarget : function(element) {\n    if (element['__active']) {\n      element.addEventListener('dragenter', this.__ondragenterListener, false);\n      element.addEventListener('dragover', this.__ondragoverListener, false);\n      element.addEventListener('dragleave', this.__ondragleaveListener, false);\n      element.addEventListener('drop', this.__ondropListener, false);\n    } else {\n      element.removeEventListener('dragenter', this.__ondragenterListener, false);\n      element.removeEventListener('dragover', this.__ondragoverListener, false);\n      element.removeEventListener('dragleave', this.__ondragleaveListener, false);\n      element.removeEventListener('drop', this.__ondropListener, false);\n      element.classList.remove(\"v-drag-over-target\");\n    }\n  },\n\n  /** DRAG SOURCE METHODS: */\n\n  __dragstartListener: function (event) {\n    event.stopPropagation();\n    event.dataTransfer.setData(\"text/plain\", \"\");\n    if (event.currentTarget.hasAttribute('disabled')) {\n        event.preventDefault();\n    } else {\n      if (event.currentTarget['__effectAllowed']) {\n        event.dataTransfer.effectAllowed = event.currentTarget['__effectAllowed'];\n       }\n       event.currentTarget.classList.add('v-dragged');\n    }\n  },\n\n  __dragendListener: function (event) {\n    event.currentTarget.classList.remove('v-dragged');\n  },\n\n  updateDragSource: function (element) {\n    if (element['draggable']) {\n      element.addEventListener('dragstart', this.__dragstartListener, false);\n      element.addEventListener('dragend', this.__dragendListener, false);\n    } else {\n      element.removeEventListener('dragstart', this.__dragstartListener, false);\n      element.removeEventListener('dragend', this.__dragendListener, false);\n    }\n  }\n};\n"
    },
    {
     "id": 185,
     "name": "../target/frontend/generated-flow-imports.js + 6 modules",
     "modules": [
      {
       "name": "../target/frontend/generated-flow-imports.js",
       "source": "export const addCssBlock = function(block, before = false) {\n const tpl = document.createElement('template');\n tpl.innerHTML = block;\n document.head[before ? 'insertBefore' : 'appendChild'](tpl.content, document.head.firstChild);\n};\n\naddCssBlock('<custom-style><style include=\"lumo-color lumo-typography\"></style></custom-style>', true);\n\nimport '@vaadin/flow-frontend/ConnectionIndicator.js';\nimport '@vaadin/flow-frontend/contextMenuConnector.js';\nimport '@vaadin/flow-frontend/dndConnector-es6.js';\nimport '@vaadin/flow-frontend/flow-component-renderer.js';\nimport '@vaadin/flow-frontend/gridConnector.js';\nimport '@vaadin/flow-frontend/vaadin-grid-flow-selection-column.js';\nimport '@vaadin/vaadin-button/theme/lumo/vaadin-button.js';\nimport '@vaadin/vaadin-checkbox/theme/lumo/vaadin-checkbox.js';\nimport '@vaadin/vaadin-context-menu/theme/lumo/vaadin-context-menu.js';\nimport '@vaadin/vaadin-dialog/theme/lumo/vaadin-dialog.js';\nimport '@vaadin/vaadin-grid/theme/lumo/vaadin-grid-column-group.js';\nimport '@vaadin/vaadin-grid/theme/lumo/vaadin-grid-column.js';\nimport '@vaadin/vaadin-grid/theme/lumo/vaadin-grid-sorter.js';\nimport '@vaadin/vaadin-grid/theme/lumo/vaadin-grid.js';\nimport '@vaadin/vaadin-icons/vaadin-icons.js';\nimport '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/icons.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport '@vaadin/vaadin-ordered-layout/theme/lumo/vaadin-horizontal-layout.js';\nimport '@vaadin/vaadin-ordered-layout/theme/lumo/vaadin-vertical-layout.js';\nimport '@vaadin/vaadin-text-field/theme/lumo/vaadin-text-field.js';\nlet thisScript;\nconst elements = document.getElementsByTagName('script');\nfor (let i = 0; i < elements.length; i++) {\n const script = elements[i];\n if (script.getAttribute('type')=='module' && script.getAttribute('data-app-id') && !script['vaadin-bundle']) {\n  thisScript = script;\n  break;\n }\n}\nif (!thisScript) {\n throw new Error('Could not find the bundle script to identify the application id');\n}\nthisScript['vaadin-bundle'] = true;\nif (!window.Vaadin.Flow.fallbacks) { window.Vaadin.Flow.fallbacks={}; }\nconst fallbacks = window.Vaadin.Flow.fallbacks;\nfallbacks[thisScript.getAttribute('data-app-id')] = {}\nfallbacks[thisScript.getAttribute('data-app-id')].loadFallback = function loadFallback() {\n return import('./generated-flow-imports-fallback.js');\n}"
      },
      {
       "name": "../target/flow-frontend/ConnectionIndicator.js",
       "source": "/*\n * Copyright 2000-2020 Vaadin Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { css, html, LitElement, property } from 'lit-element';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { ConnectionState } from './ConnectionState';\nconst DEFAULT_STYLE_ID = 'css-loading-indicator';\n/**\n * Component showing loading and connection indicator. When added to DOM,\n * listens for changes on `window.Vaadin.connectionState` ConnectionStateStore.\n */\nexport class ConnectionIndicator extends LitElement {\n    constructor() {\n        super();\n        /**\n         * The delay before showing the loading indicator, in ms.\n         */\n        this.firstDelay = 300;\n        /**\n         * The delay before the loading indicator goes into \"second\" state, in ms.\n         */\n        this.secondDelay = 1500;\n        /**\n         * The delay before the loading indicator goes into \"third\" state, in ms.\n         */\n        this.thirdDelay = 5000;\n        /**\n         * The duration for which the connection state change message is visible,\n         * in ms.\n         */\n        this.expandedDuration = 2000;\n        /**\n         * The message shown when the connection goes to connected state.\n         */\n        this.onlineText = 'Online';\n        /**\n         * The message shown when the connection goes to lost state.\n         */\n        this.offlineText = 'Connection lost';\n        /**\n         * The message shown when the connection goes to reconnecting state.\n         */\n        this.reconnectingText = 'Connection lost, trying to reconnect...';\n        this.offline = false;\n        this.reconnecting = false;\n        this.expanded = false;\n        this.loading = false;\n        this.loadingBarState = \"\" /* IDLE */;\n        this.applyDefaultThemeState = true;\n        this.firstTimeout = 0;\n        this.secondTimeout = 0;\n        this.thirdTimeout = 0;\n        this.expandedTimeout = 0;\n        this.lastMessageState = ConnectionState.CONNECTED;\n        this.connectionStateListener = () => {\n            this.expanded = this.updateConnectionState();\n            this.expandedTimeout = this.timeoutFor(this.expandedTimeout, this.expanded, () => (this.expanded = false), this.expandedDuration);\n        };\n    }\n    /**\n     * Initialize global connection indicator instance at window.Vaadin.connectionIndicator\n     * and add instance to the document body.\n     */\n    static create() {\n        var _a, _b;\n        const $wnd = window;\n        if (!((_a = $wnd.Vaadin) === null || _a === void 0 ? void 0 : _a.connectionIndicator)) {\n            $wnd.Vaadin = $wnd.Vaadin || {};\n            $wnd.Vaadin.connectionIndicator = document.createElement('vaadin-connection-indicator');\n            document.body.appendChild($wnd.Vaadin.connectionIndicator);\n        }\n        return (_b = $wnd.Vaadin) === null || _b === void 0 ? void 0 : _b.connectionIndicator;\n    }\n    render() {\n        return html `\n      <div class=\"v-loading-indicator ${this.loadingBarState}\" style=\"${this.getLoadingBarStyle()}\"></div>\n\n      <div\n        class=\"v-status-message ${classMap({\n            active: this.reconnecting\n        })}\"\n      >\n        <span class=\"text\"> ${this.renderMessage()} </span>\n      </div>\n    `;\n    }\n    connectedCallback() {\n        var _a;\n        super.connectedCallback();\n        const $wnd = window;\n        if ((_a = $wnd.Vaadin) === null || _a === void 0 ? void 0 : _a.connectionState) {\n            this.connectionStateStore = $wnd.Vaadin.connectionState;\n            this.connectionStateStore.addStateChangeListener(this.connectionStateListener);\n            this.updateConnectionState();\n        }\n        this.updateTheme();\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        if (this.connectionStateStore) {\n            this.connectionStateStore.removeStateChangeListener(this.connectionStateListener);\n        }\n        this.updateTheme();\n    }\n    get applyDefaultTheme() {\n        return this.applyDefaultThemeState;\n    }\n    set applyDefaultTheme(applyDefaultTheme) {\n        if (applyDefaultTheme !== this.applyDefaultThemeState) {\n            this.applyDefaultThemeState = applyDefaultTheme;\n            this.updateTheme();\n        }\n    }\n    createRenderRoot() {\n        return this;\n    }\n    /**\n     * Update state flags.\n     *\n     * @return true if the connection message changes, and therefore a new\n     * message should be shown\n     */\n    updateConnectionState() {\n        var _a;\n        const state = (_a = this.connectionStateStore) === null || _a === void 0 ? void 0 : _a.state;\n        this.offline = state === ConnectionState.CONNECTION_LOST;\n        this.reconnecting = state === ConnectionState.RECONNECTING;\n        this.updateLoading(state === ConnectionState.LOADING);\n        if (this.loading) {\n            // Entering loading state, do not show message\n            return false;\n        }\n        if (state !== this.lastMessageState) {\n            this.lastMessageState = state;\n            // Message changes, show new message\n            return true;\n        }\n        // Message did not change\n        return false;\n    }\n    updateLoading(loading) {\n        this.loading = loading;\n        this.loadingBarState = \"\" /* IDLE */;\n        this.firstTimeout = this.timeoutFor(this.firstTimeout, loading, () => (this.loadingBarState = \"first\" /* FIRST */), this.firstDelay);\n        this.secondTimeout = this.timeoutFor(this.secondTimeout, loading, () => (this.loadingBarState = \"second\" /* SECOND */), this.secondDelay);\n        this.thirdTimeout = this.timeoutFor(this.thirdTimeout, loading, () => (this.loadingBarState = \"third\" /* THIRD */), this.thirdDelay);\n    }\n    renderMessage() {\n        if (this.reconnecting) {\n            return this.reconnectingText;\n        }\n        if (this.offline) {\n            return this.offlineText;\n        }\n        return this.onlineText;\n    }\n    updateTheme() {\n        if (this.applyDefaultThemeState && this.isConnected) {\n            if (!document.getElementById(DEFAULT_STYLE_ID)) {\n                const style = document.createElement('style');\n                style.id = DEFAULT_STYLE_ID;\n                style.textContent = this.getDefaultStyle().cssText;\n                document.head.appendChild(style);\n            }\n        }\n        else {\n            const style = document.getElementById(DEFAULT_STYLE_ID);\n            if (style) {\n                document.head.removeChild(style);\n            }\n        }\n    }\n    getDefaultStyle() {\n        return css `\n      @keyframes v-progress-start {\n        0% {\n          width: 0%;\n        }\n        100% {\n          width: 50%;\n        }\n      }\n      @keyframes v-progress-delay {\n        0% {\n          width: 50%;\n        }\n        100% {\n          width: 90%;\n        }\n      }\n      @keyframes v-progress-wait {\n        0% {\n          width: 90%;\n          height: 4px;\n        }\n        3% {\n          width: 91%;\n          height: 7px;\n        }\n        100% {\n          width: 96%;\n          height: 7px;\n        }\n      }\n      @keyframes v-progress-wait-pulse {\n        0% {\n          opacity: 1;\n        }\n        50% {\n          opacity: 0.1;\n        }\n        100% {\n          opacity: 1;\n        }\n      }\n      .v-loading-indicator,\n      .v-status-message {\n        position: fixed;\n        z-index: 251;\n        left: 0;\n        right: auto;\n        top: 0;\n        background-color: var(--lumo-primary-color, var(--material-primary-color, blue));\n        transition: none;\n      }\n      .v-loading-indicator {\n        width: 50%;\n        height: 4px;\n        opacity: 1;\n        pointer-events: none;\n        animation: v-progress-start 1000ms 200ms both;\n      }\n      .v-loading-indicator[style*='none'] {\n        display: block !important;\n        width: 100%;\n        opacity: 0;\n        animation: none;\n        transition: opacity 500ms 300ms, width 300ms;\n      }\n      .v-loading-indicator.second {\n        width: 90%;\n        animation: v-progress-delay 3.8s forwards;\n      }\n      .v-loading-indicator.third {\n        width: 96%;\n        animation: v-progress-wait 5s forwards, v-progress-wait-pulse 1s 4s infinite backwards;\n      }\n\n      vaadin-connection-indicator[offline] .v-loading-indicator,\n      vaadin-connection-indicator[reconnecting] .v-loading-indicator {\n        display: none;\n      }\n\n      .v-status-message {\n        opacity: 0;\n        width: 100%;\n        max-height: var(--status-height-collapsed, 8px);\n        overflow: hidden;\n        background-color: var(--status-bg-color-online, var(--lumo-primary-color, var(--material-primary-color, blue)));\n        color: var(\n          --status-text-color-online,\n          var(--lumo-primary-contrast-color, var(--material-primary-contrast-color, #fff))\n        );\n        font-size: 0.75rem;\n        font-weight: 600;\n        line-height: 1;\n        transition: all 0.5s;\n        padding: 0 0.5em;\n      }\n\n      vaadin-connection-indicator[offline] .v-status-message,\n      vaadin-connection-indicator[reconnecting] .v-status-message {\n        opacity: 1;\n        background-color: var(--status-bg-color-offline, var(--lumo-shade, #333));\n        color: var(\n          --status-text-color-offline,\n          var(--lumo-primary-contrast-color, var(--material-primary-contrast-color, #fff))\n        );\n        background-image: repeating-linear-gradient(\n          45deg,\n          rgba(255, 255, 255, 0),\n          rgba(255, 255, 255, 0) 10px,\n          rgba(255, 255, 255, 0.1) 10px,\n          rgba(255, 255, 255, 0.1) 20px\n        );\n      }\n\n      vaadin-connection-indicator[reconnecting] .v-status-message {\n        animation: show-reconnecting-status 2s;\n      }\n\n      vaadin-connection-indicator[offline] .v-status-message:hover,\n      vaadin-connection-indicator[reconnecting] .v-status-message:hover,\n      vaadin-connection-indicator[expanded] .v-status-message {\n        max-height: var(--status-height, 1.75rem);\n      }\n\n      vaadin-connection-indicator[expanded] .v-status-message {\n        opacity: 1;\n      }\n\n      .v-status-message span {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: var(--status-height, 1.75rem);\n      }\n\n      vaadin-connection-indicator[reconnecting] .v-status-message span::before {\n        content: '';\n        width: 1em;\n        height: 1em;\n        border-top: 2px solid\n          var(--status-spinner-color, var(--lumo-primary-color, var(--material-primary-color, blue)));\n        border-left: 2px solid\n          var(--status-spinner-color, var(--lumo-primary-color, var(--material-primary-color, blue)));\n        border-right: 2px solid transparent;\n        border-bottom: 2px solid transparent;\n        border-radius: 50%;\n        box-sizing: border-box;\n        animation: v-spin 0.4s linear infinite;\n        margin: 0 0.5em;\n      }\n\n      @keyframes v-spin {\n        100% {\n          transform: rotate(360deg);\n        }\n      }\n    `;\n    }\n    getLoadingBarStyle() {\n        switch (this.loadingBarState) {\n            case \"\" /* IDLE */:\n                return 'display: none';\n            case \"first\" /* FIRST */:\n            case \"second\" /* SECOND */:\n            case \"third\" /* THIRD */:\n                return 'display: block';\n            default:\n                return '';\n        }\n    }\n    timeoutFor(timeoutId, enabled, handler, delay) {\n        if (timeoutId !== 0) {\n            window.clearTimeout(timeoutId);\n        }\n        return enabled ? window.setTimeout(handler, delay) : 0;\n    }\n    static get instance() {\n        return ConnectionIndicator.create();\n    }\n}\n__decorate([\n    property({ type: Number })\n], ConnectionIndicator.prototype, \"firstDelay\", void 0);\n__decorate([\n    property({ type: Number })\n], ConnectionIndicator.prototype, \"secondDelay\", void 0);\n__decorate([\n    property({ type: Number })\n], ConnectionIndicator.prototype, \"thirdDelay\", void 0);\n__decorate([\n    property({ type: Number })\n], ConnectionIndicator.prototype, \"expandedDuration\", void 0);\n__decorate([\n    property({ type: String })\n], ConnectionIndicator.prototype, \"onlineText\", void 0);\n__decorate([\n    property({ type: String })\n], ConnectionIndicator.prototype, \"offlineText\", void 0);\n__decorate([\n    property({ type: String })\n], ConnectionIndicator.prototype, \"reconnectingText\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], ConnectionIndicator.prototype, \"offline\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], ConnectionIndicator.prototype, \"reconnecting\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], ConnectionIndicator.prototype, \"expanded\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], ConnectionIndicator.prototype, \"loading\", void 0);\n__decorate([\n    property({ type: String })\n], ConnectionIndicator.prototype, \"loadingBarState\", void 0);\n__decorate([\n    property({ type: Boolean })\n], ConnectionIndicator.prototype, \"applyDefaultTheme\", null);\nif (customElements.get('vaadin-connection-indicator') === undefined) {\n    customElements.define('vaadin-connection-indicator', ConnectionIndicator);\n}\n/**\n * The global connection indicator object. Its appearance and behavior can be\n * configured via properties:\n *\n * connectionIndicator.firstDelay = 0;\n * connectionIndicator.onlineText = 'The application is online';\n *\n * To avoid altering the appearance while the indicator is active, apply the\n * configuration in your application 'frontend/index.ts' file.\n */\nexport const connectionIndicator = ConnectionIndicator.instance;\n//# sourceMappingURL=ConnectionIndicator.js.map"
      },
      {
       "name": "../target/flow-frontend/contextMenuConnector.js",
       "source": "import { GestureEventListeners } from \"@polymer/polymer/lib/mixins/gesture-event-listeners.js\";\nimport * as Gestures from \"@polymer/polymer/lib/utils/gestures.js\";\n(function() {\n  const tryCatchWrapper = function(callback) {\n    return window.Vaadin.Flow.tryCatchWrapper(\n      callback,\n      \"Vaadin Context Menu\",\n      \"vaadin-context-menu-flow\"\n    );\n  };\n\n  window.Vaadin.Flow.contextMenuConnector = {\n    // NOTE: This is for the TARGET component, not for the <vaadin-context-menu> itself\n    init: target =>\n      tryCatchWrapper(function(target) {\n        if (target.$contextMenuConnector) {\n          return;\n        }\n\n        target.$contextMenuConnector = {\n          openOnHandler: tryCatchWrapper(function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            this.$contextMenuConnector.openEvent = e;\n            let detail = {};\n            if (target.getContextMenuBeforeOpenDetail) {\n              detail = target.getContextMenuBeforeOpenDetail(e);\n            }\n            target.dispatchEvent(\n              new CustomEvent(\"vaadin-context-menu-before-open\", {\n                detail: detail\n              })\n            );\n          }),\n\n          updateOpenOn: tryCatchWrapper(function(eventType) {\n            this.removeListener();\n            this.openOnEventType = eventType;\n\n            customElements.whenDefined(\"vaadin-context-menu\").then(\n              tryCatchWrapper(() => {\n                if (Gestures.gestures[eventType]) {\n                  Gestures.addListener(target, eventType, this.openOnHandler);\n                } else {\n                  target.addEventListener(eventType, this.openOnHandler);\n                }\n              })\n            );\n          }),\n\n          removeListener: tryCatchWrapper(function() {\n            if (this.openOnEventType) {\n              if (Gestures.gestures[this.openOnEventType]) {\n                Gestures.removeListener(\n                  target,\n                  this.openOnEventType,\n                  this.openOnHandler\n                );\n              } else {\n                target.removeEventListener(\n                  this.openOnEventType,\n                  this.openOnHandler\n                );\n              }\n            }\n          }),\n\n          openMenu: tryCatchWrapper(function(contextMenu) {\n            contextMenu.open(this.openEvent);\n          }),\n\n          removeConnector: tryCatchWrapper(function() {\n            this.removeListener();\n            target.$contextMenuConnector = undefined;\n          })\n        };\n      })(target),\n\n    generateItems: (menu, appId, nodeId) =>\n      tryCatchWrapper(function(menu, appId, nodeId) {\n        menu._containerNodeId = nodeId;\n\n        const getContainer = function(nodeId) {\n          try {\n            return window.Vaadin.Flow.clients[appId].getByNodeId(nodeId);\n          } catch (error) {\n            console.error(\"Could not get node %s from app %s\", nodeId, appId);\n            console.error(error);\n          }\n        };\n\n        const getChildItems = function(parent) {\n          const container = getContainer(parent._containerNodeId);\n          const items =\n            container &&\n            Array.from(container.children).map(child => {\n              const item = { component: child, checked: child._checked };\n              if (\n                child.tagName == \"VAADIN-CONTEXT-MENU-ITEM\" &&\n                child._containerNodeId\n              ) {\n                item.children = getChildItems(child);\n              }\n              child._item = item;\n              return item;\n            });\n          return items;\n        };\n\n        const items = getChildItems(menu);\n        menu.items = items;\n      })(menu, appId, nodeId),\n\n    setChecked: (component, checked) =>\n      tryCatchWrapper(function(component, checked) {\n        if (component._item) {\n          component._item.checked = checked;\n        }\n      })(component, checked)\n  };\n})();\n"
      },
      {
       "name": "../target/flow-frontend/dndConnector-es6.js",
       "source": "import './dndConnector.js';\n\n"
      },
      {
       "name": "../target/flow-frontend/flow-component-renderer.js",
       "source": "import '@polymer/polymer/polymer-legacy.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { animationFrame, idlePeriod } from '@polymer/polymer/lib/utils/async.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nclass FlowComponentRenderer extends PolymerElement {\n  static get template() {\n    return html`\n    <style>\n      @keyframes flow-component-renderer-appear {\n        to {\n          opacity: 1;\n        }\n      }\n      :host {\n        animation: 1ms flow-component-renderer-appear;\n      }\n    </style>\n    <slot></slot>\n`;\n  }\n\n  static get is() { return 'flow-component-renderer'; }\n  static get properties() {\n    return {\n      nodeid: Number,\n      appid: String\n    };\n  }\n  static get observers() {\n    return [\n      '_attachRenderedComponentIfAble(appid, nodeid)'\n    ]\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this._runChrome72ShadowDomBugWorkaround();\n  }\n\n  /* workaround for issue vaadin/flow#5025 */\n  _runChrome72ShadowDomBugWorkaround() {\n    const userAgent = navigator.userAgent;\n    if (userAgent && userAgent.match('Chrome\\/')) {\n      // example: ... Chrome/72.0.3626.96 ...\n      const majorVersionString = userAgent.split('Chrome\\/')[1].split('.')[0];\n      if (majorVersionString && parseInt(majorVersionString) > 71) {\n        const debouncedNotifyResize = this._getDebouncedNotifyResizeFunction();\n\n        // if there is no notifyResize function, then just skip\n\n        if (debouncedNotifyResize) {\n          this.style.visibility = 'hidden';\n          // need to use animation frame instead of timeout or focusing won't work\n          requestAnimationFrame(() => {\n            this.style.visibility = '';\n            debouncedNotifyResize();\n          });\n        }\n      }\n    }\n  }\n\n  _getDebouncedNotifyResizeFunction() {\n    // 1. dig out the web component that might have the notifyResize function\n    let component = this.parentElement;\n    while (true) {\n      if (!component) {\n        return;\n      }\n      if (component.notifyResize) {\n        break;\n      } else {\n        component = component.parentElement;\n      }\n    }\n    // 2. assign a debounced proxy to notifyResize, if not yet there\n    if (!component._debouncedNotifyResize) {\n      component._debouncedNotifyResize = function () {\n        component.__debouncedNotifyResize =\n            Debouncer.debounce(\n                component.__debouncedNotifyResize, // initially undefined\n                animationFrame,\n                component.notifyResize);\n      }\n    }\n    return component._debouncedNotifyResize;\n  }\n\n  ready(){\n      super.ready();\n      this.addEventListener(\"click\", function(event){\n          if (this.firstChild &&\n                  typeof this.firstChild.click === \"function\" &&\n                      event.target === this ){\n              this.firstChild.click();\n          }\n      });\n      this.addEventListener('animationend', this._onAnimationEnd);\n  }\n\n  _asyncAttachRenderedComponentIfAble() {\n    this._debouncer = Debouncer.debounce(\n      this._debouncer,\n      idlePeriod,\n      () => this._attachRenderedComponentIfAble()\n    );\n  }\n\n  _attachRenderedComponentIfAble() {\n    if (!this.nodeid || !this.appid) {\n      return;\n    }\n    const renderedComponent = this._getRenderedComponent();\n    if (this.firstChild) {\n      if (!renderedComponent) {\n        this._clear();\n        this._asyncAttachRenderedComponentIfAble();\n      } else if (this.firstChild !== renderedComponent){\n        this.replaceChild(renderedComponent, this.firstChild);\n        this._defineFocusTarget();\n        this.onComponentRendered();\n\n      } else {\n        this._defineFocusTarget();\n        this.onComponentRendered();\n      }\n    } else {\n      if (renderedComponent) {\n        this.appendChild(renderedComponent);\n        this._defineFocusTarget();\n        this.onComponentRendered();\n      } else {\n        this._asyncAttachRenderedComponentIfAble();\n      }\n    }\n  }\n\n  _getRenderedComponent() {\n    try {\n      return window.Vaadin.Flow.clients[this.appid].getByNodeId(this.nodeid);\n    } catch (error) {\n      console.error(\"Could not get node %s from app %s\", this.nodeid, this.appid);\n      console.error(error);\n    }\n    return null;\n  }\n\n  _clear() {\n    while (this.firstChild) {\n      this.removeChild(this.firstChild);\n    }\n  }\n\n  onComponentRendered(){\n    // subclasses can override this method to execute custom logic on resize\n  }\n\n  /* Setting the `focus-target` attribute to the first focusable descendant\n  starting from the firstChild necessary for the focus to be delegated\n  within the flow-component-renderer when used inside a vaadin-grid cell  */\n  _defineFocusTarget(){\n    var focusable = this._getFirstFocusableDescendant(this.firstChild);\n    if(focusable !== null) {\n      focusable.setAttribute('focus-target', 'true');\n    }\n  }\n\n  _getFirstFocusableDescendant(node){\n    if(this._isFocusable(node)) {\n      return node;\n    }\n    if ( !node.children ){\n        return null;\n    }\n    for (var i = 0; i < node.children.length; i++) {\n      var focusable = this._getFirstFocusableDescendant(node.children[i]);\n      if(focusable !== null) {\n        return focusable;\n      }\n    }\n    return null;\n  }\n\n  _isFocusable(node){\n    if (node.hasAttribute && typeof node.hasAttribute === 'function' &&\n            (node.hasAttribute(\"disabled\") || node.hasAttribute(\"hidden\"))) {\n      return false;\n    }\n\n    return node.tabIndex === 0;\n  }\n\n  _onAnimationEnd(e) {\n    // ShadyCSS applies scoping suffixes to animation names\n    // To ensure that child is attached once element is unhidden\n    // for when it was filtered out from, eg, ComboBox\n    // https://github.com/vaadin/vaadin-flow-components/issues/437\n    if (e.animationName.indexOf('flow-component-renderer-appear') === 0) {\n      this._attachRenderedComponentIfAble();\n    }\n  }\n}\nwindow.customElements.define(FlowComponentRenderer.is, FlowComponentRenderer);\n"
      },
      {
       "name": "../target/flow-frontend/gridConnector.js",
       "source": "import { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { timeOut, animationFrame } from '@polymer/polymer/lib/utils/async.js';\nimport { GridElement } from '@vaadin/vaadin-grid/src/vaadin-grid.js';\nimport { ItemCache } from '@vaadin/vaadin-grid/src/vaadin-grid-data-provider-mixin.js';\n\n(function () {\n  const tryCatchWrapper = function (callback) {\n    return window.Vaadin.Flow.tryCatchWrapper(callback, 'Vaadin Grid', 'vaadin-grid');\n  };\n\n  let isItemCacheInitialized = false;\n\n  window.Vaadin.Flow.gridConnector = {\n    initLazy: grid => tryCatchWrapper(function(grid) {\n      // Check whether the connector was already initialized for the grid\n      if (grid.$connector){\n        return;\n      }\n\n      // Make sure ItemCache patching is done only once, but delay it for when\n      // a server grid is initialized\n      if (!isItemCacheInitialized) {\n        isItemCacheInitialized = true;\n        // Storing original implementation of the method to be used for client\n        // side only grids\n        ItemCache.prototype.ensureSubCacheForScaledIndexOriginal = ItemCache.prototype.ensureSubCacheForScaledIndex;\n        ItemCache.prototype.ensureSubCacheForScaledIndex = tryCatchWrapper(function(scaledIndex) {\n          if (!this.grid.$connector) {\n            this.ensureSubCacheForScaledIndexOriginal(scaledIndex);\n            return;\n          }\n\n          if (!this.itemCaches[scaledIndex]) {\n            this.grid.$connector.beforeEnsureSubCacheForScaledIndex(this, scaledIndex);\n          }\n        });\n\n        ItemCache.prototype.isLoading = tryCatchWrapper(function() {\n          return Boolean(ensureSubCacheQueue.length || Object.keys(this.pendingRequests).length || Object.keys(this.itemCaches).filter(index => {\n            return this.itemCaches[index].isLoading();\n          })[0]);\n        });\n\n        ItemCache.prototype.doEnsureSubCacheForScaledIndex = tryCatchWrapper(function(scaledIndex) {\n          if (!this.itemCaches[scaledIndex]) {\n            const subCache = new ItemCache.prototype.constructor(this.grid, this, this.items[scaledIndex]);\n            subCache.itemkeyCaches = {};\n            if(!this.itemkeyCaches) {\n              this.itemkeyCaches = {};\n            }\n            this.itemCaches[scaledIndex] = subCache;\n            this.itemkeyCaches[this.grid.getItemId(subCache.parentItem)] = subCache;\n            this.grid._loadPage(0, subCache);\n          }\n        });\n\n        ItemCache.prototype.getCacheAndIndexByKey = tryCatchWrapper(function(key) {\n          for (let index in this.items) {\n            if(this.grid.getItemId(this.items[index]) === key) {\n              return {cache: this, scaledIndex: index};\n            }\n          }\n          const keys = Object.keys(this.itemkeyCaches);\n          for (let i = 0; i < keys.length; i++) {\n            const expandedKey = keys[i];\n            const subCache = this.itemkeyCaches[expandedKey];\n            let cacheAndIndex = subCache.getCacheAndIndexByKey(key);\n            if(cacheAndIndex) {\n              return cacheAndIndex;\n            }\n          }\n          return undefined;\n        });\n\n        ItemCache.prototype.getLevel = tryCatchWrapper(function() {\n          let cache = this;\n          let level = 0;\n          while (cache.parentCache) {\n            cache = cache.parentCache;\n            level++;\n          }\n          return level;\n        });\n      }\n\n      const rootPageCallbacks = {};\n      const treePageCallbacks = {};\n      const cache = {};\n\n      /* parentRequestDelay - optimizes parent requests by batching several requests\n      *  into one request. Delay in milliseconds. Disable by setting to 0.\n      *  parentRequestBatchMaxSize - maximum size of the batch.\n      */\n      const parentRequestDelay = 50;\n      const parentRequestBatchMaxSize = 20;\n\n      let parentRequestQueue = [];\n      let parentRequestDebouncer;\n      let ensureSubCacheQueue = [];\n      let ensureSubCacheDebouncer;\n\n      const rootRequestDelay = 150;\n      let rootRequestDebouncer;\n\n      let lastRequestedRanges = {};\n      const root = 'null';\n      lastRequestedRanges[root] = [0, 0];\n\n      const validSelectionModes = ['SINGLE', 'NONE', 'MULTI'];\n      let selectedKeys = {};\n      let selectionMode = 'SINGLE';\n\n      let detailsVisibleOnClick = true;\n\n      let sorterDirectionsSetFromServer = false;\n\n      grid.size = 0; // To avoid NaN here and there before we get proper data\n      grid.itemIdPath = 'key';\n\n      grid.$connector = {};\n\n      grid.$connector.hasEnsureSubCacheQueue = tryCatchWrapper(() => ensureSubCacheQueue.length > 0);\n\n      grid.$connector.hasParentRequestQueue = tryCatchWrapper(() => parentRequestQueue.length > 0);\n\n      grid.$connector.hasRootRequestQueue = tryCatchWrapper(() => {\n        return Object.keys(rootPageCallbacks).length > 0 || (rootRequestDebouncer && rootRequestDebouncer.isActive());\n      })\n\n      grid.$connector.beforeEnsureSubCacheForScaledIndex = tryCatchWrapper(function(targetCache, scaledIndex) {\n        // add call to queue\n        ensureSubCacheQueue.push({\n          cache: targetCache,\n          scaledIndex: scaledIndex,\n          itemkey: grid.getItemId(targetCache.items[scaledIndex]),\n          level: targetCache.getLevel()\n        });\n        // sort by ascending scaledIndex and level\n        ensureSubCacheQueue.sort(function(a, b) {\n          return a.scaledIndex - b.scaledIndex || a.level - b.level;\n        });\n\n        ensureSubCacheDebouncer = Debouncer.debounce(ensureSubCacheDebouncer, animationFrame,\n          () => {\n            while (ensureSubCacheQueue.length) {\n              grid.$connector.flushEnsureSubCache();\n            }\n          }\n        );\n      })\n\n      grid.$connector.doSelection = tryCatchWrapper(function(items, userOriginated) {\n        if (selectionMode === 'NONE' || !items.length ||\n            (userOriginated && grid.hasAttribute('disabled'))) {\n          return;\n        }\n        if (selectionMode === 'SINGLE') {\n          grid.selectedItems = [];\n          selectedKeys = {};\n        }\n\n        grid.selectedItems = grid.selectedItems.concat(items);\n        items.forEach(item => {\n          if (item) {\n            selectedKeys[item.key] = item;\n            if (userOriginated) {\n              item.selected = true;\n              grid.$server.select(item.key);\n            }\n          }\n          const isSelectedItemDifferentOrNull = !grid.activeItem || !item || item.key != grid.activeItem.key;\n          if (!userOriginated && selectionMode === 'SINGLE' && isSelectedItemDifferentOrNull) {\n            grid.activeItem = item;\n            grid.$connector.activeItem = item;\n          }\n        });\n      });\n\n      grid.$connector.doDeselection = tryCatchWrapper(function(items, userOriginated) {\n        if (selectionMode === 'NONE' || !items.length ||\n            (userOriginated && grid.hasAttribute('disabled'))) {\n          return;\n        }\n\n        const updatedSelectedItems = grid.selectedItems.slice();\n        while (items.length) {\n          const itemToDeselect = items.shift();\n          for (let i = 0; i < updatedSelectedItems.length; i++) {\n            const selectedItem = updatedSelectedItems[i];\n            if (itemToDeselect && itemToDeselect.key === selectedItem.key) {\n              updatedSelectedItems.splice(i, 1);\n              break;\n            }\n          }\n          if (itemToDeselect) {\n            delete selectedKeys[itemToDeselect.key];\n            if (userOriginated) {\n              delete itemToDeselect.selected;\n              grid.$server.deselect(itemToDeselect.key);\n            }\n          }\n        }\n        grid.selectedItems = updatedSelectedItems;\n      });\n\n      grid.__activeItemChanged = tryCatchWrapper(function(newVal, oldVal) {\n        if (selectionMode != 'SINGLE') {\n          return;\n        }\n        if (!newVal) {\n          if (oldVal && selectedKeys[oldVal.key]) {\n            if (!grid.$connector.deselectAllowed) {\n              grid.activeItem = oldVal;\n            } else {\n              grid.$connector.doDeselection([oldVal], true);\n            }\n          }\n        } else if (!selectedKeys[newVal.key]) {\n          grid.$connector.doSelection([newVal], true);\n        }\n      });\n      grid._createPropertyObserver('activeItem', '__activeItemChanged', true);\n\n      grid.__activeItemChangedDetails = tryCatchWrapper(function(newVal, oldVal) {\n        if(!detailsVisibleOnClick) {\n          return;\n        }\n        // when grid is attached, newVal is not set and oldVal is undefined\n        // do nothing\n        if ((newVal == null) && (oldVal === undefined)) {\n          return;\n        }\n        if (newVal && !newVal.detailsOpened) {\n          grid.$server.setDetailsVisible(newVal.key);\n        } else {\n          grid.$server.setDetailsVisible(null);\n        }\n      })\n      grid._createPropertyObserver('activeItem', '__activeItemChangedDetails', true);\n\n      grid.$connector.setDetailsVisibleOnClick = tryCatchWrapper(function(visibleOnClick) {\n        detailsVisibleOnClick = visibleOnClick;\n      });\n\n      grid.$connector._getPageIfSameLevel = tryCatchWrapper(function(parentKey, index, defaultPage) {\n        let cacheAndIndex = grid._cache.getCacheAndIndex(index);\n        let parentItem = cacheAndIndex.cache.parentItem;\n        let parentKeyOfIndex = (parentItem) ? grid.getItemId(parentItem) : root;\n        if(parentKey !== parentKeyOfIndex) {\n          return defaultPage;\n        } else {\n          return grid._getPageForIndex(cacheAndIndex.scaledIndex);\n        }\n      })\n\n      grid.$connector.getCacheByKey = tryCatchWrapper(function(key) {\n        let cacheAndIndex = grid._cache.getCacheAndIndexByKey(key);\n        if(cacheAndIndex) {\n          return cacheAndIndex.cache;\n        }\n        return undefined;\n      });\n\n      grid.$connector.flushEnsureSubCache = tryCatchWrapper(function() {\n        let pendingFetch = ensureSubCacheQueue.splice(0, 1)[0];\n        let itemkey =  pendingFetch.itemkey;\n\n        let start = grid._virtualStart;\n        let end = grid._virtualEnd;\n        let buffer = end - start;\n        let firstNeededIndex = Math.max(0, start + grid._vidxOffset - buffer);\n        let lastNeededIndex = Math.min(end + grid._vidxOffset + buffer, grid._effectiveSize);\n\n        // only fetch if given item is still in visible range\n        for(let index = firstNeededIndex; index <= lastNeededIndex; index++) {\n          let item = grid._cache.getItemForIndex(index);\n\n          if(grid.getItemId(item) === itemkey) {\n            if(grid._isExpanded(item)) {\n              pendingFetch.cache.doEnsureSubCacheForScaledIndex(pendingFetch.scaledIndex);\n              return true;\n            } else {\n              break;\n            }\n          }\n        }\n        return false;\n      })\n\n      grid.$connector.flushParentRequests = tryCatchWrapper(function() {\n        let pendingFetches = parentRequestQueue.splice(0, parentRequestBatchMaxSize);\n\n        if(pendingFetches.length) {\n          grid.$server.setParentRequestedRanges(pendingFetches);\n          return true;\n        }\n        return false;\n      })\n\n      grid.$connector.beforeParentRequest = tryCatchWrapper(function(firstIndex, size, parentKey) {\n        // add request in queue\n        parentRequestQueue.push({\n          firstIndex: firstIndex,\n          size: size,\n          parentKey: parentKey\n        });\n\n        parentRequestDebouncer = Debouncer.debounce(parentRequestDebouncer, timeOut.after(parentRequestDelay),\n          () => {\n            while (parentRequestQueue.length) {\n              grid.$connector.flushParentRequests();\n            }\n          }\n        );\n      })\n\n      grid.$connector.fetchPage = tryCatchWrapper(function(fetch, page, parentKey) {\n        // Determine what to fetch based on scroll position and not only\n        // what grid asked for\n\n        // The buffer size could be multiplied by some constant defined by the user,\n        // if he needs to reduce the number of items sent to the Grid to improve performance\n        // or to increase it to make Grid smoother when scrolling\n        let start = grid._virtualStart;\n        let end = grid._virtualEnd;\n        let buffer = end - start;\n\n        let firstNeededIndex = Math.max(0, start + grid._vidxOffset - buffer);\n        let lastNeededIndex = Math.min(end + grid._vidxOffset + buffer, grid._effectiveSize);\n\n        let firstNeededPage = page;\n        let lastNeededPage = page;\n        for(let idx = firstNeededIndex; idx <= lastNeededIndex; idx++) {\n          firstNeededPage = Math.min(firstNeededPage, grid.$connector._getPageIfSameLevel(parentKey, idx, firstNeededPage));\n          lastNeededPage = Math.max(lastNeededPage, grid.$connector._getPageIfSameLevel(parentKey, idx, lastNeededPage));\n        }\n\n        let firstPage = Math.max(0,  firstNeededPage);\n        let lastPage = (parentKey !== root) ? lastNeededPage: Math.min(lastNeededPage, Math.floor(grid.size / grid.pageSize));\n        let lastRequestedRange = lastRequestedRanges[parentKey];\n        if(!lastRequestedRange) {\n          lastRequestedRange = [-1, -1];\n        }\n        if (lastRequestedRange[0] != firstPage || lastRequestedRange[1] != lastPage) {\n          lastRequestedRange = [firstPage, lastPage];\n          lastRequestedRanges[parentKey] = lastRequestedRange;\n          let count = lastPage - firstPage + 1;\n          fetch(firstPage * grid.pageSize, count * grid.pageSize);\n        }\n      })\n\n      grid.dataProvider = tryCatchWrapper(function(params, callback) {\n        if (params.pageSize != grid.pageSize) {\n          throw 'Invalid pageSize';\n        }\n\n        let page = params.page;\n\n        if(params.parentItem) {\n          let parentUniqueKey = grid.getItemId(params.parentItem);\n          if(!treePageCallbacks[parentUniqueKey]) {\n            treePageCallbacks[parentUniqueKey] = {};\n          }\n\n          let parentCache = grid.$connector.getCacheByKey(parentUniqueKey);\n          let itemCache = (parentCache && parentCache.itemkeyCaches) ? parentCache.itemkeyCaches[parentUniqueKey] : undefined;\n          if(cache[parentUniqueKey] && cache[parentUniqueKey][page] && itemCache) {\n            // workaround: sometimes grid-element gives page index that overflows\n            page = Math.min(page, Math.floor(cache[parentUniqueKey].size / grid.pageSize));\n\n            callback(cache[parentUniqueKey][page], cache[parentUniqueKey].size);\n          } else {\n            treePageCallbacks[parentUniqueKey][page] = callback;\n          }\n          grid.$connector.fetchPage(\n            (firstIndex, size) => grid.$connector.beforeParentRequest(firstIndex, size, params.parentItem.key),\n            page,\n            parentUniqueKey\n          );\n\n        } else {\n          // workaround: sometimes grid-element gives page index that overflows\n          page = Math.min(page, Math.floor(grid.size / grid.pageSize));\n\n          if (cache[root] && cache[root][page]) {\n            callback(cache[root][page]);\n          } else {\n            rootPageCallbacks[page] = callback;\n          }\n\n          rootRequestDebouncer = Debouncer.debounce(rootRequestDebouncer, timeOut.after(grid._hasData ? rootRequestDelay : 0),\n            () => {\n              grid.$connector.fetchPage((firstIndex, size) => grid.$server.setRequestedRange(firstIndex, size), page, root);\n            }\n          );\n        }\n      })\n\n      const sorterChangeListener = tryCatchWrapper(function(_, oldValue) {\n        if (oldValue !== undefined && !sorterDirectionsSetFromServer) {\n          grid.$server.sortersChanged(grid._sorters.map(function (sorter) {\n            return {\n              path: sorter.path,\n              direction: sorter.direction\n            };\n          }));\n        }\n      })\n\n      grid.$connector.setSorterDirections = tryCatchWrapper(function(directions) {\n        sorterDirectionsSetFromServer = true;\n        setTimeout(tryCatchWrapper(() => {\n          try {\n            const sorters = Array.from(grid.querySelectorAll('vaadin-grid-sorter'));\n\n            sorters.forEach(sorter => {\n              if (!directions.filter(d => d.column === sorter.getAttribute('path'))[0]) {\n                sorter.direction = null;\n              }\n            });\n\n            directions.reverse().forEach(({column, direction}) => {\n              sorters.forEach(sorter => {\n                if (sorter.getAttribute('path') === column && sorter.direction !== direction) {\n                  sorter.direction = direction\n                }\n              });\n            });\n          } finally {\n            sorterDirectionsSetFromServer = false;\n          }\n        }));\n      })\n      grid._createPropertyObserver(\"_previousSorters\", sorterChangeListener);\n\n      grid._updateItem = tryCatchWrapper(function(row, item) {\n        GridElement.prototype._updateItem.call(grid, row, item);\n\n        // There might be inactive component renderers on hidden rows that still refer to the\n        // same component instance as one of the renderers on a visible row. Making the\n        // inactive/hidden renderer attach the component might steal it from a visible/active one.\n        if (!row.hidden) {\n          // make sure that component renderers are updated\n          Array.from(row.children).forEach(cell => {\n            if (cell._instance && cell._instance.children) {\n              Array.from(cell._instance.children).forEach(content => {\n                if(content._attachRenderedComponentIfAble) {\n                  content._attachRenderedComponentIfAble();\n                }\n                // In hierarchy column of tree grid, the component renderer is inside its content,\n                // this updates it renderer from innerContent\n                if (content.children) {\n                  Array.from(content.children).forEach(innerContent => {\n                    if(innerContent._attachRenderedComponentIfAble) {\n                        innerContent._attachRenderedComponentIfAble();\n                    }\n                  });\n                }\n             });\n            }\n          });\n        }\n      })\n\n      grid._expandedInstanceChangedCallback = tryCatchWrapper(function(inst, value) {\n        // method available only for the TreeGrid server-side component\n        if (inst.item == undefined || grid.$server.updateExpandedState == undefined) {\n          return;\n        }\n        let parentKey = grid.getItemId(inst.item);\n        grid.$server.updateExpandedState(parentKey, value);\n        if (value) {\n          this.expandItem(inst.item);\n        } else {\n          delete cache[parentKey];\n          let parentCache = grid.$connector.getCacheByKey(parentKey);\n          if (parentCache && parentCache.itemkeyCaches && parentCache.itemkeyCaches[parentKey]) {\n            delete parentCache.itemkeyCaches[parentKey];\n          }\n          if (parentCache && parentCache.itemkeyCaches) {\n            Object.keys(parentCache.itemCaches)\n                .filter(idx => parentCache.items[idx].key === parentKey)\n                .forEach(idx => delete parentCache.itemCaches[idx]);\n          }\n          delete lastRequestedRanges[parentKey];\n          this.collapseItem(inst.item);\n        }\n      })\n\n      const itemsUpdated = function(items) {\n        if (!items || !Array.isArray(items)) {\n          throw 'Attempted to call itemsUpdated with an invalid value: ' + JSON.stringify(items);\n        }\n        let detailsOpenedItems = Array.from(grid.detailsOpenedItems);\n        let updatedSelectedItem = false;\n        for (let i = 0; i < items.length; ++i) {\n          const item = items[i];\n          if(!item) {\n            continue;\n          }\n          if (item.detailsOpened) {\n            if(grid._getItemIndexInArray(item, detailsOpenedItems) < 0) {\n              detailsOpenedItems.push(item);\n            }\n          } else if(grid._getItemIndexInArray(item, detailsOpenedItems) >= 0) {\n            detailsOpenedItems.splice(grid._getItemIndexInArray(item, detailsOpenedItems), 1)\n          }\n          if (selectedKeys[item.key]) {\n            selectedKeys[item.key] = item;\n            item.selected = true;\n            updatedSelectedItem = true;\n          }\n        }\n        grid.detailsOpenedItems = detailsOpenedItems;\n        if (updatedSelectedItem) {\n          // IE 11 Object doesn't support method values\n          grid.selectedItems = Object.keys(selectedKeys).map(function(e) {\n            return selectedKeys[e]\n          });\n        }\n      };\n\n      /**\n       * Updates the cache for the given page for grid or tree-grid.\n       *\n       * @param page index of the page to update\n       * @param parentKey the key of the parent item for the page\n       * @returns an array of the updated items for the page, or undefined if no items were cached for the page\n       */\n      const updateGridCache = function(page, parentKey) {\n        let items;\n        if((parentKey || root) !== root) {\n          items = cache[parentKey][page];\n          let parentCache = grid.$connector.getCacheByKey(parentKey);\n          if(parentCache && parentCache.itemkeyCaches) {\n            let _cache = parentCache.itemkeyCaches[parentKey];\n            const callbacksForParentKey = treePageCallbacks[parentKey];\n            const callback = callbacksForParentKey && callbacksForParentKey[page];\n            _updateGridCache(page, items, callback, _cache);\n          }\n\n        } else {\n          items = cache[root][page];\n          _updateGridCache(page, items, rootPageCallbacks[page], grid._cache);\n        }\n        return items;\n      };\n\n      const _updateGridCache = function(page, items, callback, levelcache) {\n        // Force update unless there's a callback waiting\n        if (!callback) {\n          let rangeStart = page * grid.pageSize;\n          let rangeEnd = rangeStart + grid.pageSize;\n          if (!items) {\n            if (levelcache && levelcache.items) {\n              for (let idx = rangeStart; idx < rangeEnd; idx++) {\n                delete levelcache.items[idx];\n              }\n            }\n          } else {\n            if (levelcache && levelcache.items) {\n              for (let idx = rangeStart; idx < rangeEnd; idx++) {\n                if (levelcache.items[idx]) {\n                  levelcache.items[idx] = items[idx - rangeStart];\n                }\n              }\n            }\n          }\n        }\n      };\n\n      /**\n       * Updates all visible grid rows in DOM.\n       */\n      const updateAllGridRowsInDomBasedOnCache = function () {\n        grid._cache.updateSize();\n        grid._effectiveSize = grid._cache.effectiveSize;\n        grid._assignModels();\n      };\n\n      /**\n       * Update the given items in DOM if currently visible.\n       *\n       * @param array items the items to update in DOM\n       */\n      const updateGridItemsInDomBasedOnCache = function(items) {\n        if (!items || !grid._physicalItems) {\n          return;\n        }\n        /**\n         * Calls the _assignModels function from GridScrollerElement, that triggers\n         * the internal revalidation of the items based on the _cache of the DataProviderMixin.\n         * First mapping the item to physical (iron list) indexes, so that we update\n         * only items in with the correct index that are cached in the iron list.\n         */\n        const itemKeys = items.map(item => item.key);\n        const indexes = grid._physicalItems\n            .map((tr, index) => tr._item && tr._item.key && itemKeys.indexOf(tr._item.key) > -1 ? index : null)\n            .filter(idx => idx !== null);\n        if (indexes.length > 0) {\n          grid._assignModels(indexes);\n        }\n      };\n\n      grid.$connector.set = tryCatchWrapper(function(index, items, parentKey) {\n        if (index % grid.pageSize != 0) {\n          throw 'Got new data to index ' + index + ' which is not aligned with the page size of ' + grid.pageSize;\n        }\n        let pkey = parentKey || root;\n\n        const firstPage = index / grid.pageSize;\n        const updatedPageCount = Math.ceil(items.length / grid.pageSize);\n\n        for (let i = 0; i < updatedPageCount; i++) {\n          let page = firstPage + i;\n          let slice = items.slice(i * grid.pageSize, (i + 1) * grid.pageSize);\n          if(!cache[pkey]) {\n            cache[pkey] = {};\n          }\n          cache[pkey][page] = slice;\n\n          grid.$connector.doSelection(slice.filter(\n            item => item.selected && !isSelectedOnGrid(item)));\n          grid.$connector.doDeselection(slice.filter(\n            item => !item.selected  && (selectedKeys[item.key] || isSelectedOnGrid(item))));\n\n          const updatedItems = updateGridCache(page, pkey);\n          if (updatedItems) {\n            itemsUpdated(updatedItems);\n            updateGridItemsInDomBasedOnCache(updatedItems);\n          }\n        }\n      });\n\n      const itemToCacheLocation = function(item) {\n        let parent = item.parentUniqueKey || root;\n        if(cache[parent]) {\n          for (let page in cache[parent]) {\n            for (let index in cache[parent][page]) {\n              if (grid.getItemId(cache[parent][page][index]) === grid.getItemId(item)) {\n                return {page: page, index: index, parentKey: parent};\n              }\n            }\n          }\n        }\n        return null;\n      };\n\n      /**\n       * Updates the given items for a hierarchical grid.\n       *\n       * @param updatedItems the updated items array\n       */\n      grid.$connector.updateHierarchicalData = tryCatchWrapper(function(updatedItems) {\n        let pagesToUpdate = [];\n        // locate and update the items in cache\n        // find pages that need updating\n        for (let i = 0; i < updatedItems.length; i++) {\n          let cacheLocation = itemToCacheLocation(updatedItems[i]);\n          if (cacheLocation) {\n            cache[cacheLocation.parentKey][cacheLocation.page][cacheLocation.index] = updatedItems[i];\n            let key = cacheLocation.parentKey+':'+cacheLocation.page;\n            if (!pagesToUpdate[key]) {\n              pagesToUpdate[key] = {parentKey: cacheLocation.parentKey, page: cacheLocation.page};\n            }\n          }\n        }\n        // IE11 doesn't work with the transpiled version of the forEach.\n        let keys = Object.keys(pagesToUpdate);\n        for (let i = 0; i < keys.length; i++) {\n          let pageToUpdate = pagesToUpdate[keys[i]];\n          const affectedUpdatedItems = updateGridCache(pageToUpdate.page, pageToUpdate.parentKey);\n          if (affectedUpdatedItems) {\n            itemsUpdated(affectedUpdatedItems);\n            updateGridItemsInDomBasedOnCache(affectedUpdatedItems);\n          }\n        }\n      });\n\n      /**\n       * Updates the given items for a non-hierarchical grid.\n       *\n       * @param updatedItems the updated items array\n       */\n      grid.$connector.updateFlatData = tryCatchWrapper(function(updatedItems) {\n        // update (flat) caches\n        for (let i = 0; i < updatedItems.length; i++) {\n          let cacheLocation = itemToCacheLocation(updatedItems[i]);\n          if (cacheLocation) {\n            // update connector cache\n            cache[cacheLocation.parentKey][cacheLocation.page][cacheLocation.index] = updatedItems[i];\n\n            // update grid's cache\n            const index = parseInt(cacheLocation.page) * grid.pageSize + parseInt(cacheLocation.index);\n            if (grid._cache.items[index]) {\n              grid._cache.items[index] = updatedItems[i];\n            }\n          }\n        }\n        itemsUpdated(updatedItems);\n\n        updateGridItemsInDomBasedOnCache(updatedItems);\n      });\n\n      grid.$connector.clearExpanded = tryCatchWrapper(function() {\n        grid.expandedItems = [];\n        ensureSubCacheQueue = [];\n        parentRequestQueue = [];\n      })\n\n      grid.$connector.clear = tryCatchWrapper(function(index, length, parentKey) {\n        let pkey = parentKey || root;\n        if (!cache[pkey] || Object.keys(cache[pkey]).length === 0){\n          return;\n        }\n        if (index % grid.pageSize != 0) {\n          throw 'Got cleared data for index ' + index + ' which is not aligned with the page size of ' + grid.pageSize;\n        }\n\n        let firstPage = Math.floor(index / grid.pageSize);\n        let updatedPageCount = Math.ceil(length / grid.pageSize);\n\n        for (let i = 0; i < updatedPageCount; i++) {\n          let page = firstPage + i;\n          let items = cache[pkey][page];\n          grid.$connector.doDeselection(items.filter(item => selectedKeys[item.key]));\n          delete cache[pkey][page];\n          const updatedItems = updateGridCache(page, parentKey);\n          if (updatedItems) {\n            itemsUpdated(updatedItems);\n          }\n          updateGridItemsInDomBasedOnCache(items);\n        }\n        let cacheToClear = grid._cache;\n        if(parentKey)  {\n          const cacheAndIndex = grid._cache.getCacheAndIndexByKey(pkey);\n          cacheToClear = cacheAndIndex.cache.itemCaches[cacheAndIndex.scaledIndex];\n        }\n        const endIndex = index + updatedPageCount * grid.pageSize;\n        for(let itemIndex = index; itemIndex < endIndex; itemIndex++) {\n          delete cacheToClear.items[itemIndex];\n          const subcacheToClear = cacheToClear.itemCaches[itemIndex];\n          delete cacheToClear.itemCaches[itemIndex];\n          const itemKeyToRemove = subcacheToClear && subcacheToClear.parentItem.key;\n          if(itemKeyToRemove) {\n            delete cacheToClear.itemkeyCaches[itemKeyToRemove];\n          }\n        }\n        grid._cache.updateSize();\n      });\n\n      const isSelectedOnGrid = function(item) {\n        const selectedItems = grid.selectedItems;\n        for(let i = 0; i < selectedItems; i++) {\n          let selectedItem = selectedItems[i];\n          if (selectedItem.key === item.key) {\n            return true;\n          }\n        }\n        return false;\n      };\n\n      grid.$connector.reset = tryCatchWrapper(function() {\n        grid.size = 0;\n        deleteObjectContents(cache);\n        deleteObjectContents(grid._cache.items);\n        deleteObjectContents(lastRequestedRanges);\n        if(ensureSubCacheDebouncer) {\n          ensureSubCacheDebouncer.cancel();\n        }\n        if(parentRequestDebouncer) {\n          parentRequestDebouncer.cancel();\n        }\n        if (rootRequestDebouncer) {\n          rootRequestDebouncer.cancel();\n        }\n        ensureSubCacheDebouncer = undefined;\n        parentRequestDebouncer = undefined;\n        ensureSubCacheQueue = [];\n        parentRequestQueue = [];\n        updateAllGridRowsInDomBasedOnCache();\n      });\n\n      const deleteObjectContents = obj => Object.keys(obj).forEach(key => delete obj[key]);\n\n      grid.$connector.updateSize = newSize => grid.size = newSize;\n\n      grid.$connector.updateUniqueItemIdPath = path => grid.itemIdPath = path;\n\n      grid.$connector.expandItems = tryCatchWrapper(function(items) {\n        let newExpandedItems = Array.from(grid.expandedItems);\n        items.filter(item => !grid._isExpanded(item))\n          .forEach(item =>\n            newExpandedItems.push(item));\n        grid.expandedItems = newExpandedItems;\n      })\n\n      grid.$connector.collapseItems = tryCatchWrapper(function(items) {\n        let newExpandedItems = Array.from(grid.expandedItems);\n        items.forEach(item => {\n          let index = grid._getItemIndexInArray(item, newExpandedItems);\n          if(index >= 0) {\n            newExpandedItems.splice(index, 1);\n          }\n        });\n        grid.expandedItems = newExpandedItems;\n        items.forEach(item => grid.$connector.removeFromQueue(item));\n      })\n\n      grid.$connector.removeFromQueue = tryCatchWrapper(function(item) {\n        let itemId = grid.getItemId(item);\n        delete treePageCallbacks[itemId];\n        grid.$connector.removeFromArray(ensureSubCacheQueue, item => item.itemkey === itemId);\n        grid.$connector.removeFromArray(parentRequestQueue, item => item.parentKey === itemId);\n      })\n\n      grid.$connector.removeFromArray = tryCatchWrapper(function(array, removeTest) {\n        if(array.length) {\n          for(let index = array.length - 1; index--; ) {\n            if (removeTest(array[index])) {\n              array.splice(index, 1);\n            }\n          }\n        }\n      })\n\n      grid.$connector.confirmParent = tryCatchWrapper(function(id, parentKey, levelSize) {\n        if(!treePageCallbacks[parentKey]) {\n          return;\n        }\n        if(cache[parentKey]) {\n          cache[parentKey].size = levelSize;\n        }\n        let outstandingRequests = Object.getOwnPropertyNames(treePageCallbacks[parentKey]);\n        for(let i = 0; i < outstandingRequests.length; i++) {\n          let page = outstandingRequests[i];\n\n          let lastRequestedRange = lastRequestedRanges[parentKey] || [0, 0];\n\n          const callback = treePageCallbacks[parentKey][page];\n          if((cache[parentKey] && cache[parentKey][page]) || page < lastRequestedRange[0] || page > lastRequestedRange[1]) {\n            delete treePageCallbacks[parentKey][page];\n            let items = cache[parentKey][page] || new Array(levelSize);\n            callback(items, levelSize);\n          } else if (callback && levelSize === 0) {\n            // The parent item has 0 child items => resolve the callback with an empty array\n            delete treePageCallbacks[parentKey][page];\n            callback([], levelSize);\n          }\n        }\n        // Let server know we're done\n        grid.$server.confirmParentUpdate(id, parentKey);\n\n        if (!grid.loading) {\n          grid._assignModels();\n        }\n      });\n\n      grid.$connector.confirm = tryCatchWrapper(function(id) {\n        // We're done applying changes from this batch, resolve outstanding\n        // callbacks\n        let outstandingRequests = Object.getOwnPropertyNames(rootPageCallbacks);\n        for(let i = 0; i < outstandingRequests.length; i++) {\n          let page = outstandingRequests[i];\n          let lastRequestedRange = lastRequestedRanges[root] || [0, 0];\n\n          const lastAvailablePage = grid.size ? Math.ceil(grid.size / grid.pageSize) - 1 : 0;\n          // It's possible that the lastRequestedRange includes a page that's beyond lastAvailablePage if the grid's size got reduced during an ongoing data request\n          const lastRequestedRangeEnd = Math.min(lastRequestedRange[1], lastAvailablePage);\n          // Resolve if we have data or if we don't expect to get data\n          const callback = rootPageCallbacks[page];\n          if ((cache[root] && cache[root][page]) || page < lastRequestedRange[0] || +page > lastRequestedRangeEnd) {\n            delete rootPageCallbacks[page];\n            callback(cache[root][page] || new Array(grid.pageSize));\n            // Makes sure to push all new rows before this stack execution is done so any timeout expiration called after will be applied on a fully updated grid\n            //Resolves https://github.com/vaadin/vaadin-grid-flow/issues/511\n            if(grid._debounceIncreasePool){\n              grid._debounceIncreasePool.flush();\n            }\n\n          } else if (callback && grid.size === 0) {\n            // The grid has 0 items => resolve the callback with an empty array\n            delete rootPageCallbacks[page];\n            callback([]);\n          }\n        }\n\n        // Let server know we're done\n        grid.$server.confirmUpdate(id);\n      })\n\n      grid.$connector.ensureHierarchy = tryCatchWrapper(function() {\n        for (let parentKey in cache) {\n          if(parentKey !== root) {\n            delete cache[parentKey];\n          }\n        }\n        deleteObjectContents(lastRequestedRanges);\n\n        grid._cache.itemCaches = {};\n        grid._cache.itemkeyCaches = {};\n\n        updateAllGridRowsInDomBasedOnCache();\n      })\n\n      grid.$connector.setSelectionMode = tryCatchWrapper(function(mode) {\n        if ((typeof mode === 'string' || mode instanceof String)\n            && validSelectionModes.indexOf(mode) >= 0) {\n          selectionMode = mode;\n          selectedKeys = {};\n        } else {\n          throw 'Attempted to set an invalid selection mode';\n        }\n      });\n\n      grid.$connector.deselectAllowed = true;\n\n      // TODO: should be removed once https://github.com/vaadin/vaadin-grid/issues/1471 gets implemented\n      grid.$connector.setVerticalScrollingEnabled = tryCatchWrapper(function(enabled) {\n        // There are two scollable containers in grid so apply the changes for both\n        setVerticalScrollingEnabled(grid.$.table, enabled);\n\n        // Since the scrollbars were toggled, there might have been some changes to layout\n        // size. Notify grid of the resize to ensure everything is in place.\n        grid.notifyResize();\n      });\n\n      const setVerticalScrollingEnabled = function(scrollable, enabled) {\n        // Prevent Y axis scrolling with CSS. This will hide the vertical scrollbar.\n        scrollable.style.overflowY = enabled ? '' : 'hidden';\n        // Clean up an existing listener\n        scrollable.removeEventListener('wheel', scrollable.__wheelListener);\n        // Add a wheel event listener with the horizontal scrolling prevention logic\n        !enabled && scrollable.addEventListener('wheel', scrollable.__wheelListener = tryCatchWrapper(e => {\n          if (e.deltaX) {\n            // If there was some horizontal delta related to the wheel event, force the vertical\n            // delta to 0 and let grid process the wheel event normally\n            Object.defineProperty(e, 'deltaY', { value: 0 });\n          } else {\n            // If there was verical delta only, skip the grid's wheel event processing to\n            // enable scrolling the page even if grid isn't scrolled to end\n            e.stopImmediatePropagation();\n          }\n        }));\n      };\n\n      const contextMenuListener = function(e) {\n        const eventContext = grid.getEventContext(e);\n        const key = eventContext.item && eventContext.item.key;\n        const colId = eventContext.column && eventContext.column.id;\n        grid.$server.updateContextMenuTargetItem(key, colId);\n      };\n\n      grid.addEventListener('vaadin-context-menu-before-open', tryCatchWrapper(function(e) {\n        contextMenuListener(grid.$contextMenuConnector.openEvent);\n      }));\n\n      grid.getContextMenuBeforeOpenDetail = tryCatchWrapper(function(event) {\n        const eventContext = grid.getEventContext(event);\n        return {\n          key: (eventContext.item && eventContext.item.key) || \"\"\n        };\n      });\n\n      grid.addEventListener('cell-activate', tryCatchWrapper(e => {\n        grid.$connector.activeItem = e.detail.model.item;\n        setTimeout(() => grid.$connector.activeItem = undefined);\n      }));\n      grid.addEventListener('click', tryCatchWrapper(e => _fireClickEvent(e, 'item-click')));\n      grid.addEventListener('dblclick', tryCatchWrapper(e => _fireClickEvent(e, 'item-double-click')));\n\n      grid.addEventListener('column-resize', tryCatchWrapper(e => {\n        const cols = grid._getColumnsInOrder().filter(col => !col.hidden);\n\n        cols.forEach(col => {\n          col.dispatchEvent(new CustomEvent('column-drag-resize'));\n        });\n\n        grid.dispatchEvent(new CustomEvent('column-drag-resize', { detail: {\n          resizedColumnKey: e.detail.resizedColumn._flowId\n        }}));\n      }));\n\n      grid.addEventListener('column-reorder', tryCatchWrapper(e => {\n        const columns = grid._columnTree.slice(0).pop()\n          .filter(c => c._flowId)\n          .sort((b, a) => (b._order - a._order))\n          .map(c => c._flowId);\n\n        grid.dispatchEvent(new CustomEvent('column-reorder-all-columns', {\n          detail: { columns }\n        }));\n      }));\n\n      function _fireClickEvent(event, eventName) {\n        if (grid.$connector.activeItem) {\n          event.itemKey = grid.$connector.activeItem.key;\n          const eventContext = grid.getEventContext(event);\n          // if you have a details-renderer, getEventContext().column is undefined\n          if (eventContext.column) {\n            event.internalColumnId = eventContext.column._flowId;\n          }\n          grid.dispatchEvent(new CustomEvent(eventName,\n            { detail: event }));\n        }\n      }\n\n      grid.cellClassNameGenerator = tryCatchWrapper(function(column, rowData) {\n          const style = rowData.item.style;\n          if (!style) {\n            return;\n          }\n          return (style.row || '') + ' ' + ((column && style[column._flowId]) || '');\n      })\n\n      grid.dropFilter = tryCatchWrapper(rowData => !rowData.item.dropDisabled);\n\n      grid.dragFilter = tryCatchWrapper(rowData => !rowData.item.dragDisabled);\n\n      grid.addEventListener('grid-dragstart', tryCatchWrapper(e => {\n\n        if (grid._isSelected(e.detail.draggedItems[0])) {\n          // Dragging selected (possibly multiple) items\n          if (grid.__selectionDragData) {\n            Object.keys(grid.__selectionDragData).forEach(type => {\n              e.detail.setDragData(type, grid.__selectionDragData[type]);\n            });\n          } else {\n            (grid.__dragDataTypes || []).forEach(type => {\n              e.detail.setDragData(type, e.detail.draggedItems.map(item => item.dragData[type]).join('\\n'));\n            });\n          }\n\n          if (grid.__selectionDraggedItemsCount > 1) {\n            e.detail.setDraggedItemsCount(grid.__selectionDraggedItemsCount);\n          }\n        } else {\n          // Dragging just one (non-selected) item\n          (grid.__dragDataTypes || []).forEach(type => {\n            e.detail.setDragData(type, e.detail.draggedItems[0].dragData[type]);\n          });\n        }\n      }));\n    })(grid)\n  }\n})();\n"
      },
      {
       "name": "../target/flow-frontend/vaadin-grid-flow-selection-column.js",
       "source": "import '@vaadin/vaadin-grid/vaadin-grid-column.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { GridColumnElement } from '@vaadin/vaadin-grid/src/vaadin-grid-column.js';\n{\n  class GridFlowSelectionColumnElement extends GridColumnElement {\n    static get template() {\n      return html`\n    <template class=\"header\" id=\"defaultHeaderTemplate\">\n      <vaadin-checkbox id=\"selectAllCheckbox\" aria-label=\"Select All\" hidden\\$=\"[[selectAllHidden]]\" on-click=\"_onSelectAllClick\" checked=\"[[selectAll]]\">\n      </vaadin-checkbox>\n    </template>\n    <template id=\"defaultBodyTemplate\">\n      <vaadin-checkbox aria-label=\"Select Row\" checked=\"[[selected]]\" on-click=\"_onSelectClick\">\n      </vaadin-checkbox>\n    </template>\n`;\n    }\n\n    static get is() {\n      return 'vaadin-grid-flow-selection-column';\n    }\n\n    static get properties() {\n      return {\n\n        /**\n         * Automatically sets the width of the column based on the column contents when this is set to `true`.\n         */\n        autoWidth: {\n          type: Boolean,\n          value: true\n        },\n\n        /**\n         * Width of the cells for this column.\n         */\n        width: {\n          type: String,\n          value: '56px'\n        },\n\n        /**\n         * Flex grow ratio for the cell widths. When set to 0, cell width is fixed.\n         */\n        flexGrow: {\n          type: Number,\n          value: 0\n        },\n\n        /**\n         * When true, all the items are selected.\n         */\n        selectAll: {\n          type: Boolean,\n          value: false,\n          notify: true\n        },\n\n        selectAllHidden: Boolean\n      };\n    }\n\n    constructor() {\n      super();\n      this._boundOnSelectEvent = this._onSelectEvent.bind(this);\n      this._boundOnDeselectEvent = this._onDeselectEvent.bind(this);\n    }\n\n    _prepareHeaderTemplate() {\n      return this._prepareTemplatizer(this.$.defaultHeaderTemplate);\n    }\n\n    _prepareBodyTemplate() {\n      return this._prepareTemplatizer(this.$.defaultBodyTemplate);\n    }\n\n    /** @private */\n    connectedCallback() {\n      super.connectedCallback();\n      if (this._grid) {\n        this._grid.addEventListener('select', this._boundOnSelectEvent);\n        this._grid.addEventListener('deselect', this._boundOnDeselectEvent);\n      }\n    }\n\n    /** @private */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n      if (this._grid) {\n        this._grid.removeEventListener('select', this._boundOnSelectEvent);\n        this._grid.removeEventListener('deselect', this._boundOnDeselectEvent);\n\n        const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n        if (isSafari && window.ShadyDOM && this.parentElement) {\n          // Detach might have been caused by order change.\n          // Shady on safari doesn't restore isAttached so we'll need to do it manually.\n          const parent = this.parentElement;\n          const nextSibling = this.nextElementSibling;\n          parent.removeChild(this);\n          if (nextSibling) {\n            parent.insertBefore(this, nextSibling);\n          } else {\n            parent.appendChild(this);\n          }\n        }\n      }\n    }\n\n    _onSelectClick(e) {\n      e.target.checked ? this._grid.$connector.doDeselection([e.model.item], true) : this._grid.$connector.doSelection([e.model.item], true);\n      e.target.checked = !e.target.checked;\n    }\n\n    _onSelectAllClick(e) {\n      e.preventDefault();\n      if (this._grid.hasAttribute('disabled')) {\n        e.target.checked = !e.target.checked;\n        return;\n      }\n      this.selectAll ? this.$server.deselectAll() : this.$server.selectAll();\n    }\n\n    _onSelectEvent(e) {\n    }\n\n    _onDeselectEvent(e) {\n      if (e.detail.userOriginated) {\n        this.selectAll = false;\n      }\n    }\n  }\n\n  customElements.define(GridFlowSelectionColumnElement.is, GridFlowSelectionColumnElement);\n\n  Vaadin.GridFlowSelectionColumnElement = GridFlowSelectionColumnElement;\n}\n"
      }
     ]
    }
   ]
  },
  {
   "id": 5,
   "names": [],
   "files": [
    "VAADIN/build/vaadin-5-bbfe12d7e36b04a2bb95.cache.js"
   ],
   "hash": "f2a70b69c363b97a4e41",
   "modules": [
    {
     "id": 184,
     "name": "../target/flow-frontend/OfflineStub.ts",
     "source": "import { css, html, LitElement } from 'lit-element';\nexport class OfflineStub extends LitElement {\n    static get styles() {\n        return css `\n      .page {\n        font-family: -apple-system, BlinkMacSystemFont, 'Roboto', 'Segoe UI', Helvetica, Arial, sans-serif,\n          'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\n        font-size: 1rem;\n        line-height: 1.625;\n        font-weight: 300;\n        -webkit-font-smoothing: antialiased;\n        color: hsla(214, 96%, 96%, 0.9);\n        background: hsl(214, 35%, 21%);\n        word-break: break-word;\n        padding: 0;\n        margin: 0;\n      }\n      .offline {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        z-index: 10000;\n        padding: 0 24px;\n        min-height: 100vh;\n      }\n\n      .offline .content {\n        width: 100%;\n        max-width: 50em;\n        margin: 0 auto;\n      }\n\n      .offline .content .message {\n        flex: 1;\n        box-sizing: border-box;\n        height: 100%;\n      }\n\n      .offline .content .message h2 {\n        text-align: center;\n        font-size: 1.75rem;\n        margin-bottom: 0.5em;\n        font-weight: 600;\n        color: hsl(214, 100%, 98%);\n      }\n\n      .offline .content .message p {\n        margin-top: 0.5em;\n        margin-bottom: 0.75em;\n      }\n\n      @media (min-width: 800px) {\n        .offline {\n          padding: 0 48px;\n        }\n\n        .offline .content .title h1,\n        .offline .content .message h2 {\n          text-align: left;\n        }\n\n        .offline .content .message {\n          height: auto;\n        }\n      }\n    `;\n    }\n    render() {\n        return html `\n      <div class=\"page\">\n        <div class=\"offline\">\n          <div class=\"content\">\n            <section class=\"message\">\n              <h2>You are offline</h2>\n              <p>\n                This route requires an internet connection to work. You do not seem to have access to the server right\n                now. Check your internet connection and try reloading the page to use the application.\n              </p>\n            </section>\n          </div>\n        </div>\n      </div>\n    `;\n    }\n}\ncustomElements.define('vaadin-offline-stub', OfflineStub);\n"
    }
   ]
  },
  {
   "id": 6,
   "names": [],
   "files": [
    "VAADIN/build/vaadin-6-9854d84ba85e39631920.cache.js"
   ],
   "hash": "e61006daaf5df799b041",
   "modules": [
    {
     "id": 182,
     "name": "../target/flow-frontend/FlowBootstrap.js",
     "source": "/* This is a copy of the regular `BootstrapHandler.js` in the flow-server\n   module, but with the following modifications:\n   - The main function is exported as an ES module for lazy initialization.\n   - Application configuration is passed as a parameter instead of using\n     replacement placeholders as in the regular bootstrapping.\n   - It reuses `Vaadin.Flow.clients` if exists.\n   - Fixed lint errors.\n */\nconst init = function(appInitResponse) {\n  window.Vaadin = window.Vaadin || {};\n  window.Vaadin.Flow = window.Vaadin.Flow || {};\n\n  var apps = {};\n  var widgetsets = {};\n\n  var log;\n  if (typeof window.console === undefined || !window.location.search.match(/[&?]debug(&|$)/)) {\n    /* If no console.log present, just use a no-op */\n    log = function() {};\n  } else if (typeof window.console.log === 'function') {\n    /* If it's a function, use it with apply */\n    log = function() {\n      window.console.log.apply(window.console, arguments);\n    };\n  } else {\n    /* In IE, its a native function for which apply is not defined, but it works\n     without a proper 'this' reference */\n    log = window.console.log;\n  }\n\n  var isInitializedInDom = function(appId) {\n    var appDiv = document.getElementById(appId);\n    if (!appDiv) {\n      return false;\n    }\n    for (var i = 0; i < appDiv.childElementCount; i++) {\n      var className = appDiv.childNodes[i].className;\n      /* If the app div contains a child with the class\n      'v-app-loading' we have only received the HTML\n      but not yet started the widget set\n      (UIConnector removes the v-app-loading div). */\n      if (className && className.indexOf('v-app-loading') != -1) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /*\n   * Needed for Testbench compatibility, but prevents any Vaadin 7 app from\n   * bootstrapping unless the legacy vaadinBootstrap.js file is loaded before\n   * this script.\n   */\n  window.Vaadin = window.Vaadin || {};\n  window.Vaadin.Flow = window.Vaadin.Flow || {};\n\n  /*\n   * Needed for wrapping custom javascript functionality in the components (i.e. connectors)\n   */\n  window.Vaadin.Flow.tryCatchWrapper = function(originalFunction, component, repo) {\n    return function() {\n      try {\n        // eslint-disable-next-line\n        const result = originalFunction.apply(this, arguments);\n        return result;\n      } catch (error) {\n        console.error(\n          'There seems to be an error in the ' + component + ':\\n' + error.message + '\\n'\n            + 'Please submit an issue to https://github.com/vaadin/' + repo\n            + '/issues/new!');\n      }\n    };\n  };\n\n  if (!window.Vaadin.Flow.initApplication) {\n\n    window.Vaadin.Flow.clients = window.Vaadin.Flow.clients || {};\n\n    window.Vaadin.Flow.initApplication = function(appId, config) {\n      var testbenchId = appId.replace(/-\\d+$/, '');\n\n      if (apps[appId]) {\n        if (window.Vaadin\n            && window.Vaadin.Flow\n            && window.Vaadin.Flow.clients\n            && window.Vaadin.Flow.clients[testbenchId]\n            && window.Vaadin.Flow.clients[testbenchId].initializing) {\n          throw new Error('Application ' + appId + ' is already being initialized');\n        }\n        if (isInitializedInDom(appId)) {\n          throw new Error('Application ' + appId + ' already initialized');\n        }\n      }\n\n      log('init application', appId, config);\n\n      window.Vaadin.Flow.clients[testbenchId] = {\n        isActive: function() {\n          return true;\n        },\n        initializing: true,\n        productionMode: mode\n      };\n\n      var getConfig = function(name) {\n        var value = config[name];\n        return value;\n      };\n\n      /* Export public data */\n      var app = {\n        getConfig: getConfig\n      };\n      apps[appId] = app;\n\n      if (!window.name) {\n        window.name = appId + '-' + Math.random();\n      }\n\n      var widgetset = 'client';\n      widgetsets[widgetset] = {\n        pendingApps: []\n      };\n      if (widgetsets[widgetset].callback) {\n        log('Starting from bootstrap', appId);\n        widgetsets[widgetset].callback(appId);\n      } else {\n        log('Setting pending startup', appId);\n        widgetsets[widgetset].pendingApps.push(appId);\n      }\n\n      return app;\n    };\n    window.Vaadin.Flow.getAppIds = function() {\n      var ids = [];\n      for (var id in apps) {\n        if (apps.hasOwnProperty(id)) {\n          ids.push(id);\n        }\n      }\n      return ids;\n    };\n    window.Vaadin.Flow.getApp = function(appId) {\n      return apps[appId];\n    };\n    window.Vaadin.Flow.registerWidgetset = function(widgetset, callback) {\n      log('Widgetset registered', widgetset);\n      var ws = widgetsets[widgetset];\n      if (ws && ws.pendingApps) {\n        ws.callback = callback;\n        for (var i = 0; i < ws.pendingApps.length; i++) {\n          var appId = ws.pendingApps[i];\n          log('Starting from register widgetset', appId);\n          callback(appId);\n        }\n        ws.pendingApps = null;\n      }\n    };\n    window.Vaadin.Flow.getBrowserDetailsParameters = function() {\n      var params = {};\n\n      /* Screen height and width */\n      params['v-sh'] = window.screen.height;\n      params['v-sw'] = window.screen.width;\n      /* Browser window dimensions */\n      params['v-wh'] = window.innerHeight;\n      params['v-ww'] = window.innerWidth;\n      /* Body element dimensions */\n      params['v-bh'] = document.body.clientHeight;\n      params['v-bw'] = document.body.clientWidth;\n\n      /* Current time */\n      var date = new Date();\n      params['v-curdate'] = date.getTime();\n\n      /* Current timezone offset (including DST shift) */\n      var tzo1 = date.getTimezoneOffset();\n\n      /* Compare the current tz offset with the first offset from the end\n         of the year that differs --- if less that, we are in DST, otherwise\n         we are in normal time */\n      var dstDiff = 0;\n      var rawTzo = tzo1;\n      for (var m = 12; m > 0; m--) {\n        date.setUTCMonth(m);\n        var tzo2 = date.getTimezoneOffset();\n        if (tzo1 != tzo2) {\n          dstDiff = (tzo1 > tzo2 ? tzo1 - tzo2 : tzo2 - tzo1);\n          rawTzo = (tzo1 > tzo2 ? tzo1 : tzo2);\n          break;\n        }\n      }\n\n      /* Time zone offset */\n      params['v-tzo'] = tzo1;\n\n      /* DST difference */\n      params['v-dstd'] = dstDiff;\n\n      /* Time zone offset without DST */\n      params['v-rtzo'] = rawTzo;\n\n      /* DST in effect? */\n      params['v-dston'] = (tzo1 != rawTzo);\n\n      /* Time zone id (if available) */\n      try {\n        params['v-tzid'] = Intl.DateTimeFormat().resolvedOptions().timeZone;\n      } catch (err) {\n        params['v-tzid'] = '';\n      }\n\n      /* Window name */\n      if (window.name) {\n        params['v-wn'] = window.name;\n      }\n\n      /* Detect touch device support */\n      var supportsTouch = false;\n      try {\n        document.createEvent('TouchEvent');\n        supportsTouch = true;\n      } catch (e) {\n        /* Chrome and IE10 touch detection */\n        supportsTouch = 'ontouchstart' in window\n          || (typeof navigator.msMaxTouchPoints !== 'undefined');\n      }\n      params['v-td'] = supportsTouch;\n\n      /* Device Pixel Ratio */\n      params['v-pr'] = window.devicePixelRatio;\n\n      if (navigator.platform) {\n        params['v-np'] = navigator.platform;\n      }\n\n      /* Stringify each value (they are parsed on the server side) */\n      Object.keys(params).forEach(function(key) {\n        var value = params[key];\n        if (typeof value !== 'undefined') {\n          params[key] = value.toString();\n        }\n      });\n      return params;\n    };\n  }\n\n  log('Flow bootstrap loaded');\n  if (appInitResponse.appConfig.productionMode && typeof window.__gwtStatsEvent != 'function') {\n    window.Vaadin.Flow.gwtStatsEvents = [];\n    window.__gwtStatsEvent = function(event) {\n      window.Vaadin.Flow.gwtStatsEvents.push(event);\n      return true;\n    };\n  }\n  var config = appInitResponse.appConfig;\n  var mode = appInitResponse.appConfig.productionMode;\n  window.Vaadin.Flow.initApplication(config.appId, config);\n};\n\nexport {init};\n\n"
    }
   ]
  },
  {
   "id": 7,
   "names": [],
   "files": [
    "VAADIN/build/vaadin-7-2ffabf2b287b04b28e4c.cache.js"
   ],
   "hash": "a575397a6e6abf79a69a",
   "modules": [
    {
     "id": 183,
     "name": "../target/flow-frontend/FlowClient.js",
     "source": "export function init() {\nfunction client(){var Jb='',Kb=0,Lb='gwt.codesvr=',Mb='gwt.hosted=',Nb='gwt.hybrid',Ob='client',Pb='#',Qb='?',Rb='/',Sb=1,Tb='img',Ub='clear.cache.gif',Vb='baseUrl',Wb='script',Xb='client.nocache.js',Yb='base',Zb='//',$b='meta',_b='name',ac='gwt:property',bc='content',cc='=',dc='gwt:onPropertyErrorFn',ec='Bad handler \"',fc='\" for \"gwt:onPropertyErrorFn\"',gc='gwt:onLoadErrorFn',hc='\" for \"gwt:onLoadErrorFn\"',ic='user.agent',jc='webkit',kc='safari',lc='msie',mc=10,nc=11,oc='ie10',pc=9,qc='ie9',rc=8,sc='ie8',tc='gecko',uc='gecko1_8',vc=2,wc=3,xc=4,yc='Single-script hosted mode not yet implemented. See issue ',zc='http://code.google.com/p/google-web-toolkit/issues/detail?id=2079',Ac='54A3AAE648645643FCAD81131549213D',Bc=':1',Cc=':',Dc='DOMContentLoaded',Ec=50;var l=Jb,m=Kb,n=Lb,o=Mb,p=Nb,q=Ob,r=Pb,s=Qb,t=Rb,u=Sb,v=Tb,w=Ub,A=Vb,B=Wb,C=Xb,D=Yb,F=Zb,G=$b,H=_b,I=ac,J=bc,K=cc,L=dc,M=ec,N=fc,O=gc,P=hc,Q=ic,R=jc,S=kc,T=lc,U=mc,V=nc,W=oc,X=pc,Y=qc,Z=rc,$=sc,_=tc,ab=uc,bb=vc,cb=wc,db=xc,eb=yc,fb=zc,gb=Ac,hb=Bc,ib=Cc,jb=Dc,kb=Ec;var lb=window,mb=document,nb,ob,pb=l,qb={},rb=[],sb=[],tb=[],ub=m,vb,wb;if(!lb.__gwt_stylesLoaded){lb.__gwt_stylesLoaded={}}if(!lb.__gwt_scriptsLoaded){lb.__gwt_scriptsLoaded={}}function xb(){var b=false;try{var c=lb.location.search;return (c.indexOf(n)!=-1||(c.indexOf(o)!=-1||lb.external&&lb.external.gwtOnLoad))&&c.indexOf(p)==-1}catch(a){}xb=function(){return b};return b}\nfunction yb(){if(nb&&ob){nb(vb,q,pb,ub)}}\nfunction zb(){function e(a){var b=a.lastIndexOf(r);if(b==-1){b=a.length}var c=a.indexOf(s);if(c==-1){c=a.length}var d=a.lastIndexOf(t,Math.min(c,b));return d>=m?a.substring(m,d+u):l}\nfunction f(a){if(a.match(/^\\w+:\\/\\//)){}else{var b=mb.createElement(v);b.src=a+w;a=e(b.src)}return a}\nfunction g(){var a=Cb(A);if(a!=null){return a}return l}\nfunction h(){var a=mb.getElementsByTagName(B);for(var b=m;b<a.length;++b){if(a[b].src.indexOf(C)!=-1){return e(a[b].src)}}return l}\nfunction i(){var a=mb.getElementsByTagName(D);if(a.length>m){return a[a.length-u].href}return l}\nfunction j(){var a=mb.location;return a.href==a.protocol+F+a.host+a.pathname+a.search+a.hash}\nvar k=g();if(k==l){k=h()}if(k==l){k=i()}if(k==l&&j()){k=e(mb.location.href)}k=f(k);return k}\nfunction Ab(){var b=document.getElementsByTagName(G);for(var c=m,d=b.length;c<d;++c){var e=b[c],f=e.getAttribute(H),g;if(f){if(f==I){g=e.getAttribute(J);if(g){var h,i=g.indexOf(K);if(i>=m){f=g.substring(m,i);h=g.substring(i+u)}else{f=g;h=l}qb[f]=h}}else if(f==L){g=e.getAttribute(J);if(g){try{wb=eval(g)}catch(a){alert(M+g+N)}}}else if(f==O){g=e.getAttribute(J);if(g){try{vb=eval(g)}catch(a){alert(M+g+P)}}}}}}\nvar Bb=function(a,b){return b in rb[a]};var Cb=function(a){var b=qb[a];return b==null?null:b};function Db(a,b){var c=tb;for(var d=m,e=a.length-u;d<e;++d){c=c[a[d]]||(c[a[d]]=[])}c[a[e]]=b}\nfunction Eb(a){var b=sb[a](),c=rb[a];if(b in c){return b}var d=[];for(var e in c){d[c[e]]=e}if(wb){wb(a,d,b)}throw null}\nsb[Q]=function(){var a=navigator.userAgent.toLowerCase();var b=mb.documentMode;if(function(){return a.indexOf(R)!=-1}())return S;if(function(){return a.indexOf(T)!=-1&&(b>=U&&b<V)}())return W;if(function(){return a.indexOf(T)!=-1&&(b>=X&&b<V)}())return Y;if(function(){return a.indexOf(T)!=-1&&(b>=Z&&b<V)}())return $;if(function(){return a.indexOf(_)!=-1||b>=V}())return ab;return S};rb[Q]={'gecko1_8':m,'ie10':u,'ie8':bb,'ie9':cb,'safari':db};client.onScriptLoad=function(a){client=null;nb=a;yb()};if(xb()){alert(eb+fb);return}zb();Ab();try{var Fb;Db([ab],gb);Db([S],gb+hb);Fb=tb[Eb(Q)];var Gb=Fb.indexOf(ib);if(Gb!=-1){ub=Number(Fb.substring(Gb+u))}}catch(a){return}var Hb;function Ib(){if(!ob){ob=true;yb();if(mb.removeEventListener){mb.removeEventListener(jb,Ib,false)}if(Hb){clearInterval(Hb)}}}\nif(mb.addEventListener){mb.addEventListener(jb,function(){Ib()},false)}var Hb=setInterval(function(){if(/loaded|complete/.test(mb.readyState)){Ib()}},kb)}\nclient();(function () {var $gwt_version = \"2.8.2\";var $wnd = window;var $doc = $wnd.document;var $moduleName, $moduleBase;var $stats = $wnd.__gwtStatsEvent ? function(a) {$wnd.__gwtStatsEvent(a)} : null;var $strongName = '54A3AAE648645643FCAD81131549213D';function A(){}\nfunction Ak(){}\nfunction ok(){}\nfunction oi(){}\nfunction ii(){}\nfunction ei(){}\nfunction Si(){}\nfunction ac(){}\nfunction hc(){}\nfunction tk(){}\nfunction yk(){}\nfunction Ok(){}\nfunction Tl(){}\nfunction Vl(){}\nfunction Xl(){}\nfunction Bm(){}\nfunction Dm(){}\nfunction Jn(){}\nfunction xp(){}\nfunction yq(){}\nfunction Aq(){}\nfunction Cq(){}\nfunction Eq(){}\nfunction cr(){}\nfunction gr(){}\nfunction os(){}\nfunction ss(){}\nfunction vs(){}\nfunction Rs(){}\nfunction Gt(){}\nfunction Ku(){}\nfunction Ou(){}\nfunction bv(){}\nfunction Aw(){}\nfunction Zw(){}\nfunction _w(){}\nfunction Dx(){}\nfunction Hx(){}\nfunction HA(){}\nfunction HC(){}\nfunction Ty(){}\nfunction Bz(){}\nfunction By(){yy()}\nfunction M(a){L=a;xb()}\nfunction Ci(a,b){a.b=b}\nfunction Ei(a,b){a.d=b}\nfunction Fi(a,b){a.e=b}\nfunction Gi(a,b){a.f=b}\nfunction Hi(a,b){a.g=b}\nfunction Ii(a,b){a.h=b}\nfunction Ji(a,b){a.i=b}\nfunction Li(a,b){a.k=b}\nfunction Mi(a,b){a.l=b}\nfunction Ni(a,b){a.m=b}\nfunction Oi(a,b){a.n=b}\nfunction Pi(a,b){a.o=b}\nfunction Qi(a,b){a.p=b}\nfunction Ri(a,b){a.q=b}\nfunction Yq(a,b){a.g=b}\nfunction $s(a,b){a.b=b}\nfunction Rb(a){this.a=a}\nfunction Tb(a){this.a=a}\nfunction _i(a){this.a=a}\nfunction sj(a){this.a=a}\nfunction uj(a){this.a=a}\nfunction mk(a){this.a=a}\nfunction rk(a){this.a=a}\nfunction wk(a){this.a=a}\nfunction Ek(a){this.a=a}\nfunction Gk(a){this.a=a}\nfunction Ik(a){this.a=a}\nfunction Kk(a){this.a=a}\nfunction Mk(a){this.a=a}\nfunction rl(a){this.a=a}\nfunction Zl(a){this.a=a}\nfunction _l(a){this.a=a}\nfunction hm(a){this.a=a}\nfunction tm(a){this.a=a}\nfunction vm(a){this.a=a}\nfunction $m(a){this.a=a}\nfunction sm(a){this.c=a}\nfunction bn(a){this.a=a}\nfunction cn(a){this.a=a}\nfunction jn(a){this.a=a}\nfunction pn(a){this.a=a}\nfunction zn(a){this.a=a}\nfunction Cn(a){this.a=a}\nfunction En(a){this.a=a}\nfunction Gn(a){this.a=a}\nfunction Kn(a){this.a=a}\nfunction Qn(a){this.a=a}\nfunction jo(a){this.a=a}\nfunction Bo(a){this.a=a}\nfunction cp(a){this.a=a}\nfunction rp(a){this.a=a}\nfunction tp(a){this.a=a}\nfunction vp(a){this.a=a}\nfunction jp(a){this.b=a}\nfunction dq(a){this.a=a}\nfunction fq(a){this.a=a}\nfunction hq(a){this.a=a}\nfunction qq(a){this.a=a}\nfunction tq(a){this.a=a}\nfunction ir(a){this.a=a}\nfunction nr(a){this.a=a}\nfunction rr(a){this.a=a}\nfunction Cr(a){this.a=a}\nfunction Gr(a){this.a=a}\nfunction Pr(a){this.a=a}\nfunction Xr(a){this.a=a}\nfunction Zr(a){this.a=a}\nfunction _r(a){this.a=a}\nfunction Br(a){this.c=a}\nfunction _s(a){this.c=a}\nfunction bs(a){this.a=a}\nfunction ds(a){this.a=a}\nfunction es(a){this.a=a}\nfunction ms(a){this.a=a}\nfunction Gs(a){this.a=a}\nfunction Ps(a){this.a=a}\nfunction Ts(a){this.a=a}\nfunction ct(a){this.a=a}\nfunction et(a){this.a=a}\nfunction st(a){this.a=a}\nfunction wt(a){this.a=a}\nfunction Et(a){this.a=a}\nfunction Pt(a){this.a=a}\nfunction Rt(a){this.a=a}\nfunction ju(a){this.a=a}\nfunction nu(a){this.a=a}\nfunction Mu(a){this.a=a}\nfunction mv(a){this.a=a}\nfunction nv(a){this.a=a}\nfunction rv(a){this.a=a}\nfunction dx(a){this.a=a}\nfunction fx(a){this.a=a}\nfunction nx(a){this.a=a}\nfunction px(a){this.a=a}\nfunction Bx(a){this.a=a}\nfunction Fx(a){this.a=a}\nfunction Jx(a){this.a=a}\nfunction Lx(a){this.a=a}\nfunction Px(a){this.a=a}\nfunction Yx(a){this.a=a}\nfunction $x(a){this.a=a}\nfunction cx(a){this.b=a}\nfunction ay(a){this.a=a}\nfunction ey(a){this.a=a}\nfunction ky(a){this.a=a}\nfunction py(a){this.a=a}\nfunction Ny(a){this.a=a}\nfunction Vy(a){this.a=a}\nfunction Xy(a){this.e=a}\nfunction zz(a){this.a=a}\nfunction Dz(a){this.a=a}\nfunction Fz(a){this.a=a}\nfunction _z(a){this.a=a}\nfunction oA(a){this.a=a}\nfunction qA(a){this.a=a}\nfunction sA(a){this.a=a}\nfunction DA(a){this.a=a}\nfunction FA(a){this.a=a}\nfunction VA(a){this.a=a}\nfunction sB(a){this.a=a}\nfunction DC(a){this.a=a}\nfunction FC(a){this.a=a}\nfunction IC(a){this.a=a}\nfunction vD(a){this.a=a}\nfunction nE(a){this.a=a}\nfunction nj(a){throw a}\nfunction Xh(a){return a.e}\nfunction jz(a,b){Du(b,a)}\nfunction jw(a,b){ww(b,a)}\nfunction nw(a,b){aw(b,a)}\nfunction gu(a,b){b.gb(a)}\nfunction iC(b,a){b.log(a)}\nfunction jC(b,a){b.warn(a)}\nfunction cC(b,a){b.data=a}\nfunction is(a,b){cB(a.a,b)}\nfunction SA(a){sz(a.a,a.b)}\nfunction ji(){so();wo()}\nfunction so(){so=ei;ro=[]}\nfunction K(){this.a=lb()}\nfunction zi(){this.a=++yi}\nfunction Sj(){this.d=null}\nfunction dv(){dv=ei;cv=Ly()}\nfunction yy(){yy=ei;xy=Ly()}\nfunction db(){db=ei;cb=new A}\nfunction Xb(a){Wb();Vb.G(a)}\nfunction Mb(a){return a.D()}\nfunction Sl(a){return xl(a)}\nfunction Iq(a){a.i||Jq(a.a)}\nfunction Ko(a,b){a.push(b)}\nfunction tz(a,b,c){a.Qb(c,b)}\nfunction il(a,b,c){dl(a,c,b)}\nfunction LC(){T.call(this)}\nfunction CD(){T.call(this)}\nfunction ik(a){_j();this.a=a}\nfunction YB(b,a){b.display=a}\nfunction gC(b,a){b.debug(a)}\nfunction hC(b,a){b.error(a)}\nfunction mC(b,a){b.replace(a)}\nfunction Nw(a,b){b.forEach(a)}\nfunction jl(a,b){a.a.add(b.d)}\nfunction Ql(a,b,c){a.set(b,c)}\nfunction Ki(a,b){a.j=b;jj=!b}\nfunction pj(a){L=a;!!a&&xb()}\nfunction CC(a){$.call(this,a)}\nfunction tD(a){$.call(this,a)}\nfunction uD(a){$.call(this,a)}\nfunction ED(a){$.call(this,a)}\nfunction eE(a){$.call(this,a)}\nfunction wz(a){vz.call(this,a)}\nfunction Yz(a){vz.call(this,a)}\nfunction lA(a){vz.call(this,a)}\nfunction DD(a){bb.call(this,a)}\nfunction GD(a){tD.call(this,a)}\nfunction bE(){IC.call(this,'')}\nfunction cE(){IC.call(this,'')}\nfunction $h(){Yh==null&&(Yh=[])}\nfunction J(a){return lb()-a.a}\nfunction QC(a){return tE(a),a}\nfunction qD(a){return tE(a),a}\nfunction Gc(a,b){return Jc(a,b)}\nfunction jc(a,b){return cD(a,b)}\nfunction aq(a,b){return a.a>b.a}\nfunction AC(b,a){return a in b}\nfunction VC(a){UC(a);return a.i}\nfunction my(a){qw(a.b,a.a,a.c)}\nfunction gk(a,b){++$j;b.ab(a,Xj)}\nfunction Ll(a,b){NA(new fm(b,a))}\nfunction hw(a,b){NA(new gy(b,a))}\nfunction iw(a,b){NA(new iy(b,a))}\nfunction Sw(a,b,c){BA(Cw(a,c,b))}\nfunction Nm(a,b){a.d?Pm(b):jk()}\nfunction Vt(a,b){a.c.forEach(b)}\nfunction zA(a,b){a.e||a.c.add(b)}\nfunction zC(a){return Object(a)}\nfunction ki(b,a){return b.exec(a)}\nfunction Dv(b,a){wv();delete b[a]}\nfunction Bn(a){bC(a.parentNode,a)}\nfunction kt(){this.a=new $wnd.Map}\nfunction Eb(){Eb=ei;Db=new Jn}\nfunction Ks(){Ks=ei;Js=new Rs}\nfunction az(){az=ei;_y=new Bz}\nfunction gE(){gE=ei;fE=new HC}\nfunction rb(){rb=ei;!!(Wb(),Vb)}\nfunction Cb(){mb!=0&&(mb=0);qb=-1}\nfunction mD(){$.call(this,null)}\nfunction ez(a){uz(a.a);return a.g}\nfunction iz(a){uz(a.a);return a.c}\nfunction bz(a,b){return pz(a.a,b)}\nfunction Pz(a,b){return pz(a.a,b)}\nfunction bA(a,b){return pz(a.a,b)}\nfunction Mw(a,b){return Qk(a.b,b)}\nfunction lw(a,b){return Qv(b.a,a)}\nfunction al(a,b){return xc(a.b[b])}\nfunction Ib(a){return !!a.b||!!a.g}\nfunction bj(a,b){this.b=a;this.a=b}\nfunction bm(a,b){this.a=a;this.b=b}\nfunction dm(a,b){this.a=a;this.b=b}\nfunction fm(a,b){this.a=a;this.b=b}\nfunction lm(a,b){this.a=a;this.b=b}\nfunction nm(a,b){this.a=a;this.b=b}\nfunction nl(a,b){this.a=a;this.b=b}\nfunction pl(a,b){this.a=a;this.b=b}\nfunction Ck(a,b){this.a=a;this.b=b}\nfunction Yk(a,b){this.a=a;this.b=b}\nfunction $k(a,b){this.a=a;this.b=b}\nfunction fn(a,b){this.a=a;this.b=b}\nfunction ln(a,b){this.b=a;this.a=b}\nfunction nn(a,b){this.b=a;this.a=b}\nfunction jm(a,b){this.b=a;this.a=b}\nfunction Gq(a,b){this.b=a;this.a=b}\nfunction gt(a,b){this.b=a;this.a=b}\nfunction Un(a,b){this.b=a;this.c=b}\nfunction lr(a,b){this.a=a;this.b=b}\nfunction pr(a,b){this.a=a;this.b=b}\nfunction ut(a,b){this.a=a;this.b=b}\nfunction yt(a,b){this.a=a;this.b=b}\nfunction hu(a,b){this.a=a;this.b=b}\nfunction lu(a,b){this.a=a;this.b=b}\nfunction pu(a,b){this.a=a;this.b=b}\nfunction xx(a,b){this.a=a;this.b=b}\nfunction zx(a,b){this.a=a;this.b=b}\nfunction Rx(a,b){this.a=a;this.b=b}\nfunction cy(a,b){this.a=a;this.b=b}\nfunction gy(a,b){this.b=a;this.a=b}\nfunction iy(a,b){this.b=a;this.a=b}\nfunction ry(a,b){this.b=a;this.a=b}\nfunction ty(a,b){this.b=a;this.a=b}\nfunction Hy(a,b){this.b=a;this.a=b}\nfunction jx(a,b){this.b=a;this.a=b}\nfunction Fy(a,b){this.a=a;this.b=b}\nfunction Hz(a,b){this.a=a;this.b=b}\nfunction uA(a,b){this.a=a;this.b=b}\nfunction TA(a,b){this.a=a;this.b=b}\nfunction WA(a,b){this.a=a;this.b=b}\nfunction Oz(a,b){this.d=a;this.e=b}\nfunction co(a,b){Un.call(this,a,b)}\nfunction pp(a,b){Un.call(this,a,b)}\nfunction JB(a,b){Un.call(this,a,b)}\nfunction RB(a,b){Un.call(this,a,b)}\nfunction oC(c,a,b){c.setItem(a,b)}\nfunction qC(b,a){b.clearTimeout(a)}\nfunction qi(a){$wnd.clearTimeout(a)}\nfunction Bb(a){$wnd.clearTimeout(a)}\nfunction kB(a){dB(a.a,a.d,a.c,a.b)}\nfunction Lp(a,b){Dp(a,(_p(),Zp),b)}\nfunction gw(a,b,c){uw(a,b);Zv(c.e)}\nfunction zs(a,b,c,d){ys(a,b.d,c,d)}\nfunction io(a,b){return go(b,ho(a))}\nfunction VD(a,b){return a.substr(b)}\nfunction MD(a,b){return tE(a),a===b}\nfunction RC(a,b){return tE(a),a===b}\nfunction rD(a){return Lc((tE(a),a))}\nfunction Kc(a){return a==null?null:a}\nfunction Mc(a){vE(a==null);return a}\nfunction Jy(a){a.length=0;return a}\nfunction _D(a,b){a.a+=''+b;return a}\nfunction aE(a,b){a.a+=''+b;return a}\nfunction Ay(a,b){CA(b);xy.delete(a)}\nfunction nC(b,a){return b.getItem(a)}\nfunction hl(a,b){return a.a.has(b.d)}\nfunction wC(a){return a&&a.valueOf()}\nfunction yC(a){return a&&a.valueOf()}\nfunction OD(a,b){return a.indexOf(b)}\nfunction jE(a){return a!=null?H(a):0}\nfunction pi(a){$wnd.clearInterval(a)}\nfunction pC(b,a){b.clearInterval(a)}\nfunction Rp(a,b){Dp(a,(_p(),$p),b.a)}\nfunction jB(){this.c=new $wnd.Map}\nfunction wv(){wv=ei;vv=new $wnd.Map}\nfunction lE(){lE=ei;kE=new nE(null)}\nfunction PC(){PC=ei;NC=false;OC=true}\nfunction T(){N(this);O(this);this.B()}\nfunction oq(a){this.a=a;oi.call(this)}\nfunction er(a){this.a=a;oi.call(this)}\nfunction Nr(a){this.a=a;oi.call(this)}\nfunction ls(a){this.a=new jB;this.c=a}\nfunction kj(a){jj&&gC($wnd.console,a)}\nfunction mj(a){jj&&hC($wnd.console,a)}\nfunction qj(a){jj&&iC($wnd.console,a)}\nfunction rj(a){jj&&jC($wnd.console,a)}\nfunction N(a){a.h=kc(Ph,NE,29,0,0,1)}\nfunction Hp(a){!!a.b&&Pp(a,(_p(),Yp))}\nfunction Mp(a){!!a.b&&Pp(a,(_p(),Zp))}\nfunction Up(a){!!a.b&&Pp(a,(_p(),$p))}\nfunction qz(a,b){return pz(a,a.Rb(b))}\nfunction Tw(a,b,c){return Cw(a,c.a,b)}\nfunction $t(a,b){return a.h.delete(b)}\nfunction au(a,b){return a.b.delete(b)}\nfunction sz(a,b){return a.a.delete(b)}\nfunction Xk(a,b){sc(wj(a,ee),26).X(b)}\nfunction dk(a){In((Eb(),Db),new Mk(a))}\nfunction Ao(a){In((Eb(),Db),new Bo(a))}\nfunction Po(a){In((Eb(),Db),new cp(a))}\nfunction Sq(a){In((Eb(),Db),new rr(a))}\nfunction Rw(a){In((Eb(),Db),new ay(a))}\nfunction Tx(a,b){Ow(a.a,a.c,a.d,a.b,b)}\nfunction Rz(a,b){uz(a.a);a.c.forEach(b)}\nfunction cA(a,b){uz(a.a);a.b.forEach(b)}\nfunction Lw(a,b){return Dl(a.b.root,b)}\nfunction $B(a,b,c,d){return UB(a,b,c,d)}\nfunction kC(d,a,b,c){d.pushState(a,b,c)}\nfunction ZB(c,a,b){c.setProperty(a,b)}\nfunction Cc(a,b){return a!=null&&rc(a,b)}\nfunction mE(a,b){return a.a!=null?a.a:b}\nfunction $D(a){return a==null?RE:hi(a)}\nfunction Lq(a){return TF in a?a[TF]:-1}\nfunction Ly(){return new $wnd.WeakMap}\nfunction zE(a){return a.$H||(a.$H=++yE)}\nfunction zm(a){return ''+Am(xm.lb()-a,3)}\nfunction bC(b,a){return b.removeChild(a)}\nfunction aC(b,a){return b.appendChild(a)}\nfunction _B(a,b){return a.appendChild(b)}\nfunction QD(a,b){return a.lastIndexOf(b)}\nfunction PD(a,b,c){return a.indexOf(b,c)}\nfunction kw(a,b){var c;c=Qv(b,a);BA(c)}\nfunction Ir(a,b){b.a.b==(bo(),ao)&&Kr(a)}\nfunction R(a,b){a.e=b;b!=null&&xE(b,PE,a)}\nfunction uz(a){var b;b=JA;!!b&&wA(b,a.b)}\nfunction AA(a){if(a.d||a.e){return}yA(a)}\nfunction UC(a){if(a.i!=null){return}gD(a)}\nfunction vE(a){if(!a){throw Xh(new mD)}}\nfunction Kr(a){if(a.a){li(a.a);a.a=null}}\nfunction DE(){DE=ei;AE=new A;CE=new A}\nfunction Ec(a){return typeof a==='number'}\nfunction Hc(a){return typeof a==='string'}\nfunction hb(a){return a==null?null:a.name}\nfunction Dc(a){return typeof a==='boolean'}\nfunction WD(a,b,c){return a.substr(b,c-b)}\nfunction kk(a,b,c){_j();return a.set(c,b)}\nfunction $b(a){Wb();return parseInt(a)||-1}\nfunction dC(b,a){return b.createElement(a)}\nfunction Tn(a){return a.b!=null?a.b:''+a.c}\nfunction Jj(a){a.f=[];a.g=[];a.a=0;a.b=lb()}\nfunction lk(a){_j();$j==0?a.F():Zj.push(a)}\nfunction tc(a){vE(a==null||Dc(a));return a}\nfunction uc(a){vE(a==null||Ec(a));return a}\nfunction zc(a){vE(a==null||Hc(a));return a}\nfunction NA(a){KA==null&&(KA=[]);KA.push(a)}\nfunction OA(a){MA==null&&(MA=[]);MA.push(a)}\nfunction Jz(a,b){Xy.call(this,a);this.a=b}\nfunction dE(){IC.call(this,(tE('['),'['))}\nfunction Ht(a,b){UB(b,GF,new Pt(a),false)}\nfunction lC(d,a,b,c){d.replaceState(a,b,c)}\nfunction sb(a,b,c){return a.apply(b,c);var d}\nfunction Jc(a,b){return a&&b&&a instanceof b}\nfunction ui(a,b){return $wnd.setTimeout(a,b)}\nfunction vz(a){this.a=new $wnd.Set;this.b=a}\nfunction cl(){this.a=new $wnd.Map;this.b=[]}\nfunction On(){this.b=(bo(),$n);this.a=new jB}\nfunction jq(a,b){b.a.b==(bo(),ao)&&mq(a,-1)}\nfunction Lb(a,b){a.b=Nb(a.b,[b,false]);Jb(a)}\nfunction wn(a,b){xn(a,b,sc(wj(a.a,cd),10).n)}\nfunction bq(a,b,c){Un.call(this,a,b);this.a=c}\nfunction rn(a,b,c){this.a=a;this.b=b;this.c=c}\nfunction ep(a,b,c){this.a=a;this.c=b;this.b=c}\nfunction gv(a,b,c){this.a=a;this.c=b;this.g=c}\nfunction tv(a,b,c){this.b=a;this.a=b;this.c=c}\nfunction hx(a,b,c){this.b=a;this.c=b;this.a=c}\nfunction lx(a,b,c){this.a=a;this.b=b;this.c=c}\nfunction rx(a,b,c){this.a=a;this.b=b;this.c=c}\nfunction tx(a,b,c){this.a=a;this.b=b;this.c=c}\nfunction vx(a,b,c){this.a=a;this.b=b;this.c=c}\nfunction Nx(a,b,c){this.b=a;this.a=b;this.c=c}\nfunction Wx(a,b,c){this.c=a;this.b=b;this.a=c}\nfunction ny(a,b,c){this.b=a;this.a=b;this.c=c}\nfunction vy(a,b,c){this.c=a;this.b=b;this.a=c}\nfunction RD(a,b,c){return a.lastIndexOf(b,c)}\nfunction ti(a,b){return $wnd.setInterval(a,b)}\nfunction gb(a){return a==null?null:a.message}\nfunction ri(a,b){return HE(function(){a.J(b)})}\nfunction wq(a,b,c){a.eb(zD(fz(sc(c.e,27),b)))}\nfunction Wr(a,b,c){a.set(c,(uz(b.a),zc(b.g)))}\nfunction xE(b,c,d){try{b[c]=d}catch(a){}}\nfunction qE(a){lE();return !a?kE:new nE(tE(a))}\nfunction Tt(a,b){a.b.add(b);return new pu(a,b)}\nfunction Ut(a,b){a.h.add(b);return new lu(a,b)}\nfunction lz(a,b){a.d=true;cz(a,b);OA(new Dz(a))}\nfunction CA(a){a.e=true;yA(a);a.c.clear();xA(a)}\nfunction iv(a){a.b?pC($wnd,a.c):qC($wnd,a.c)}\nfunction BD(){BD=ei;AD=kc(Hh,NE,31,256,0,1)}\nfunction _j(){_j=ei;Zj=[];Xj=new ok;Yj=new tk}\nfunction hk(a){++$j;Nm(sc(wj(a.a,be),50),new Ak)}\nfunction sc(a,b){vE(a==null||rc(a,b));return a}\nfunction yc(a,b){vE(a==null||Jc(a,b));return a}\nfunction tC(a){if(a==null){return 0}return +a}\nfunction _C(a,b){var c;c=YC(a,b);c.e=2;return c}\nfunction Er(a,b){var c;c=Lc(qD(uc(b.a)));Jr(a,c)}\nfunction ml(a,b,c){return a.set(c,(uz(b.a),b.g))}\nfunction ov(a,b){return pv(new rv(a),b,19,true)}\nfunction mc(a){return Array.isArray(a)&&a.bc===ii}\nfunction vo(a){return $wnd.Vaadin.Flow.getApp(a)}\nfunction Bc(a){return !Array.isArray(a)&&a.bc===ii}\nfunction Fc(a){return a!=null&&Ic(a)&&!(a.bc===ii)}\nfunction Ic(a){return typeof a===IE||typeof a===KE}\nfunction vc(a){vE(a==null||typeof a===KE);return a}\nfunction Nb(a,b){!a&&(a=[]);a[a.length]=b;return a}\nfunction _A(a,b){a.a==null&&(a.a=[]);a.a.push(b)}\nfunction bB(a,b,c,d){var e;e=fB(a,b,c);e.push(d)}\nfunction XB(a,b,c,d){a.removeEventListener(b,c,d)}\nfunction tu(a,b){var c;c=b;return sc(a.a.get(c),6)}\nfunction ZC(a,b,c){var d;d=YC(a,b);kD(c,d);return d}\nfunction Nl(a,b,c){return a.push(bz(c,new nm(c,b)))}\nfunction Wp(a,b){this.a=a;this.b=b;oi.call(this)}\nfunction Ys(a,b){this.a=a;this.b=b;oi.call(this)}\nfunction $(a){N(this);this.g=a;O(this);this.B()}\nfunction Os(a){Ks();this.c=[];this.a=Js;this.d=a}\nfunction Lz(a,b,c){Xy.call(this,a);this.b=b;this.a=c}\nfunction YC(a,b){var c;c=new WC;c.f=a;c.d=b;return c}\nfunction wc(a){vE(a==null||Array.isArray(a));return a}\nfunction tE(a){if(a==null){throw Xh(new CD)}return a}\nfunction GE(){if(BE==256){AE=CE;CE=new A;BE=0}++BE}\nfunction xb(){rb();if(nb){return}nb=true;yb(false)}\nfunction Zv(a){var b;b=a.a;bu(a,null);bu(a,b);av(a)}\nfunction Xv(a){var b;b=new $wnd.Map;a.push(b);return b}\nfunction aD(a,b){var c;c=YC('',a);c.h=b;c.e=1;return c}\nfunction wA(a,b){var c;if(!a.e){c=b.Pb(a);a.b.push(c)}}\nfunction Tq(a,b){lt(sc(wj(a.j,Cf),77),b['execute'])}\nfunction At(a){a.a=gs(sc(wj(a.d,jf),12),new Et(a))}\nfunction vi(a){a.onreadystatechange=function(){}}\nfunction lj(a){$wnd.setTimeout(function(){a.K()},0)}\nfunction zb(a){$wnd.setTimeout(function(){throw a},0)}\nfunction LD(a,b){uE(b,a.length);return a.charCodeAt(b)}\nfunction Am(a,b){return +(Math.round(a+'e+'+b)+'e-'+b)}\nfunction Mn(a,b){return aB(a.a,(!Pn&&(Pn=new zi),Pn),b)}\nfunction gs(a,b){return aB(a.a,(!rs&&(rs=new zi),rs),b)}\nfunction iE(a,b){return Kc(a)===Kc(b)||a!=null&&C(a,b)}\nfunction Uw(a){return RC((PC(),NC),ez(dA(Yt(a,0),dG)))}\nfunction vq(a,b,c,d){var e;e=dA(a,b);bz(e,new Gq(c,d))}\nfunction Cs(a,b){var c;c=sc(wj(a.a,rf),32);Ls(c,b);Ns(c)}\nfunction QA(a,b){var c;c=JA;JA=a;try{b.F()}finally{JA=c}}\nfunction Ej(a){var b;b=Oj();a.f[a.a]=b[0];a.g[a.a]=b[1]}\nfunction Jr(a,b){Kr(a);if(b>=0){a.a=new Nr(a);ni(a.a,b)}}\nfunction Cp(a,b){yn(sc(wj(a.c,ie),16),'',b,'',null,null)}\nfunction xn(a,b,c){yn(a,c.caption,c.message,b,c.url,null)}\nfunction jr(a,b,c,d){this.a=a;this.d=b;this.b=c;this.c=d}\nfunction oB(a,b,c,d){this.a=a;this.d=b;this.c=c;this.b=d}\nfunction Ux(a,b,c,d){this.a=a;this.c=b;this.d=c;this.b=d}\nfunction eC(a,b,c,d){this.b=a;this.c=b;this.a=c;this.d=d}\nfunction lB(a,b,c){this.a=a;this.d=b;this.c=null;this.b=c}\nfunction mB(a,b,c){this.a=a;this.d=b;this.c=null;this.b=c}\nfunction ll(a){this.a=new $wnd.Set;this.b=[];this.c=a}\nfunction Lr(a){this.b=a;Mn(sc(wj(a,ne),9),new Pr(this))}\nfunction Au(a,b,c,d){vu(a,b)&&zs(sc(wj(a.c,nf),25),b,c,d)}\nfunction Gj(a,b,c){Rj(nc(jc(Nc,1),NE,84,15,[b,c]));kB(a.e)}\nfunction eo(){bo();return nc(jc(me,1),NE,65,0,[$n,_n,ao])}\nfunction cq(){_p();return nc(jc(Ae,1),NE,67,0,[Yp,Zp,$p])}\nfunction SB(){QB();return nc(jc(lh,1),NE,57,0,[OB,NB,PB])}\nfunction _t(a,b){Kc(b.R(a))===Kc((PC(),OC))&&a.b.delete(b)}\nfunction O(a){if(a.j){a.e!==OE&&a.B();a.h=null}return a}\nfunction xc(a){vE(a==null||Ic(a)&&!(a.bc===ii));return a}\nfunction El(a){var b;b=a.f;while(!!b&&!b.a){b=b.f}return b}\nfunction S(a,b){var c;c=VC(a._b);return b==null?c:c+': '+b}\nfunction Sy(a){if(!Qy){return a}return $wnd.Polymer.dom(a)}\nfunction sC(c,a,b){return c.setTimeout(HE(a.Ub).bind(a),b)}\nfunction Ac(a){return a._b||Array.isArray(a)&&jc(Qc,1)||Qc}\nfunction rC(c,a,b){return c.setInterval(HE(a.Ub).bind(a),b)}\nfunction Rl(a,b,c,d,e){a.splice.apply(a,[b,c,d].concat(e))}\nfunction Wm(a,b,c){this.a=a;this.c=b;this.b=c;oi.call(this)}\nfunction Ym(a,b,c){this.a=a;this.c=b;this.b=c;oi.call(this)}\nfunction Um(a,b,c){this.b=a;this.d=b;this.c=c;this.a=new K}\nfunction KC(a,b){N(this);this.f=b;this.g=a;O(this);this.B()}\nfunction WB(a,b){Bc(a)?a.jb(b):(a.handleEvent(b),undefined)}\nfunction dB(a,b,c,d){a.b>0?_A(a,new oB(a,b,c,d)):eB(a,b,c,d)}\nfunction ow(a,b,c){return a.push(dz(dA(Yt(b.e,1),c),b.b[c]))}\nfunction qp(){op();return nc(jc(te,1),NE,56,0,[lp,kp,np,mp])}\nfunction KB(){IB();return nc(jc(kh,1),NE,46,0,[HB,FB,GB,EB])}\nfunction Py(a,b,c,d){return a.splice.apply(a,[b,c].concat(d))}\nfunction ul(a,b){a.updateComplete.then(HE(function(){b.K()}))}\nfunction Ms(a){a.a=Js;if(!a.b){return}yr(sc(wj(a.d,Ye),24))}\nfunction cz(a,b){if(!a.b&&a.c&&iE(b,a.g)){return}mz(a,b,true)}\nfunction cD(a,b){var c=a.a=a.a||[];return c[b]||(c[b]=a.Vb(b))}\nfunction eD(a){if(a.$b()){return null}var b=a.h;return bi[b]}\nfunction gi(a){function b(){}\n;b.prototype=a||{};return new b}\nfunction $C(a,b,c,d){var e;e=YC(a,b);kD(c,e);e.e=d?8:0;return e}\nfunction Fj(a){var b;b={};b[bF]=zC(a.a);b[cF]=zC(a.b);return b}\nfunction Wb(){Wb=ei;var a,b;b=!_b();a=new hc;Vb=b?new ac:a}\nfunction fb(a){db();bb.call(this,a);this.a='';this.b=a;this.a=''}\nfunction RA(a){this.a=a;this.b=[];this.c=new $wnd.Set;yA(this)}\nfunction Uo(a){$wnd.vaadinPush.atmosphere.unsubscribeUrl(a)}\nfunction Vo(){return $wnd.vaadinPush&&$wnd.vaadinPush.atmosphere}\nfunction no(a){a?($wnd.location=a):$wnd.location.reload(false)}\nfunction xq(a){hj('applyDefaultTheme',(PC(),a?true:false))}\nfunction Jq(a){a&&a.afterServerUpdate&&a.afterServerUpdate()}\nfunction kz(a){if(a.c){a.d=true;mz(a,null,false);OA(new Fz(a))}}\nfunction wB(a){if(a.length>2){AB(a[0],'OS major');AB(a[1],BG)}}\nfunction Wk(a,b){var c;if(b.length!=0){c=new Uy(b);a.e.set(Cg,c)}}\nfunction lt(a,b){var c,d;for(c=0;c<b.length;c++){d=b[c];nt(a,d)}}\nfunction mz(a,b,c){var d;d=a.g;a.c=c;a.g=b;rz(a.a,new Lz(a,d,b))}\nfunction Gl(a,b,c){var d;d=[];c!=null&&d.push(c);return yl(a,b,d)}\nfunction qB(a,b,c,d){return rB(new $wnd.XMLHttpRequest,a,b,c,d)}\nfunction hp(a,b,c){return WD(a.b,b,$wnd.Math.min(a.b.length,c))}\nfunction In(a,b){++a.a;a.b=Nb(a.b,[b,false]);Jb(a);Lb(a,new Kn(a))}\nfunction xr(a,b){!!a.b&&Mo(a.b)?Ro(a.b,b):Vs(sc(wj(a.c,xf),62),b)}\nfunction Uz(a,b){Oz.call(this,a,b);this.c=[];this.a=new Yz(this)}\nfunction MC(a){KC.call(this,a==null?RE:hi(a),Cc(a,5)?sc(a,5):null)}\nfunction Pm(a){$wnd.HTMLImports.whenReady(HE(function(){a.K()}))}\nfunction wi(c,a){var b=c;c.onreadystatechange=HE(function(){a.L(b)})}\nfunction zo(a){var b=HE(Ao);$wnd.Vaadin.Flow.registerWidgetset(a,b)}\nfunction qm(a){a.a=$wnd.location.pathname;a.b=$wnd.location.search}\nfunction bl(a,b){var c;c=xc(a.b[b]);if(c){a.b[b]=null;a.a.delete(c)}}\nfunction Ev(a){wv();var b;b=a[kG];if(!b){b={};Bv(b);a[kG]=b}return b}\nfunction V(b){if(!('stack' in b)){try{throw b}catch(a){}}return b}\nfunction gl(a,b){if(hl(a,b.e.e)){a.b.push(b);return true}return false}\nfunction BA(a){if(a.d&&!a.e){try{QA(a,new FA(a))}finally{a.d=false}}}\nfunction li(a){if(!a.f){return}++a.d;a.e?pi(a.f.a):qi(a.f.a);a.f=null}\nfunction lv(a){!!a.a.e&&iv(a.a.e);a.a.b&&Tx(a.a.f,'trailing');fv(a.a)}\nfunction xA(a){while(a.b.length!=0){sc(a.b.splice(0,1)[0],40).Fb()}}\nfunction rt(a){sc(wj(a.a,ne),9).b==(bo(),ao)||Nn(sc(wj(a.a,ne),9),ao)}\nfunction ck(a,b,c,d){ak(a,d,c).forEach(fi(Kk.prototype.ab,Kk,[b]))}\nfunction fA(a,b,c){uz(b.a);b.c&&(a[c]=Nz((uz(b.a),b.g)),undefined)}\nfunction kA(a,b,c,d){var e;uz(c.a);if(c.c){e=Sl((uz(c.a),c.g));b[d]=e}}\nfunction uu(a,b){var c;c=wu(b);if(!c||!b.f){return c}return uu(a,b.f)}\nfunction TD(a,b,c){var d;c=ZD(c);d=new RegExp(b);return a.replace(d,c)}\nfunction An(a,b){var c;c=b.keyCode;if(c==27){b.preventDefault();no(a)}}\nfunction Sz(a,b){var c;c=a.c.splice(0,b);rz(a.a,new Zy(a,0,c,[],false))}\nfunction mo(a){var b;b=$doc.createElement('a');b.href=a;return b.href}\nfunction Nz(a){var b;if(Cc(a,6)){b=sc(a,6);return Wt(b)}else{return a}}\nfunction ub(b){rb();return function(){return vb(b,this,arguments);var a}}\nfunction lb(){if(Date.now){return Date.now()}return (new Date).getTime()}\nfunction ht(a,b){if(b==null){debugger;throw Xh(new LC)}return a.a.get(b)}\nfunction it(a,b){if(b==null){debugger;throw Xh(new LC)}return a.a.has(b)}\nfunction Jt(a){if(a.composed){return a.composedPath()[0]}return a.target}\nfunction vn(a,b){Cc(b,3)?tn(a,'Assertion error: '+b.A()):tn(a,b.A())}\nfunction Fp(a,b){mj('Heartbeat exception: '+b.A());Dp(a,(_p(),Yp),null)}\nfunction SD(a,b){b=ZD(b);return a.replace(new RegExp('[^0-9].*','g'),b)}\nfunction Ml(a,b,c){var d;d=c.a;a.push(bz(d,new lm(d,b)));NA(new jm(d,b))}\nfunction Fr(a,b){var c,d;c=Yt(a,8);d=dA(c,'pollInterval');bz(d,new Gr(b))}\nfunction Tz(a,b,c,d){var e;e=Py(a.c,b,c,d);rz(a.a,new Zy(a,b,e,d,false))}\nfunction Ow(a,b,c,d,e){a.forEach(fi(_w.prototype.eb,_w,[]));Xw(b,c,d,e)}\nfunction fw(a,b){var c;c=b.f;Yw(sc(wj(b.e.e.g.c,cd),10),a,c,(uz(b.a),b.g))}\nfunction MB(){MB=ei;LB=Vn((IB(),nc(jc(kh,1),NE,46,0,[HB,FB,GB,EB])))}\nfunction Lc(a){return Math.max(Math.min(a,2147483647),-2147483648)|0}\nfunction Ol(a){return $wnd.customElements&&a.localName.indexOf('-')>-1}\nfunction Il(a,b){$wnd.customElements.whenDefined(a).then(function(){b.K()})}\nfunction gA(a,b){Oz.call(this,a,b);this.b=new $wnd.Map;this.a=new lA(this)}\nfunction nz(a,b,c){az();this.a=new wz(this);this.f=a;this.e=b;this.b=c}\nfunction ab(a){N(this);this.g=!a?null:S(a,a.A());this.f=a;O(this);this.B()}\nfunction Zq(a){this.k=new $wnd.Set;this.h=[];this.c=new er(this);this.j=a}\nfunction xo(a){so();!$wnd.WebComponents||$wnd.WebComponents.ready?uo(a):to(a)}\nfunction eA(a,b){if(!a.b.has(b)){return false}return iz(sc(a.b.get(b),27))}\nfunction uE(a,b){if(a<0||a>=b){throw Xh(new eE('Index: '+a+', Size: '+b))}}\nfunction po(a,b,c){c==null?Sy(a).removeAttribute(b):Sy(a).setAttribute(b,c)}\nfunction eB(a,b,c,d){var e,f;e=gB(a,b,c);f=Ky(e,d);f&&e.length==0&&iB(a,b,c)}\nfunction Qu(a,b){var c,d,e;e=Lc(yC(a[lG]));d=Yt(b,e);c=a['key'];return dA(d,c)}\nfunction kc(a,b,c,d,e,f){var g;g=lc(e,d);e!=10&&nc(jc(a,f),b,c,e,g);return g}\nfunction Zt(a,b,c,d){var e;e=c.Tb();!!e&&(b[su(a.g,Lc((tE(d),d)))]=e,undefined)}\nfunction Zn(a,b){var c;tE(b);c=a[':'+b];sE(!!c,nc(jc(Mh,1),NE,1,5,[b]));return c}\nfunction ko(a,b){if(MD(b.substr(0,a.length),a)){return VD(b,a.length)}return b}\nfunction Lo(a){switch(a.f.c){case 0:case 1:return true;default:return false;}}\nfunction sw(a){var b;b=Sy(a);while(b.firstChild){b.removeChild(b.firstChild)}}\nfunction Qw(a){var b;b=sc(a.e.get(Uf),68);!!b&&(!!b.a&&my(b.a),b.b.e.delete(Uf))}\nfunction Ar(a,b){b&&!a.b?(a.b=new To(a.c)):!b&&!!a.b&&Lo(a.b)&&Io(a.b,new Cr(a))}\nfunction Uy(a){this.a=new $wnd.Set;a.forEach(fi(Vy.prototype.eb,Vy,[this.a]))}\nfunction Gu(a){this.a=new $wnd.Map;this.d=new du(1,this);this.c=a;zu(this,this.d)}\nfunction ij(a){$wnd.Vaadin.connectionState&&($wnd.Vaadin.connectionState.state=a)}\nfunction F(a){return Hc(a)?Sh:Ec(a)?Ah:Dc(a)?xh:Bc(a)?a._b:mc(a)?a._b:Ac(a)}\nfunction Jp(a){mq(sc(wj(a.c,Ie),49),sc(wj(a.c,cd),10).f);Dp(a,(_p(),Yp),null)}\nfunction pm(a){gs(sc(wj(a.c,jf),12),new vm(a));UB($wnd,'popstate',new tm(a),false)}\nfunction sE(a,b){if(!a){throw Xh(new tD(wE('Enum constant undefined: %s',b)))}}\nfunction Vr(a){var b;if(a==null){return false}b=zc(a);return !MD('DISABLED',b)}\nfunction Rq(a){var b;b=a['meta'];if(!b||!('async' in b)){return true}return false}\nfunction My(a){var b;b=new $wnd.Set;a.forEach(fi(Ny.prototype.eb,Ny,[b]));return b}\nfunction Zu(){var a;Zu=ei;Yu=(a=[],a.push(new Aw),a.push(new By),a);Xu=new bv}\nfunction mw(a,b,c){var d,e;e=(uz(a.a),a.c);d=b.d.has(c);e!=d&&(e?Jv(c,b):tw(c,b))}\nfunction qw(a,b,c){var d,e,f;for(e=0,f=a.length;e<f;++e){d=a[e];cw(d,new cy(b,d),c)}}\nfunction bw(a,b,c,d){var e,f,g;g=c[eG];e=\"id='\"+g+\"'\";f=new zx(a,g);Yv(a,b,d,f,g,e)}\nfunction pz(a,b){var c,d;a.a.add(b);d=new TA(a,b);c=JA;!!c&&zA(c,new VA(d));return d}\nfunction Tr(a,b){var c,d;d=Vr(b.b);c=Vr(b.a);!d&&c?NA(new Zr(a)):d&&!c&&NA(new _r(a))}\nfunction Fb(a){var b,c;if(a.c){c=null;do{b=a.c;a.c=null;c=Ob(b,c)}while(a.c);a.c=c}}\nfunction Gb(a){var b,c;if(a.d){c=null;do{b=a.d;a.d=null;c=Ob(b,c)}while(a.d);a.d=c}}\nfunction kD(a,b){var c;if(!a){return}b.h=a;var d=eD(b);if(!d){bi[a]=[b];return}d._b=b}\nfunction fi(a,b,c){var d=function(){return a.apply(d,arguments)};b.apply(d,c);return d}\nfunction Wh(a){var b;if(Cc(a,5)){return a}b=a&&a[PE];if(!b){b=new fb(a);Xb(b)}return b}\nfunction Do(){if(Vo()){return $wnd.vaadinPush.atmosphere.version}else{return null}}\nfunction fo(a,b,c){MD(c.substr(0,a.length),a)&&(c=b+(''+VD(c,a.length)));return c}\nfunction bx(a,b,c){this.c=new $wnd.Map;this.d=new $wnd.Map;this.e=a;this.b=b;this.a=c}\nfunction Ur(a){this.a=a;bz(dA(Yt(sc(wj(this.a,Lf),8).d,5),'pushMode'),new Xr(this))}\nfunction oj(a){var b;b=L;M(new uj(b));if(Cc(a,23)){nj(sc(a,23).C())}else{throw Xh(a)}}\nfunction Ws(a){this.a=a;UB($wnd,iF,new ct(this),false);gs(sc(wj(a,jf),12),new et(this))}\nfunction QB(){QB=ei;OB=new RB('INLINE',0);NB=new RB('EAGER',1);PB=new RB('LAZY',2)}\nfunction Qz(a){var b;a.b=true;b=a.c.splice(0,a.c.length);rz(a.a,new Zy(a,0,b,[],true))}\nfunction Hb(a){var b;if(a.b){b=a.b;a.b=null;!a.g&&(a.g=[]);Ob(b,a.g)}!!a.g&&(a.g=Kb(a.g))}\nfunction bb(a){N(this);O(this);this.e=a;a!=null&&xE(a,PE,this);this.g=a==null?RE:hi(a)}\nfunction Zh(){$h();var a=Yh;for(var b=0;b<arguments.length;b++){a.push(arguments[b])}}\nfunction pw(a,b){var c,d;c=a.a;if(c.length!=0){for(d=0;d<c.length;d++){Kv(b,sc(c[d],6))}}}\nfunction Zb(a){var b=/function(?:\\s+([\\w$]+))?\\s*\\(/;var c=b.exec(a);return c&&c[1]||VE}\nfunction to(a){var b=function(){uo(a)};$wnd.addEventListener('WebComponentsReady',HE(b))}\nfunction UB(e,a,b,c){var d=!b?null:VB(b);e.addEventListener(a,d,c);return new eC(e,a,d,c)}\nfunction No(a,b){if(b.a.b==(bo(),ao)){if(a.f==(op(),np)||a.f==mp){return}Io(a,new xp)}}\nfunction hj(a,b){$wnd.Vaadin.connectionIndicator&&($wnd.Vaadin.connectionIndicator[a]=b)}\nfunction ai(a,b){typeof window===IE&&typeof window['$gwt']===IE&&(window['$gwt'][a]=b)}\nfunction Tk(a,b){return !!(a[rF]&&a[rF][sF]&&a[rF][sF][b])&&typeof a[rF][sF][b][tF]!=TE}\nfunction Kp(a,b,c){Mo(b)&&hs(sc(wj(a.c,jf),12));Ep(a,'Invalid JSON from server: '+c,null)}\nfunction dw(a,b,c,d){var e,f,g;g=c[eG];e=\"path='\"+kb(g)+\"'\";f=new xx(a,g);Yv(a,b,d,f,null,e)}\nfunction Cu(a,b,c,d,e){if(!ru(a,b)){debugger;throw Xh(new LC)}Bs(sc(wj(a.c,nf),25),b,c,d,e)}\nfunction HD(a,b,c){if(a==null){debugger;throw Xh(new LC)}this.a=XE;this.d=a;this.b=b;this.c=c}\nfunction ni(a,b){if(b<=0){throw Xh(new tD(ZE))}!!a.f&&li(a);a.e=true;a.f=zD(ti(ri(a,a.d),b))}\nfunction mi(a,b){if(b<0){throw Xh(new tD(YE))}!!a.f&&li(a);a.e=false;a.f=zD(ui(ri(a,a.d),b))}\nfunction mq(a,b){jj&&iC($wnd.console,'Setting heartbeat interval to '+b+'sec.');a.a=b;kq(a)}\nfunction Wt(a){var b;b=$wnd.Object.create(null);Vt(a,fi(hu.prototype.ab,hu,[a,b]));return b}\nfunction ej(){try{document.createEvent('TouchEvent');return true}catch(a){return false}}\nfunction Xs(b){if(b.readyState!=1){return false}try{b.send();return true}catch(a){return false}}\nfunction Dw(a,b){var c;c=a;while(true){c=c.f;if(!c){return false}if(C(b,c.a)){return true}}}\nfunction Go(c,a){var b=c.getConfig(a);if(b===null||b===undefined){return null}else{return b+''}}\nfunction Fo(c,a){var b=c.getConfig(a);if(b===null||b===undefined){return null}else{return zD(b)}}\nfunction Rv(a,b,c,d){var e;e=Yt(d,a);cA(e,fi(ry.prototype.ab,ry,[b,c]));return bA(e,new ty(b,c))}\nfunction YA(b,c,d){return HE(function(){var a=Array.prototype.slice.call(arguments);d.Bb(b,c,a)})}\nfunction Pb(b,c){Eb();function d(){var a=HE(Mb)(b);a&&$wnd.setTimeout(d,c)}\n$wnd.setTimeout(d,c)}\nfunction Iu(a,b){var c;if(Cc(a,28)){c=sc(a,28);Lc((tE(b),b))==2?Sz(c,(uz(c.a),c.c.length)):Qz(c)}}\nfunction xu(a,b){var c;if(b!=a.d){c=b.a;!!c&&(wv(),!!c[kG])&&Cv((wv(),c[kG]));Fu(a,b);b.f=null}}\nfunction ew(a,b){var c,d;c=b.f;d=a.style;uz(b.a);b.c?ZB(d,c,(uz(b.a),zc(b.g))):d.removeProperty(c)}\nfunction tw(a,b){var c;c=sc(b.d.get(a),40);b.d.delete(a);if(!c){debugger;throw Xh(new LC)}c.Fb()}\nfunction Km(a,b){var c,d;c=new bn(a);d=new $wnd.Function(a);Tm(a,new jn(d),new ln(b,c),new nn(b,c))}\nfunction Ns(a){if(Js!=a.a||a.c.length==0){return}a.b=true;a.a=new Ps(a);In((Eb(),Db),new Ts(a))}\nfunction Y(a){var b;if(a!=null){b=a[PE];if(b){return b}}return Gc(a,TypeError)?new DD(a):new bb(a)}\nfunction go(a,b){var c;if(a==null){return null}c=fo('context://',b,a);c=fo('base://','',c);return c}\nfunction VB(b){var c=b.handler;if(!c){c=HE(function(a){WB(b,a)});c.listener=b;b.handler=c}return c}\nfunction vC(c){return $wnd.JSON.stringify(c,function(a,b){if(a=='$H'){return undefined}return b},0)}\nfunction Qq(a,b){if(b==-1){return true}if(b==a.f+1){return true}if(a.f==-1){return true}return false}\nfunction DB(a,b,c){var d,e;b<0?(e=0):(e=b);c<0||c>a.length?(d=a.length):(d=c);return a.substr(e,d-e)}\nfunction Bu(a,b,c,d,e,f){if(!ru(a,b)){debugger;throw Xh(new LC)}As(sc(wj(a.c,nf),25),b,c,d,e,f)}\nfunction Vi(a,b){if(!b){vr(sc(wj(a.a,Ye),24))}else{ks(sc(wj(a.a,jf),12));Oq(sc(wj(a.a,We),22),b)}}\nfunction Jb(a){if(!a.i){a.i=true;!a.f&&(a.f=new Rb(a));Pb(a.f,1);!a.h&&(a.h=new Tb(a));Pb(a.h,50)}}\nfunction _p(){_p=ei;Yp=new bq('HEARTBEAT',0,0);Zp=new bq('PUSH',1,1);$p=new bq('XHR',2,2)}\nfunction bo(){bo=ei;$n=new co('INITIALIZING',0);_n=new co('RUNNING',1);ao=new co('TERMINATED',2)}\nfunction fk(a,b){var c;c=new $wnd.Map;b.forEach(fi(Ck.prototype.ab,Ck,[a,c]));c.size==0||lk(new Ek(c))}\nfunction Di(a,b){var c;c='/'.length;if(!MD(b.substr(b.length-c,c),'/')){debugger;throw Xh(new LC)}a.c=b}\nfunction pt(a,b){var c;c=!!b.a&&!RC((PC(),NC),ez(dA(Yt(b,0),dG)));if(!c||!b.f){return c}return pt(a,b.f)}\nfunction Jv(a,b){var c;if(b.d.has(a)){debugger;throw Xh(new LC)}c=$B(b.b,a,new Px(b),false);b.d.set(a,c)}\nfunction ys(a,b,c,d){var e;e={};e[lF]=$F;e[_F]=Object(b);e[$F]=c;!!d&&(e['data']=d,undefined);Cs(a,e)}\nfunction nc(a,b,c,d,e){e._b=a;e.ac=b;e.bc=ii;e.__elementTypeId$=c;e.__elementTypeCategory$=d;return e}\nfunction hE(a){var b,c,d,e;e=1;for(c=0,d=a.length;c<d;++c){b=a[c];e=31*e+(b!=null?H(b):0);e=e|0}return e}\nfunction Vn(a){var b,c,d,e;b={};for(d=0,e=a.length;d<e;++d){c=a[d];b[':'+(c.b!=null?c.b:''+c.c)]=c}return b}\nfunction Q(a){var b,c,d,e;for(b=(a.h==null&&(a.h=(Wb(),e=Vb.H(a),Yb(e))),a.h),c=0,d=b.length;c<d;++c);}\nfunction js(a){var b,c;c=sc(wj(a.c,ne),9).b==(bo(),ao);b=a.b||sc(wj(a.c,rf),32).b;(c||!b)&&ij('connected')}\nfunction Op(a,b){yn(sc(wj(a.c,ie),16),'',b+' could not be loaded. Push will not work.','',null,null)}\nfunction Np(a,b){jj&&($wnd.console.log('Reopening push connection'),undefined);Mo(b)&&Dp(a,(_p(),Zp),null)}\nfunction Oo(a,b,c){ND(b,'true')||ND(b,'false')?(a.a[c]=ND(b,'true'),undefined):(a.a[c]=b,undefined)}\nfunction Qb(b,c){Eb();var d=$wnd.setInterval(function(){var a=HE(Mb)(b);!a&&$wnd.clearInterval(d)},c)}\nfunction Xw(a,b,c,d){if(d==null){!!c&&(delete c['for'],undefined)}else{!c&&(c={});c['for']=d}Au(a.g,a,b,c)}\nfunction WC(){++TC;this.i=null;this.g=null;this.f=null;this.d=null;this.b=null;this.h=null;this.a=null}\nfunction hB(a){var b,c;if(a.a!=null){try{for(c=0;c<a.a.length;c++){b=sc(a.a[c],280);b.F()}}finally{a.a=null}}}\nfunction wu(a){var b,c;if(!a.c.has(0)){return true}c=Yt(a,0);b=tc(ez(dA(c,'visible')));return !RC((PC(),NC),b)}\nfunction Ky(a,b){var c;for(c=0;c<a.length;c++){if(Kc(a[c])===Kc(b)){a.splice(c,1)[0];return true}}return false}\nfunction fz(a,b){var c;uz(a.a);if(a.c){c=(uz(a.a),a.g);if(c==null){return b}return rD(uc(c))}else{return b}}\nfunction hz(a){var b;uz(a.a);if(a.c){b=(uz(a.a),a.g);if(b==null){return true}return QC(tc(b))}else{return true}}\nfunction Eo(c,a){var b=c.getConfig(a);if(b===null||b===undefined){return false}else{return PC(),b?true:false}}\nfunction Uv(a){var b,c;b=Xt(a.e,24);for(c=0;c<(uz(b.a),b.c.length);c++){Kv(a,sc(b.c[c],6))}return Pz(b,new px(a))}\nfunction zD(a){var b,c;if(a>-129&&a<128){b=a+128;c=(BD(),AD)[b];!c&&(c=AD[b]=new vD(a));return c}return new vD(a)}\nfunction av(a){var b,c;c=_u(a);b=a.a;if(!a.a){b=c.Jb(a);if(!b){debugger;throw Xh(new LC)}bu(a,b)}$u(a,b);return b}\nfunction Fv(a){var b;b=vc(vv.get(a));if(b==null){b=vc(new $wnd.Function($F,qG,'return ('+a+')'));vv.set(a,b)}return b}\nfunction wl(a,b){var c;vl==null&&(vl=Ly());c=yc(vl.get(a),$wnd.Set);if(c==null){c=new $wnd.Set;vl.set(a,c)}c.add(b)}\nfunction Qv(a,b){var c,d;d=a.f;if(b.c.has(d)){debugger;throw Xh(new LC)}c=new RA(new Nx(a,b,d));b.c.set(d,c);return c}\nfunction rz(a,b){var c;if(b.Ob()!=a.b){debugger;throw Xh(new LC)}c=My(a.a);c.forEach(fi(WA.prototype.eb,WA,[a,b]))}\nfunction fl(a){var b;if(!sc(wj(a.c,Lf),8).e){b=new $wnd.Map;a.a.forEach(fi(nl.prototype.eb,nl,[a,b]));OA(new pl(a,b))}}\nfunction Bp(a){a.b=null;sc(wj(a.c,jf),12).b&&hs(sc(wj(a.c,jf),12));ij('connection-lost');mq(sc(wj(a.c,Ie),49),0)}\nfunction jv(a,b){if(b<0){throw Xh(new tD(YE))}a.b?pC($wnd,a.c):qC($wnd,a.c);a.b=false;a.c=sC($wnd,new DC(a),b)}\nfunction kv(a,b){if(b<=0){throw Xh(new tD(ZE))}a.b?pC($wnd,a.c):qC($wnd,a.c);a.b=true;a.c=rC($wnd,new FC(a),b)}\nfunction ks(a){if(a.b){throw Xh(new uD('Trying to start a new request while another is active'))}a.b=true;is(a,new os)}\nfunction Pv(a){if(!a.b){debugger;throw Xh(new MC('Cannot bind client delegate methods to a Node'))}return ov(a.b,a.e)}\nfunction Mt(a){var b;if(!MD(GF,a.type)){debugger;throw Xh(new LC)}b=a;return b.altKey||b.ctrlKey||b.metaKey||b.shiftKey}\nfunction gz(a){var b;uz(a.a);if(a.c){b=(uz(a.a),a.g);if(b==null){return null}return uz(a.a),zc(a.g)}else{return null}}\nfunction Qm(a,b,c){var d;d=wc(c.get(a));if(d==null){d=[];d.push(b);c.set(a,d);return true}else{d.push(b);return false}}\nfunction gB(a,b,c){var d,e;e=yc(a.c.get(b),$wnd.Map);if(e==null){return []}d=wc(e.get(c));if(d==null){return []}return d}\nfunction BC(c){var a=[];for(var b in c){Object.prototype.hasOwnProperty.call(c,b)&&b!='$H'&&a.push(b)}return a}\nfunction el(a,b){var c;a.a.clear();while(a.b.length>0){c=sc(a.b.splice(0,1)[0],27);kl(c,b)||Du(sc(wj(a.c,Lf),8),c);PA()}}\nfunction Ip(a,b){var c;if(b.a.b==(bo(),ao)){if(a.b){Bp(a);c=sc(wj(a.c,ne),9);c.b!=ao&&Nn(c,ao)}!!a.d&&!!a.d.f&&li(a.d)}}\nfunction Ep(a,b,c){var d,e;c&&(e=c.b);yn(sc(wj(a.c,ie),16),'',b,'',null,null);d=sc(wj(a.c,ne),9);d.b!=(bo(),ao)&&Nn(d,ao)}\nfunction uo(a){var b,c,d,e;b=(e=new Si,e.a=a,yo(e,vo(a)),e);c=new Wi(b);ro.push(c);d=vo(a).getConfig('uidl');Vi(c,d)}\nfunction vr(a){var b;jj&&($wnd.console.log('Resynchronizing from server'),undefined);b={};b[UF]=Object(true);wr(a,[],b)}\nfunction Rj(a){$wnd.Vaadin.Flow.setScrollPosition?$wnd.Vaadin.Flow.setScrollPosition(a):$wnd.scrollTo(a[0],a[1])}\nfunction du(a,b){this.c=new $wnd.Map;this.h=new $wnd.Set;this.b=new $wnd.Set;this.e=new $wnd.Map;this.d=a;this.g=b}\nfunction Ct(a,b,c){if(a==null){debugger;throw Xh(new LC)}if(b==null){debugger;throw Xh(new LC)}this.c=a;this.b=b;this.d=c}\nfunction kl(a,b){var c,d;c=yc(b.get(a.e.e.d),$wnd.Map);if(c!=null&&c.has(a.f)){d=c.get(a.f);lz(a,d);return true}return false}\nfunction Jl(a){while(a.parentNode&&(a=a.parentNode)){if(a.toString()==='[object ShadowRoot]'){return true}}return false}\nfunction Av(a,b){if(typeof a.get===KE){var c=a.get(b);if(typeof c===IE&&typeof c[wF]!==TE){return {nodeId:c[wF]}}}return null}\nfunction Sr(a){if(eA(Yt(sc(wj(a.a,Lf),8).d,5),'pushUrl')){return zc(ez(dA(Yt(sc(wj(a.a,Lf),8).d,5),'pushUrl')))}return null}\nfunction hi(a){var b;if(Array.isArray(a)&&a.bc===ii){return VC(F(a))+'@'+(b=H(a)>>>0,b.toString(16))}return a.toString()}\nfunction Ab(a,b){rb();var c;c=L;if(c){if(c==ob){return}c.v(a);return}if(b){zb(Cc(a,23)?sc(a,23).C():a)}else{gE();P(a,fE,'')}}\nfunction jk(){_j();var a,b;--$j;if($j==0&&Zj.length!=0){try{for(b=0;b<Zj.length;b++){a=sc(Zj[b],19);a.F()}}finally{Jy(Zj)}}}\nfunction Cv(c){wv();var b=c['}p'].promises;b!==undefined&&b.forEach(function(a){a[1](Error('Client is resynchronizing'))})}\nfunction tn(a,b){var c;if(sc(wj(a.a,cd),10).j){jj&&hC($wnd.console,b);return}c=un(null,b,null,null);UB(c,GF,new Gn(c),false)}\nfunction ho(a){var b,c;b=sc(wj(a.a,cd),10).c;c='/'.length;if(!MD(b.substr(b.length-c,c),'/')){debugger;throw Xh(new LC)}return b}\nfunction Ov(a,b){var c,d;c=Xt(b,11);for(d=0;d<(uz(c.a),c.c.length);d++){Sy(a).classList.add(zc(c.c[d]))}return Pz(c,new Yx(a))}\nfunction $i(a,b,c){var d;if(a==c.d){d=new $wnd.Function('callback','callback();');d.call(null,b);return PC(),true}return PC(),false}\nfunction dA(a,b){var c;c=sc(a.b.get(b),27);if(!c){c=new nz(b,a,MD('innerHTML',b)&&a.d==1);a.b.set(b,c);rz(a.a,new Jz(a,c))}return c}\nfunction gj(){return /iPad|iPhone|iPod/.test(navigator.platform)||navigator.platform==='MacIntel'&&navigator.maxTouchPoints>1}\nfunction fj(){this.a=new CB($wnd.navigator.userAgent);this.a.b?'ontouchstart' in window:this.a.f?!!navigator.msMaxTouchPoints:ej()}\nfunction Om(a){this.b=new $wnd.Set;this.a=new $wnd.Map;this.d=!!($wnd.HTMLImports&&$wnd.HTMLImports.whenReady);this.c=a;Hm(this)}\nfunction Vp(a){this.c=a;Mn(sc(wj(a,ne),9),new dq(this));UB($wnd,'offline',new fq(this),false);UB($wnd,'online',new hq(this),false)}\nfunction IB(){IB=ei;HB=new JB('STYLESHEET',0);FB=new JB('JAVASCRIPT',1);GB=new JB('JS_MODULE',2);EB=new JB('DYNAMIC_IMPORT',3)}\nfunction Bl(a){var b;if(vl==null){return}b=yc(vl.get(a),$wnd.Set);if(b!=null){vl.delete(a);b.forEach(fi(Xl.prototype.eb,Xl,[]))}}\nfunction yA(a){var b;a.d=true;xA(a);a.e||NA(new DA(a));if(a.c.size!=0){b=a.c;a.c=new $wnd.Set;b.forEach(fi(HA.prototype.eb,HA,[]))}}\nfunction yu(a){Rz(Xt(a.d,24),fi(Ku.prototype.eb,Ku,[]));Vt(a.d,fi(Ou.prototype.ab,Ou,[]));a.a.forEach(fi(Mu.prototype.ab,Mu,[a]))}\nfunction Es(a,b,c,d,e){var f;f={};f[lF]='mSync';f[_F]=zC(b.d);f['feature']=Object(c);f['property']=d;f[tF]=e==null?null:e;Cs(a,f)}\nfunction tl(a){return typeof a.update==KE&&a.updateComplete instanceof Promise&&typeof a.shouldUpdate==KE&&typeof a.firstUpdated==KE}\nfunction sD(a){var b;b=oD(a);if(b>3.4028234663852886E38){return Infinity}else if(b<-3.4028234663852886E38){return -Infinity}return b}\nfunction SC(a){if(a>=48&&a<48+$wnd.Math.min(10,10)){return a-48}if(a>=97&&a<97){return a-97+10}if(a>=65&&a<65){return a-65+10}return -1}\nfunction jD(a,b){var c=0;while(!b[c]||b[c]==''){c++}var d=b[c++];for(;c<b.length;c++){if(!b[c]||b[c]==''){continue}d+=a+b[c]}return d}\nfunction _b(){if(Error.stackTraceLimit>0){$wnd.Error.stackTraceLimit=Error.stackTraceLimit=64;return true}return 'stack' in new Error}\nfunction Wv(a){var b;b=zc(ez(dA(Yt(a,0),'tag')));if(b==null){debugger;throw Xh(new MC('New child must have a tag'))}return dC($doc,b)}\nfunction Tv(a){var b;if(!a.b){debugger;throw Xh(new MC('Cannot bind shadow root to a Node'))}b=Yt(a.e,20);Lv(a);return bA(b,new py(a))}\nfunction Uk(a,b){var c,d;d=Yt(a,1);if(!a.a){Il(zc(ez(dA(Yt(a,0),'tag'))),new Yk(a,b));return}for(c=0;c<b.length;c++){Vk(a,d,zc(b[c]))}}\nfunction Xt(a,b){var c,d;d=b;c=sc(a.c.get(d),38);if(!c){c=new Uz(b,a);a.c.set(d,c)}if(!Cc(c,28)){debugger;throw Xh(new LC)}return sc(c,28)}\nfunction Yt(a,b){var c,d;d=b;c=sc(a.c.get(d),38);if(!c){c=new gA(b,a);a.c.set(d,c)}if(!Cc(c,39)){debugger;throw Xh(new LC)}return sc(c,39)}\nfunction ND(a,b){tE(a);if(b==null){return false}if(MD(a,b)){return true}return a.length==b.length&&MD(a.toLowerCase(),b.toLowerCase())}\nfunction xC(b){var c;try{return c=$wnd.JSON.parse(b),c}catch(a){a=Wh(a);if(Cc(a,7)){throw Xh(new CC(\"Can't parse \"+b))}else throw Xh(a)}}\nfunction Lj(a){this.d=a;'scrollRestoration' in history&&(history.scrollRestoration='manual');UB($wnd,iF,new pn(this),false);Ij(this,true)}\nfunction op(){op=ei;lp=new pp('CONNECT_PENDING',0);kp=new pp('CONNECTED',1);np=new pp('DISCONNECT_PENDING',2);mp=new pp('DISCONNECTED',3)}\nfunction Pp(a,b){if(a.b!=b){return}a.b=null;a.a=0;ij('connected');jj&&($wnd.console.log('Re-established connection to server'),undefined)}\nfunction Bs(a,b,c,d,e){var f;f={};f[lF]='attachExistingElementById';f[_F]=zC(b.d);f[aG]=Object(c);f[bG]=Object(d);f['attachId']=e;Cs(a,f)}\nfunction ek(a){jj&&($wnd.console.log('Finished loading eager dependencies, loading lazy.'),undefined);a.forEach(fi(Ok.prototype.ab,Ok,[]))}\nfunction lq(a){li(a.c);jj&&($wnd.console.debug('Sending heartbeat request...'),undefined);qB(a.d,null,'text/plain; charset=utf-8',new qq(a))}\nfunction FE(a){DE();var b,c,d;c=':'+a;d=CE[c];if(d!=null){return Lc((tE(d),d))}d=AE[c];b=d==null?EE(a):Lc((tE(d),d));GE();CE[c]=b;return b}\nfunction H(a){return Hc(a)?FE(a):Ec(a)?Lc((tE(a),a)):Dc(a)?(tE(a),a)?1231:1237:Bc(a)?a.t():mc(a)?zE(a):!!a&&!!a.hashCode?a.hashCode():zE(a)}\nfunction C(a,b){return Hc(a)?MD(a,b):Ec(a)?(tE(a),a===b):Dc(a)?(tE(a),a===b):Bc(a)?a.r(b):mc(a)?a===b:!!a&&!!a.equals?a.equals(b):Kc(a)===Kc(b)}\nfunction xj(a,b,c){if(a.a.has(b)){debugger;throw Xh(new MC((UC(b),'Registry already has a class of type '+b.i+' registered')))}a.a.set(b,c)}\nfunction $u(a,b){Zu();var c;if(a.g.e){debugger;throw Xh(new MC('Binding state node while processing state tree changes'))}c=_u(a);c.Ib(a,b,Xu)}\nfunction Zy(a,b,c,d,e){this.e=a;if(c==null){debugger;throw Xh(new LC)}if(d==null){debugger;throw Xh(new LC)}this.c=b;this.d=c;this.a=d;this.b=e}\nfunction vw(a,b){var c,d;d=dA(b,tG);uz(d.a);d.c||lz(d,a.getAttribute(tG));c=dA(b,uG);Jl(a)&&(uz(c.a),!c.c)&&!!a.style&&lz(c,a.style.display)}\nfunction Sk(a,b,c,d){var e,f;if(!d){f=sc(wj(a.g.c,Bd),52);e=sc(f.a.get(c),31);if(!e){f.b[b]=c;f.a.set(c,zD(b));return zD(b)}return e}return d}\nfunction Vk(a,b,c){var d;if(Tk(a.a,c)){d=sc(a.e.get(Cg),69);if(!d||!d.a.has(c)){return}dz(dA(b,c),a.a[c]).K()}else{eA(b,c)||lz(dA(b,c),null)}}\nfunction dl(a,b,c){var d,e;e=tu(sc(wj(a.c,Lf),8),Lc((tE(b),b)));if(e.c.has(1)){d=new $wnd.Map;cA(Yt(e,1),fi(rl.prototype.ab,rl,[d]));c.set(b,d)}}\nfunction fB(a,b,c){var d,e;e=yc(a.c.get(b),$wnd.Map);if(e==null){e=new $wnd.Map;a.c.set(b,e)}d=wc(e.get(c));if(d==null){d=[];e.set(c,d)}return d}\nfunction Gw(a){var b;Hv==null&&(Hv=new $wnd.Map);b=vc(Hv.get(a));if(b==null){b=vc(new $wnd.Function($F,qG,'return ('+a+')'));Hv.set(a,b)}return b}\nfunction $q(){if($wnd.performance&&$wnd.performance.timing){return (new Date).getTime()-$wnd.performance.timing.responseStart}else{return -1}}\nfunction qv(a,b,c,d){var e,f,g,h,i;i=xc(a.mb());h=d.d;for(g=0;g<h.length;g++){Dv(i,zc(h[g]))}e=d.a;for(f=0;f<e.length;f++){xv(i,zc(e[f]),b,c)}}\nfunction Pw(a,b){var c,d,e,f,g;d=Sy(a).classList;g=b.d;for(f=0;f<g.length;f++){d.remove(zc(g[f]))}c=b.a;for(e=0;e<c.length;e++){d.add(zc(c[e]))}}\nfunction $v(a,b){var c,d,e,f,g;g=Xt(b.e,2);d=0;f=null;for(e=0;e<(uz(g.a),g.c.length);e++){if(d==a){return f}c=sc(g.c[e],6);if(c.a){f=c;++d}}return f}\nfunction Fl(a){var b,c,d,e;d=-1;b=Xt(a.f,16);for(c=0;c<(uz(b.a),b.c.length);c++){e=b.c[c];if(C(a,e)){d=c;break}}if(d<0){return null}return ''+d}\nfunction rc(a,b){if(Hc(a)){return !!qc[b]}else if(a.ac){return !!a.ac[b]}else if(Ec(a)){return !!pc[b]}else if(Dc(a)){return !!oc[b]}return false}\nfunction Oj(){if($wnd.Vaadin.Flow.getScrollPosition){return $wnd.Vaadin.Flow.getScrollPosition()}else{return [$wnd.pageXOffset,$wnd.pageYOffset]}}\nfunction uB(a){var b,c;if(a.indexOf('android')==-1){return}b=DB(a,a.indexOf('android ')+8,a.length);b=DB(b,0,b.indexOf(';'));c=UD(b,'\\\\.',0);zB(c)}\nfunction Ot(a,b,c,d){if(!a){debugger;throw Xh(new LC)}if(b==null){debugger;throw Xh(new LC)}Yq(sc(wj(a,We),22),new Rt(b));Ds(sc(wj(a,nf),25),b,c,d)}\nfunction Fu(a,b){if(!ru(a,b)){debugger;throw Xh(new LC)}if(b==a.d){debugger;throw Xh(new MC(\"Root node can't be unregistered\"))}a.a.delete(b.d);cu(b)}\nfunction wj(a,b){if(!a.a.has(b)){debugger;throw Xh(new MC((UC(b),'Tried to lookup type '+b.i+' but no instance has been registered')))}return a.a.get(b)}\nfunction Cw(a,b,c){var d,e;e=b.f;if(c.has(e)){debugger;throw Xh(new MC(\"There's already a binding for \"+e))}d=new RA(new jx(a,b));c.set(e,d);return d}\nfunction zB(a){var b,c;a.length>=1&&AB(a[0],'OS major');if(a.length>=2){b=OD(a[1],YD(45));if(b>-1){c=a[1].substr(0,b-0);AB(c,BG)}else{AB(a[1],BG)}}}\nfunction P(a,b,c){var d,e,f,g,h;Q(a);for(e=(a.i==null&&(a.i=kc(Th,NE,5,0,0,1)),a.i),f=0,g=e.length;f<g;++f){d=e[f];P(d,b,'\\t'+c)}h=a.f;!!h&&P(h,b,c)}\nfunction AB(b,c){var d;try{return pD(b)}catch(a){a=Wh(a);if(Cc(a,7)){d=a;gE();c+' version parsing failed for: '+b+' '+d.A()}else throw Xh(a)}return -1}\nfunction Qp(a,b){var c;if(a.a==1){Ap(a,b)}else{a.d=new Wp(a,b);mi(a.d,fz((c=Yt(sc(wj(sc(wj(a.c,gf),33).a,Lf),8).d,9),dA(c,'reconnectInterval')),5000))}}\nfunction _q(){if($wnd.performance&&$wnd.performance.timing&&$wnd.performance.timing.fetchStart){return $wnd.performance.timing.fetchStart}else{return 0}}\nfunction Dt(a,b){var c=new HashChangeEvent('hashchange',{'view':window,'bubbles':true,'cancelable':false,'oldURL':a,'newURL':b});window.dispatchEvent(c)}\nfunction yB(a){var b,c;if(a.indexOf('os ')==-1||a.indexOf(' like mac')==-1){return}b=DB(a,a.indexOf('os ')+3,a.indexOf(' like mac'));c=UD(b,'_',0);zB(c)}\nfunction xB(a){var b;b=a.indexOf(' crios/');if(b==-1){b=a.indexOf(' chrome/');b==-1?(b=a.indexOf(CG)+16):(b+=8);BB(DB(a,b,b+5))}else{b+=7;BB(DB(a,b,b+6))}}\nfunction Ds(a,b,c,d){var e,f;e={};e[lF]='navigation';e['location']=b;if(c!=null){f=c==null?null:c;e['state']=f}d&&(e['link']=Object(1),undefined);Cs(a,e)}\nfunction ru(a,b){if(!b){debugger;throw Xh(new MC(hG))}if(b.g!=a){debugger;throw Xh(new MC(iG))}if(b!=tu(a,b.d)){debugger;throw Xh(new MC(jG))}return true}\nfunction lc(a,b){var c=new Array(b);var d;switch(a){case 14:case 15:d=0;break;case 16:d=false;break;default:return c;}for(var e=0;e<b;++e){c[e]=d}return c}\nfunction bu(a,b){var c;if(!(!a.a||!b)){debugger;throw Xh(new MC('StateNode already has a DOM node'))}a.a=b;c=My(a.b);c.forEach(fi(nu.prototype.eb,nu,[a]))}\nfunction ur(a){a.b=null;Vr(ez(dA(Yt(sc(wj(sc(wj(a.c,ef),36).a,Lf),8).d,5),'pushMode')))&&!a.b&&(a.b=new To(a.c));sc(wj(a.c,rf),32).b&&Ns(sc(wj(a.c,rf),32))}\nfunction Sv(e,b,c){if(Kl(c)){e.Mb(b,c)}else if(Ol(c)){var d=e;try{$wnd.customElements.whenDefined(c.localName).then(function(){Kl(c)&&d.Mb(b,c)})}catch(a){}}}\nfunction Al(a,b){var c,d,e,f,g;f=a.f;d=a.e.e;g=El(d);if(!g){rj(xF+d.d+yF);return}c=xl((uz(a.a),a.g));if(Kl(g.a)){e=Gl(g,d,f);e!=null&&Ql(g.a,e,c);return}b[f]=c}\nfunction kq(a){if(a.a>0){kj('Scheduling heartbeat in '+a.a+' seconds');mi(a.c,a.a*1000)}else{jj&&($wnd.console.debug('Disabling heartbeat'),undefined);li(a.c)}}\nfunction Rr(a){var b,c,d,e;b=dA(Yt(sc(wj(a.a,Lf),8).d,5),'parameters');e=(uz(b.a),sc(b.g,6));d=Yt(e,6);c=new $wnd.Map;cA(d,fi(bs.prototype.ab,bs,[c]));return c}\nfunction Yv(a,b,c,d,e,f){var g,h;if(!yw(a.e,b,e,f)){return}g=xc(d.mb());if(zw(g,b,e,f,a)){if(!c){h=sc(wj(b.g.c,Dd),43);h.a.add(b.d);fl(h)}bu(b,g);av(b)}c||PA()}\nfunction Du(a,b){var c,d;if(!b){debugger;throw Xh(new LC)}d=b.e;c=d.e;if(gl(sc(wj(a.c,Dd),43),b)||!vu(a,c)){return}Es(sc(wj(a.c,nf),25),c,d.d,b.f,(uz(b.a),b.g))}\nfunction Nt(a,b){var c;c=$wnd.location.pathname;if(c==null){debugger;throw Xh(new MC('window.location.path should never be null'))}if(c!=a){return false}return b}\nfunction aB(a,b,c){var d;if(!b){throw Xh(new ED('Cannot add a handler with a null type'))}a.b>0?_A(a,new mB(a,b,c)):(d=fB(a,b,null),d.push(c));return new lB(a,b,c)}\nfunction Yb(a){var b,c,d,e;b='Xb';c='X';e=$wnd.Math.min(a.length,5);for(d=e-1;d>=0;d--){if(MD(a[d].d,b)||MD(a[d].d,c)){a.length>=d+1&&a.splice(0,d+1);break}}return a}\nfunction Nn(a,b){if(b.c!=a.b.c+1){throw Xh(new tD('Tried to move from state '+Tn(a.b)+' to '+(b.b!=null?b.b:''+b.c)+' which is not allowed'))}a.b=b;cB(a.a,new Qn(a))}\nfunction br(a){var b;if(a==null){return null}if(!MD(a.substr(0,9),'for(;;);[')||(b=']'.length,!MD(a.substr(a.length-b,b),']'))){return null}return WD(a,9,a.length-1)}\nfunction uw(a,b){var c,d,e;vw(a,b);e=dA(b,tG);uz(e.a);e.c&&Yw(sc(wj(b.e.g.c,cd),10),a,tG,(uz(e.a),e.g));c=dA(b,uG);uz(c.a);if(c.c){d=(uz(c.a),hi(c.g));YB(a.style,d)}}\nfunction _h(b,c,d,e){$h();var f=Yh;$moduleName=c;$moduleBase=d;Vh=e;function g(){for(var a=0;a<f.length;a++){f[a]()}}\nif(b){try{HE(g)()}catch(a){b(c,a)}}else{HE(g)()}}\nfunction As(a,b,c,d,e,f){var g;g={};g[lF]='attachExistingElement';g[_F]=zC(b.d);g[aG]=Object(c);g[bG]=Object(d);g['attachTagName']=e;g['attachIndex']=Object(f);Cs(a,g)}\nfunction Kl(a){var b=typeof $wnd.Polymer===KE&&$wnd.Polymer.Element&&a instanceof $wnd.Polymer.Element;var c=a.constructor.polymerElementVersion!==undefined;return b||c}\nfunction pv(a,b,c,d){var e,f,g,h;h=Xt(b,c);uz(h.a);if(h.c.length>0){f=xc(a.mb());for(e=0;e<(uz(h.a),h.c.length);e++){g=zc(h.c[e]);xv(f,g,b,d)}}return Pz(h,new tv(a,b,d))}\nfunction Fw(a,b){var c,d,e,f,g;c=Sy(b).childNodes;for(e=0;e<c.length;e++){d=xc(c[e]);for(f=0;f<(uz(a.a),a.c.length);f++){g=sc(a.c[f],6);if(C(d,g.a)){return d}}}return null}\nfunction ZD(a){var b;b=0;while(0<=(b=a.indexOf('\\\\',b))){uE(b+1,a.length);a.charCodeAt(b+1)==36?(a=a.substr(0,b)+'$'+VD(a,++b)):(a=a.substr(0,b)+(''+VD(a,++b)))}return a}\nfunction qt(a){var b,c,d;if(!!a.a||!tu(a.g,a.d)){return false}if(eA(Yt(a,0),eG)){d=ez(dA(Yt(a,0),eG));if(Fc(d)){b=xc(d);c=b[lF];return MD('@id',c)||MD(fG,c)}}return false}\nfunction It(a){var b,c;if(!MD(GF,a.type)){debugger;throw Xh(new LC)}c=Jt(a);b=a.currentTarget;while(!!c&&c!=b){if(ND('a',c.tagName)){return c}c=c.parentElement}return null}\nfunction Gm(a,b){var c,d,e,f;qj('Loaded '+b.a);f=b.a;e=wc(a.a.get(f));a.b.add(f);a.a.delete(f);if(e!=null&&e.length!=0){for(c=0;c<e.length;c++){d=sc(e[c],20);!!d&&d.cb(b)}}}\nfunction Eu(a,b){if(a.e==b){debugger;throw Xh(new MC('Inconsistent state tree updating status, expected '+(b?'no ':'')+' updates in progress.'))}a.e=b;fl(sc(wj(a.c,Dd),43))}\nfunction BB(a){var b,c,d,e;b=OD(a,YD(46));b<0&&(b=a.length);d=DB(a,0,b);AB(d,'Browser major');c=PD(a,YD(46),b+1);c<0&&(c=a.length);e=SD(DB(a,b+1,c),'');AB(e,'Browser minor')}\nfunction eb(a){var b;if(a.c==null){b=Kc(a.b)===Kc(cb)?null:a.b;a.d=b==null?RE:Fc(b)?hb(xc(b)):Hc(b)?'String':VC(F(b));a.a=a.a+': '+(Fc(b)?gb(xc(b)):b+'');a.c='('+a.d+') '+a.a}}\nfunction Im(a,b,c){var d,e;d=new bn(b);if(a.b.has(b)){!!c&&c.cb(d);return}if(Qm(b,c,a.a)){e=$doc.createElement(EF);e.textContent=b;e.type=qF;Rm(e,new cn(a),d);aC($doc.head,e)}}\nfunction Wq(a){var b,c,d;for(b=0;b<a.h.length;b++){c=sc(a.h[b],54);d=Lq(c.a);if(d!=-1&&d<a.f+1){jj&&iC($wnd.console,'Removing old message with id '+d);a.h.splice(b,1)[0];--b}}}\nfunction ci(){bi={};!Array.isArray&&(Array.isArray=function(a){return Object.prototype.toString.call(a)===JE});function b(){return (new Date).getTime()}\n!Date.now&&(Date.now=b)}\nfunction Xq(a,b){a.k.delete(b);if(a.k.size==0){li(a.c);if(a.h.length!=0){jj&&($wnd.console.log('No more response handling locks, handling pending requests.'),undefined);Pq(a)}}}\nfunction Su(a,b){var c,d,e,f,g,h;h=new $wnd.Set;e=b.length;for(d=0;d<e;d++){c=b[d];if(MD('attach',c[lF])){g=Lc(yC(c[_F]));if(g!=a.d.d){f=new du(g,a);zu(a,f);h.add(f)}}}return h}\nfunction zy(a,b){var c,d,e;if(!a.c.has(7)){debugger;throw Xh(new LC)}if(xy.has(a)){return}xy.set(a,(PC(),true));d=Yt(a,7);e=dA(d,'text');c=new RA(new Fy(b,e));Ut(a,new Hy(a,c))}\nfunction Ls(a,b){if(sc(wj(a.d,ne),9).b!=(bo(),_n)){jj&&($wnd.console.warn('Trying to invoke method on not yet started or stopped application'),undefined);return}a.c[a.c.length]=b}\nfunction Mo(a){if(a.g==null){return false}if(!MD(a.g,MF)){return false}if(eA(Yt(sc(wj(sc(wj(a.d,ef),36).a,Lf),8).d,5),'alwaysXhrToServer')){return false}a.f==(op(),lp);return true}\nfunction ym(){if(typeof $wnd.Vaadin.Flow.gwtStatsEvents==IE){delete $wnd.Vaadin.Flow.gwtStatsEvents;typeof $wnd.__gwtStatsEvent==KE&&($wnd.__gwtStatsEvent=function(){return true})}}\nfunction vb(b,c,d){var e,f;e=tb();try{if(L){try{return sb(b,c,d)}catch(a){a=Wh(a);if(Cc(a,5)){f=a;Ab(f,true);return undefined}else throw Xh(a)}}else{return sb(b,c,d)}}finally{wb(e)}}\nfunction Sp(a,b){var c,d;hs(sc(wj(a.c,jf),12));d=b.b.responseText;c=ki(new RegExp('Vaadin-Refresh(:\\\\s*(.*?))?(\\\\s|$)'),d);c?no(c[2]):Ep(a,'Invalid JSON response from server: '+d,b)}\nfunction TB(a,b){var c,d;if(b.length==0){return a}c=null;d=OD(a,YD(35));if(d!=-1){c=a.substr(d);a=a.substr(0,d)}a.indexOf('?')!=-1?(a+='&'):(a+='?');a+=b;c!=null&&(a+=''+c);return a}\nfunction Bt(a){var b;if(!a.a){debugger;throw Xh(new LC)}b=$wnd.location.href;if(b==a.b){sc(wj(a.d,ee),26)._(true);mC($wnd.location,a.b);Dt(a.c,a.b);sc(wj(a.d,ee),26)._(false)}kB(a.a)}\nfunction fv(a){var b,c;b=yc(cv.get(a.a),$wnd.Map);if(b==null){return}c=yc(b.get(a.c),$wnd.Map);if(c==null){return}c.delete(a.g);if(c.size==0){b.delete(a.c);b.size==0&&cv.delete(a.a)}}\nfunction Vv(a,b,c){var d;if(!b.b){debugger;throw Xh(new MC(sG+b.e.d+zF))}d=Yt(b.e,0);lz(dA(d,dG),(PC(),wu(b.e)?true:false));xw(a,b,c);return bz(dA(Yt(b.e,0),'visible'),new vy(a,b,c))}\nfunction Fm(a,b){var c,d,e,f;tn(sc(wj(a.c,ie),16),'Error loading '+b.a);f=b.a;e=wc(a.a.get(f));a.a.delete(f);if(e!=null&&e.length!=0){for(c=0;c<e.length;c++){d=sc(e[c],20);!!d&&d.bb(b)}}}\nfunction oD(a){nD==null&&(nD=new RegExp('^\\\\s*[+-]?(NaN|Infinity|((\\\\d+\\\\.?\\\\d*)|(\\\\.\\\\d+))([eE][+-]?\\\\d+)?[dDfF]?)\\\\s*$'));if(!nD.test(a)){throw Xh(new GD(IG+a+'\"'))}return parseFloat(a)}\nfunction XD(a){var b,c,d;c=a.length;d=0;while(d<c&&(uE(d,a.length),a.charCodeAt(d)<=32)){++d}b=c;while(b>d&&(uE(b-1,a.length),a.charCodeAt(b-1)<=32)){--b}return d>0||b<c?a.substr(d,b-d):a}\nfunction Fs(a,b,c,d,e){var f;f={};f[lF]='publishedEventHandler';f[_F]=zC(b.d);f['templateEventMethodName']=c;f['templateEventMethodArgs']=d;e!=-1&&(f['promise']=Object(e),undefined);Cs(a,f)}\nfunction ev(a,b,c){var d;a.f=c;d=false;if(!a.d){d=b.has('leading');a.d=new mv(a)}iv(a.d);jv(a.d,Lc(a.g));if(!a.e&&b.has(oG)){a.e=new nv(a);kv(a.e,Lc(a.g))}a.b=a.b|b.has('trailing');return d}\nfunction Hl(a){var b,c,d,e,f,g;e=null;c=Yt(a.f,1);f=(g=[],cA(c,fi(qA.prototype.ab,qA,[g])),g);for(b=0;b<f.length;b++){d=zc(f[b]);if(C(a,ez(dA(c,d)))){e=d;break}}if(e==null){return null}return e}\nfunction yn(a,b,c,d,e,f){var g;if(b==null&&c==null&&d==null){sc(wj(a.a,cd),10).q||no(e);return}g=un(b,c,d,f);if(!sc(wj(a.a,cd),10).q){UB(g,GF,new Cn(e),false);UB($doc,'keydown',new En(e),false)}}\nfunction yv(a,b,c,d){var e,f,g,h,i,j;if(eA(Yt(d,18),c)){f=[];e=sc(wj(d.g.c,yf),51);i=zc(ez(dA(Yt(d,18),c)));g=wc(ht(e,i));for(j=0;j<g.length;j++){h=zc(g[j]);f[j]=zv(a,b,d,h)}return f}return null}\nfunction Ru(a,b){var c;if(!('featType' in a)){debugger;throw Xh(new MC(\"Change doesn't contain feature type. Don't know how to populate feature\"))}c=Lc(yC(a[lG]));wC(a['featType'])?Xt(b,c):Yt(b,c)}\nfunction YD(a){var b,c;if(a>=65536){b=55296+(a-65536>>10&1023)&65535;c=56320+(a-65536&1023)&65535;return String.fromCharCode(b)+(''+String.fromCharCode(c))}else{return String.fromCharCode(a&65535)}}\nfunction wb(a){a&&Gb((Eb(),Db));--mb;if(mb<0){debugger;throw Xh(new MC('Negative entryDepth value at exit '+mb))}if(a){if(mb!=0){debugger;throw Xh(new MC('Depth not 0'+mb))}if(qb!=-1){Bb(qb);qb=-1}}}\nfunction Vw(a,b,c,d){var e,f,g,h,i,j,k;e=false;for(h=0;h<c.length;h++){f=c[h];k=yC(f[0]);if(k==0){e=true;continue}j=new $wnd.Set;for(i=1;i<f.length;i++){j.add(f[i])}g=ev(hv(a,b,k),j,d);e=e|g}return e}\nfunction ZA(a,b){var c,d,e,f;if(uC(b)==1){c=b;f=Lc(yC(c[0]));switch(f){case 0:{e=Lc(yC(c[1]));return d=e,sc(a.a.get(d),6)}case 1:case 2:return null;default:throw Xh(new tD(zG+vC(c)));}}else{return null}}\nfunction Lm(a,b,c,d,e){var f,g,h;h=mo(b);f=new bn(h);if(a.b.has(h)){!!c&&c.cb(f);return}if(Qm(h,c,a.a)){g=$doc.createElement(EF);g.src=h;g.type=e;g.async=false;g.defer=d;Rm(g,new cn(a),f);aC($doc.head,g)}}\nfunction zv(a,b,c,d){var e,f,g,h,i;if(!MD(d.substr(0,5),$F)||MD('event.model.item',d)){return MD(d.substr(0,$F.length),$F)?(g=Fv(d),h=g(b,a),i={},i[wF]=zC(yC(h[wF])),i):Av(c.a,d)}e=Fv(d);f=e(b,a);return f}\nfunction nq(a){this.c=new oq(this);this.b=a;mq(this,sc(wj(a,cd),10).f);this.d=sc(wj(a,cd),10).l;this.d=TB(this.d,'v-r=heartbeat');this.d=TB(this.d,LF+(''+sc(wj(a,cd),10).p));Mn(sc(wj(a,ne),9),new tq(this))}\nfunction yr(a){if(sc(wj(a.c,ne),9).b!=(bo(),_n)){jj&&($wnd.console.warn('Trying to send RPC from not yet started or stopped application'),undefined);return}if(sc(wj(a.c,jf),12).b||!!a.b&&!Lo(a.b));else{tr(a)}}\nfunction hs(a){if(!a.b){throw Xh(new uD('endRequest called when no request is active'))}a.b=false;sc(wj(a.c,ne),9).b==(bo(),_n)&&sc(wj(a.c,rf),32).b&&yr(sc(wj(a.c,Ye),24));In((Eb(),Db),new ms(a));is(a,new ss)}\nfunction Ti(f,b,c){var d=f;var e=$wnd.Vaadin.Flow.clients[b];e.isActive=HE(function(){return d.Q()});e.getVersionInfo=HE(function(a){return {'flow':c}});e.debug=HE(function(){var a=d.a;return a.V().Gb().Db()})}\nfunction tb(){var a;if(mb<0){debugger;throw Xh(new MC('Negative entryDepth value at entry '+mb))}if(mb!=0){a=lb();if(a-pb>2000){pb=a;qb=$wnd.setTimeout(Cb,10)}}if(mb++==0){Fb((Eb(),Db));return true}return false}\nfunction ip(a){var b,c,d;if(a.a>=a.b.length){debugger;throw Xh(new LC)}if(a.a==0){c=''+a.b.length+'|';b=4095-c.length;d=c+WD(a.b,0,$wnd.Math.min(a.b.length,b));a.a+=b}else{d=hp(a,a.a,a.a+4095);a.a+=4095}return d}\nfunction Pq(a){var b,c,d,e;if(a.h.length==0){return false}e=-1;for(b=0;b<a.h.length;b++){c=sc(a.h[b],54);if(Qq(a,Lq(c.a))){e=b;break}}if(e!=-1){d=sc(a.h.splice(e,1)[0],54);Nq(a,d.a);return true}else{return false}}\nfunction Gp(a,b){var c,d;c=b.status;jj&&jC($wnd.console,'Heartbeat request returned '+c);if(c==403){wn(sc(wj(a.c,ie),16),null);d=sc(wj(a.c,ne),9);d.b!=(bo(),ao)&&Nn(d,ao)}else if(c==404);else{Dp(a,(_p(),Yp),null)}}\nfunction Tp(a,b){var c,d;c=b.b.status;jj&&jC($wnd.console,'Server returned '+c+' for xhr');if(c==401){hs(sc(wj(a.c,jf),12));wn(sc(wj(a.c,ie),16),'');d=sc(wj(a.c,ne),9);d.b!=(bo(),ao)&&Nn(d,ao);return}else{Dp(a,(_p(),$p),b.a)}}\nfunction oo(c){return JSON.stringify(c,function(a,b){if(b instanceof Node){throw 'Message JsonObject contained a dom node reference which should not be sent to the server and can cause a cyclic dependecy.'}return b})}\nfunction Hj(b){var c,d,e;Ej(b);e=Fj(b);d={};d[dF]=xc(b.f);d[eF]=xc(b.g);lC($wnd.history,e,'',$wnd.location.href);try{oC($wnd.sessionStorage,fF+b.b,vC(d))}catch(a){a=Wh(a);if(Cc(a,23)){c=a;mj(gF+c.A())}else throw Xh(a)}}\nfunction hv(a,b,c){dv();var d,e,f;e=yc(cv.get(a),$wnd.Map);if(e==null){e=new $wnd.Map;cv.set(a,e)}f=yc(e.get(b),$wnd.Map);if(f==null){f=new $wnd.Map;e.set(b,f)}d=sc(f.get(c),83);if(!d){d=new gv(a,b,c);f.set(c,d)}return d}\nfunction Lt(a,b,c,d){var e,f,g,h,i;a.preventDefault();e=ko(b,c);if(e.indexOf('#')!=-1){At(new Ct($wnd.location.href,c,d));e=UD(e,'#',2)[0]}f=(h=Oj(),i={},i['href']=c,i[jF]=Object(h[0]),i[kF]=Object(h[1]),i);Ot(d,e,f,true)}\nfunction vB(a){var b,c,d,e,f;f=a.indexOf('; cros ');if(f==-1){return}c=PD(a,YD(41),f);if(c==-1){return}b=c;while(b>=f&&(uE(b,a.length),a.charCodeAt(b)!=32)){--b}if(b==f){return}d=a.substr(b+1,c-(b+1));e=UD(d,'\\\\.',0);wB(e)}\nfunction jt(a,b){var c,d,e,f,g,h;if(!b){debugger;throw Xh(new LC)}for(d=(g=BC(b),g),e=0,f=d.length;e<f;++e){c=d[e];if(a.a.has(c)){debugger;throw Xh(new LC)}h=b[c];if(!(!!h&&uC(h)!=5)){debugger;throw Xh(new LC)}a.a.set(c,h)}}\nfunction vu(a,b){var c;c=true;if(!b){jj&&($wnd.console.warn(hG),undefined);c=false}else if(C(b.g,a)){if(!C(b,tu(a,b.d))){jj&&($wnd.console.warn(jG),undefined);c=false}}else{jj&&($wnd.console.warn(iG),undefined);c=false}return c}\nfunction Nv(a){var b,c,d,e,f;d=Xt(a.e,2);d.b&&sw(a.b);for(f=0;f<(uz(d.a),d.c.length);f++){c=sc(d.c[f],6);e=sc(wj(c.g.c,Bd),52);b=al(e,c.d);if(b){bl(e,c.d);bu(c,b);av(c)}else{b=av(c);Sy(a.b).appendChild(b)}}return Pz(d,new nx(a))}\nfunction Ww(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p;n=true;f=false;for(i=(p=BC(c),p),j=0,k=i.length;j<k;++j){h=i[j];o=c[h];m=uC(o)==1;if(!m&&!o){continue}n=false;l=!!d&&wC(d[h]);if(m&&l){g='on-'+b+':'+h;l=Vw(a,g,o,e)}f=f|l}return n||f}\nfunction Sm(b){for(var c=0;c<$doc.styleSheets.length;c++){if($doc.styleSheets[c].href===b){var d=$doc.styleSheets[c];try{var e=d.cssRules;e===undefined&&(e=d.rules);if(e===null){return 1}return e.length}catch(a){return 1}}}return -1}\nfunction Tm(b,c,d,e){try{var f=c.mb();if(!(f instanceof $wnd.Promise)){throw new Error('The expression \"'+b+'\" result is not a Promise.')}f.then(function(a){d.K()},function(a){console.error(a);e.K()})}catch(a){console.error(a);e.K()}}\nfunction rw(a,b,c){var d;d=fi(Dx.prototype.ab,Dx,[]);c.forEach(fi(Fx.prototype.eb,Fx,[d]));b.c.forEach(d);b.d.forEach(fi(Hx.prototype.ab,Hx,[]));a.forEach(fi(Zw.prototype.eb,Zw,[]));if(Gv==null){debugger;throw Xh(new LC)}Gv.delete(b.e)}\nfunction di(a,b,c){var d=bi,h;var e=d[a];var f=e instanceof Array?e[0]:null;if(e&&!f){_=e}else{_=(h=b&&b.prototype,!h&&(h=bi[b]),gi(h));_.ac=c;!b&&(_.bc=ii);d[a]=_}for(var g=3;g<arguments.length;++g){arguments[g].prototype=_}f&&(_._b=f)}\nfunction zl(a,b){var c,d,e,f,g,h,i,j;c=a.a;e=a.c;i=a.d.length;f=sc(a.e,28).e;j=El(f);if(!j){rj(xF+f.d+yF);return}d=[];c.forEach(fi(hm.prototype.eb,hm,[d]));if(Kl(j.a)){g=Gl(j,f,null);if(g!=null){Rl(j.a,g,e,i,d);return}}h=wc(b);Py(h,e,i,d)}\nfunction ww(a,b){var c,d,e;d=a.f;uz(a.a);if(a.c){e=(uz(a.a),a.g);c=b[d];(c===undefined||!(Kc(c)===Kc(e)||c!=null&&C(c,e)))&&QA(null,new lx(b,d,e))}else Object.prototype.hasOwnProperty.call(b,d)?(delete b[d],undefined):(b[d]=null,undefined)}\nfunction rB(b,c,d,e,f){var g;try{wi(b,new sB(f));b.open('POST',c,true);b.setRequestHeader('Content-type',e);b.withCredentials=true;b.send(d)}catch(a){a=Wh(a);if(Cc(a,23)){g=a;jj&&hC($wnd.console,g);f.xb(b,g);vi(b)}else throw Xh(a)}return b}\nfunction Uu(a,b){var c,d,e,f;if(a.e){debugger;throw Xh(new MC('Previous tree change processing has not completed'))}try{Eu(a,true);f=Su(a,b);e=b.length;for(d=0;d<e;d++){c=b[d];MD('attach',c[lF])||f.add(Tu(a,c))}return f}finally{Eu(a,false)}}\nfunction iB(a,b,c){var d,e;e=yc(a.c.get(b),$wnd.Map);d=wc(e.get(c));e.delete(c);if(d==null){debugger;throw Xh(new MC(\"Can't prune what wasn't there\"))}if(d.length!=0){debugger;throw Xh(new MC('Pruned unempty list!'))}e.size==0&&a.c.delete(b)}\nfunction Dl(a,b){var c,d,e;c=a;for(d=0;d<b.length;d++){e=b[d];c=Cl(c,Lc(tC(e)))}if(c){return c}else !c?jj&&jC($wnd.console,\"There is no element addressed by the path '\"+b+\"'\"):jj&&jC($wnd.console,'The node addressed by path '+b+zF);return null}\nfunction ar(b){var c,d;if(b==null){return null}d=xm.lb();try{c=JSON.parse(b);qj('JSON parsing took '+(''+Am(xm.lb()-d,3))+'ms');return c}catch(a){a=Wh(a);if(Cc(a,7)){jj&&hC($wnd.console,'Unable to parse JSON: '+b);return null}else throw Xh(a)}}\nfunction PA(){var a;if(LA){return}try{LA=true;while(KA!=null&&KA.length!=0||MA!=null&&MA.length!=0){while(KA!=null&&KA.length!=0){a=sc(KA.splice(0,1)[0],13);a.db()}if(MA!=null&&MA.length!=0){a=sc(MA.splice(0,1)[0],13);a.db()}}}finally{LA=false}}\nfunction _v(a,b){var c,d,e,f,g,h;f=b.b;if(a.b){sw(f)}else{h=a.d;for(g=0;g<h.length;g++){e=sc(h[g],6);d=e.a;if(!d){debugger;throw Xh(new MC(\"Can't find element to remove\"))}Sy(d).parentNode==f&&Sy(f).removeChild(d)}}c=a.a;c.length==0||Iv(a.c,b,c)}\nfunction tr(a){var b,c,d;d=sc(wj(a.c,rf),32);if(d.c.length==0){return}c=d.c;d.c=[];d.b=false;d.a=Js;if(c.length==0){jj&&($wnd.console.warn('All RPCs filtered out, not sending anything to the server'),undefined);return}b={};ij('loading');wr(a,c,b)}\nfunction zu(a,b){var c;if(b.g!=a){debugger;throw Xh(new LC)}if(b.i){debugger;throw Xh(new MC(\"Can't re-register a node\"))}c=b.d;if(a.a.has(c)){debugger;throw Xh(new MC('Node '+c+' is already registered'))}a.a.set(c,b);a.e&&jl(sc(wj(a.c,Dd),43),b)}\nfunction gD(a){if(a.Zb()){var b=a.c;b.$b()?(a.i='['+b.h):!b.Zb()?(a.i='[L'+b.Xb()+';'):(a.i='['+b.Xb());a.b=b.Wb()+'[]';a.g=b.Yb()+'[]';return}var c=a.f;var d=a.d;d=d.split('/');a.i=jD('.',[c,jD('$',d)]);a.b=jD('.',[c,jD('.',d)]);a.g=d[d.length-1]}\nfunction Ho(a){var b,c;c=io(sc(wj(a.d,oe),42),a.h);c=TB(c,'v-r=push');c=TB(c,LF+(''+sc(wj(a.d,cd),10).p));b=sc(wj(a.d,We),22).i;b!=null&&(c=TB(c,'v-pushId='+b));jj&&($wnd.console.log('Establishing push connection'),undefined);a.c=c;a.e=Jo(a,c,a.a)}\nfunction Vs(a,b){var c,d,e;d=new _s(a);d.a=b;$s(d,xm.lb());c=oo(b);e=qB(TB(TB(sc(wj(a.a,cd),10).l,'v-r=uidl'),LF+(''+sc(wj(a.a,cd),10).p)),c,OF,d);jj&&iC($wnd.console,'Sending xhr message to server: '+c);a.b&&(!dj&&(dj=new fj),dj).a.l&&mi(new Ys(a,e),250)}\nfunction Bv(f){var e='}p';Object.defineProperty(f,e,{value:function(a,b,c){var d=this[e].promises[a];if(d!==undefined){delete this[e].promises[a];b?d[0](c):d[1](Error('Something went wrong. Check server-side logs for more information.'))}}});f[e].promises=[]}\nfunction cu(a){var b,c;if(tu(a.g,a.d)){debugger;throw Xh(new MC('Node should no longer be findable from the tree'))}if(a.i){debugger;throw Xh(new MC('Node is already unregistered'))}a.i=true;c=new Gt;b=My(a.h);b.forEach(fi(ju.prototype.eb,ju,[c]));a.h.clear()}\nfunction _u(a){Zu();var b,c,d;b=null;for(c=0;c<Yu.length;c++){d=sc(Yu[c],279);if(d.Kb(a)){if(b){debugger;throw Xh(new MC('Found two strategies for the node : '+F(b)+', '+F(d)))}b=d}}if(!b){throw Xh(new tD('State node has no suitable binder strategy'))}return b}\nfunction wE(a,b){var c,d,e,f;a=a;c=new cE;f=0;d=0;while(d<b.length){e=a.indexOf('%s',f);if(e==-1){break}aE(c,a.substr(f,e-f));_D(c,b[d++]);f=e+2}aE(c,a.substr(f));if(d<b.length){c.a+=' [';_D(c,b[d++]);while(d<b.length){c.a+=', ';_D(c,b[d++])}c.a+=']'}return c.a}\nfunction yb(g){rb();function h(a,b,c,d,e){if(!e){e=a+' ('+b+':'+c;d&&(e+=':'+d);e+=')'}var f=Y(e);Ab(f,false)}\n;function i(a){var b=a.onerror;if(b&&!g){return}a.onerror=function(){h.apply(this,arguments);b&&b.apply(this,arguments);return false}}\ni($wnd);i(window)}\nfunction dz(a,b){var c,d,e;c=(uz(a.a),a.c?(uz(a.a),a.g):null);(Kc(b)===Kc(c)||b!=null&&C(b,c))&&(a.d=false);if(!((Kc(b)===Kc(c)||b!=null&&C(b,c))&&(uz(a.a),a.c))&&!a.d){d=a.e.e;e=d.g;if(uu(e,d)){cz(a,b);return new Hz(a,e)}else{rz(a.a,new Lz(a,c,c));PA()}}return _y}\nfunction uC(a){var b;if(a===null){return 5}b=typeof a;if(MD('string',b)){return 2}else if(MD('number',b)){return 3}else if(MD('boolean',b)){return 4}else if(MD(IE,b)){return Object.prototype.toString.apply(a)===JE?1:0}debugger;throw Xh(new MC('Unknown Json Type'))}\nfunction Io(a,b){if(!b){debugger;throw Xh(new LC)}switch(a.f.c){case 0:a.f=(op(),np);a.b=b;break;case 1:jj&&($wnd.console.log('Closing push connection'),undefined);Uo(a.c);a.f=(op(),mp);b.F();break;case 2:case 3:throw Xh(new uD('Can not disconnect more than once'));}}\nfunction cB(b,c){var d,e,f,g,h,i;try{++b.b;h=(e=gB(b,c.N(),null),e);d=null;for(i=0;i<h.length;i++){g=h[i];try{c.M(g)}catch(a){a=Wh(a);if(Cc(a,7)){f=a;d==null&&(d=[]);d[d.length]=f}else throw Xh(a)}}if(d!=null){throw Xh(new ab(sc(d[0],5)))}}finally{--b.b;b.b==0&&hB(b)}}\nfunction Lv(a){var b,c,d,e,f;c=Yt(a.e,20);f=sc(ez(dA(c,rG)),6);if(f){b=new $wnd.Function(qG,\"if ( element.shadowRoot ) { return element.shadowRoot; } else { return element.attachShadow({'mode' : 'open'});}\");e=xc(b.call(null,a.b));!f.a&&bu(f,e);d=new bx(f,e,a.a);Nv(d)}}\nfunction Jm(a,b,c){var d,e;d=new bn(b);if(a.b.has(b)){!!c&&c.cb(d);return}if(Qm(b,c,a.a)){e=$doc.createElement('style');e.textContent=b;e.type='text/css';(!dj&&(dj=new fj),dj).a.j||gj()||(!dj&&(dj=new fj),dj).a.i?mi(new Ym(a,b,d),5000):Rm(e,new $m(a),d);aC($doc.head,e)}}\nfunction yl(a,b,c){var d,e,f,g,h,i;f=b.f;if(f.c.has(1)){h=Hl(b);if(h==null){return null}c.push(h)}else if(f.c.has(16)){e=Fl(b);if(e==null){return null}c.push(e)}if(!C(f,a)){return yl(a,f,c)}g=new bE;i='';for(d=c.length-1;d>=0;d--){aE((g.a+=i,g),zc(c[d]));i='.'}return g.a}\nfunction Vu(a,b){var c,d,e,f;f=Qu(a,b);if(tF in a){e=a[tF];lz(f,e)}else if('nodeValue' in a){d=Lc(yC(a['nodeValue']));c=tu(b.g,d);if(!c){debugger;throw Xh(new LC)}c.f=b;lz(f,c)}else{debugger;throw Xh(new MC('Change should have either value or nodeValue property: '+oo(a)))}}\nfunction So(a,b){var c,d,e,f,g;if(Vo()){Po(b.a)}else{f=(sc(wj(a.d,cd),10).j?(e='VAADIN/static/push/vaadinPush-min.js'):(e='VAADIN/static/push/vaadinPush.js'),e);jj&&iC($wnd.console,'Loading '+f);d=sc(wj(a.d,be),50);g=sc(wj(a.d,cd),10).c+f;c=new ep(a,f,b);Lm(d,g,c,false,qF)}}\nfunction $A(a,b){var c,d,e,f,g,h;if(uC(b)==1){c=b;h=Lc(yC(c[0]));switch(h){case 0:{g=Lc(yC(c[1]));d=(f=g,sc(a.a.get(f),6)).a;return d}case 1:return e=wc(c[1]),e;case 2:return YA(Lc(yC(c[1])),Lc(yC(c[2])),sc(wj(a.c,nf),25));default:throw Xh(new tD(zG+vC(c)));}}else{return b}}\nfunction Mq(a,b){var c,d,e,f,g;jj&&($wnd.console.log('Handling dependencies'),undefined);c=new $wnd.Map;for(e=(QB(),nc(jc(lh,1),NE,57,0,[OB,NB,PB])),f=0,g=e.length;f<g;++f){d=e[f];AC(b,d.b!=null?d.b:''+d.c)&&c.set(d,b[d.b!=null?d.b:''+d.c])}c.size==0||fk(sc(wj(a.j,yd),63),c)}\nfunction Qo(a,b){a.g=b[NF];switch(a.f.c){case 0:a.f=(op(),kp);Mp(sc(wj(a.d,ye),14));break;case 2:a.f=(op(),kp);if(!a.b){debugger;throw Xh(new LC)}Io(a,a.b);break;case 1:break;default:throw Xh(new uD('Got onOpen event when connection state is '+a.f+'. This should never happen.'));}}\nfunction EE(a){var b,c,d,e;b=0;d=a.length;e=d-4;c=0;while(c<e){b=(uE(c+3,a.length),a.charCodeAt(c+3)+(uE(c+2,a.length),31*(a.charCodeAt(c+2)+(uE(c+1,a.length),31*(a.charCodeAt(c+1)+(uE(c,a.length),31*(a.charCodeAt(c)+31*b)))))));b=b|0;c+=4}while(c<d){b=b*31+LD(a,c++)}b=b|0;return b}\nfunction wo(){so();if(qo||!($wnd.Vaadin.Flow!=null)){jj&&($wnd.console.warn('vaadinBootstrap.js was not loaded, skipping vaadin application configuration.'),undefined);return}qo=true;$wnd.performance&&typeof $wnd.performance.now==KE?(xm=new Dm):(xm=new Bm);ym();zo((rb(),$moduleName))}\nfunction Ob(b,c){var d,e,f,g;if(!b){debugger;throw Xh(new MC('tasks'))}for(e=0,f=b.length;e<f;e++){if(b.length!=f){debugger;throw Xh(new MC(UE+b.length+' != '+f))}g=b[e];try{g[1]?g[0].D()&&(c=Nb(c,g)):g[0].F()}catch(a){a=Wh(a);if(Cc(a,5)){d=a;rb();Ab(d,true)}else throw Xh(a)}}return c}\nfunction nt(a,b){var c,d,e,f,g,h,i,j,k,l;l=sc(wj(a.a,Lf),8);g=b.length-1;i=kc(Sh,NE,2,g+1,6,1);j=[];e=new $wnd.Map;for(d=0;d<g;d++){h=b[d];f=$A(l,h);j.push(f);i[d]='$'+d;k=ZA(l,h);if(k){if(qt(k)||!pt(a,k)){Tt(k,new ut(a,b));return}e.set(f,k)}}c=b[b.length-1];i[i.length-1]=c;ot(a,i,j,e)}\nfunction xw(a,b,c){var d,e;if(!b.b){debugger;throw Xh(new MC(sG+b.e.d+zF))}e=Yt(b.e,0);d=b.b;if(Uw(b.e)&&wu(b.e)){rw(a,b,c);NA(new hx(d,e,b))}else if(wu(b.e)){lz(dA(e,dG),(PC(),true));uw(d,e)}else{vw(d,e);Yw(sc(wj(e.e.g.c,cd),10),d,tG,(PC(),OC));Jl(d)&&(d.style.display='none',undefined)}}\nfunction Hm(a){var b,c,d,e,f,g,h,i,j,k;b=$doc;j=b.getElementsByTagName(EF);for(f=0;f<j.length;f++){c=j.item(f);k=c.src;k!=null&&k.length!=0&&a.b.add(k)}h=b.getElementsByTagName('link');for(e=0;e<h.length;e++){g=h.item(e);i=g.rel;d=g.href;(ND(FF,i)||ND('import',i))&&d!=null&&d.length!=0&&a.b.add(d)}}\nfunction zr(a,b,c){if(b==a.a){return}if(c){qj('Forced update of clientId to '+a.a);a.a=b;return}if(b>a.a){a.a==0?jj&&iC($wnd.console,'Updating client-to-server id to '+b+' based on server'):rj('Server expects next client-to-server id to be '+b+' but we were going to use '+a.a+'. Will use '+b+'.');a.a=b}}\nfunction Rm(a,b,c){a.onload=HE(function(){a.onload=null;a.onerror=null;a.onreadystatechange=null;b.cb(c)});a.onerror=HE(function(){a.onload=null;a.onerror=null;a.onreadystatechange=null;b.bb(c)});a.onreadystatechange=function(){('loaded'===a.readyState||'complete'===a.readyState)&&a.onload(arguments[0])}}\nfunction wr(a,b,c){var d,e,f,g,h,i,j,k;ks(sc(wj(a.c,jf),12));i={};d=sc(wj(a.c,We),22).b;MD(d,'init')||(i['csrfToken']=d,undefined);i['rpc']=b;i[TF]=zC(sc(wj(a.c,We),22).f);i[WF]=zC(a.a++);if(c){for(f=(j=BC(c),j),g=0,h=f.length;g<h;++g){e=f[g];k=c[e];i[e]=k}}!!a.b&&Mo(a.b)?Ro(a.b,i):Vs(sc(wj(a.c,xf),62),i)}\nfunction zp(a){var b,c,d,e;gz((c=Yt(sc(wj(sc(wj(a.c,gf),33).a,Lf),8).d,9),dA(c,RF)))!=null&&hj('reconnectingText',gz((d=Yt(sc(wj(sc(wj(a.c,gf),33).a,Lf),8).d,9),dA(d,RF))));gz((e=Yt(sc(wj(sc(wj(a.c,gf),33).a,Lf),8).d,9),dA(e,SF)))!=null&&hj('offlineText',gz((b=Yt(sc(wj(sc(wj(a.c,gf),33).a,Lf),8).d,9),dA(b,SF))))}\nfunction Kq(a){sc(wj(a.j,jf),12).b&&hs(sc(wj(a.j,jf),12));if(a.k.size==0){rj('Gave up waiting for message '+(a.f+1)+' from the server')}else{jj&&($wnd.console.warn('WARNING: reponse handling was never resumed, forcibly removing locks...'),undefined);a.k.clear()}if(!Pq(a)&&a.h.length!=0){Jy(a.h);vr(sc(wj(a.j,Ye),24))}}\nfunction Mm(a,b,c){var d,e,f;f=mo(b);d=new bn(f);if(a.b.has(f)){!!c&&c.cb(d);return}if(Qm(f,c,a.a)){e=$doc.createElement('link');e.rel=FF;e.type='text/css';e.href=f;if((!dj&&(dj=new fj),dj).a.j||gj()){Qb((Eb(),new Um(a,f,d)),10)}else{Rm(e,new fn(a,f),d);(!dj&&(dj=new fj),dj).a.i&&mi(new Wm(a,f,d),5000)}aC($doc.head,e)}}\nfunction Cl(a,b){var c,d,e,f,g;c=Sy(a).children;e=-1;for(f=0;f<c.length;f++){g=c.item(f);if(!g){debugger;throw Xh(new MC('Unexpected element type in the collection of children. DomElement::getChildren is supposed to return Element chidren only, but got '+Ac(g)))}d=g;ND('style',d.tagName)||++e;if(e==b){return g}}return null}\nfunction Iv(a,b,c){var d,e,f,g,h,i,j,k;j=Xt(b.e,2);if(a==0){d=Fw(j,b.b)}else if(a<=(uz(j.a),j.c.length)&&a>0){k=$v(a,b);d=!k?null:Sy(k.a).nextSibling}else{d=null}for(g=0;g<c.length;g++){i=c[g];h=sc(i,6);f=sc(wj(h.g.c,Bd),52);e=al(f,h.d);if(e){bl(f,h.d);bu(h,e);av(h)}else{e=av(h);Sy(b.b).insertBefore(e,d)}d=Sy(e).nextSibling}}\nfunction Kj(a,b){var c,d;!!a.e&&kB(a.e);if(a.a>=a.f.length||a.a>=a.g.length){rj('No matching scroll position found (entries X:'+a.f.length+', Y:'+a.g.length+') for opened history index ('+a.a+'). '+hF);Jj(a);return}c=rD(uc(a.f[a.a]));d=rD(uc(a.g[a.a]));b?(a.e=gs(sc(wj(a.d,jf),12),new rn(a,c,d))):Rj(nc(jc(Nc,1),NE,84,15,[c,d]))}\nfunction bk(a,b,c){var d,e;e=sc(wj(a.a,be),50);d=c==(QB(),OB);switch(b.c){case 0:if(d){return new mk(e)}return new rk(e);case 1:if(d){return new wk(e)}return new Gk(e);case 2:if(d){throw Xh(new tD('Inline load mode is not supported for JsModule.'))}return new Ik(e);case 3:return new yk;default:throw Xh(new tD('Unknown dependency type '+b));}}\nfunction ak(a,b,c){var d,e,f,g,h;f=new $wnd.Map;for(e=0;e<c.length;e++){d=c[e];h=(IB(),Zn((MB(),LB),d[lF]));g=bk(a,h,b);if(h==EB){gk(d[aF],g)}else{switch(b.c){case 1:gk(io(sc(wj(a.a,oe),42),d[aF]),g);break;case 2:f.set(io(sc(wj(a.a,oe),42),d[aF]),g);break;case 0:gk(d['contents'],g);break;default:throw Xh(new tD('Unknown load mode = '+b));}}}return f}\nfunction Qk(b,c){if(document.body.$&&document.body.$[c]){return document.body.$[c]}else if(b.shadowRoot){return b.shadowRoot.getElementById(c)}else if(b.getElementById){return b.getElementById(c)}else if(c&&c.match('^[a-zA-Z0-9-_]*$')){return b.querySelector('#'+c)}else{return Array.from(b.querySelectorAll('[id]')).find(function(a){return a.id==c})}}\nfunction Uq(b,c){var d,e,f,g;f=sc(wj(b.j,Lf),8);g=Uu(f,c['changes']);if(!sc(wj(b.j,cd),10).j){try{d=Wt(f.d);jj&&($wnd.console.log('StateTree after applying changes:'),undefined);jj&&iC($wnd.console,d)}catch(a){a=Wh(a);if(Cc(a,7)){e=a;jj&&($wnd.console.error('Failed to log state tree'),undefined);jj&&hC($wnd.console,e)}else throw Xh(a)}}OA(new nr(g))}\nfunction xv(n,k,l,m){wv();n[k]=HE(function(c){var d=Object.getPrototypeOf(this);d[k]!==undefined&&d[k].apply(this,arguments);var e=c||$wnd.event;var f=l.Eb();var g=yv(this,e,k,l);g===null&&(g=Array.prototype.slice.call(arguments));var h;var i=-1;if(m){var j=this['}p'].promises;i=j.length;h=new Promise(function(a,b){j[i]=[a,b]})}f.Hb(l,k,g,i);return h})}\nfunction Kt(a,b){var c,d,e,f;if(Mt(b)||sc(wj(a,ne),9).b!=(bo(),_n)){return}c=It(b);if(!c){return}f=c.href;d=b.currentTarget.ownerDocument.baseURI;if(!MD(f.substr(0,d.length),d)){return}if(Nt(c.pathname,c.href.indexOf('#')!=-1)){e=$doc.location.hash;MD(e,c.hash)||sc(wj(a,ee),26).Y(f);sc(wj(a,ee),26)._(true);return}if(!c.hasAttribute('router-link')){return}Lt(b,d,f,a)}\nfunction Ap(a,b){if(sc(wj(a.c,ne),9).b!=(bo(),_n)){jj&&($wnd.console.warn('Trying to reconnect after application has been stopped. Giving up'),undefined);return}if(b){jj&&($wnd.console.log('Re-sending last message to the server...'),undefined);xr(sc(wj(a.c,Ye),24),b)}else{jj&&($wnd.console.log('Trying to re-establish server connection...'),undefined);lq(sc(wj(a.c,Ie),49))}}\nfunction pD(a){var b,c,d,e,f;if(a==null){throw Xh(new GD(RE))}d=a.length;e=d>0&&(uE(0,a.length),a.charCodeAt(0)==45||(uE(0,a.length),a.charCodeAt(0)==43))?1:0;for(b=e;b<d;b++){if(SC((uE(b,a.length),a.charCodeAt(b)))==-1){throw Xh(new GD(IG+a+'\"'))}}f=parseInt(a,10);c=f<-2147483648;if(isNaN(f)){throw Xh(new GD(IG+a+'\"'))}else if(c||f>2147483647){throw Xh(new GD(IG+a+'\"'))}return f}\nfunction UD(a,b,c){var d,e,f,g,h,i,j,k;d=new RegExp(b,'g');j=kc(Sh,NE,2,0,6,1);e=0;k=a;g=null;while(true){i=d.exec(k);if(i==null||k==''||e==c-1&&c>0){j[e]=k;break}else{h=i.index;j[e]=k.substr(0,h);k=WD(k,h+i[0].length,k.length);d.lastIndex=0;if(g==k){j[e]=k.substr(0,1);k=k.substr(1)}g=k;++e}}if(c==0&&a.length>0){f=j.length;while(f>0&&j[f-1]==''){--f}f<j.length&&(j.length=f)}return j}\nfunction yw(a,b,c,d){var e,f,g,h,i;i=Xt(a,24);for(f=0;f<(uz(i.a),i.c.length);f++){e=sc(i.c[f],6);if(e==b){continue}if(MD((h=Yt(b,0),vC(xc(ez(dA(h,eG))))),(g=Yt(e,0),vC(xc(ez(dA(g,eG))))))){rj('There is already a request to attach element addressed by the '+d+\". The existing request's node id='\"+e.d+\"'. Cannot attach the same element twice.\");Cu(b.g,a,b.d,e.d,c);return false}}return true}\nfunction Jo(f,c,d){var e=f;d.url=c;d.onOpen=HE(function(a){e.tb(a)});d.onReopen=HE(function(a){e.vb(a)});d.onMessage=HE(function(a){e.sb(a)});d.onError=HE(function(a){e.rb(a)});d.onTransportFailure=HE(function(a,b){e.wb(a)});d.onClose=HE(function(a){e.qb(a)});d.onReconnect=HE(function(a,b){e.ub(a,b)});d.onClientTimeout=HE(function(a){e.pb(a)});return $wnd.vaadinPush.atmosphere.subscribe(d)}\nfunction Tu(a,b){var c,d,e,f,g,h,i;g=b[lF];e=Lc(yC(b[_F]));d=(c=e,sc(a.a.get(c),6));if(!d){debugger;throw Xh(new LC)}switch(g){case 'empty':Ru(b,d);break;case 'splice':Wu(b,d);break;case 'put':Vu(b,d);break;case mG:f=Qu(b,d);kz(f);break;case 'detach':Fu(d.g,d);d.f=null;break;case 'clear':h=Lc(yC(b[lG]));i=Xt(d,h);Qz(i);break;default:{debugger;throw Xh(new MC('Unsupported change type: '+g))}}return d}\nfunction Ro(a,b){var c,d;if(!Mo(a)){throw Xh(new uD('This server to client push connection should not be used to send client to server messages'))}if(a.f==(op(),kp)){d=oo(b);qj('Sending push ('+a.g+') message to server: '+d);if(MD(a.g,MF)){c=new jp(d);while(c.a<c.b.length){Ko(a.e,ip(c))}}else{Ko(a.e,d)}return}if(a.f==lp){Lp(sc(wj(a.d,ye),14),b);return}throw Xh(new uD('Can not push after disconnecting'))}\nfunction rm(a,b){var c,d,e,f,g,h,i,j;if(sc(wj(a.c,ne),9).b!=(bo(),_n)){no(null);return}d=$wnd.location.pathname;e=$wnd.location.search;if(a.a==null){debugger;throw Xh(new MC('Initial response has not ended before pop state event was triggered'))}f=!(d==a.a&&e==a.b);sc(wj(a.c,ee),26).Z(b,f);if(!f){return}c=ko($doc.baseURI,$doc.location.href);c.indexOf('#')!=-1&&(c=UD(c,'#',2)[0]);g=b['state'];Ot(a.c,c,g,false)}\nfunction Dp(a,b,c){var d;if(sc(wj(a.c,ne),9).b!=(bo(),_n)){return}ij('reconnecting');if(a.b){if(aq(b,a.b)){jj&&jC($wnd.console,'Now reconnecting because of '+b+' failure');a.b=b}}else{a.b=b;jj&&jC($wnd.console,'Reconnecting because of '+b+' failure')}if(a.b!=b){return}++a.a;qj('Reconnect attempt '+a.a+' for '+b);a.a>=fz((d=Yt(sc(wj(sc(wj(a.c,gf),33).a,Lf),8).d,9),dA(d,'reconnectAttempts')),10000)?Bp(a):Qp(a,c)}\nfunction Rk(a,b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q,r;j=null;g=Sy(a.a).childNodes;o=new $wnd.Map;e=!b;i=-1;for(m=0;m<g.length;m++){q=xc(g[m]);o.set(q,zD(m));C(q,b)&&(e=true);if(e&&!!q&&ND(c,q.tagName)){j=q;i=m;break}}if(!j){Bu(a.g,a,d,-1,c,-1)}else{p=Xt(a,2);k=null;f=0;for(l=0;l<(uz(p.a),p.c.length);l++){r=sc(p.c[l],6);h=r.a;n=sc(o.get(h),31);!!n&&n.a<i&&++f;if(C(h,j)){k=zD(r.d);break}}k=Sk(a,d,j,k);Bu(a.g,a,d,k.a,j.tagName,f)}}\nfunction Yw(a,b,c,d){var e,f,g,h,i;if(d==null||Hc(d)){po(b,c,zc(d))}else{f=d;if(0==uC(f)){g=f;if(!('uri' in g)){debugger;throw Xh(new MC(\"Implementation error: JsonObject is recieved as an attribute value for '\"+c+\"' but it has no \"+'uri'+' key'))}i=g['uri'];if(a.q){e=a.l;e=(h='/'.length,MD(e.substr(e.length-h,h),'/')?e:e+'/');Sy(b).setAttribute(c,e+(''+i))}else{i==null?Sy(b).removeAttribute(c):Sy(b).setAttribute(c,i)}}else{po(b,c,hi(d))}}}\nfunction Wu(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q;n=Lc(yC(a[lG]));m=Xt(b,n);i=Lc(yC(a['index']));mG in a?(o=Lc(yC(a[mG]))):(o=0);if('add' in a){d=a['add'];c=(j=wc(d),j);Tz(m,i,o,c)}else if('addNodes' in a){e=a['addNodes'];l=e.length;c=[];q=b.g;for(h=0;h<l;h++){g=Lc(yC(e[h]));f=(k=g,sc(q.a.get(k),6));if(!f){debugger;throw Xh(new MC('No child node found with id '+g))}f.f=b;c[h]=f}Tz(m,i,o,c)}else{p=m.c.splice(i,o);rz(m.a,new Zy(m,i,p,[],false))}}\nfunction xl(a){var b,c,d,e,f;if(Cc(a,6)){e=sc(a,6);d=null;if(e.c.has(1)){d=Yt(e,1)}else if(e.c.has(16)){d=Xt(e,16)}else if(e.c.has(23)){return xl(dA(Yt(e,23),tF))}if(!d){debugger;throw Xh(new MC(\"Don't know how to convert node without map or list features\"))}b=d.Sb(new Tl);if(!!b&&!(wF in b)){b[wF]=zC(e.d);Pl(e,d,b)}return b}else if(Cc(a,27)){f=sc(a,27);if(f.e.d==23){return xl((uz(f.a),f.g))}else{c={};c[f.f]=xl((uz(f.a),f.g));return c}}else{return a}}\nfunction Kv(a,b){var c,d,e;d=(c=Yt(b,0),xc(ez(dA(c,eG))));e=d[lF];if(MD('inMemory',e)){av(b);return}if(!a.b){debugger;throw Xh(new MC('Unexpected html node. The node is supposed to be a custom element'))}if(MD('@id',e)){if(tl(a.b)){ul(a.b,new rx(a,b,d));return}else if(!(typeof a.b.$!=TE)){wl(a.b,new tx(a,b,d));return}bw(a,b,d,true)}else if(MD(fG,e)){if(!a.b.root){wl(a.b,new vx(a,b,d));return}dw(a,b,d,true)}else{debugger;throw Xh(new MC('Unexpected payload type '+e))}}\nfunction Ij(b,c){var d,e,f,g;g=xc($wnd.history.state);if(!!g&&bF in g&&cF in g){b.a=Lc(yC(g[bF]));b.b=yC(g[cF]);f=null;try{f=nC($wnd.sessionStorage,fF+b.b)}catch(a){a=Wh(a);if(Cc(a,23)){d=a;mj(gF+d.A())}else throw Xh(a)}if(f!=null){e=xC(f);b.f=wc(e[dF]);b.g=wc(e[eF]);Kj(b,c)}else{rj('History.state has scroll history index, but no scroll positions found from session storage matching token <'+b.b+'>. User has navigated out of site in an unrecognized way.');Jj(b)}}else{Jj(b)}}\nfunction cw(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o;o=sc(c.e.get(Cg),69);if(!o||!o.a.has(a)){return}k=UD(a,'\\\\.',0);g=c;f=null;e=0;j=k.length;for(m=0,n=k.length;m<n;++m){l=k[m];d=Yt(g,1);if(!eA(d,l)&&e<j-1){jj&&gC($wnd.console,\"Ignoring property change for property '\"+a+\"' which isn't defined from server\");return}f=dA(d,l);Cc((uz(f.a),f.g),6)&&(g=(uz(f.a),sc(f.g,6)));++e}if(Cc((uz(f.a),f.g),6)){h=(uz(f.a),sc(f.g,6));i=xc(b.a[b.b]);if(!(wF in i)||h.c.has(16)){return}}dz(f,b.a[b.b]).K()}\nfunction Oq(a,b){var c,d;if(!b){throw Xh(new tD('The json to handle cannot be null'))}if((TF in b?b[TF]:-1)==-1){c=b['meta'];(!c||!(ZF in c))&&jj&&($wnd.console.error(\"Response didn't contain a server id. Please verify that the server is up-to-date and that the response data has not been modified in transmission.\"),undefined)}d=sc(wj(a.j,ne),9).b;if(d==(bo(),$n)){d=_n;Nn(sc(wj(a.j,ne),9),d)}d==_n?Nq(a,b):jj&&($wnd.console.warn('Ignored received message because application has already been stopped'),undefined)}\nfunction Kb(a){var b,c,d,e,f,g,h;if(!a){debugger;throw Xh(new MC('tasks'))}f=a.length;if(f==0){return null}b=false;c=new K;while(lb()-c.a<16){d=false;for(e=0;e<f;e++){if(a.length!=f){debugger;throw Xh(new MC(UE+a.length+' != '+f))}h=a[e];if(!h){continue}d=true;if(!h[1]){debugger;throw Xh(new MC('Found a non-repeating Task'))}if(!h[0].D()){a[e]=null;b=true}}if(!d){break}}if(b){g=[];for(e=0;e<f;e++){!!a[e]&&(g[g.length]=a[e],undefined)}if(g.length>=f){debugger;throw Xh(new LC)}return g.length==0?null:g}else{return a}}\nfunction un(a,b,c,d){var e,f,g,h,i,j;h=$doc;j=h.createElement('div');j.className='v-system-error';if(a!=null){f=h.createElement('div');f.className='caption';f.innerHTML=a;j.appendChild(f);jj&&hC($wnd.console,a)}if(b!=null){i=h.createElement('div');i.className='message';i.innerHTML=b;j.appendChild(i);jj&&hC($wnd.console,b)}if(c!=null){g=h.createElement('div');g.className='details';g.innerHTML=c;j.appendChild(g);jj&&hC($wnd.console,c)}if(d!=null){e=h.querySelector(d);!!e&&_B(xc(mE(qE(e.shadowRoot),e)),j)}else{aC(h.body,j)}return j}\nfunction Hw(a,b,c,d,e){var f,g,h;h=tu(e,Lc(a));if(!h.c.has(1)){return}if(!Dw(h,b)){debugger;throw Xh(new MC('Host element is not a parent of the node whose property has changed. This is an implementation error. Most likely it means that there are several StateTrees on the same page (might be possible with portlets) and the target StateTree should not be passed into the method as an argument but somehow detected from the host element. Another option is that host element is calculated incorrectly.'))}f=Yt(h,1);g=dA(f,c);dz(g,d).K()}\nfunction To(a){this.f=(op(),lp);this.d=a;Mn(sc(wj(a,ne),9),new rp(this));this.a={transport:MF,maxStreamingLength:1000000,fallbackTransport:'long-polling',contentType:OF,reconnectInterval:5000,timeout:-1,maxReconnectOnClose:10000000,trackMessageLength:true,enableProtocol:true,handleOnlineOffline:false,messageDelimiter:String.fromCharCode(124)};this.a['logLevel']='debug';Rr(sc(wj(this.d,ef),36)).forEach(fi(tp.prototype.ab,tp,[this]));Sr(sc(wj(this.d,ef),36))==null?(this.h=sc(wj(a,cd),10).l):(this.h=Sr(sc(wj(this.d,ef),36)));So(this,new vp(this))}\nfunction mt(h,e,f){var g={};g.getNode=HE(function(a){var b=e.get(a);if(b==null){throw new ReferenceError('There is no a StateNode for the given argument.')}return b});g.$appId=h.Cb().replace(/-\\d+$/,'');g.registry=h.a;g.attachExistingElement=HE(function(a,b,c,d){Rk(g.getNode(a),b,c,d)});g.populateModelProperties=HE(function(a,b){Uk(g.getNode(a),b)});g.registerUpdatableModelProperties=HE(function(a,b){Wk(g.getNode(a),b)});g.stopApplication=HE(function(){f.K()});g.scrollPositionHandlerAfterServerNavigation=HE(function(a){Xk(g.registry,a)});return g}\nfunction dc(a,b){var c,d,e,f,g,h,i,j,k;if(b.length==0){return a.I(XE,VE,-1,-1)}k=XD(b);MD(k.substr(0,3),'at ')&&(k=k.substr(3));k=k.replace(/\\[.*?\\]/g,'');g=k.indexOf('(');if(g==-1){g=k.indexOf('@');if(g==-1){j=k;k=''}else{j=XD(k.substr(g+1));k=XD(k.substr(0,g))}}else{c=k.indexOf(')',g);j=k.substr(g+1,c-(g+1));k=XD(k.substr(0,g))}g=OD(k,YD(46));g!=-1&&(k=k.substr(g+1));(k.length==0||MD(k,'Anonymous function'))&&(k=VE);h=QD(j,YD(58));e=RD(j,YD(58),h-1);i=-1;d=-1;f=XE;if(h!=-1&&e!=-1){f=j.substr(0,e);i=$b(j.substr(e+1,h-(e+1)));d=$b(j.substr(h+1))}return a.I(f,k,i,d)}\nfunction yo(a,b){var c,d,e;c=Go(b,'serviceUrl');Ri(a,Eo(b,'webComponentMode'));Ci(a,Eo(b,'clientRouting'));if(c==null){Mi(a,mo('.'));Di(a,mo(Go(b,JF)))}else{a.l=c;Di(a,mo(c+(''+Go(b,JF))))}Qi(a,Fo(b,'v-uiId').a);Gi(a,Fo(b,'heartbeatInterval').a);Ji(a,Fo(b,'maxMessageSuspendTimeout').a);Ni(a,(d=b.getConfig(KF),d?d.vaadinVersion:null));e=b.getConfig(KF);Do();Oi(a,b.getConfig('sessExpMsg'));Ki(a,!Eo(b,'debug'));Li(a,Eo(b,'requestTiming'));Fi(a,b.getConfig('webcomponents'));Ei(a,Eo(b,'devmodeGizmoEnabled'));Ii(a,Go(b,'liveReloadUrl'));Hi(a,Go(b,'liveReloadBackend'));Pi(a,Go(b,'springBootLiveReloadPort'))}\nfunction aw(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v;if(!b){debugger;throw Xh(new LC)}e=b.b;p=b.e;if(!e){debugger;throw Xh(new MC('Cannot handle DOM event for a Node'))}v=a.type;o=Yt(p,4);d=sc(wj(p.g.c,yf),51);h=zc(ez(dA(o,v)));if(h==null){debugger;throw Xh(new LC)}if(!it(d,h)){debugger;throw Xh(new LC)}i=xc(ht(d,h));n=(t=BC(i),t);u=new $wnd.Set;if(n.length==0){f=null}else{f={};for(k=0,l=n.length;k<l;++k){j=n[k];if(MD(j.substr(0,1),'}')){q=j.substr(1);u.add(q)}else{g=Gw(j);m=g(a,e);f[j]=m}}}c=[];u.forEach(fi(Rx.prototype.eb,Rx,[c,b]));r=new Ux(c,p,v,f);s=Ww(e,v,i,f,r);s&&Ow(r.a,r.c,r.d,r.b,null)}\nfunction Dj(a,b){this.a=new $wnd.Map;xj(this,fd,a);xj(this,cd,b);xj(this,be,new Om(this));xj(this,oe,new jo(this));xj(this,yd,new ik(this));xj(this,ie,new zn(this));xj(this,ne,new On);xj(this,Lf,new Gu(this));xj(this,jf,new ls(this));xj(this,We,new Zq(this));xj(this,Ye,new Br(this));xj(this,rf,new Os(this));xj(this,nf,new Gs(this));xj(this,Cf,new st(this));xj(this,yf,new kt);xj(this,Bd,new cl);xj(this,Dd,new ll(this));xj(this,Ie,new nq(this));xj(this,ye,new Vp(this));xj(this,xf,new Ws(this));xj(this,ef,new Ur(this));xj(this,gf,new ds(this));b.b||(b.q?xj(this,ee,new Sj):xj(this,ee,new Lj(this)));xj(this,af,new Lr(this))}\nfunction kb(b){var c=function(a){return typeof a!=TE};var d=function(a){return a.replace(/\\r\\n/g,'')};if(c(b.outerHTML))return d(b.outerHTML);c(b.innerHTML)&&b.cloneNode&&$doc.createElement('div').appendChild(b.cloneNode(true)).innerHTML;if(c(b.nodeType)&&b.nodeType==3){return \"'\"+b.data.replace(/ /g,'\\u25AB').replace(/\\u00A0/,'\\u25AA')+\"'\"}if(typeof c(b.htmlText)&&b.collapse){var e=b.htmlText;if(e){return 'IETextRange ['+d(e)+']'}else{var f=b.duplicate();f.pasteHTML('|');var g='IETextRange '+d(b.parentElement().outerHTML);f.moveStart('character',-1);f.pasteHTML('');return g}}return b.toString?b.toString():'[JavaScriptObject]'}\nfunction Pl(a,b,c){var d,e,f;f=[];if(a.c.has(1)){if(!Cc(b,39)){debugger;throw Xh(new MC('Received an inconsistent NodeFeature for a node that has a ELEMENT_PROPERTIES feature. It should be NodeMap, but it is: '+b))}e=sc(b,39);cA(e,fi(dm.prototype.ab,dm,[f,c]));f.push(bA(e,new bm(f,c)))}else if(a.c.has(16)){if(!Cc(b,28)){debugger;throw Xh(new MC('Received an inconsistent NodeFeature for a node that has a TEMPLATE_MODELLIST feature. It should be NodeList, but it is: '+b))}d=sc(b,28);f.push(Pz(d,new Zl(c)))}if(f.length==0){debugger;throw Xh(new MC('Node should have ELEMENT_PROPERTIES or TEMPLATE_MODELLIST feature'))}f.push(Ut(a,new _l(f)))}\nfunction zw(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o;l=e.e;o=zc(ez(dA(Yt(b,0),'tag')));h=false;if(!a){h=true;jj&&jC($wnd.console,vG+d+\" is not found. The requested tag name is '\"+o+\"'\")}else if(!(!!a&&ND(o,a.tagName))){h=true;rj(vG+d+\" has the wrong tag name '\"+a.tagName+\"', the requested tag name is '\"+o+\"'\")}if(h){Cu(l.g,l,b.d,-1,c);return false}if(!l.c.has(20)){return true}k=Yt(l,20);m=sc(ez(dA(k,rG)),6);if(!m){return true}j=Xt(m,2);g=null;for(i=0;i<(uz(j.a),j.c.length);i++){n=sc(j.c[i],6);f=n.a;if(C(f,a)){g=zD(n.d);break}}if(g){jj&&jC($wnd.console,vG+d+\" has been already attached previously via the node id='\"+g+\"'\");Cu(l.g,l,b.d,g.a,c);return false}return true}\nfunction ot(b,c,d,e){var f,g,h,i,j,k,l,m;if(c.length!=d.length+1){debugger;throw Xh(new LC)}try{j=new ($wnd.Function.bind.apply($wnd.Function,[null].concat(c)));j.apply(mt(b,e,new wt(b)),d)}catch(a){a=Wh(a);if(Cc(a,7)){i=a;jj&&lj(new sj(i));jj&&($wnd.console.error('Exception is thrown during JavaScript execution. Stacktrace will be dumped separately.'),undefined);vn(sc(wj(b.a,ie),16),i);if(!sc(wj(b.a,cd),10).j){g=new dE;h='';for(l=0,m=c.length;l<m;++l){k=c[l];aE((g.a+=h,g),k);h=', '}g.a+=']';f=g.a;uE(0,f.length);f.charCodeAt(0)==91&&(f=f.substr(1));LD(f,f.length-1)==93&&(f=WD(f,0,f.length-1));jj&&jC($wnd.console,\"The error has occurred in the JS code: '\"+f+\"'\")}}else throw Xh(a)}}\nfunction Mv(a,b,c,d){var e,f,g,h,i,j,k;g=wu(b);i=zc(ez(dA(Yt(b,0),'tag')));if(!(i==null||ND(c.tagName,i))){debugger;throw Xh(new MC(\"Element tag name is '\"+c.tagName+\"', but the required tag name is \"+zc(ez(dA(Yt(b,0),'tag')))))}Gv==null&&(Gv=Ly());if(Gv.has(b)){return}Gv.set(b,(PC(),true));f=new bx(b,c,d);e=[];h=[];if(g){h.push(Pv(f));h.push(pv(new $x(f),f.e,17,false));h.push((j=Yt(f.e,4),cA(j,fi(Jx.prototype.ab,Jx,[f])),bA(j,new Lx(f))));h.push(Uv(f));h.push(Nv(f));h.push(Tv(f));h.push(Ov(c,b));h.push(Rv(12,new dx(c),Xv(e),b));h.push(Rv(3,new fx(c),Xv(e),b));h.push(Rv(1,new Bx(c),Xv(e),b));Sv(a,b,c);h.push(Ut(b,new Wx(h,f,e)))}h.push(Vv(h,f,e));k=new cx(b);b.e.set(Uf,k);OA(new ky(b))}\nfunction Ui(k,e,f,g,h){var i=k;var j={};j.isActive=HE(function(){return i.Q()});j.getByNodeId=HE(function(a){return i.P(a)});j.addDomBindingListener=HE(function(a,b){i.O(a,b)});j.productionMode=f;j.poll=HE(function(){var a=i.a.T();a.zb()});j.connectWebComponent=HE(function(a){var b=i.a;var c=b.U();var d=b.V().Gb().d;c.Ab(d,'connect-web-component',a)});g&&(j.getProfilingData=HE(function(){var a=i.a.S();var b=[a.e,a.m];null!=a.l?(b=b.concat(a.l)):(b=b.concat(-1,-1));b[b.length]=a.a;return b}));j.resolveUri=HE(function(a){var b=i.a.W();return b.ob(a)});j.sendEventMessage=HE(function(a,b,c){var d=i.a.U();d.Ab(a,b,c)});j.initializing=false;j.exportedWebComponents=h;$wnd.Vaadin.Flow.clients[e]=j}\nfunction Wi(a){var b,c,d,e,f,g,h,i,j;this.a=new Dj(this,a);M(new _i(sc(wj(this.a,ie),16)));g=sc(wj(this.a,Lf),8).d;Fr(g,sc(wj(this.a,af),64));new RA(new es(sc(wj(this.a,ye),14)));i=Yt(g,10);vq(i,'first',new yq,300);vq(i,'second',new Aq,1500);vq(i,'third',new Cq,5000);j=dA(i,'theme');bz(j,new Eq);c=$doc.body;bu(g,c);$u(g,c);if(!a.q&&!a.b){pm(new sm(this.a));Ht(this.a,c)}qj('Starting application '+a.a);b=a.a;b=TD(b,'-\\\\d+$','');e=a.j;f=a.k;Ui(this,b,e,f,a.e);if(!e){h=a.m;Ti(this,b,h);jj&&iC($wnd.console,'Vaadin application servlet version: '+h);if(a.d&&a.h!=null){d=$doc.createElement('vaadin-devmode-gizmo');Sy(d).setAttribute(aF,a.h);a.g!=null&&Sy(d).setAttribute('backend',a.g);a.o!=null&&Sy(d).setAttribute('springbootlivereloadport',a.o);Sy(c).appendChild(d)}}ij('loading')}\nfunction Vq(a,b,c,d){var e,f,g,h,i,j,k,l,m;if(!((TF in b?b[TF]:-1)==-1||(TF in b?b[TF]:-1)==a.f)){debugger;throw Xh(new LC)}try{k=lb();i=b;if('constants' in i){e=sc(wj(a.j,yf),51);f=i['constants'];jt(e,f)}'changes' in i&&Uq(a,i);'execute' in i&&OA(new lr(a,i));qj('handleUIDLMessage: '+(lb()-k)+' ms');PA();j=b['meta'];if(j){m=sc(wj(a.j,ne),9).b;if(ZF in j){if(a.g){no(a.g.a)}else if(m!=(bo(),ao)){wn(sc(wj(a.j,ie),16),null);Nn(sc(wj(a.j,ne),9),ao)}}else if('appError' in j&&m!=(bo(),ao)){g=j['appError'];yn(sc(wj(a.j,ie),16),g['caption'],g['message'],g['details'],g[aF],g['querySelector']);Nn(sc(wj(a.j,ne),9),(bo(),ao))}}a.g=null;a.e=Lc(lb()-d);a.m+=a.e;if(!a.d){a.d=true;h=_q();if(h!=0){l=Lc(lb()-h);jj&&iC($wnd.console,'First response processed '+l+' ms after fetchStart')}a.a=$q()}}finally{qj(' Processing time was '+(''+a.e)+'ms');Rq(b)&&hs(sc(wj(a.j,jf),12));Xq(a,c)}}\nfunction su(a,b){if(a.b==null){a.b=new $wnd.Map;a.b.set(zD(0),'elementData');a.b.set(zD(1),'elementProperties');a.b.set(zD(2),'elementChildren');a.b.set(zD(3),'elementAttributes');a.b.set(zD(4),'elementListeners');a.b.set(zD(5),'pushConfiguration');a.b.set(zD(6),'pushConfigurationParameters');a.b.set(zD(7),'textNode');a.b.set(zD(8),'pollConfiguration');a.b.set(zD(9),'reconnectDialogConfiguration');a.b.set(zD(10),'loadingIndicatorConfiguration');a.b.set(zD(11),'classList');a.b.set(zD(12),'elementStyleProperties');a.b.set(zD(15),'componentMapping');a.b.set(zD(16),'modelList');a.b.set(zD(17),'polymerServerEventHandlers');a.b.set(zD(18),'polymerEventListenerMap');a.b.set(zD(19),'clientDelegateHandlers');a.b.set(zD(20),'shadowRootData');a.b.set(zD(21),'shadowRootHost');a.b.set(zD(22),'attachExistingElementFeature');a.b.set(zD(24),'virtualChildrenList');a.b.set(zD(23),'basicTypeValue')}return a.b.has(zD(b))?zc(a.b.get(zD(b))):'Unknown node feature: '+b}\nfunction Nq(a,b){var c,d,e,f,g,h,i;e=TF in b?b[TF]:-1;if(UF in b&&!Qq(a,e)){qj('Received resync message with id '+e+' while waiting for '+(a.f+1));a.f=e-1;Wq(a)}d=a.k.size!=0;if(d||!Qq(a,e)){if(d){jj&&($wnd.console.log('Postponing UIDL handling due to lock...'),undefined)}else{if(e<=a.f){rj(VF+e+' but have already seen '+a.f+'. Ignoring it');Rq(b)&&hs(sc(wj(a.j,jf),12));return}qj(VF+e+' but expected '+(a.f+1)+'. Postponing handling until the missing message(s) have been received')}a.h.push(new ir(b));if(!a.c.f){h=sc(wj(a.j,cd),10).i;mi(a.c,h)}return}UF in b&&yu(sc(wj(a.j,Lf),8));g=lb();c=new A;a.k.add(c);jj&&($wnd.console.log('Handling message from server'),undefined);is(sc(wj(a.j,jf),12),new vs);if(WF in b){f=b[WF];zr(sc(wj(a.j,Ye),24),f,UF in b)}e!=-1&&(a.f=e);if('redirect' in b){i=b['redirect'][aF];jj&&iC($wnd.console,'redirecting to '+i);no(i);return}XF in b&&(a.b=b[XF]);YF in b&&(a.i=b[YF]);Mq(a,b);a.d||hk(sc(wj(a.j,yd),63));'timings' in b&&(a.l=b['timings']);lk(new cr);lk(new jr(a,b,c,g))}\nfunction CB(b){var c,d,e,f,g;b=b.toLowerCase();this.e=b.indexOf('gecko')!=-1&&b.indexOf('webkit')==-1&&b.indexOf(DG)==-1;b.indexOf(' presto/')!=-1;this.k=b.indexOf(DG)!=-1;this.l=!this.k&&b.indexOf('applewebkit')!=-1;this.b=b.indexOf(' chrome/')!=-1||b.indexOf(' crios/')!=-1||b.indexOf(CG)!=-1;this.i=b.indexOf('opera')!=-1;this.f=b.indexOf('msie')!=-1&&!this.i&&b.indexOf('webtv')==-1;this.f=this.f||this.k;this.j=!this.b&&!this.f&&b.indexOf('safari')!=-1;this.d=b.indexOf(' firefox/')!=-1;if(b.indexOf(' edge/')!=-1){this.c=true;this.b=false;this.i=false;this.f=false;this.j=false;this.d=false;this.l=false;this.e=false}try{if(this.e){f=b.indexOf('rv:');if(f>=0){g=b.substr(f+3);g=TD(g,EG,'$1');this.a=sD(g)}}else if(this.l){g=VD(b,b.indexOf('webkit/')+7);g=TD(g,FG,'$1');this.a=sD(g)}else if(this.k){g=VD(b,b.indexOf(DG)+8);g=TD(g,FG,'$1');this.a=sD(g);this.a>7&&(this.a=7)}else this.c&&(this.a=0)}catch(a){a=Wh(a);if(Cc(a,7)){c=a;gE();'Browser engine version parsing failed for: '+b+' '+c.A()}else throw Xh(a)}try{if(this.f){if(b.indexOf('msie')!=-1){if(this.k);else{e=VD(b,b.indexOf('msie ')+5);e=DB(e,0,OD(e,YD(59)));BB(e)}}else{f=b.indexOf('rv:');if(f>=0){g=b.substr(f+3);g=TD(g,EG,'$1');BB(g)}}}else if(this.d){d=b.indexOf(' firefox/')+9;BB(DB(b,d,d+5))}else if(this.b){xB(b)}else if(this.j){d=b.indexOf(' version/');if(d>=0){d+=9;BB(DB(b,d,d+5))}}else if(this.i){d=b.indexOf(' version/');d!=-1?(d+=9):(d=b.indexOf('opera/')+6);BB(DB(b,d,d+5))}else if(this.c){d=b.indexOf(' edge/')+6;BB(DB(b,d,d+8))}}catch(a){a=Wh(a);if(Cc(a,7)){c=a;gE();'Browser version parsing failed for: '+b+' '+c.A()}else throw Xh(a)}if(b.indexOf('windows ')!=-1){b.indexOf('windows phone')!=-1}else if(b.indexOf('android')!=-1){uB(b)}else if(b.indexOf('linux')!=-1);else if(b.indexOf('macintosh')!=-1||b.indexOf('mac osx')!=-1||b.indexOf('mac os x')!=-1){this.g=b.indexOf('ipad')!=-1;this.h=b.indexOf('iphone')!=-1;(this.g||this.h)&&yB(b)}else b.indexOf('; cros ')!=-1&&vB(b)}\nvar IE='object',JE='[object Array]',KE='function',LE='java.lang',ME='com.google.gwt.core.client',NE={4:1},OE='__noinit__',PE='__java$exception',QE={4:1,7:1,5:1},RE='null',SE='com.google.gwt.core.client.impl',TE='undefined',UE='Working array length changed ',VE='anonymous',WE='fnStack',XE='Unknown',YE='must be non-negative',ZE='must be positive',$E='com.google.web.bindery.event.shared',_E='com.vaadin.client',aF='url',bF='historyIndex',cF='historyResetToken',dF='xPositions',eF='yPositions',fF='scrollPos-',gF='Failed to get session storage: ',hF='Unable to restore scroll positions. History.state has been manipulated or user has navigated away from site in an unrecognized way.',iF='beforeunload',jF='scrollPositionX',kF='scrollPositionY',lF='type',mF={59:1},nF={20:1},oF={17:1},pF={19:1},qF='text/javascript',rF='constructor',sF='properties',tF='value',uF='com.vaadin.client.flow.reactive',vF={13:1},wF='nodeId',xF='Root node for node ',yF=' could not be found',zF=' is not an Element',AF={60:1},BF={72:1},CF={41:1},DF={85:1},EF='script',FF='stylesheet',GF='click',HF={4:1,30:1},IF='com.vaadin.flow.shared',JF='contextRootUrl',KF='versionInfo',LF='v-uiId=',MF='websocket',NF='transport',OF='application/json; charset=UTF-8',PF='com.vaadin.client.communication',QF={86:1},RF='dialogText',SF='dialogTextGaveUp',TF='syncId',UF='resynchronize',VF='Received message with server id ',WF='clientId',XF='Vaadin-Security-Key',YF='Vaadin-Push-ID',ZF='sessionExpired',$F='event',_F='node',aG='attachReqId',bG='attachAssignedId',cG='com.vaadin.client.flow',dG='bound',eG='payload',fG='subTemplate',gG={40:1},hG='Node is null',iG='Node is not created for this tree',jG='Node id is not registered with this tree',kG='$server',lG='feat',mG='remove',nG='com.vaadin.client.flow.binding',oG='intermediate',pG='elemental.util',qG='element',rG='shadowRoot',sG='The HTML node for the StateNode with id=',tG='hidden',uG='styleDisplay',vG='Element addressed by the ',wG='dom-repeat',xG='dom-change',yG='com.vaadin.client.flow.nodefeature',zG='Unsupported complex type in ',AG='com.vaadin.client.gwt.com.google.web.bindery.event.shared',BG='OS minor',CG=' headlesschrome/',DG='trident/',EG='(\\\\.[0-9]+).+',FG='([0-9]+\\\\.[0-9]+).*',GG='com.vaadin.flow.shared.ui',HG='java.io',IG='For input string: \"',JG='user.agent';var _,bi,Yh,Vh=-1;ci();di(1,null,{},A);_.r=function B(a){return this===a};_.s=function D(){return this._b};_.t=function G(){return zE(this)};_.u=function I(){var a;return VC(F(this))+'@'+(a=H(this)>>>0,a.toString(16))};_.equals=function(a){return this.r(a)};_.hashCode=function(){return this.t()};_.toString=function(){return this.u()};var oc,pc,qc;di(87,1,{},WC);_.Vb=function XC(a){var b;b=new WC;b.e=4;a>1?(b.c=cD(this,a-1)):(b.c=this);return b};_.Wb=function bD(){UC(this);return this.b};_.Xb=function dD(){return VC(this)};_.Yb=function fD(){UC(this);return this.g};_.Zb=function hD(){return (this.e&4)!=0};_.$b=function iD(){return (this.e&1)!=0};_.u=function lD(){return ((this.e&2)!=0?'interface ':(this.e&1)!=0?'':'class ')+(UC(this),this.i)};_.e=0;var TC=1;var Mh=ZC(LE,'Object',1);var zh=ZC(LE,'Class',87);di(88,1,{},K);_.a=0;var Oc=ZC(ME,'Duration',88);var L=null;di(5,1,{4:1,5:1});_.w=function U(a){return new Error(a)};_.A=function W(){return this.g};_.B=function X(){var a,b,c;c=this.g==null?null:this.g.replace(new RegExp('\\n','g'),' ');b=(a=VC(this._b),c==null?a:a+': '+c);R(this,V(this.w(b)));Xb(this)};_.u=function Z(){return S(this,this.A())};_.e=OE;_.j=true;var Th=ZC(LE,'Throwable',5);di(7,5,QE);var Dh=ZC(LE,'Exception',7);di(21,7,QE,ab);var Oh=ZC(LE,'RuntimeException',21);di(47,21,QE,bb);var Ih=ZC(LE,'JsException',47);di(105,47,QE);var Sc=ZC(SE,'JavaScriptExceptionBase',105);di(23,105,{23:1,4:1,7:1,5:1},fb);_.A=function ib(){return eb(this),this.c};_.C=function jb(){return Kc(this.b)===Kc(cb)?null:this.b};var cb;var Pc=ZC(ME,'JavaScriptException',23);var Qc=ZC(ME,'JavaScriptObject$',0);di(281,1,{});var Rc=ZC(ME,'Scheduler',281);var mb=0,nb=false,ob,pb=0,qb=-1;di(115,281,{});_.e=false;_.i=false;var Db;var Vc=ZC(SE,'SchedulerImpl',115);di(116,1,{},Rb);_.D=function Sb(){this.a.e=true;Hb(this.a);this.a.e=false;return this.a.i=Ib(this.a)};var Tc=ZC(SE,'SchedulerImpl/Flusher',116);di(117,1,{},Tb);_.D=function Ub(){this.a.e&&Pb(this.a.f,1);return this.a.i};var Uc=ZC(SE,'SchedulerImpl/Rescuer',117);var Vb;di(292,1,{});var Zc=ZC(SE,'StackTraceCreator/Collector',292);di(106,292,{},ac);_.G=function bc(a){var b={},j;var c=[];a[WE]=c;var d=arguments.callee.caller;while(d){var e=(Wb(),d.name||(d.name=Zb(d.toString())));c.push(e);var f=':'+e;var g=b[f];if(g){var h,i;for(h=0,i=g.length;h<i;h++){if(g[h]===d){return}}}(g||(b[f]=[])).push(d);d=d.caller}};_.H=function cc(a){var b,c,d,e;d=(Wb(),a&&a[WE]?a[WE]:[]);c=d.length;e=kc(Ph,NE,29,c,0,1);for(b=0;b<c;b++){e[b]=new HD(d[b],null,-1)}return e};var Wc=ZC(SE,'StackTraceCreator/CollectorLegacy',106);di(293,292,{});_.G=function ec(a){};_.I=function fc(a,b,c,d){return new HD(b,a+'@'+d,c<0?-1:c)};_.H=function gc(a){var b,c,d,e,f,g,h;e=(Wb(),h=a.e,h&&h.stack?h.stack.split('\\n'):[]);f=kc(Ph,NE,29,0,0,1);b=0;d=e.length;if(d==0){return f}g=dc(this,e[0]);MD(g.d,VE)||(f[b++]=g);for(c=1;c<d;c++){f[b++]=dc(this,e[c])}return f};var Yc=ZC(SE,'StackTraceCreator/CollectorModern',293);di(107,293,{},hc);_.I=function ic(a,b,c,d){return new HD(b,a,-1)};var Xc=ZC(SE,'StackTraceCreator/CollectorModernNoSourceMap',107);di(37,1,{});_.J=function si(a){if(a!=this.d){return}this.e||(this.f=null);this.K()};_.d=0;_.e=false;_.f=null;var $c=ZC('com.google.gwt.user.client','Timer',37);di(297,1,{});_.u=function xi(){return 'An event type'};var bd=ZC($E,'Event',297);di(89,1,{},zi);_.t=function Ai(){return this.a};_.u=function Bi(){return 'Event type'};_.a=0;var yi=0;var _c=ZC($E,'Event/Type',89);di(298,1,{});var ad=ZC($E,'EventBus',298);di(10,1,{10:1},Si);_.b=false;_.d=false;_.f=0;_.i=0;_.j=false;_.k=false;_.p=0;_.q=false;var cd=ZC(_E,'ApplicationConfiguration',10);di(99,1,{},Wi);_.O=function Xi(a,b){Tt(tu(sc(wj(this.a,Lf),8),a),new bj(a,b))};_.P=function Yi(a){var b;b=tu(sc(wj(this.a,Lf),8),a);return !b?null:b.a};_.Q=function Zi(){var a;return sc(wj(this.a,We),22).a==0||sc(wj(this.a,jf),12).b||(a=(Eb(),Db),!!a&&a.a!=0)};var fd=ZC(_E,'ApplicationConnection',99);di(120,1,{},_i);_.v=function aj(a){vn(this.a,a)};var dd=ZC(_E,'ApplicationConnection/0methodref$handleError$Type',120);di(121,1,{},bj);_.R=function cj(a){return $i(this.b,this.a,a)};_.b=0;var ed=ZC(_E,'ApplicationConnection/lambda$0$Type',121);di(34,1,{},fj);var dj;var gd=ZC(_E,'BrowserInfo',34);var hd=_C(_E,'Command');var jj=false;di(114,1,{},sj);_.K=function tj(){oj(this.a)};var jd=ZC(_E,'Console/lambda$0$Type',114);di(113,1,{},uj);_.v=function vj(a){pj(this.a)};var kd=ZC(_E,'Console/lambda$1$Type',113);di(124,1,{});_.S=function yj(){return sc(wj(this,We),22)};_.T=function zj(){return sc(wj(this,af),64)};_.U=function Aj(){return sc(wj(this,nf),25)};_.V=function Bj(){return sc(wj(this,Lf),8)};_.W=function Cj(){return sc(wj(this,oe),42)};var Rd=ZC(_E,'Registry',124);di(125,124,{},Dj);var md=ZC(_E,'DefaultRegistry',125);di(26,1,{26:1},Lj);_.X=function Mj(a){var b;if(!(jF in a)||!(kF in a)||!('href' in a))throw Xh(new uD('scrollPositionX, scrollPositionY and href should be available in ScrollPositionHandler.afterNavigation.'));this.f[this.a]=yC(a[jF]);this.g[this.a]=yC(a[kF]);lC($wnd.history,Fj(this),'',$wnd.location.href);b=a['href'];b.indexOf('#')!=-1||Rj(nc(jc(Nc,1),NE,84,15,[0,0]));++this.a;kC($wnd.history,Fj(this),'',b);this.f.splice(this.a,this.f.length-this.a);this.g.splice(this.a,this.g.length-this.a)};_.Y=function Nj(a){Ej(this);lC($wnd.history,Fj(this),'',$wnd.location.href);a.indexOf('#')!=-1||Rj(nc(jc(Nc,1),NE,84,15,[0,0]));++this.a;this.f.splice(this.a,this.f.length-this.a);this.g.splice(this.a,this.g.length-this.a)};_.Z=function Pj(a,b){var c,d;if(this.c){lC($wnd.history,Fj(this),'',$doc.location.href);this.c=false;return}Ej(this);c=xc(a.state);if(!c||!(bF in c)||!(cF in c)){jj&&($wnd.console.warn(hF),undefined);Jj(this);return}d=yC(c[cF]);if(!iE(d,this.b)){Ij(this,b);return}this.a=Lc(yC(c[bF]));Kj(this,b)};_._=function Qj(a){this.c=a};_.a=0;_.b=0;_.c=false;var ee=ZC(_E,'ScrollPositionHandler',26);di(126,26,{26:1},Sj);_.X=function Tj(a){};_.Y=function Uj(a){};_.Z=function Vj(a,b){};_._=function Wj(a){};var ld=ZC(_E,'DefaultRegistry/WebComponentScrollHandler',126);di(63,1,{63:1},ik);var Xj,Yj,Zj,$j=0;var yd=ZC(_E,'DependencyLoader',63);di(170,1,mF,mk);_.ab=function nk(a,b){Jm(this.a,a,sc(b,20))};var nd=ZC(_E,'DependencyLoader/0methodref$inlineStyleSheet$Type',170);var Xd=_C(_E,'ResourceLoader/ResourceLoadListener');di(166,1,nF,ok);_.bb=function pk(a){mj(\"'\"+a.a+\"' could not be loaded.\");jk()};_.cb=function qk(a){jk()};var od=ZC(_E,'DependencyLoader/1',166);di(171,1,mF,rk);_.ab=function sk(a,b){Mm(this.a,a,sc(b,20))};var pd=ZC(_E,'DependencyLoader/1methodref$loadStylesheet$Type',171);di(167,1,nF,tk);_.bb=function uk(a){mj(a.a+' could not be loaded.')};_.cb=function vk(a){};var qd=ZC(_E,'DependencyLoader/2',167);di(172,1,mF,wk);_.ab=function xk(a,b){Im(this.a,a,sc(b,20))};var rd=ZC(_E,'DependencyLoader/2methodref$inlineScript$Type',172);di(175,1,mF,yk);_.ab=function zk(a,b){Km(a,sc(b,20))};var sd=ZC(_E,'DependencyLoader/3methodref$loadDynamicImport$Type',175);var Nh=_C(LE,'Runnable');di(176,1,oF,Ak);_.K=function Bk(){jk()};var td=ZC(_E,'DependencyLoader/4methodref$endEagerDependencyLoading$Type',176);di(310,$wnd.Function,{},Ck);_.ab=function Dk(a,b){ck(this.a,this.b,a,b)};di(169,1,pF,Ek);_.F=function Fk(){dk(this.a)};var ud=ZC(_E,'DependencyLoader/lambda$1$Type',169);di(173,1,mF,Gk);_.ab=function Hk(a,b){_j();Lm(this.a,a,sc(b,20),true,qF)};var vd=ZC(_E,'DependencyLoader/lambda$2$Type',173);di(174,1,mF,Ik);_.ab=function Jk(a,b){_j();Lm(this.a,a,sc(b,20),true,'module')};var wd=ZC(_E,'DependencyLoader/lambda$3$Type',174);di(311,$wnd.Function,{},Kk);_.ab=function Lk(a,b){kk(this.a,a,b)};di(168,1,{},Mk);_.F=function Nk(){ek(this.a)};var xd=ZC(_E,'DependencyLoader/lambda$5$Type',168);di(312,$wnd.Function,{},Ok);_.ab=function Pk(a,b){sc(a,59).ab(zc(b),(_j(),Yj))};di(274,1,oF,Yk);_.K=function Zk(){OA(new $k(this.a,this.b))};var zd=ZC(_E,'ExecuteJavaScriptElementUtils/lambda$0$Type',274);var Xg=_C(uF,'FlushListener');di(273,1,vF,$k);_.db=function _k(){Uk(this.a,this.b)};var Ad=ZC(_E,'ExecuteJavaScriptElementUtils/lambda$1$Type',273);di(52,1,{52:1},cl);var Bd=ZC(_E,'ExistingElementMap',52);di(43,1,{43:1},ll);var Dd=ZC(_E,'InitialPropertiesHandler',43);di(313,$wnd.Function,{},nl);_.eb=function ol(a){il(this.a,this.b,a)};di(183,1,vF,pl);_.db=function ql(){el(this.a,this.b)};var Cd=ZC(_E,'InitialPropertiesHandler/lambda$1$Type',183);di(314,$wnd.Function,{},rl);_.ab=function sl(a,b){ml(this.a,a,b)};var vl;di(261,1,{},Tl);_.R=function Ul(a){return Sl(a)};var Ed=ZC(_E,'PolymerUtils/0methodref$createModelTree$Type',261);di(333,$wnd.Function,{},Vl);_.eb=function Wl(a){sc(a,40).Fb()};di(332,$wnd.Function,{},Xl);_.eb=function Yl(a){sc(a,17).K()};di(262,1,AF,Zl);_.fb=function $l(a){Ll(this.a,a)};var Fd=ZC(_E,'PolymerUtils/lambda$0$Type',262);di(263,1,{},_l);_.gb=function am(a){this.a.forEach(fi(Vl.prototype.eb,Vl,[]))};var Gd=ZC(_E,'PolymerUtils/lambda$1$Type',263);di(265,1,BF,bm);_.hb=function cm(a){Ml(this.a,this.b,a)};var Hd=ZC(_E,'PolymerUtils/lambda$2$Type',265);di(330,$wnd.Function,{},dm);_.ab=function em(a,b){Nl(this.a,this.b,a)};di(267,1,vF,fm);_.db=function gm(){zl(this.a,this.b)};var Id=ZC(_E,'PolymerUtils/lambda$4$Type',267);di(331,$wnd.Function,{},hm);_.eb=function im(a){this.a.push(xl(a))};di(82,1,vF,jm);_.db=function km(){Al(this.b,this.a)};var Jd=ZC(_E,'PolymerUtils/lambda$6$Type',82);di(264,1,CF,lm);_.ib=function mm(a){NA(new jm(this.a,this.b))};var Kd=ZC(_E,'PolymerUtils/lambda$7$Type',264);di(266,1,CF,nm);_.ib=function om(a){NA(new jm(this.a,this.b))};var Ld=ZC(_E,'PolymerUtils/lambda$8$Type',266);di(144,1,{},sm);var Od=ZC(_E,'PopStateHandler',144);di(146,1,{},tm);_.jb=function um(a){rm(this.a,a)};var Md=ZC(_E,'PopStateHandler/0methodref$onPopStateEvent$Type',146);di(145,1,DF,vm);_.kb=function wm(a){qm(this.a)};var Nd=ZC(_E,'PopStateHandler/lambda$0$Type',145);var xm;di(97,1,{},Bm);_.lb=function Cm(){return (new Date).getTime()};var Pd=ZC(_E,'Profiler/DefaultRelativeTimeSupplier',97);di(96,1,{},Dm);_.lb=function Em(){return $wnd.performance.now()};var Qd=ZC(_E,'Profiler/HighResolutionTimeSupplier',96);di(50,1,{50:1},Om);_.d=false;var be=ZC(_E,'ResourceLoader',50);di(159,1,{},Um);_.D=function Vm(){var a;a=Sm(this.d);if(Sm(this.d)>0){Gm(this.b,this.c);return false}else if(a==0){Fm(this.b,this.c);return true}else if(J(this.a)>60000){Fm(this.b,this.c);return false}else{return true}};var Sd=ZC(_E,'ResourceLoader/1',159);di(160,37,{},Wm);_.K=function Xm(){this.a.b.has(this.c)||Fm(this.a,this.b)};var Td=ZC(_E,'ResourceLoader/2',160);di(164,37,{},Ym);_.K=function Zm(){this.a.b.has(this.c)?Gm(this.a,this.b):Fm(this.a,this.b)};var Ud=ZC(_E,'ResourceLoader/3',164);di(165,1,nF,$m);_.bb=function _m(a){Fm(this.a,a)};_.cb=function an(a){Gm(this.a,a)};var Vd=ZC(_E,'ResourceLoader/4',165);di(55,1,{},bn);var Wd=ZC(_E,'ResourceLoader/ResourceLoadEvent',55);di(90,1,nF,cn);_.bb=function dn(a){Fm(this.a,a)};_.cb=function en(a){Gm(this.a,a)};var Yd=ZC(_E,'ResourceLoader/SimpleLoadListener',90);di(158,1,nF,fn);_.bb=function gn(a){Fm(this.a,a)};_.cb=function hn(a){var b;if((!dj&&(dj=new fj),dj).a.b||(!dj&&(dj=new fj),dj).a.f||(!dj&&(dj=new fj),dj).a.c){b=Sm(this.b);if(b==0){Fm(this.a,a);return}}Gm(this.a,a)};var Zd=ZC(_E,'ResourceLoader/StyleSheetLoadListener',158);di(161,1,{},jn);_.mb=function kn(){return this.a.call(null)};var $d=ZC(_E,'ResourceLoader/lambda$0$Type',161);di(162,1,oF,ln);_.K=function mn(){this.b.cb(this.a)};var _d=ZC(_E,'ResourceLoader/lambda$1$Type',162);di(163,1,oF,nn);_.K=function on(){this.b.bb(this.a)};var ae=ZC(_E,'ResourceLoader/lambda$2$Type',163);di(127,1,{},pn);_.jb=function qn(a){Hj(this.a)};var ce=ZC(_E,'ScrollPositionHandler/0methodref$onBeforeUnload$Type',127);di(128,1,DF,rn);_.kb=function sn(a){Gj(this.a,this.b,this.c)};_.b=0;_.c=0;var de=ZC(_E,'ScrollPositionHandler/lambda$0$Type',128);di(16,1,{16:1},zn);var ie=ZC(_E,'SystemErrorHandler',16);di(130,1,{},Cn);_.jb=function Dn(a){no(this.a)};var fe=ZC(_E,'SystemErrorHandler/lambda$0$Type',130);di(131,1,{},En);_.jb=function Fn(a){An(this.a,a)};var ge=ZC(_E,'SystemErrorHandler/lambda$1$Type',131);di(132,1,{},Gn);_.jb=function Hn(a){Bn(this.a)};var he=ZC(_E,'SystemErrorHandler/lambda$2$Type',132);di(118,115,{},Jn);_.a=0;var ke=ZC(_E,'TrackingScheduler',118);di(119,1,{},Kn);_.F=function Ln(){this.a.a--};var je=ZC(_E,'TrackingScheduler/lambda$0$Type',119);di(9,1,{9:1},On);var ne=ZC(_E,'UILifecycle',9);di(136,297,{},Qn);_.M=function Rn(a){sc(a,86).nb(this)};_.N=function Sn(){return Pn};var Pn=null;var le=ZC(_E,'UILifecycle/StateChangeEvent',136);di(53,1,HF);_.r=function Wn(a){return this===a};_.t=function Xn(){return zE(this)};_.u=function Yn(){return this.b!=null?this.b:''+this.c};_.c=0;var Bh=ZC(LE,'Enum',53);di(65,53,HF,co);var $n,_n,ao;var me=$C(_E,'UILifecycle/UIState',65,eo);di(296,1,NE);var jh=ZC(IF,'VaadinUriResolver',296);di(42,296,{42:1,4:1},jo);_.ob=function lo(a){return io(this,a)};var oe=ZC(_E,'URIResolver',42);var qo=false,ro;di(98,1,{},Bo);_.F=function Co(){xo(this.a)};var pe=ZC('com.vaadin.client.bootstrap','Bootstrapper/lambda$0$Type',98);di(91,1,{},To);_.pb=function Wo(a){this.f=(op(),mp);yn(sc(wj(sc(sc(wj(this.d,ye),14),66).c,ie),16),'','Client unexpectedly disconnected. Ensure client timeout is disabled.','',null,null)};_.qb=function Xo(a){this.f=(op(),lp);sc(wj(this.d,ye),14);jj&&($wnd.console.log('Push connection closed'),undefined)};_.rb=function Yo(a){this.f=(op(),mp);Cp(sc(sc(wj(this.d,ye),14),66),'Push connection using '+a[NF]+' failed!')};_.sb=function Zo(a){var b,c;c=a['responseBody'];b=ar(br(c));if(!b){Kp(sc(wj(this.d,ye),14),this,c);return}else{qj('Received push ('+this.g+') message: '+c);Oq(sc(wj(this.d,We),22),b)}};_.tb=function $o(a){qj('Push connection established using '+a[NF]);Qo(this,a)};_.ub=function _o(a,b){this.f==(op(),kp)&&(this.f=lp);Np(sc(wj(this.d,ye),14),this)};_.vb=function ap(a){qj('Push connection re-established using '+a[NF]);Qo(this,a)};_.wb=function bp(){rj('Push connection using primary method ('+this.a[NF]+') failed. Trying with '+this.a['fallbackTransport'])};var xe=ZC(PF,'AtmospherePushConnection',91);di(215,1,{},cp);_.F=function dp(){Ho(this.a)};var qe=ZC(PF,'AtmospherePushConnection/0methodref$connect$Type',215);di(217,1,nF,ep);_.bb=function fp(a){Op(sc(wj(this.a.d,ye),14),a.a)};_.cb=function gp(a){if(Vo()){qj(this.c+' loaded');Po(this.b.a)}else{Op(sc(wj(this.a.d,ye),14),a.a)}};var re=ZC(PF,'AtmospherePushConnection/1',217);di(212,1,{},jp);_.a=0;var se=ZC(PF,'AtmospherePushConnection/FragmentedMessage',212);di(56,53,HF,pp);var kp,lp,mp,np;var te=$C(PF,'AtmospherePushConnection/State',56,qp);di(214,1,QF,rp);_.nb=function sp(a){No(this.a,a)};var ue=ZC(PF,'AtmospherePushConnection/lambda$0$Type',214);di(321,$wnd.Function,{},tp);_.ab=function up(a,b){Oo(this.a,a,b)};di(216,1,pF,vp);_.F=function wp(){Po(this.a)};var ve=ZC(PF,'AtmospherePushConnection/lambda$2$Type',216);di(213,1,pF,xp);_.F=function yp(){};var we=ZC(PF,'AtmospherePushConnection/lambda$3$Type',213);var ye=_C(PF,'ConnectionStateHandler');di(66,1,{14:1,66:1},Vp);_.a=0;_.b=null;var Ee=ZC(PF,'DefaultConnectionStateHandler',66);di(189,37,{},Wp);_.K=function Xp(){this.a.d=null;Ap(this.a,this.b)};var ze=ZC(PF,'DefaultConnectionStateHandler/1',189);di(67,53,HF,bq);_.a=0;var Yp,Zp,$p;var Ae=$C(PF,'DefaultConnectionStateHandler/Type',67,cq);di(188,1,QF,dq);_.nb=function eq(a){Ip(this.a,a)};var Be=ZC(PF,'DefaultConnectionStateHandler/lambda$0$Type',188);di(190,1,{},fq);_.jb=function gq(a){Bp(this.a)};var Ce=ZC(PF,'DefaultConnectionStateHandler/lambda$1$Type',190);di(191,1,{},hq);_.jb=function iq(a){Jp(this.a)};var De=ZC(PF,'DefaultConnectionStateHandler/lambda$2$Type',191);di(49,1,{49:1},nq);_.a=-1;var Ie=ZC(PF,'Heartbeat',49);di(184,37,{},oq);_.K=function pq(){lq(this.a)};var Fe=ZC(PF,'Heartbeat/1',184);di(186,1,{},qq);_.xb=function rq(a,b){!b?Gp(sc(wj(this.a.b,ye),14),a):Fp(sc(wj(this.a.b,ye),14),b);kq(this.a)};_.yb=function sq(a){Hp(sc(wj(this.a.b,ye),14));kq(this.a)};var Ge=ZC(PF,'Heartbeat/2',186);di(185,1,QF,tq);_.nb=function uq(a){jq(this.a,a)};var He=ZC(PF,'Heartbeat/lambda$0$Type',185);di(138,1,{},yq);_.eb=function zq(a){hj('firstDelay',zD(a.a))};var Je=ZC(PF,'LoadingIndicatorConfigurator/0methodref$setFirstDelay$Type',138);di(139,1,{},Aq);_.eb=function Bq(a){hj('secondDelay',zD(a.a))};var Ke=ZC(PF,'LoadingIndicatorConfigurator/1methodref$setSecondDelay$Type',139);di(140,1,{},Cq);_.eb=function Dq(a){hj('thirdDelay',zD(a.a))};var Le=ZC(PF,'LoadingIndicatorConfigurator/2methodref$setThirdDelay$Type',140);di(141,1,CF,Eq);_.ib=function Fq(a){xq(hz(sc(a.e,27)))};var Me=ZC(PF,'LoadingIndicatorConfigurator/lambda$0$Type',141);di(142,1,CF,Gq);_.ib=function Hq(a){wq(this.b,this.a,a)};_.a=0;var Ne=ZC(PF,'LoadingIndicatorConfigurator/lambda$1$Type',142);di(22,1,{22:1},Zq);_.a=0;_.b='init';_.d=false;_.e=0;_.f=-1;_.i=null;_.m=0;var We=ZC(PF,'MessageHandler',22);di(152,1,pF,cr);_.F=function dr(){!Ry&&$wnd.Polymer!=null&&MD($wnd.Polymer.version.substr(0,'1.'.length),'1.')&&(Ry=true,jj&&($wnd.console.log('Polymer micro is now loaded, using Polymer DOM API'),undefined),Qy=new Ty,undefined)};var Oe=ZC(PF,'MessageHandler/0methodref$updateApiImplementation$Type',152);di(151,37,{},er);_.K=function fr(){Kq(this.a)};var Pe=ZC(PF,'MessageHandler/1',151);di(309,$wnd.Function,{},gr);_.eb=function hr(a){Iq(sc(a,6))};di(54,1,{54:1},ir);var Qe=ZC(PF,'MessageHandler/PendingUIDLMessage',54);di(153,1,pF,jr);_.F=function kr(){Vq(this.a,this.d,this.b,this.c)};_.c=0;var Re=ZC(PF,'MessageHandler/lambda$0$Type',153);di(155,1,vF,lr);_.db=function mr(){OA(new pr(this.a,this.b))};var Se=ZC(PF,'MessageHandler/lambda$1$Type',155);di(157,1,vF,nr);_.db=function or(){Sq(this.a)};var Te=ZC(PF,'MessageHandler/lambda$3$Type',157);di(154,1,vF,pr);_.db=function qr(){Tq(this.a,this.b)};var Ue=ZC(PF,'MessageHandler/lambda$4$Type',154);di(156,1,{},rr);_.F=function sr(){this.a.forEach(fi(gr.prototype.eb,gr,[]))};var Ve=ZC(PF,'MessageHandler/lambda$5$Type',156);di(24,1,{24:1},Br);_.a=0;var Ye=ZC(PF,'MessageSender',24);di(149,1,pF,Cr);_.F=function Dr(){ur(this.a)};var Xe=ZC(PF,'MessageSender/lambda$0$Type',149);di(133,1,CF,Gr);_.ib=function Hr(a){Er(this.a,a)};var Ze=ZC(PF,'PollConfigurator/lambda$0$Type',133);di(64,1,{64:1},Lr);_.zb=function Mr(){var a;a=sc(wj(this.b,Lf),8);Au(a,a.d,'ui-poll',null)};_.a=null;var af=ZC(PF,'Poller',64);di(135,37,{},Nr);_.K=function Or(){var a;a=sc(wj(this.a.b,Lf),8);Au(a,a.d,'ui-poll',null)};var $e=ZC(PF,'Poller/1',135);di(134,1,QF,Pr);_.nb=function Qr(a){Ir(this.a,a)};var _e=ZC(PF,'Poller/lambda$0$Type',134);di(36,1,{36:1},Ur);var ef=ZC(PF,'PushConfiguration',36);di(196,1,CF,Xr);_.ib=function Yr(a){Tr(this.a,a)};var bf=ZC(PF,'PushConfiguration/0methodref$onPushModeChange$Type',196);di(197,1,vF,Zr);_.db=function $r(){Ar(sc(wj(this.a.a,Ye),24),true)};var cf=ZC(PF,'PushConfiguration/lambda$0$Type',197);di(198,1,vF,_r);_.db=function as(){Ar(sc(wj(this.a.a,Ye),24),false)};var df=ZC(PF,'PushConfiguration/lambda$1$Type',198);di(315,$wnd.Function,{},bs);_.ab=function cs(a,b){Wr(this.a,a,b)};di(33,1,{33:1},ds);var gf=ZC(PF,'ReconnectConfiguration',33);di(137,1,pF,es);_.F=function fs(){zp(this.a)};var ff=ZC(PF,'ReconnectConfiguration/lambda$0$Type',137);di(12,1,{12:1},ls);_.b=false;var jf=ZC(PF,'RequestResponseTracker',12);di(150,1,{},ms);_.F=function ns(){js(this.a)};var hf=ZC(PF,'RequestResponseTracker/lambda$0$Type',150);di(211,297,{},os);_.M=function ps(a){Mc(a);null.cc()};_.N=function qs(){return null};var kf=ZC(PF,'RequestStartingEvent',211);di(129,297,{},ss);_.M=function ts(a){sc(a,85).kb(this)};_.N=function us(){return rs};var rs;var lf=ZC(PF,'ResponseHandlingEndedEvent',129);di(252,297,{},vs);_.M=function ws(a){Mc(a);null.cc()};_.N=function xs(){return null};var mf=ZC(PF,'ResponseHandlingStartedEvent',252);di(25,1,{25:1},Gs);_.Ab=function Hs(a,b,c){ys(this,a,b,c)};_.Bb=function Is(a,b,c){var d;d={};d[lF]='channel';d[_F]=Object(a);d['channel']=Object(b);d['args']=c;Cs(this,d)};var nf=ZC(PF,'ServerConnector',25);di(32,1,{32:1},Os);_.b=false;var Js;var rf=ZC(PF,'ServerRpcQueue',32);di(178,1,oF,Ps);_.K=function Qs(){Ms(this.a)};var of=ZC(PF,'ServerRpcQueue/0methodref$doFlush$Type',178);di(177,1,oF,Rs);_.K=function Ss(){Ks()};var pf=ZC(PF,'ServerRpcQueue/lambda$0$Type',177);di(179,1,{},Ts);_.F=function Us(){this.a.a.K()};var qf=ZC(PF,'ServerRpcQueue/lambda$1$Type',179);di(62,1,{62:1},Ws);_.b=false;var xf=ZC(PF,'XhrConnection',62);di(195,37,{},Ys);_.K=function Zs(){Xs(this.b)&&this.a.b&&mi(this,250)};var sf=ZC(PF,'XhrConnection/1',195);di(192,1,{},_s);_.xb=function at(a,b){var c;c=new gt(a,this.a);if(!b){Tp(sc(wj(this.c.a,ye),14),c);return}else{Rp(sc(wj(this.c.a,ye),14),c)}};_.yb=function bt(a){var b,c;qj('Server visit took '+zm(this.b)+'ms');c=a.responseText;b=ar(br(c));if(!b){Sp(sc(wj(this.c.a,ye),14),new gt(a,this.a));return}Up(sc(wj(this.c.a,ye),14));jj&&iC($wnd.console,'Received xhr message: '+c);Oq(sc(wj(this.c.a,We),22),b)};_.b=0;var tf=ZC(PF,'XhrConnection/XhrResponseHandler',192);di(193,1,{},ct);_.jb=function dt(a){this.a.b=true};var uf=ZC(PF,'XhrConnection/lambda$0$Type',193);di(194,1,DF,et);_.kb=function ft(a){this.a.b=false};var vf=ZC(PF,'XhrConnection/lambda$1$Type',194);di(94,1,{},gt);var wf=ZC(PF,'XhrConnectionError',94);di(51,1,{51:1},kt);var yf=ZC(cG,'ConstantPool',51);di(77,1,{77:1},st);_.Cb=function tt(){return sc(wj(this.a,cd),10).a};var Cf=ZC(cG,'ExecuteJavaScriptProcessor',77);di(181,1,{},ut);_.R=function vt(a){return OA(new yt(this.a,this.b)),PC(),true};var zf=ZC(cG,'ExecuteJavaScriptProcessor/lambda$0$Type',181);di(182,1,oF,wt);_.K=function xt(){rt(this.a)};var Af=ZC(cG,'ExecuteJavaScriptProcessor/lambda$1$Type',182);di(180,1,vF,yt);_.db=function zt(){nt(this.a,this.b)};var Bf=ZC(cG,'ExecuteJavaScriptProcessor/lambda$3$Type',180);di(271,1,{},Ct);var Ef=ZC(cG,'FragmentHandler',271);di(272,1,DF,Et);_.kb=function Ft(a){Bt(this.a)};var Df=ZC(cG,'FragmentHandler/0methodref$onResponseHandlingEnded$Type',272);di(270,1,{},Gt);var Ff=ZC(cG,'NodeUnregisterEvent',270);di(147,1,{},Pt);_.jb=function Qt(a){Kt(this.a,a)};var Gf=ZC(cG,'RouterLinkHandler/lambda$0$Type',147);di(148,1,pF,Rt);_.F=function St(){no(this.a)};var Hf=ZC(cG,'RouterLinkHandler/lambda$1$Type',148);di(6,1,{6:1},du);_.Db=function eu(){return Wt(this)};_.Eb=function fu(){return this.g};_.d=0;_.i=false;var Kf=ZC(cG,'StateNode',6);di(304,$wnd.Function,{},hu);_.ab=function iu(a,b){Zt(this.a,this.b,a,b)};di(305,$wnd.Function,{},ju);_.eb=function ku(a){gu(this.a,a)};var mh=_C('elemental.events','EventRemover');di(122,1,gG,lu);_.Fb=function mu(){$t(this.a,this.b)};var If=ZC(cG,'StateNode/lambda$2$Type',122);di(306,$wnd.Function,{},nu);_.eb=function ou(a){_t(this.a,a)};di(123,1,gG,pu);_.Fb=function qu(){au(this.a,this.b)};var Jf=ZC(cG,'StateNode/lambda$4$Type',123);di(8,1,{8:1},Gu);_.Gb=function Hu(){return this.d};_.Hb=function Ju(a,b,c,d){var e;if(vu(this,a)){e=xc(c);Fs(sc(wj(this.c,nf),25),a,b,e,d)}};_.e=false;var Lf=ZC(cG,'StateTree',8);di(307,$wnd.Function,{},Ku);_.eb=function Lu(a){Vt(sc(a,6),fi(Ou.prototype.ab,Ou,[]))};di(308,$wnd.Function,{},Mu);_.ab=function Nu(a,b){xu(this.a,a)};di(300,$wnd.Function,{},Ou);_.ab=function Pu(a,b){Iu(a,b)};var Xu,Yu;di(143,1,{},bv);var Mf=ZC(nG,'Binder/BinderContextImpl',143);var Nf=_C(nG,'BindingStrategy');di(83,1,{83:1},gv);_.b=false;_.g=0;var cv;var Qf=ZC(nG,'Debouncer',83);di(299,1,{});_.b=false;_.c=0;var rh=ZC(pG,'Timer',299);di(275,299,{},mv);var Of=ZC(nG,'Debouncer/1',275);di(276,299,{},nv);var Pf=ZC(nG,'Debouncer/2',276);di(268,1,{},rv);_.mb=function sv(){return Ev(this.a)};var Rf=ZC(nG,'ServerEventHandlerBinder/lambda$0$Type',268);di(269,1,AF,tv);_.fb=function uv(a){qv(this.b,this.a,this.c,a)};_.c=false;var Sf=ZC(nG,'ServerEventHandlerBinder/lambda$1$Type',269);var vv;di(218,1,{279:1},Aw);_.Ib=function Bw(a,b,c){Mv(this,a,b,c)};_.Jb=function Ew(a){return Wv(a)};_.Lb=function Iw(a,b){var c,d,e;d=Object.keys(a);e=new ny(d,a,b);c=sc(b.e.get(Uf),68);!c?qw(e.b,e.a,e.c):(c.a=e)};_.Mb=function Jw(r,s){var t=this;var u=s._propertiesChanged;u&&(s._propertiesChanged=function(a,b,c){HE(function(){t.Lb(b,r)})();u.apply(this,arguments)});var v=r.Eb();var w=s.ready;s.ready=function(){w.apply(this,arguments);Bl(s);var q=function(){var o=s.root.querySelector(wG);if(o){s.removeEventListener(xG,q)}else{return}if(!o.constructor.prototype.$propChangedModified){o.constructor.prototype.$propChangedModified=true;var p=o.constructor.prototype._propertiesChanged;o.constructor.prototype._propertiesChanged=function(a,b,c){p.apply(this,arguments);var d=Object.getOwnPropertyNames(b);var e='items.';var f;for(f=0;f<d.length;f++){var g=d[f].indexOf(e);if(g==0){var h=d[f].substr(e.length);g=h.indexOf('.');if(g>0){var i=h.substr(0,g);var j=h.substr(g+1);var k=a.items[i];if(k&&k.nodeId){var l=k.nodeId;var m=k[j];var n=this.__dataHost;while(!n.localName||n.__dataHost){n=n.__dataHost}HE(function(){Hw(l,n,j,m,v)})()}}}}}}};s.root&&s.root.querySelector(wG)?q():s.addEventListener(xG,q)}};_.Kb=function Kw(a){if(a.c.has(0)){return true}return !!a.g&&C(a,a.g.d)};var Gv,Hv;var xg=ZC(nG,'SimpleElementBindingStrategy',218);di(326,$wnd.Function,{},Zw);_.eb=function $w(a){sc(a,40).Fb()};di(329,$wnd.Function,{},_w);_.eb=function ax(a){sc(a,17).K()};di(92,1,{},bx);var Tf=ZC(nG,'SimpleElementBindingStrategy/BindingContext',92);di(68,1,{68:1},cx);var Uf=ZC(nG,'SimpleElementBindingStrategy/InitialPropertyUpdate',68);di(219,1,{},dx);_.Nb=function ex(a){ew(this.a,a)};var Vf=ZC(nG,'SimpleElementBindingStrategy/lambda$0$Type',219);di(220,1,{},fx);_.Nb=function gx(a){fw(this.a,a)};var Wf=ZC(nG,'SimpleElementBindingStrategy/lambda$1$Type',220);di(231,1,vF,hx);_.db=function ix(){gw(this.b,this.c,this.a)};var Xf=ZC(nG,'SimpleElementBindingStrategy/lambda$10$Type',231);di(232,1,pF,jx);_.F=function kx(){this.b.Nb(this.a)};var Yf=ZC(nG,'SimpleElementBindingStrategy/lambda$11$Type',232);di(233,1,pF,lx);_.F=function mx(){this.a[this.b]=xl(this.c)};var Zf=ZC(nG,'SimpleElementBindingStrategy/lambda$12$Type',233);di(235,1,AF,nx);_.fb=function ox(a){hw(this.a,a)};var $f=ZC(nG,'SimpleElementBindingStrategy/lambda$13$Type',235);di(237,1,AF,px);_.fb=function qx(a){iw(this.a,a)};var _f=ZC(nG,'SimpleElementBindingStrategy/lambda$14$Type',237);di(238,1,oF,rx);_.K=function sx(){bw(this.a,this.b,this.c,false)};var ag=ZC(nG,'SimpleElementBindingStrategy/lambda$15$Type',238);di(239,1,oF,tx);_.K=function ux(){bw(this.a,this.b,this.c,false)};var bg=ZC(nG,'SimpleElementBindingStrategy/lambda$16$Type',239);di(240,1,oF,vx);_.K=function wx(){dw(this.a,this.b,this.c,false)};var cg=ZC(nG,'SimpleElementBindingStrategy/lambda$17$Type',240);di(241,1,{},xx);_.mb=function yx(){return Lw(this.a,this.b)};var dg=ZC(nG,'SimpleElementBindingStrategy/lambda$18$Type',241);di(242,1,{},zx);_.mb=function Ax(){return Mw(this.a,this.b)};var eg=ZC(nG,'SimpleElementBindingStrategy/lambda$19$Type',242);di(221,1,{},Bx);_.Nb=function Cx(a){jw(this.a,a)};var fg=ZC(nG,'SimpleElementBindingStrategy/lambda$2$Type',221);di(323,$wnd.Function,{},Dx);_.ab=function Ex(a,b){CA(sc(a,44))};di(324,$wnd.Function,{},Fx);_.eb=function Gx(a){Nw(this.a,a)};di(325,$wnd.Function,{},Hx);_.ab=function Ix(a,b){sc(a,40).Fb()};di(327,$wnd.Function,{},Jx);_.ab=function Kx(a,b){kw(this.a,a)};di(243,1,BF,Lx);_.hb=function Mx(a){lw(this.a,a)};var gg=ZC(nG,'SimpleElementBindingStrategy/lambda$25$Type',243);di(244,1,pF,Nx);_.F=function Ox(){mw(this.b,this.a,this.c)};var hg=ZC(nG,'SimpleElementBindingStrategy/lambda$26$Type',244);di(245,1,{},Px);_.jb=function Qx(a){nw(this.a,a)};var ig=ZC(nG,'SimpleElementBindingStrategy/lambda$27$Type',245);di(328,$wnd.Function,{},Rx);_.eb=function Sx(a){ow(this.a,this.b,a)};di(246,1,{},Ux);_.eb=function Vx(a){Tx(this,a)};var jg=ZC(nG,'SimpleElementBindingStrategy/lambda$29$Type',246);di(222,1,{},Wx);_.gb=function Xx(a){rw(this.c,this.b,this.a)};var kg=ZC(nG,'SimpleElementBindingStrategy/lambda$3$Type',222);di(247,1,AF,Yx);_.fb=function Zx(a){Pw(this.a,a)};var lg=ZC(nG,'SimpleElementBindingStrategy/lambda$30$Type',247);di(248,1,{},$x);_.mb=function _x(){return this.a.b};var mg=ZC(nG,'SimpleElementBindingStrategy/lambda$31$Type',248);di(223,1,{},ay);_.F=function by(){Qw(this.a)};var ng=ZC(nG,'SimpleElementBindingStrategy/lambda$32$Type',223);di(225,1,{},cy);_.mb=function dy(){return this.a[this.b]};var og=ZC(nG,'SimpleElementBindingStrategy/lambda$33$Type',225);di(227,1,vF,ey);_.db=function fy(){Lv(this.a)};var pg=ZC(nG,'SimpleElementBindingStrategy/lambda$34$Type',227);di(234,1,vF,gy);_.db=function hy(){_v(this.b,this.a)};var qg=ZC(nG,'SimpleElementBindingStrategy/lambda$35$Type',234);di(236,1,vF,iy);_.db=function jy(){pw(this.b,this.a)};var rg=ZC(nG,'SimpleElementBindingStrategy/lambda$36$Type',236);di(224,1,vF,ky);_.db=function ly(){Rw(this.a)};var sg=ZC(nG,'SimpleElementBindingStrategy/lambda$4$Type',224);di(226,1,oF,ny);_.K=function oy(){my(this)};var tg=ZC(nG,'SimpleElementBindingStrategy/lambda$5$Type',226);di(228,1,BF,py);_.hb=function qy(a){NA(new ey(this.a))};var ug=ZC(nG,'SimpleElementBindingStrategy/lambda$6$Type',228);di(322,$wnd.Function,{},ry);_.ab=function sy(a,b){Sw(this.b,this.a,a)};di(229,1,BF,ty);_.hb=function uy(a){Tw(this.b,this.a,a)};var vg=ZC(nG,'SimpleElementBindingStrategy/lambda$8$Type',229);di(230,1,CF,vy);_.ib=function wy(a){xw(this.c,this.b,this.a)};var wg=ZC(nG,'SimpleElementBindingStrategy/lambda$9$Type',230);di(249,1,{279:1},By);_.Ib=function Cy(a,b,c){zy(a,b)};_.Jb=function Dy(a){return $doc.createTextNode('')};_.Kb=function Ey(a){return a.c.has(7)};var xy;var Ag=ZC(nG,'TextBindingStrategy',249);di(250,1,pF,Fy);_.F=function Gy(){yy();cC(this.a,zc(ez(this.b)))};var yg=ZC(nG,'TextBindingStrategy/lambda$0$Type',250);di(251,1,{},Hy);_.gb=function Iy(a){Ay(this.b,this.a)};var zg=ZC(nG,'TextBindingStrategy/lambda$1$Type',251);di(303,$wnd.Function,{},Ny);_.eb=function Oy(a){this.a.add(a)};var Qy,Ry=false;di(260,1,{},Ty);var Bg=ZC('com.vaadin.client.flow.dom','PolymerDomApiImpl',260);di(69,1,{69:1},Uy);var Cg=ZC('com.vaadin.client.flow.model','UpdatableModelProperties',69);di(334,$wnd.Function,{},Vy);_.eb=function Wy(a){this.a.add(zc(a))};di(80,1,{});_.Ob=function Yy(){return this.e};var ah=ZC(uF,'ReactiveValueChangeEvent',80);di(45,80,{45:1},Zy);_.Ob=function $y(){return sc(this.e,28)};_.b=false;_.c=0;var Dg=ZC(yG,'ListSpliceEvent',45);di(27,1,{27:1},nz);_.Pb=function oz(a){return qz(this.a,a)};_.b=false;_.c=false;_.d=false;var _y;var Mg=ZC(yG,'MapProperty',27);di(78,1,{});var _g=ZC(uF,'ReactiveEventRouter',78);di(203,78,{},wz);_.Qb=function xz(a,b){sc(a,41).ib(sc(b,70))};_.Rb=function yz(a){return new zz(a)};var Fg=ZC(yG,'MapProperty/1',203);di(204,1,CF,zz);_.ib=function Az(a){AA(this.a)};var Eg=ZC(yG,'MapProperty/1/0methodref$onValueChange$Type',204);di(202,1,oF,Bz);_.K=function Cz(){az()};var Gg=ZC(yG,'MapProperty/lambda$0$Type',202);di(205,1,vF,Dz);_.db=function Ez(){this.a.d=false};var Hg=ZC(yG,'MapProperty/lambda$1$Type',205);di(206,1,vF,Fz);_.db=function Gz(){this.a.d=false};var Ig=ZC(yG,'MapProperty/lambda$2$Type',206);di(207,1,oF,Hz);_.K=function Iz(){jz(this.a,this.b)};var Jg=ZC(yG,'MapProperty/lambda$3$Type',207);di(81,80,{81:1},Jz);_.Ob=function Kz(){return sc(this.e,39)};var Kg=ZC(yG,'MapPropertyAddEvent',81);di(70,80,{70:1},Lz);_.Ob=function Mz(){return sc(this.e,27)};var Lg=ZC(yG,'MapPropertyChangeEvent',70);di(38,1,{38:1});_.d=0;var Ng=ZC(yG,'NodeFeature',38);di(28,38,{38:1,28:1},Uz);_.Pb=function Vz(a){return qz(this.a,a)};_.Sb=function Wz(a){var b,c,d;c=[];for(b=0;b<this.c.length;b++){d=this.c[b];c[c.length]=xl(d)}return c};_.Tb=function Xz(){var a,b,c,d;b=[];for(a=0;a<this.c.length;a++){d=this.c[a];c=Nz(d);b[b.length]=c}return b};_.b=false;var Qg=ZC(yG,'NodeList',28);di(256,78,{},Yz);_.Qb=function Zz(a,b){sc(a,60).fb(sc(b,45))};_.Rb=function $z(a){return new _z(a)};var Pg=ZC(yG,'NodeList/1',256);di(257,1,AF,_z);_.fb=function aA(a){AA(this.a)};var Og=ZC(yG,'NodeList/1/0methodref$onValueChange$Type',257);di(39,38,{38:1,39:1},gA);_.Pb=function hA(a){return qz(this.a,a)};_.Sb=function iA(a){var b;b={};this.b.forEach(fi(uA.prototype.ab,uA,[a,b]));return b};_.Tb=function jA(){var a,b;a={};this.b.forEach(fi(sA.prototype.ab,sA,[a]));if((b=BC(a),b).length==0){return null}return a};var Tg=ZC(yG,'NodeMap',39);di(199,78,{},lA);_.Qb=function mA(a,b){sc(a,72).hb(sc(b,81))};_.Rb=function nA(a){return new oA(a)};var Sg=ZC(yG,'NodeMap/1',199);di(200,1,BF,oA);_.hb=function pA(a){AA(this.a)};var Rg=ZC(yG,'NodeMap/1/0methodref$onValueChange$Type',200);di(316,$wnd.Function,{},qA);_.ab=function rA(a,b){this.a.push(zc(b))};di(317,$wnd.Function,{},sA);_.ab=function tA(a,b){fA(this.a,a,b)};di(318,$wnd.Function,{},uA);_.ab=function vA(a,b){kA(this.a,this.b,a,b)};di(208,1,{});_.d=false;_.e=false;var Wg=ZC(uF,'Computation',208);di(209,1,vF,DA);_.db=function EA(){BA(this.a)};var Ug=ZC(uF,'Computation/0methodref$recompute$Type',209);di(210,1,pF,FA);_.F=function GA(){this.a.a.F()};var Vg=ZC(uF,'Computation/1methodref$doRecompute$Type',210);di(320,$wnd.Function,{},HA);_.eb=function IA(a){SA(sc(a,79).a)};var JA=null,KA,LA=false,MA;di(44,208,{44:1},RA);var Yg=ZC(uF,'Reactive/1',44);di(201,1,gG,TA);_.Fb=function UA(){SA(this)};var Zg=ZC(uF,'ReactiveEventRouter/lambda$0$Type',201);di(79,1,{79:1},VA);var $g=ZC(uF,'ReactiveEventRouter/lambda$1$Type',79);di(319,$wnd.Function,{},WA);_.eb=function XA(a){tz(this.a,this.b,a)};di(93,298,{},jB);_.b=0;var gh=ZC(AG,'SimpleEventBus',93);var bh=_C(AG,'SimpleEventBus/Command');di(253,1,{},lB);var dh=ZC(AG,'SimpleEventBus/lambda$0$Type',253);di(254,1,{280:1},mB);_.F=function nB(){bB(this.a,this.d,this.c,this.b)};var eh=ZC(AG,'SimpleEventBus/lambda$1$Type',254);di(255,1,{280:1},oB);_.F=function pB(){eB(this.a,this.d,this.c,this.b)};var fh=ZC(AG,'SimpleEventBus/lambda$2$Type',255);di(187,1,{},sB);_.L=function tB(a){if(a.readyState==4){if(a.status==200){this.a.yb(a);vi(a);return}this.a.xb(a,null);vi(a)}};var hh=ZC('com.vaadin.client.gwt.elemental.js.util','Xhr/Handler',187);di(259,1,NE,CB);_.a=-1;_.b=false;_.c=false;_.d=false;_.e=false;_.f=false;_.g=false;_.h=false;_.i=false;_.j=false;_.k=false;_.l=false;var ih=ZC(IF,'BrowserDetails',259);di(46,53,HF,JB);var EB,FB,GB,HB;var kh=$C(GG,'Dependency/Type',46,KB);var LB;di(57,53,HF,RB);var NB,OB,PB;var lh=$C(GG,'LoadMode',57,SB);di(100,1,gG,eC);_.Fb=function fC(){XB(this.b,this.c,this.a,this.d)};_.d=false;var nh=ZC('elemental.js.dom','JsElementalMixinBase/Remover',100);di(258,21,QE,CC);var oh=ZC('elemental.json','JsonException',258);di(277,1,{},DC);_.Ub=function EC(){lv(this.a)};var ph=ZC(pG,'Timer/1',277);di(278,1,{},FC);_.Ub=function GC(){Tx(this.a.a.f,oG)};var qh=ZC(pG,'Timer/2',278);di(294,1,{});var th=ZC(HG,'OutputStream',294);di(295,294,{});var sh=ZC(HG,'FilterOutputStream',295);di(110,295,{},HC);var uh=ZC(HG,'PrintStream',110);di(75,1,{95:1});_.u=function JC(){return this.a};var vh=ZC(LE,'AbstractStringBuilder',75);di(73,5,{4:1,5:1});var Ch=ZC(LE,'Error',73);di(3,73,{4:1,3:1,5:1},LC,MC);var wh=ZC(LE,'AssertionError',3);oc={4:1,101:1,30:1};var NC,OC;var xh=ZC(LE,'Boolean',101);di(103,21,QE,mD);var yh=ZC(LE,'ClassCastException',103);di(291,1,NE);var nD;var Lh=ZC(LE,'Number',291);pc={4:1,30:1,102:1};var Ah=ZC(LE,'Double',102);di(15,21,QE,tD);var Eh=ZC(LE,'IllegalArgumentException',15);di(35,21,QE,uD);var Fh=ZC(LE,'IllegalStateException',35);di(108,21,QE);var Gh=ZC(LE,'IndexOutOfBoundsException',108);di(31,291,{4:1,30:1,31:1},vD);_.r=function wD(a){return Cc(a,31)&&sc(a,31).a==this.a};_.t=function xD(){return this.a};_.u=function yD(){return ''+this.a};_.a=0;var Hh=ZC(LE,'Integer',31);var AD;di(439,1,{});di(61,47,QE,CD,DD,ED);_.w=function FD(a){return new TypeError(a)};var Jh=ZC(LE,'NullPointerException',61);di(48,15,QE,GD);var Kh=ZC(LE,'NumberFormatException',48);di(29,1,{4:1,29:1},HD);_.r=function ID(a){var b;if(Cc(a,29)){b=sc(a,29);return this.c==b.c&&this.d==b.d&&this.a==b.a&&this.b==b.b}return false};_.t=function JD(){return hE(nc(jc(Mh,1),NE,1,5,[zD(this.c),this.a,this.d,this.b]))};_.u=function KD(){return this.a+'.'+this.d+'('+(this.b!=null?this.b:'Unknown Source')+(this.c>=0?':'+this.c:'')+')'};_.c=0;var Ph=ZC(LE,'StackTraceElement',29);qc={4:1,95:1,30:1,2:1};var Sh=ZC(LE,'String',2);di(76,75,{95:1},bE,cE,dE);var Qh=ZC(LE,'StringBuilder',76);di(109,108,QE,eE);var Rh=ZC(LE,'StringIndexOutOfBoundsException',109);di(443,1,{});var fE;di(58,1,{58:1},nE);_.r=function oE(a){var b;if(a===this){return true}if(!Cc(a,58)){return false}b=sc(a,58);return iE(this.a,b.a)};_.t=function pE(){return jE(this.a)};_.u=function rE(){return this.a!=null?'Optional.of('+$D(this.a)+')':'Optional.empty()'};var kE;var Uh=ZC('java.util','Optional',58);di(441,1,{});di(438,1,{});var yE=0;var AE,BE=0,CE;var Nc=aD('double','D');var HE=(rb(),ub);var gwtOnLoad=gwtOnLoad=_h;Zh(ji);ai('permProps',[[[JG,'gecko1_8']],[[JG,'safari']]]);if (client) client.onScriptLoad(gwtOnLoad);})();\n};"
    }
   ]
  }
 ],
 "modules": [
  {
   "id": 185,
   "name": "../target/frontend/generated-flow-imports.js + 6 modules",
   "modules": [
    {
     "name": "../target/frontend/generated-flow-imports.js",
     "source": "export const addCssBlock = function(block, before = false) {\n const tpl = document.createElement('template');\n tpl.innerHTML = block;\n document.head[before ? 'insertBefore' : 'appendChild'](tpl.content, document.head.firstChild);\n};\n\naddCssBlock('<custom-style><style include=\"lumo-color lumo-typography\"></style></custom-style>', true);\n\nimport '@vaadin/flow-frontend/ConnectionIndicator.js';\nimport '@vaadin/flow-frontend/contextMenuConnector.js';\nimport '@vaadin/flow-frontend/dndConnector-es6.js';\nimport '@vaadin/flow-frontend/flow-component-renderer.js';\nimport '@vaadin/flow-frontend/gridConnector.js';\nimport '@vaadin/flow-frontend/vaadin-grid-flow-selection-column.js';\nimport '@vaadin/vaadin-button/theme/lumo/vaadin-button.js';\nimport '@vaadin/vaadin-checkbox/theme/lumo/vaadin-checkbox.js';\nimport '@vaadin/vaadin-context-menu/theme/lumo/vaadin-context-menu.js';\nimport '@vaadin/vaadin-dialog/theme/lumo/vaadin-dialog.js';\nimport '@vaadin/vaadin-grid/theme/lumo/vaadin-grid-column-group.js';\nimport '@vaadin/vaadin-grid/theme/lumo/vaadin-grid-column.js';\nimport '@vaadin/vaadin-grid/theme/lumo/vaadin-grid-sorter.js';\nimport '@vaadin/vaadin-grid/theme/lumo/vaadin-grid.js';\nimport '@vaadin/vaadin-icons/vaadin-icons.js';\nimport '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/icons.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport '@vaadin/vaadin-ordered-layout/theme/lumo/vaadin-horizontal-layout.js';\nimport '@vaadin/vaadin-ordered-layout/theme/lumo/vaadin-vertical-layout.js';\nimport '@vaadin/vaadin-text-field/theme/lumo/vaadin-text-field.js';\nlet thisScript;\nconst elements = document.getElementsByTagName('script');\nfor (let i = 0; i < elements.length; i++) {\n const script = elements[i];\n if (script.getAttribute('type')=='module' && script.getAttribute('data-app-id') && !script['vaadin-bundle']) {\n  thisScript = script;\n  break;\n }\n}\nif (!thisScript) {\n throw new Error('Could not find the bundle script to identify the application id');\n}\nthisScript['vaadin-bundle'] = true;\nif (!window.Vaadin.Flow.fallbacks) { window.Vaadin.Flow.fallbacks={}; }\nconst fallbacks = window.Vaadin.Flow.fallbacks;\nfallbacks[thisScript.getAttribute('data-app-id')] = {}\nfallbacks[thisScript.getAttribute('data-app-id')].loadFallback = function loadFallback() {\n return import('./generated-flow-imports-fallback.js');\n}"
    },
    {
     "name": "../target/flow-frontend/ConnectionIndicator.js",
     "source": "/*\n * Copyright 2000-2020 Vaadin Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { css, html, LitElement, property } from 'lit-element';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { ConnectionState } from './ConnectionState';\nconst DEFAULT_STYLE_ID = 'css-loading-indicator';\n/**\n * Component showing loading and connection indicator. When added to DOM,\n * listens for changes on `window.Vaadin.connectionState` ConnectionStateStore.\n */\nexport class ConnectionIndicator extends LitElement {\n    constructor() {\n        super();\n        /**\n         * The delay before showing the loading indicator, in ms.\n         */\n        this.firstDelay = 300;\n        /**\n         * The delay before the loading indicator goes into \"second\" state, in ms.\n         */\n        this.secondDelay = 1500;\n        /**\n         * The delay before the loading indicator goes into \"third\" state, in ms.\n         */\n        this.thirdDelay = 5000;\n        /**\n         * The duration for which the connection state change message is visible,\n         * in ms.\n         */\n        this.expandedDuration = 2000;\n        /**\n         * The message shown when the connection goes to connected state.\n         */\n        this.onlineText = 'Online';\n        /**\n         * The message shown when the connection goes to lost state.\n         */\n        this.offlineText = 'Connection lost';\n        /**\n         * The message shown when the connection goes to reconnecting state.\n         */\n        this.reconnectingText = 'Connection lost, trying to reconnect...';\n        this.offline = false;\n        this.reconnecting = false;\n        this.expanded = false;\n        this.loading = false;\n        this.loadingBarState = \"\" /* IDLE */;\n        this.applyDefaultThemeState = true;\n        this.firstTimeout = 0;\n        this.secondTimeout = 0;\n        this.thirdTimeout = 0;\n        this.expandedTimeout = 0;\n        this.lastMessageState = ConnectionState.CONNECTED;\n        this.connectionStateListener = () => {\n            this.expanded = this.updateConnectionState();\n            this.expandedTimeout = this.timeoutFor(this.expandedTimeout, this.expanded, () => (this.expanded = false), this.expandedDuration);\n        };\n    }\n    /**\n     * Initialize global connection indicator instance at window.Vaadin.connectionIndicator\n     * and add instance to the document body.\n     */\n    static create() {\n        var _a, _b;\n        const $wnd = window;\n        if (!((_a = $wnd.Vaadin) === null || _a === void 0 ? void 0 : _a.connectionIndicator)) {\n            $wnd.Vaadin = $wnd.Vaadin || {};\n            $wnd.Vaadin.connectionIndicator = document.createElement('vaadin-connection-indicator');\n            document.body.appendChild($wnd.Vaadin.connectionIndicator);\n        }\n        return (_b = $wnd.Vaadin) === null || _b === void 0 ? void 0 : _b.connectionIndicator;\n    }\n    render() {\n        return html `\n      <div class=\"v-loading-indicator ${this.loadingBarState}\" style=\"${this.getLoadingBarStyle()}\"></div>\n\n      <div\n        class=\"v-status-message ${classMap({\n            active: this.reconnecting\n        })}\"\n      >\n        <span class=\"text\"> ${this.renderMessage()} </span>\n      </div>\n    `;\n    }\n    connectedCallback() {\n        var _a;\n        super.connectedCallback();\n        const $wnd = window;\n        if ((_a = $wnd.Vaadin) === null || _a === void 0 ? void 0 : _a.connectionState) {\n            this.connectionStateStore = $wnd.Vaadin.connectionState;\n            this.connectionStateStore.addStateChangeListener(this.connectionStateListener);\n            this.updateConnectionState();\n        }\n        this.updateTheme();\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        if (this.connectionStateStore) {\n            this.connectionStateStore.removeStateChangeListener(this.connectionStateListener);\n        }\n        this.updateTheme();\n    }\n    get applyDefaultTheme() {\n        return this.applyDefaultThemeState;\n    }\n    set applyDefaultTheme(applyDefaultTheme) {\n        if (applyDefaultTheme !== this.applyDefaultThemeState) {\n            this.applyDefaultThemeState = applyDefaultTheme;\n            this.updateTheme();\n        }\n    }\n    createRenderRoot() {\n        return this;\n    }\n    /**\n     * Update state flags.\n     *\n     * @return true if the connection message changes, and therefore a new\n     * message should be shown\n     */\n    updateConnectionState() {\n        var _a;\n        const state = (_a = this.connectionStateStore) === null || _a === void 0 ? void 0 : _a.state;\n        this.offline = state === ConnectionState.CONNECTION_LOST;\n        this.reconnecting = state === ConnectionState.RECONNECTING;\n        this.updateLoading(state === ConnectionState.LOADING);\n        if (this.loading) {\n            // Entering loading state, do not show message\n            return false;\n        }\n        if (state !== this.lastMessageState) {\n            this.lastMessageState = state;\n            // Message changes, show new message\n            return true;\n        }\n        // Message did not change\n        return false;\n    }\n    updateLoading(loading) {\n        this.loading = loading;\n        this.loadingBarState = \"\" /* IDLE */;\n        this.firstTimeout = this.timeoutFor(this.firstTimeout, loading, () => (this.loadingBarState = \"first\" /* FIRST */), this.firstDelay);\n        this.secondTimeout = this.timeoutFor(this.secondTimeout, loading, () => (this.loadingBarState = \"second\" /* SECOND */), this.secondDelay);\n        this.thirdTimeout = this.timeoutFor(this.thirdTimeout, loading, () => (this.loadingBarState = \"third\" /* THIRD */), this.thirdDelay);\n    }\n    renderMessage() {\n        if (this.reconnecting) {\n            return this.reconnectingText;\n        }\n        if (this.offline) {\n            return this.offlineText;\n        }\n        return this.onlineText;\n    }\n    updateTheme() {\n        if (this.applyDefaultThemeState && this.isConnected) {\n            if (!document.getElementById(DEFAULT_STYLE_ID)) {\n                const style = document.createElement('style');\n                style.id = DEFAULT_STYLE_ID;\n                style.textContent = this.getDefaultStyle().cssText;\n                document.head.appendChild(style);\n            }\n        }\n        else {\n            const style = document.getElementById(DEFAULT_STYLE_ID);\n            if (style) {\n                document.head.removeChild(style);\n            }\n        }\n    }\n    getDefaultStyle() {\n        return css `\n      @keyframes v-progress-start {\n        0% {\n          width: 0%;\n        }\n        100% {\n          width: 50%;\n        }\n      }\n      @keyframes v-progress-delay {\n        0% {\n          width: 50%;\n        }\n        100% {\n          width: 90%;\n        }\n      }\n      @keyframes v-progress-wait {\n        0% {\n          width: 90%;\n          height: 4px;\n        }\n        3% {\n          width: 91%;\n          height: 7px;\n        }\n        100% {\n          width: 96%;\n          height: 7px;\n        }\n      }\n      @keyframes v-progress-wait-pulse {\n        0% {\n          opacity: 1;\n        }\n        50% {\n          opacity: 0.1;\n        }\n        100% {\n          opacity: 1;\n        }\n      }\n      .v-loading-indicator,\n      .v-status-message {\n        position: fixed;\n        z-index: 251;\n        left: 0;\n        right: auto;\n        top: 0;\n        background-color: var(--lumo-primary-color, var(--material-primary-color, blue));\n        transition: none;\n      }\n      .v-loading-indicator {\n        width: 50%;\n        height: 4px;\n        opacity: 1;\n        pointer-events: none;\n        animation: v-progress-start 1000ms 200ms both;\n      }\n      .v-loading-indicator[style*='none'] {\n        display: block !important;\n        width: 100%;\n        opacity: 0;\n        animation: none;\n        transition: opacity 500ms 300ms, width 300ms;\n      }\n      .v-loading-indicator.second {\n        width: 90%;\n        animation: v-progress-delay 3.8s forwards;\n      }\n      .v-loading-indicator.third {\n        width: 96%;\n        animation: v-progress-wait 5s forwards, v-progress-wait-pulse 1s 4s infinite backwards;\n      }\n\n      vaadin-connection-indicator[offline] .v-loading-indicator,\n      vaadin-connection-indicator[reconnecting] .v-loading-indicator {\n        display: none;\n      }\n\n      .v-status-message {\n        opacity: 0;\n        width: 100%;\n        max-height: var(--status-height-collapsed, 8px);\n        overflow: hidden;\n        background-color: var(--status-bg-color-online, var(--lumo-primary-color, var(--material-primary-color, blue)));\n        color: var(\n          --status-text-color-online,\n          var(--lumo-primary-contrast-color, var(--material-primary-contrast-color, #fff))\n        );\n        font-size: 0.75rem;\n        font-weight: 600;\n        line-height: 1;\n        transition: all 0.5s;\n        padding: 0 0.5em;\n      }\n\n      vaadin-connection-indicator[offline] .v-status-message,\n      vaadin-connection-indicator[reconnecting] .v-status-message {\n        opacity: 1;\n        background-color: var(--status-bg-color-offline, var(--lumo-shade, #333));\n        color: var(\n          --status-text-color-offline,\n          var(--lumo-primary-contrast-color, var(--material-primary-contrast-color, #fff))\n        );\n        background-image: repeating-linear-gradient(\n          45deg,\n          rgba(255, 255, 255, 0),\n          rgba(255, 255, 255, 0) 10px,\n          rgba(255, 255, 255, 0.1) 10px,\n          rgba(255, 255, 255, 0.1) 20px\n        );\n      }\n\n      vaadin-connection-indicator[reconnecting] .v-status-message {\n        animation: show-reconnecting-status 2s;\n      }\n\n      vaadin-connection-indicator[offline] .v-status-message:hover,\n      vaadin-connection-indicator[reconnecting] .v-status-message:hover,\n      vaadin-connection-indicator[expanded] .v-status-message {\n        max-height: var(--status-height, 1.75rem);\n      }\n\n      vaadin-connection-indicator[expanded] .v-status-message {\n        opacity: 1;\n      }\n\n      .v-status-message span {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: var(--status-height, 1.75rem);\n      }\n\n      vaadin-connection-indicator[reconnecting] .v-status-message span::before {\n        content: '';\n        width: 1em;\n        height: 1em;\n        border-top: 2px solid\n          var(--status-spinner-color, var(--lumo-primary-color, var(--material-primary-color, blue)));\n        border-left: 2px solid\n          var(--status-spinner-color, var(--lumo-primary-color, var(--material-primary-color, blue)));\n        border-right: 2px solid transparent;\n        border-bottom: 2px solid transparent;\n        border-radius: 50%;\n        box-sizing: border-box;\n        animation: v-spin 0.4s linear infinite;\n        margin: 0 0.5em;\n      }\n\n      @keyframes v-spin {\n        100% {\n          transform: rotate(360deg);\n        }\n      }\n    `;\n    }\n    getLoadingBarStyle() {\n        switch (this.loadingBarState) {\n            case \"\" /* IDLE */:\n                return 'display: none';\n            case \"first\" /* FIRST */:\n            case \"second\" /* SECOND */:\n            case \"third\" /* THIRD */:\n                return 'display: block';\n            default:\n                return '';\n        }\n    }\n    timeoutFor(timeoutId, enabled, handler, delay) {\n        if (timeoutId !== 0) {\n            window.clearTimeout(timeoutId);\n        }\n        return enabled ? window.setTimeout(handler, delay) : 0;\n    }\n    static get instance() {\n        return ConnectionIndicator.create();\n    }\n}\n__decorate([\n    property({ type: Number })\n], ConnectionIndicator.prototype, \"firstDelay\", void 0);\n__decorate([\n    property({ type: Number })\n], ConnectionIndicator.prototype, \"secondDelay\", void 0);\n__decorate([\n    property({ type: Number })\n], ConnectionIndicator.prototype, \"thirdDelay\", void 0);\n__decorate([\n    property({ type: Number })\n], ConnectionIndicator.prototype, \"expandedDuration\", void 0);\n__decorate([\n    property({ type: String })\n], ConnectionIndicator.prototype, \"onlineText\", void 0);\n__decorate([\n    property({ type: String })\n], ConnectionIndicator.prototype, \"offlineText\", void 0);\n__decorate([\n    property({ type: String })\n], ConnectionIndicator.prototype, \"reconnectingText\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], ConnectionIndicator.prototype, \"offline\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], ConnectionIndicator.prototype, \"reconnecting\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], ConnectionIndicator.prototype, \"expanded\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], ConnectionIndicator.prototype, \"loading\", void 0);\n__decorate([\n    property({ type: String })\n], ConnectionIndicator.prototype, \"loadingBarState\", void 0);\n__decorate([\n    property({ type: Boolean })\n], ConnectionIndicator.prototype, \"applyDefaultTheme\", null);\nif (customElements.get('vaadin-connection-indicator') === undefined) {\n    customElements.define('vaadin-connection-indicator', ConnectionIndicator);\n}\n/**\n * The global connection indicator object. Its appearance and behavior can be\n * configured via properties:\n *\n * connectionIndicator.firstDelay = 0;\n * connectionIndicator.onlineText = 'The application is online';\n *\n * To avoid altering the appearance while the indicator is active, apply the\n * configuration in your application 'frontend/index.ts' file.\n */\nexport const connectionIndicator = ConnectionIndicator.instance;\n//# sourceMappingURL=ConnectionIndicator.js.map"
    },
    {
     "name": "../target/flow-frontend/contextMenuConnector.js",
     "source": "import { GestureEventListeners } from \"@polymer/polymer/lib/mixins/gesture-event-listeners.js\";\nimport * as Gestures from \"@polymer/polymer/lib/utils/gestures.js\";\n(function() {\n  const tryCatchWrapper = function(callback) {\n    return window.Vaadin.Flow.tryCatchWrapper(\n      callback,\n      \"Vaadin Context Menu\",\n      \"vaadin-context-menu-flow\"\n    );\n  };\n\n  window.Vaadin.Flow.contextMenuConnector = {\n    // NOTE: This is for the TARGET component, not for the <vaadin-context-menu> itself\n    init: target =>\n      tryCatchWrapper(function(target) {\n        if (target.$contextMenuConnector) {\n          return;\n        }\n\n        target.$contextMenuConnector = {\n          openOnHandler: tryCatchWrapper(function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            this.$contextMenuConnector.openEvent = e;\n            let detail = {};\n            if (target.getContextMenuBeforeOpenDetail) {\n              detail = target.getContextMenuBeforeOpenDetail(e);\n            }\n            target.dispatchEvent(\n              new CustomEvent(\"vaadin-context-menu-before-open\", {\n                detail: detail\n              })\n            );\n          }),\n\n          updateOpenOn: tryCatchWrapper(function(eventType) {\n            this.removeListener();\n            this.openOnEventType = eventType;\n\n            customElements.whenDefined(\"vaadin-context-menu\").then(\n              tryCatchWrapper(() => {\n                if (Gestures.gestures[eventType]) {\n                  Gestures.addListener(target, eventType, this.openOnHandler);\n                } else {\n                  target.addEventListener(eventType, this.openOnHandler);\n                }\n              })\n            );\n          }),\n\n          removeListener: tryCatchWrapper(function() {\n            if (this.openOnEventType) {\n              if (Gestures.gestures[this.openOnEventType]) {\n                Gestures.removeListener(\n                  target,\n                  this.openOnEventType,\n                  this.openOnHandler\n                );\n              } else {\n                target.removeEventListener(\n                  this.openOnEventType,\n                  this.openOnHandler\n                );\n              }\n            }\n          }),\n\n          openMenu: tryCatchWrapper(function(contextMenu) {\n            contextMenu.open(this.openEvent);\n          }),\n\n          removeConnector: tryCatchWrapper(function() {\n            this.removeListener();\n            target.$contextMenuConnector = undefined;\n          })\n        };\n      })(target),\n\n    generateItems: (menu, appId, nodeId) =>\n      tryCatchWrapper(function(menu, appId, nodeId) {\n        menu._containerNodeId = nodeId;\n\n        const getContainer = function(nodeId) {\n          try {\n            return window.Vaadin.Flow.clients[appId].getByNodeId(nodeId);\n          } catch (error) {\n            console.error(\"Could not get node %s from app %s\", nodeId, appId);\n            console.error(error);\n          }\n        };\n\n        const getChildItems = function(parent) {\n          const container = getContainer(parent._containerNodeId);\n          const items =\n            container &&\n            Array.from(container.children).map(child => {\n              const item = { component: child, checked: child._checked };\n              if (\n                child.tagName == \"VAADIN-CONTEXT-MENU-ITEM\" &&\n                child._containerNodeId\n              ) {\n                item.children = getChildItems(child);\n              }\n              child._item = item;\n              return item;\n            });\n          return items;\n        };\n\n        const items = getChildItems(menu);\n        menu.items = items;\n      })(menu, appId, nodeId),\n\n    setChecked: (component, checked) =>\n      tryCatchWrapper(function(component, checked) {\n        if (component._item) {\n          component._item.checked = checked;\n        }\n      })(component, checked)\n  };\n})();\n"
    },
    {
     "name": "../target/flow-frontend/dndConnector-es6.js",
     "source": "import './dndConnector.js';\n\n"
    },
    {
     "name": "../target/flow-frontend/flow-component-renderer.js",
     "source": "import '@polymer/polymer/polymer-legacy.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { animationFrame, idlePeriod } from '@polymer/polymer/lib/utils/async.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nclass FlowComponentRenderer extends PolymerElement {\n  static get template() {\n    return html`\n    <style>\n      @keyframes flow-component-renderer-appear {\n        to {\n          opacity: 1;\n        }\n      }\n      :host {\n        animation: 1ms flow-component-renderer-appear;\n      }\n    </style>\n    <slot></slot>\n`;\n  }\n\n  static get is() { return 'flow-component-renderer'; }\n  static get properties() {\n    return {\n      nodeid: Number,\n      appid: String\n    };\n  }\n  static get observers() {\n    return [\n      '_attachRenderedComponentIfAble(appid, nodeid)'\n    ]\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this._runChrome72ShadowDomBugWorkaround();\n  }\n\n  /* workaround for issue vaadin/flow#5025 */\n  _runChrome72ShadowDomBugWorkaround() {\n    const userAgent = navigator.userAgent;\n    if (userAgent && userAgent.match('Chrome\\/')) {\n      // example: ... Chrome/72.0.3626.96 ...\n      const majorVersionString = userAgent.split('Chrome\\/')[1].split('.')[0];\n      if (majorVersionString && parseInt(majorVersionString) > 71) {\n        const debouncedNotifyResize = this._getDebouncedNotifyResizeFunction();\n\n        // if there is no notifyResize function, then just skip\n\n        if (debouncedNotifyResize) {\n          this.style.visibility = 'hidden';\n          // need to use animation frame instead of timeout or focusing won't work\n          requestAnimationFrame(() => {\n            this.style.visibility = '';\n            debouncedNotifyResize();\n          });\n        }\n      }\n    }\n  }\n\n  _getDebouncedNotifyResizeFunction() {\n    // 1. dig out the web component that might have the notifyResize function\n    let component = this.parentElement;\n    while (true) {\n      if (!component) {\n        return;\n      }\n      if (component.notifyResize) {\n        break;\n      } else {\n        component = component.parentElement;\n      }\n    }\n    // 2. assign a debounced proxy to notifyResize, if not yet there\n    if (!component._debouncedNotifyResize) {\n      component._debouncedNotifyResize = function () {\n        component.__debouncedNotifyResize =\n            Debouncer.debounce(\n                component.__debouncedNotifyResize, // initially undefined\n                animationFrame,\n                component.notifyResize);\n      }\n    }\n    return component._debouncedNotifyResize;\n  }\n\n  ready(){\n      super.ready();\n      this.addEventListener(\"click\", function(event){\n          if (this.firstChild &&\n                  typeof this.firstChild.click === \"function\" &&\n                      event.target === this ){\n              this.firstChild.click();\n          }\n      });\n      this.addEventListener('animationend', this._onAnimationEnd);\n  }\n\n  _asyncAttachRenderedComponentIfAble() {\n    this._debouncer = Debouncer.debounce(\n      this._debouncer,\n      idlePeriod,\n      () => this._attachRenderedComponentIfAble()\n    );\n  }\n\n  _attachRenderedComponentIfAble() {\n    if (!this.nodeid || !this.appid) {\n      return;\n    }\n    const renderedComponent = this._getRenderedComponent();\n    if (this.firstChild) {\n      if (!renderedComponent) {\n        this._clear();\n        this._asyncAttachRenderedComponentIfAble();\n      } else if (this.firstChild !== renderedComponent){\n        this.replaceChild(renderedComponent, this.firstChild);\n        this._defineFocusTarget();\n        this.onComponentRendered();\n\n      } else {\n        this._defineFocusTarget();\n        this.onComponentRendered();\n      }\n    } else {\n      if (renderedComponent) {\n        this.appendChild(renderedComponent);\n        this._defineFocusTarget();\n        this.onComponentRendered();\n      } else {\n        this._asyncAttachRenderedComponentIfAble();\n      }\n    }\n  }\n\n  _getRenderedComponent() {\n    try {\n      return window.Vaadin.Flow.clients[this.appid].getByNodeId(this.nodeid);\n    } catch (error) {\n      console.error(\"Could not get node %s from app %s\", this.nodeid, this.appid);\n      console.error(error);\n    }\n    return null;\n  }\n\n  _clear() {\n    while (this.firstChild) {\n      this.removeChild(this.firstChild);\n    }\n  }\n\n  onComponentRendered(){\n    // subclasses can override this method to execute custom logic on resize\n  }\n\n  /* Setting the `focus-target` attribute to the first focusable descendant\n  starting from the firstChild necessary for the focus to be delegated\n  within the flow-component-renderer when used inside a vaadin-grid cell  */\n  _defineFocusTarget(){\n    var focusable = this._getFirstFocusableDescendant(this.firstChild);\n    if(focusable !== null) {\n      focusable.setAttribute('focus-target', 'true');\n    }\n  }\n\n  _getFirstFocusableDescendant(node){\n    if(this._isFocusable(node)) {\n      return node;\n    }\n    if ( !node.children ){\n        return null;\n    }\n    for (var i = 0; i < node.children.length; i++) {\n      var focusable = this._getFirstFocusableDescendant(node.children[i]);\n      if(focusable !== null) {\n        return focusable;\n      }\n    }\n    return null;\n  }\n\n  _isFocusable(node){\n    if (node.hasAttribute && typeof node.hasAttribute === 'function' &&\n            (node.hasAttribute(\"disabled\") || node.hasAttribute(\"hidden\"))) {\n      return false;\n    }\n\n    return node.tabIndex === 0;\n  }\n\n  _onAnimationEnd(e) {\n    // ShadyCSS applies scoping suffixes to animation names\n    // To ensure that child is attached once element is unhidden\n    // for when it was filtered out from, eg, ComboBox\n    // https://github.com/vaadin/vaadin-flow-components/issues/437\n    if (e.animationName.indexOf('flow-component-renderer-appear') === 0) {\n      this._attachRenderedComponentIfAble();\n    }\n  }\n}\nwindow.customElements.define(FlowComponentRenderer.is, FlowComponentRenderer);\n"
    },
    {
     "name": "../target/flow-frontend/gridConnector.js",
     "source": "import { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { timeOut, animationFrame } from '@polymer/polymer/lib/utils/async.js';\nimport { GridElement } from '@vaadin/vaadin-grid/src/vaadin-grid.js';\nimport { ItemCache } from '@vaadin/vaadin-grid/src/vaadin-grid-data-provider-mixin.js';\n\n(function () {\n  const tryCatchWrapper = function (callback) {\n    return window.Vaadin.Flow.tryCatchWrapper(callback, 'Vaadin Grid', 'vaadin-grid');\n  };\n\n  let isItemCacheInitialized = false;\n\n  window.Vaadin.Flow.gridConnector = {\n    initLazy: grid => tryCatchWrapper(function(grid) {\n      // Check whether the connector was already initialized for the grid\n      if (grid.$connector){\n        return;\n      }\n\n      // Make sure ItemCache patching is done only once, but delay it for when\n      // a server grid is initialized\n      if (!isItemCacheInitialized) {\n        isItemCacheInitialized = true;\n        // Storing original implementation of the method to be used for client\n        // side only grids\n        ItemCache.prototype.ensureSubCacheForScaledIndexOriginal = ItemCache.prototype.ensureSubCacheForScaledIndex;\n        ItemCache.prototype.ensureSubCacheForScaledIndex = tryCatchWrapper(function(scaledIndex) {\n          if (!this.grid.$connector) {\n            this.ensureSubCacheForScaledIndexOriginal(scaledIndex);\n            return;\n          }\n\n          if (!this.itemCaches[scaledIndex]) {\n            this.grid.$connector.beforeEnsureSubCacheForScaledIndex(this, scaledIndex);\n          }\n        });\n\n        ItemCache.prototype.isLoading = tryCatchWrapper(function() {\n          return Boolean(ensureSubCacheQueue.length || Object.keys(this.pendingRequests).length || Object.keys(this.itemCaches).filter(index => {\n            return this.itemCaches[index].isLoading();\n          })[0]);\n        });\n\n        ItemCache.prototype.doEnsureSubCacheForScaledIndex = tryCatchWrapper(function(scaledIndex) {\n          if (!this.itemCaches[scaledIndex]) {\n            const subCache = new ItemCache.prototype.constructor(this.grid, this, this.items[scaledIndex]);\n            subCache.itemkeyCaches = {};\n            if(!this.itemkeyCaches) {\n              this.itemkeyCaches = {};\n            }\n            this.itemCaches[scaledIndex] = subCache;\n            this.itemkeyCaches[this.grid.getItemId(subCache.parentItem)] = subCache;\n            this.grid._loadPage(0, subCache);\n          }\n        });\n\n        ItemCache.prototype.getCacheAndIndexByKey = tryCatchWrapper(function(key) {\n          for (let index in this.items) {\n            if(this.grid.getItemId(this.items[index]) === key) {\n              return {cache: this, scaledIndex: index};\n            }\n          }\n          const keys = Object.keys(this.itemkeyCaches);\n          for (let i = 0; i < keys.length; i++) {\n            const expandedKey = keys[i];\n            const subCache = this.itemkeyCaches[expandedKey];\n            let cacheAndIndex = subCache.getCacheAndIndexByKey(key);\n            if(cacheAndIndex) {\n              return cacheAndIndex;\n            }\n          }\n          return undefined;\n        });\n\n        ItemCache.prototype.getLevel = tryCatchWrapper(function() {\n          let cache = this;\n          let level = 0;\n          while (cache.parentCache) {\n            cache = cache.parentCache;\n            level++;\n          }\n          return level;\n        });\n      }\n\n      const rootPageCallbacks = {};\n      const treePageCallbacks = {};\n      const cache = {};\n\n      /* parentRequestDelay - optimizes parent requests by batching several requests\n      *  into one request. Delay in milliseconds. Disable by setting to 0.\n      *  parentRequestBatchMaxSize - maximum size of the batch.\n      */\n      const parentRequestDelay = 50;\n      const parentRequestBatchMaxSize = 20;\n\n      let parentRequestQueue = [];\n      let parentRequestDebouncer;\n      let ensureSubCacheQueue = [];\n      let ensureSubCacheDebouncer;\n\n      const rootRequestDelay = 150;\n      let rootRequestDebouncer;\n\n      let lastRequestedRanges = {};\n      const root = 'null';\n      lastRequestedRanges[root] = [0, 0];\n\n      const validSelectionModes = ['SINGLE', 'NONE', 'MULTI'];\n      let selectedKeys = {};\n      let selectionMode = 'SINGLE';\n\n      let detailsVisibleOnClick = true;\n\n      let sorterDirectionsSetFromServer = false;\n\n      grid.size = 0; // To avoid NaN here and there before we get proper data\n      grid.itemIdPath = 'key';\n\n      grid.$connector = {};\n\n      grid.$connector.hasEnsureSubCacheQueue = tryCatchWrapper(() => ensureSubCacheQueue.length > 0);\n\n      grid.$connector.hasParentRequestQueue = tryCatchWrapper(() => parentRequestQueue.length > 0);\n\n      grid.$connector.hasRootRequestQueue = tryCatchWrapper(() => {\n        return Object.keys(rootPageCallbacks).length > 0 || (rootRequestDebouncer && rootRequestDebouncer.isActive());\n      })\n\n      grid.$connector.beforeEnsureSubCacheForScaledIndex = tryCatchWrapper(function(targetCache, scaledIndex) {\n        // add call to queue\n        ensureSubCacheQueue.push({\n          cache: targetCache,\n          scaledIndex: scaledIndex,\n          itemkey: grid.getItemId(targetCache.items[scaledIndex]),\n          level: targetCache.getLevel()\n        });\n        // sort by ascending scaledIndex and level\n        ensureSubCacheQueue.sort(function(a, b) {\n          return a.scaledIndex - b.scaledIndex || a.level - b.level;\n        });\n\n        ensureSubCacheDebouncer = Debouncer.debounce(ensureSubCacheDebouncer, animationFrame,\n          () => {\n            while (ensureSubCacheQueue.length) {\n              grid.$connector.flushEnsureSubCache();\n            }\n          }\n        );\n      })\n\n      grid.$connector.doSelection = tryCatchWrapper(function(items, userOriginated) {\n        if (selectionMode === 'NONE' || !items.length ||\n            (userOriginated && grid.hasAttribute('disabled'))) {\n          return;\n        }\n        if (selectionMode === 'SINGLE') {\n          grid.selectedItems = [];\n          selectedKeys = {};\n        }\n\n        grid.selectedItems = grid.selectedItems.concat(items);\n        items.forEach(item => {\n          if (item) {\n            selectedKeys[item.key] = item;\n            if (userOriginated) {\n              item.selected = true;\n              grid.$server.select(item.key);\n            }\n          }\n          const isSelectedItemDifferentOrNull = !grid.activeItem || !item || item.key != grid.activeItem.key;\n          if (!userOriginated && selectionMode === 'SINGLE' && isSelectedItemDifferentOrNull) {\n            grid.activeItem = item;\n            grid.$connector.activeItem = item;\n          }\n        });\n      });\n\n      grid.$connector.doDeselection = tryCatchWrapper(function(items, userOriginated) {\n        if (selectionMode === 'NONE' || !items.length ||\n            (userOriginated && grid.hasAttribute('disabled'))) {\n          return;\n        }\n\n        const updatedSelectedItems = grid.selectedItems.slice();\n        while (items.length) {\n          const itemToDeselect = items.shift();\n          for (let i = 0; i < updatedSelectedItems.length; i++) {\n            const selectedItem = updatedSelectedItems[i];\n            if (itemToDeselect && itemToDeselect.key === selectedItem.key) {\n              updatedSelectedItems.splice(i, 1);\n              break;\n            }\n          }\n          if (itemToDeselect) {\n            delete selectedKeys[itemToDeselect.key];\n            if (userOriginated) {\n              delete itemToDeselect.selected;\n              grid.$server.deselect(itemToDeselect.key);\n            }\n          }\n        }\n        grid.selectedItems = updatedSelectedItems;\n      });\n\n      grid.__activeItemChanged = tryCatchWrapper(function(newVal, oldVal) {\n        if (selectionMode != 'SINGLE') {\n          return;\n        }\n        if (!newVal) {\n          if (oldVal && selectedKeys[oldVal.key]) {\n            if (!grid.$connector.deselectAllowed) {\n              grid.activeItem = oldVal;\n            } else {\n              grid.$connector.doDeselection([oldVal], true);\n            }\n          }\n        } else if (!selectedKeys[newVal.key]) {\n          grid.$connector.doSelection([newVal], true);\n        }\n      });\n      grid._createPropertyObserver('activeItem', '__activeItemChanged', true);\n\n      grid.__activeItemChangedDetails = tryCatchWrapper(function(newVal, oldVal) {\n        if(!detailsVisibleOnClick) {\n          return;\n        }\n        // when grid is attached, newVal is not set and oldVal is undefined\n        // do nothing\n        if ((newVal == null) && (oldVal === undefined)) {\n          return;\n        }\n        if (newVal && !newVal.detailsOpened) {\n          grid.$server.setDetailsVisible(newVal.key);\n        } else {\n          grid.$server.setDetailsVisible(null);\n        }\n      })\n      grid._createPropertyObserver('activeItem', '__activeItemChangedDetails', true);\n\n      grid.$connector.setDetailsVisibleOnClick = tryCatchWrapper(function(visibleOnClick) {\n        detailsVisibleOnClick = visibleOnClick;\n      });\n\n      grid.$connector._getPageIfSameLevel = tryCatchWrapper(function(parentKey, index, defaultPage) {\n        let cacheAndIndex = grid._cache.getCacheAndIndex(index);\n        let parentItem = cacheAndIndex.cache.parentItem;\n        let parentKeyOfIndex = (parentItem) ? grid.getItemId(parentItem) : root;\n        if(parentKey !== parentKeyOfIndex) {\n          return defaultPage;\n        } else {\n          return grid._getPageForIndex(cacheAndIndex.scaledIndex);\n        }\n      })\n\n      grid.$connector.getCacheByKey = tryCatchWrapper(function(key) {\n        let cacheAndIndex = grid._cache.getCacheAndIndexByKey(key);\n        if(cacheAndIndex) {\n          return cacheAndIndex.cache;\n        }\n        return undefined;\n      });\n\n      grid.$connector.flushEnsureSubCache = tryCatchWrapper(function() {\n        let pendingFetch = ensureSubCacheQueue.splice(0, 1)[0];\n        let itemkey =  pendingFetch.itemkey;\n\n        let start = grid._virtualStart;\n        let end = grid._virtualEnd;\n        let buffer = end - start;\n        let firstNeededIndex = Math.max(0, start + grid._vidxOffset - buffer);\n        let lastNeededIndex = Math.min(end + grid._vidxOffset + buffer, grid._effectiveSize);\n\n        // only fetch if given item is still in visible range\n        for(let index = firstNeededIndex; index <= lastNeededIndex; index++) {\n          let item = grid._cache.getItemForIndex(index);\n\n          if(grid.getItemId(item) === itemkey) {\n            if(grid._isExpanded(item)) {\n              pendingFetch.cache.doEnsureSubCacheForScaledIndex(pendingFetch.scaledIndex);\n              return true;\n            } else {\n              break;\n            }\n          }\n        }\n        return false;\n      })\n\n      grid.$connector.flushParentRequests = tryCatchWrapper(function() {\n        let pendingFetches = parentRequestQueue.splice(0, parentRequestBatchMaxSize);\n\n        if(pendingFetches.length) {\n          grid.$server.setParentRequestedRanges(pendingFetches);\n          return true;\n        }\n        return false;\n      })\n\n      grid.$connector.beforeParentRequest = tryCatchWrapper(function(firstIndex, size, parentKey) {\n        // add request in queue\n        parentRequestQueue.push({\n          firstIndex: firstIndex,\n          size: size,\n          parentKey: parentKey\n        });\n\n        parentRequestDebouncer = Debouncer.debounce(parentRequestDebouncer, timeOut.after(parentRequestDelay),\n          () => {\n            while (parentRequestQueue.length) {\n              grid.$connector.flushParentRequests();\n            }\n          }\n        );\n      })\n\n      grid.$connector.fetchPage = tryCatchWrapper(function(fetch, page, parentKey) {\n        // Determine what to fetch based on scroll position and not only\n        // what grid asked for\n\n        // The buffer size could be multiplied by some constant defined by the user,\n        // if he needs to reduce the number of items sent to the Grid to improve performance\n        // or to increase it to make Grid smoother when scrolling\n        let start = grid._virtualStart;\n        let end = grid._virtualEnd;\n        let buffer = end - start;\n\n        let firstNeededIndex = Math.max(0, start + grid._vidxOffset - buffer);\n        let lastNeededIndex = Math.min(end + grid._vidxOffset + buffer, grid._effectiveSize);\n\n        let firstNeededPage = page;\n        let lastNeededPage = page;\n        for(let idx = firstNeededIndex; idx <= lastNeededIndex; idx++) {\n          firstNeededPage = Math.min(firstNeededPage, grid.$connector._getPageIfSameLevel(parentKey, idx, firstNeededPage));\n          lastNeededPage = Math.max(lastNeededPage, grid.$connector._getPageIfSameLevel(parentKey, idx, lastNeededPage));\n        }\n\n        let firstPage = Math.max(0,  firstNeededPage);\n        let lastPage = (parentKey !== root) ? lastNeededPage: Math.min(lastNeededPage, Math.floor(grid.size / grid.pageSize));\n        let lastRequestedRange = lastRequestedRanges[parentKey];\n        if(!lastRequestedRange) {\n          lastRequestedRange = [-1, -1];\n        }\n        if (lastRequestedRange[0] != firstPage || lastRequestedRange[1] != lastPage) {\n          lastRequestedRange = [firstPage, lastPage];\n          lastRequestedRanges[parentKey] = lastRequestedRange;\n          let count = lastPage - firstPage + 1;\n          fetch(firstPage * grid.pageSize, count * grid.pageSize);\n        }\n      })\n\n      grid.dataProvider = tryCatchWrapper(function(params, callback) {\n        if (params.pageSize != grid.pageSize) {\n          throw 'Invalid pageSize';\n        }\n\n        let page = params.page;\n\n        if(params.parentItem) {\n          let parentUniqueKey = grid.getItemId(params.parentItem);\n          if(!treePageCallbacks[parentUniqueKey]) {\n            treePageCallbacks[parentUniqueKey] = {};\n          }\n\n          let parentCache = grid.$connector.getCacheByKey(parentUniqueKey);\n          let itemCache = (parentCache && parentCache.itemkeyCaches) ? parentCache.itemkeyCaches[parentUniqueKey] : undefined;\n          if(cache[parentUniqueKey] && cache[parentUniqueKey][page] && itemCache) {\n            // workaround: sometimes grid-element gives page index that overflows\n            page = Math.min(page, Math.floor(cache[parentUniqueKey].size / grid.pageSize));\n\n            callback(cache[parentUniqueKey][page], cache[parentUniqueKey].size);\n          } else {\n            treePageCallbacks[parentUniqueKey][page] = callback;\n          }\n          grid.$connector.fetchPage(\n            (firstIndex, size) => grid.$connector.beforeParentRequest(firstIndex, size, params.parentItem.key),\n            page,\n            parentUniqueKey\n          );\n\n        } else {\n          // workaround: sometimes grid-element gives page index that overflows\n          page = Math.min(page, Math.floor(grid.size / grid.pageSize));\n\n          if (cache[root] && cache[root][page]) {\n            callback(cache[root][page]);\n          } else {\n            rootPageCallbacks[page] = callback;\n          }\n\n          rootRequestDebouncer = Debouncer.debounce(rootRequestDebouncer, timeOut.after(grid._hasData ? rootRequestDelay : 0),\n            () => {\n              grid.$connector.fetchPage((firstIndex, size) => grid.$server.setRequestedRange(firstIndex, size), page, root);\n            }\n          );\n        }\n      })\n\n      const sorterChangeListener = tryCatchWrapper(function(_, oldValue) {\n        if (oldValue !== undefined && !sorterDirectionsSetFromServer) {\n          grid.$server.sortersChanged(grid._sorters.map(function (sorter) {\n            return {\n              path: sorter.path,\n              direction: sorter.direction\n            };\n          }));\n        }\n      })\n\n      grid.$connector.setSorterDirections = tryCatchWrapper(function(directions) {\n        sorterDirectionsSetFromServer = true;\n        setTimeout(tryCatchWrapper(() => {\n          try {\n            const sorters = Array.from(grid.querySelectorAll('vaadin-grid-sorter'));\n\n            sorters.forEach(sorter => {\n              if (!directions.filter(d => d.column === sorter.getAttribute('path'))[0]) {\n                sorter.direction = null;\n              }\n            });\n\n            directions.reverse().forEach(({column, direction}) => {\n              sorters.forEach(sorter => {\n                if (sorter.getAttribute('path') === column && sorter.direction !== direction) {\n                  sorter.direction = direction\n                }\n              });\n            });\n          } finally {\n            sorterDirectionsSetFromServer = false;\n          }\n        }));\n      })\n      grid._createPropertyObserver(\"_previousSorters\", sorterChangeListener);\n\n      grid._updateItem = tryCatchWrapper(function(row, item) {\n        GridElement.prototype._updateItem.call(grid, row, item);\n\n        // There might be inactive component renderers on hidden rows that still refer to the\n        // same component instance as one of the renderers on a visible row. Making the\n        // inactive/hidden renderer attach the component might steal it from a visible/active one.\n        if (!row.hidden) {\n          // make sure that component renderers are updated\n          Array.from(row.children).forEach(cell => {\n            if (cell._instance && cell._instance.children) {\n              Array.from(cell._instance.children).forEach(content => {\n                if(content._attachRenderedComponentIfAble) {\n                  content._attachRenderedComponentIfAble();\n                }\n                // In hierarchy column of tree grid, the component renderer is inside its content,\n                // this updates it renderer from innerContent\n                if (content.children) {\n                  Array.from(content.children).forEach(innerContent => {\n                    if(innerContent._attachRenderedComponentIfAble) {\n                        innerContent._attachRenderedComponentIfAble();\n                    }\n                  });\n                }\n             });\n            }\n          });\n        }\n      })\n\n      grid._expandedInstanceChangedCallback = tryCatchWrapper(function(inst, value) {\n        // method available only for the TreeGrid server-side component\n        if (inst.item == undefined || grid.$server.updateExpandedState == undefined) {\n          return;\n        }\n        let parentKey = grid.getItemId(inst.item);\n        grid.$server.updateExpandedState(parentKey, value);\n        if (value) {\n          this.expandItem(inst.item);\n        } else {\n          delete cache[parentKey];\n          let parentCache = grid.$connector.getCacheByKey(parentKey);\n          if (parentCache && parentCache.itemkeyCaches && parentCache.itemkeyCaches[parentKey]) {\n            delete parentCache.itemkeyCaches[parentKey];\n          }\n          if (parentCache && parentCache.itemkeyCaches) {\n            Object.keys(parentCache.itemCaches)\n                .filter(idx => parentCache.items[idx].key === parentKey)\n                .forEach(idx => delete parentCache.itemCaches[idx]);\n          }\n          delete lastRequestedRanges[parentKey];\n          this.collapseItem(inst.item);\n        }\n      })\n\n      const itemsUpdated = function(items) {\n        if (!items || !Array.isArray(items)) {\n          throw 'Attempted to call itemsUpdated with an invalid value: ' + JSON.stringify(items);\n        }\n        let detailsOpenedItems = Array.from(grid.detailsOpenedItems);\n        let updatedSelectedItem = false;\n        for (let i = 0; i < items.length; ++i) {\n          const item = items[i];\n          if(!item) {\n            continue;\n          }\n          if (item.detailsOpened) {\n            if(grid._getItemIndexInArray(item, detailsOpenedItems) < 0) {\n              detailsOpenedItems.push(item);\n            }\n          } else if(grid._getItemIndexInArray(item, detailsOpenedItems) >= 0) {\n            detailsOpenedItems.splice(grid._getItemIndexInArray(item, detailsOpenedItems), 1)\n          }\n          if (selectedKeys[item.key]) {\n            selectedKeys[item.key] = item;\n            item.selected = true;\n            updatedSelectedItem = true;\n          }\n        }\n        grid.detailsOpenedItems = detailsOpenedItems;\n        if (updatedSelectedItem) {\n          // IE 11 Object doesn't support method values\n          grid.selectedItems = Object.keys(selectedKeys).map(function(e) {\n            return selectedKeys[e]\n          });\n        }\n      };\n\n      /**\n       * Updates the cache for the given page for grid or tree-grid.\n       *\n       * @param page index of the page to update\n       * @param parentKey the key of the parent item for the page\n       * @returns an array of the updated items for the page, or undefined if no items were cached for the page\n       */\n      const updateGridCache = function(page, parentKey) {\n        let items;\n        if((parentKey || root) !== root) {\n          items = cache[parentKey][page];\n          let parentCache = grid.$connector.getCacheByKey(parentKey);\n          if(parentCache && parentCache.itemkeyCaches) {\n            let _cache = parentCache.itemkeyCaches[parentKey];\n            const callbacksForParentKey = treePageCallbacks[parentKey];\n            const callback = callbacksForParentKey && callbacksForParentKey[page];\n            _updateGridCache(page, items, callback, _cache);\n          }\n\n        } else {\n          items = cache[root][page];\n          _updateGridCache(page, items, rootPageCallbacks[page], grid._cache);\n        }\n        return items;\n      };\n\n      const _updateGridCache = function(page, items, callback, levelcache) {\n        // Force update unless there's a callback waiting\n        if (!callback) {\n          let rangeStart = page * grid.pageSize;\n          let rangeEnd = rangeStart + grid.pageSize;\n          if (!items) {\n            if (levelcache && levelcache.items) {\n              for (let idx = rangeStart; idx < rangeEnd; idx++) {\n                delete levelcache.items[idx];\n              }\n            }\n          } else {\n            if (levelcache && levelcache.items) {\n              for (let idx = rangeStart; idx < rangeEnd; idx++) {\n                if (levelcache.items[idx]) {\n                  levelcache.items[idx] = items[idx - rangeStart];\n                }\n              }\n            }\n          }\n        }\n      };\n\n      /**\n       * Updates all visible grid rows in DOM.\n       */\n      const updateAllGridRowsInDomBasedOnCache = function () {\n        grid._cache.updateSize();\n        grid._effectiveSize = grid._cache.effectiveSize;\n        grid._assignModels();\n      };\n\n      /**\n       * Update the given items in DOM if currently visible.\n       *\n       * @param array items the items to update in DOM\n       */\n      const updateGridItemsInDomBasedOnCache = function(items) {\n        if (!items || !grid._physicalItems) {\n          return;\n        }\n        /**\n         * Calls the _assignModels function from GridScrollerElement, that triggers\n         * the internal revalidation of the items based on the _cache of the DataProviderMixin.\n         * First mapping the item to physical (iron list) indexes, so that we update\n         * only items in with the correct index that are cached in the iron list.\n         */\n        const itemKeys = items.map(item => item.key);\n        const indexes = grid._physicalItems\n            .map((tr, index) => tr._item && tr._item.key && itemKeys.indexOf(tr._item.key) > -1 ? index : null)\n            .filter(idx => idx !== null);\n        if (indexes.length > 0) {\n          grid._assignModels(indexes);\n        }\n      };\n\n      grid.$connector.set = tryCatchWrapper(function(index, items, parentKey) {\n        if (index % grid.pageSize != 0) {\n          throw 'Got new data to index ' + index + ' which is not aligned with the page size of ' + grid.pageSize;\n        }\n        let pkey = parentKey || root;\n\n        const firstPage = index / grid.pageSize;\n        const updatedPageCount = Math.ceil(items.length / grid.pageSize);\n\n        for (let i = 0; i < updatedPageCount; i++) {\n          let page = firstPage + i;\n          let slice = items.slice(i * grid.pageSize, (i + 1) * grid.pageSize);\n          if(!cache[pkey]) {\n            cache[pkey] = {};\n          }\n          cache[pkey][page] = slice;\n\n          grid.$connector.doSelection(slice.filter(\n            item => item.selected && !isSelectedOnGrid(item)));\n          grid.$connector.doDeselection(slice.filter(\n            item => !item.selected  && (selectedKeys[item.key] || isSelectedOnGrid(item))));\n\n          const updatedItems = updateGridCache(page, pkey);\n          if (updatedItems) {\n            itemsUpdated(updatedItems);\n            updateGridItemsInDomBasedOnCache(updatedItems);\n          }\n        }\n      });\n\n      const itemToCacheLocation = function(item) {\n        let parent = item.parentUniqueKey || root;\n        if(cache[parent]) {\n          for (let page in cache[parent]) {\n            for (let index in cache[parent][page]) {\n              if (grid.getItemId(cache[parent][page][index]) === grid.getItemId(item)) {\n                return {page: page, index: index, parentKey: parent};\n              }\n            }\n          }\n        }\n        return null;\n      };\n\n      /**\n       * Updates the given items for a hierarchical grid.\n       *\n       * @param updatedItems the updated items array\n       */\n      grid.$connector.updateHierarchicalData = tryCatchWrapper(function(updatedItems) {\n        let pagesToUpdate = [];\n        // locate and update the items in cache\n        // find pages that need updating\n        for (let i = 0; i < updatedItems.length; i++) {\n          let cacheLocation = itemToCacheLocation(updatedItems[i]);\n          if (cacheLocation) {\n            cache[cacheLocation.parentKey][cacheLocation.page][cacheLocation.index] = updatedItems[i];\n            let key = cacheLocation.parentKey+':'+cacheLocation.page;\n            if (!pagesToUpdate[key]) {\n              pagesToUpdate[key] = {parentKey: cacheLocation.parentKey, page: cacheLocation.page};\n            }\n          }\n        }\n        // IE11 doesn't work with the transpiled version of the forEach.\n        let keys = Object.keys(pagesToUpdate);\n        for (let i = 0; i < keys.length; i++) {\n          let pageToUpdate = pagesToUpdate[keys[i]];\n          const affectedUpdatedItems = updateGridCache(pageToUpdate.page, pageToUpdate.parentKey);\n          if (affectedUpdatedItems) {\n            itemsUpdated(affectedUpdatedItems);\n            updateGridItemsInDomBasedOnCache(affectedUpdatedItems);\n          }\n        }\n      });\n\n      /**\n       * Updates the given items for a non-hierarchical grid.\n       *\n       * @param updatedItems the updated items array\n       */\n      grid.$connector.updateFlatData = tryCatchWrapper(function(updatedItems) {\n        // update (flat) caches\n        for (let i = 0; i < updatedItems.length; i++) {\n          let cacheLocation = itemToCacheLocation(updatedItems[i]);\n          if (cacheLocation) {\n            // update connector cache\n            cache[cacheLocation.parentKey][cacheLocation.page][cacheLocation.index] = updatedItems[i];\n\n            // update grid's cache\n            const index = parseInt(cacheLocation.page) * grid.pageSize + parseInt(cacheLocation.index);\n            if (grid._cache.items[index]) {\n              grid._cache.items[index] = updatedItems[i];\n            }\n          }\n        }\n        itemsUpdated(updatedItems);\n\n        updateGridItemsInDomBasedOnCache(updatedItems);\n      });\n\n      grid.$connector.clearExpanded = tryCatchWrapper(function() {\n        grid.expandedItems = [];\n        ensureSubCacheQueue = [];\n        parentRequestQueue = [];\n      })\n\n      grid.$connector.clear = tryCatchWrapper(function(index, length, parentKey) {\n        let pkey = parentKey || root;\n        if (!cache[pkey] || Object.keys(cache[pkey]).length === 0){\n          return;\n        }\n        if (index % grid.pageSize != 0) {\n          throw 'Got cleared data for index ' + index + ' which is not aligned with the page size of ' + grid.pageSize;\n        }\n\n        let firstPage = Math.floor(index / grid.pageSize);\n        let updatedPageCount = Math.ceil(length / grid.pageSize);\n\n        for (let i = 0; i < updatedPageCount; i++) {\n          let page = firstPage + i;\n          let items = cache[pkey][page];\n          grid.$connector.doDeselection(items.filter(item => selectedKeys[item.key]));\n          delete cache[pkey][page];\n          const updatedItems = updateGridCache(page, parentKey);\n          if (updatedItems) {\n            itemsUpdated(updatedItems);\n          }\n          updateGridItemsInDomBasedOnCache(items);\n        }\n        let cacheToClear = grid._cache;\n        if(parentKey)  {\n          const cacheAndIndex = grid._cache.getCacheAndIndexByKey(pkey);\n          cacheToClear = cacheAndIndex.cache.itemCaches[cacheAndIndex.scaledIndex];\n        }\n        const endIndex = index + updatedPageCount * grid.pageSize;\n        for(let itemIndex = index; itemIndex < endIndex; itemIndex++) {\n          delete cacheToClear.items[itemIndex];\n          const subcacheToClear = cacheToClear.itemCaches[itemIndex];\n          delete cacheToClear.itemCaches[itemIndex];\n          const itemKeyToRemove = subcacheToClear && subcacheToClear.parentItem.key;\n          if(itemKeyToRemove) {\n            delete cacheToClear.itemkeyCaches[itemKeyToRemove];\n          }\n        }\n        grid._cache.updateSize();\n      });\n\n      const isSelectedOnGrid = function(item) {\n        const selectedItems = grid.selectedItems;\n        for(let i = 0; i < selectedItems; i++) {\n          let selectedItem = selectedItems[i];\n          if (selectedItem.key === item.key) {\n            return true;\n          }\n        }\n        return false;\n      };\n\n      grid.$connector.reset = tryCatchWrapper(function() {\n        grid.size = 0;\n        deleteObjectContents(cache);\n        deleteObjectContents(grid._cache.items);\n        deleteObjectContents(lastRequestedRanges);\n        if(ensureSubCacheDebouncer) {\n          ensureSubCacheDebouncer.cancel();\n        }\n        if(parentRequestDebouncer) {\n          parentRequestDebouncer.cancel();\n        }\n        if (rootRequestDebouncer) {\n          rootRequestDebouncer.cancel();\n        }\n        ensureSubCacheDebouncer = undefined;\n        parentRequestDebouncer = undefined;\n        ensureSubCacheQueue = [];\n        parentRequestQueue = [];\n        updateAllGridRowsInDomBasedOnCache();\n      });\n\n      const deleteObjectContents = obj => Object.keys(obj).forEach(key => delete obj[key]);\n\n      grid.$connector.updateSize = newSize => grid.size = newSize;\n\n      grid.$connector.updateUniqueItemIdPath = path => grid.itemIdPath = path;\n\n      grid.$connector.expandItems = tryCatchWrapper(function(items) {\n        let newExpandedItems = Array.from(grid.expandedItems);\n        items.filter(item => !grid._isExpanded(item))\n          .forEach(item =>\n            newExpandedItems.push(item));\n        grid.expandedItems = newExpandedItems;\n      })\n\n      grid.$connector.collapseItems = tryCatchWrapper(function(items) {\n        let newExpandedItems = Array.from(grid.expandedItems);\n        items.forEach(item => {\n          let index = grid._getItemIndexInArray(item, newExpandedItems);\n          if(index >= 0) {\n            newExpandedItems.splice(index, 1);\n          }\n        });\n        grid.expandedItems = newExpandedItems;\n        items.forEach(item => grid.$connector.removeFromQueue(item));\n      })\n\n      grid.$connector.removeFromQueue = tryCatchWrapper(function(item) {\n        let itemId = grid.getItemId(item);\n        delete treePageCallbacks[itemId];\n        grid.$connector.removeFromArray(ensureSubCacheQueue, item => item.itemkey === itemId);\n        grid.$connector.removeFromArray(parentRequestQueue, item => item.parentKey === itemId);\n      })\n\n      grid.$connector.removeFromArray = tryCatchWrapper(function(array, removeTest) {\n        if(array.length) {\n          for(let index = array.length - 1; index--; ) {\n            if (removeTest(array[index])) {\n              array.splice(index, 1);\n            }\n          }\n        }\n      })\n\n      grid.$connector.confirmParent = tryCatchWrapper(function(id, parentKey, levelSize) {\n        if(!treePageCallbacks[parentKey]) {\n          return;\n        }\n        if(cache[parentKey]) {\n          cache[parentKey].size = levelSize;\n        }\n        let outstandingRequests = Object.getOwnPropertyNames(treePageCallbacks[parentKey]);\n        for(let i = 0; i < outstandingRequests.length; i++) {\n          let page = outstandingRequests[i];\n\n          let lastRequestedRange = lastRequestedRanges[parentKey] || [0, 0];\n\n          const callback = treePageCallbacks[parentKey][page];\n          if((cache[parentKey] && cache[parentKey][page]) || page < lastRequestedRange[0] || page > lastRequestedRange[1]) {\n            delete treePageCallbacks[parentKey][page];\n            let items = cache[parentKey][page] || new Array(levelSize);\n            callback(items, levelSize);\n          } else if (callback && levelSize === 0) {\n            // The parent item has 0 child items => resolve the callback with an empty array\n            delete treePageCallbacks[parentKey][page];\n            callback([], levelSize);\n          }\n        }\n        // Let server know we're done\n        grid.$server.confirmParentUpdate(id, parentKey);\n\n        if (!grid.loading) {\n          grid._assignModels();\n        }\n      });\n\n      grid.$connector.confirm = tryCatchWrapper(function(id) {\n        // We're done applying changes from this batch, resolve outstanding\n        // callbacks\n        let outstandingRequests = Object.getOwnPropertyNames(rootPageCallbacks);\n        for(let i = 0; i < outstandingRequests.length; i++) {\n          let page = outstandingRequests[i];\n          let lastRequestedRange = lastRequestedRanges[root] || [0, 0];\n\n          const lastAvailablePage = grid.size ? Math.ceil(grid.size / grid.pageSize) - 1 : 0;\n          // It's possible that the lastRequestedRange includes a page that's beyond lastAvailablePage if the grid's size got reduced during an ongoing data request\n          const lastRequestedRangeEnd = Math.min(lastRequestedRange[1], lastAvailablePage);\n          // Resolve if we have data or if we don't expect to get data\n          const callback = rootPageCallbacks[page];\n          if ((cache[root] && cache[root][page]) || page < lastRequestedRange[0] || +page > lastRequestedRangeEnd) {\n            delete rootPageCallbacks[page];\n            callback(cache[root][page] || new Array(grid.pageSize));\n            // Makes sure to push all new rows before this stack execution is done so any timeout expiration called after will be applied on a fully updated grid\n            //Resolves https://github.com/vaadin/vaadin-grid-flow/issues/511\n            if(grid._debounceIncreasePool){\n              grid._debounceIncreasePool.flush();\n            }\n\n          } else if (callback && grid.size === 0) {\n            // The grid has 0 items => resolve the callback with an empty array\n            delete rootPageCallbacks[page];\n            callback([]);\n          }\n        }\n\n        // Let server know we're done\n        grid.$server.confirmUpdate(id);\n      })\n\n      grid.$connector.ensureHierarchy = tryCatchWrapper(function() {\n        for (let parentKey in cache) {\n          if(parentKey !== root) {\n            delete cache[parentKey];\n          }\n        }\n        deleteObjectContents(lastRequestedRanges);\n\n        grid._cache.itemCaches = {};\n        grid._cache.itemkeyCaches = {};\n\n        updateAllGridRowsInDomBasedOnCache();\n      })\n\n      grid.$connector.setSelectionMode = tryCatchWrapper(function(mode) {\n        if ((typeof mode === 'string' || mode instanceof String)\n            && validSelectionModes.indexOf(mode) >= 0) {\n          selectionMode = mode;\n          selectedKeys = {};\n        } else {\n          throw 'Attempted to set an invalid selection mode';\n        }\n      });\n\n      grid.$connector.deselectAllowed = true;\n\n      // TODO: should be removed once https://github.com/vaadin/vaadin-grid/issues/1471 gets implemented\n      grid.$connector.setVerticalScrollingEnabled = tryCatchWrapper(function(enabled) {\n        // There are two scollable containers in grid so apply the changes for both\n        setVerticalScrollingEnabled(grid.$.table, enabled);\n\n        // Since the scrollbars were toggled, there might have been some changes to layout\n        // size. Notify grid of the resize to ensure everything is in place.\n        grid.notifyResize();\n      });\n\n      const setVerticalScrollingEnabled = function(scrollable, enabled) {\n        // Prevent Y axis scrolling with CSS. This will hide the vertical scrollbar.\n        scrollable.style.overflowY = enabled ? '' : 'hidden';\n        // Clean up an existing listener\n        scrollable.removeEventListener('wheel', scrollable.__wheelListener);\n        // Add a wheel event listener with the horizontal scrolling prevention logic\n        !enabled && scrollable.addEventListener('wheel', scrollable.__wheelListener = tryCatchWrapper(e => {\n          if (e.deltaX) {\n            // If there was some horizontal delta related to the wheel event, force the vertical\n            // delta to 0 and let grid process the wheel event normally\n            Object.defineProperty(e, 'deltaY', { value: 0 });\n          } else {\n            // If there was verical delta only, skip the grid's wheel event processing to\n            // enable scrolling the page even if grid isn't scrolled to end\n            e.stopImmediatePropagation();\n          }\n        }));\n      };\n\n      const contextMenuListener = function(e) {\n        const eventContext = grid.getEventContext(e);\n        const key = eventContext.item && eventContext.item.key;\n        const colId = eventContext.column && eventContext.column.id;\n        grid.$server.updateContextMenuTargetItem(key, colId);\n      };\n\n      grid.addEventListener('vaadin-context-menu-before-open', tryCatchWrapper(function(e) {\n        contextMenuListener(grid.$contextMenuConnector.openEvent);\n      }));\n\n      grid.getContextMenuBeforeOpenDetail = tryCatchWrapper(function(event) {\n        const eventContext = grid.getEventContext(event);\n        return {\n          key: (eventContext.item && eventContext.item.key) || \"\"\n        };\n      });\n\n      grid.addEventListener('cell-activate', tryCatchWrapper(e => {\n        grid.$connector.activeItem = e.detail.model.item;\n        setTimeout(() => grid.$connector.activeItem = undefined);\n      }));\n      grid.addEventListener('click', tryCatchWrapper(e => _fireClickEvent(e, 'item-click')));\n      grid.addEventListener('dblclick', tryCatchWrapper(e => _fireClickEvent(e, 'item-double-click')));\n\n      grid.addEventListener('column-resize', tryCatchWrapper(e => {\n        const cols = grid._getColumnsInOrder().filter(col => !col.hidden);\n\n        cols.forEach(col => {\n          col.dispatchEvent(new CustomEvent('column-drag-resize'));\n        });\n\n        grid.dispatchEvent(new CustomEvent('column-drag-resize', { detail: {\n          resizedColumnKey: e.detail.resizedColumn._flowId\n        }}));\n      }));\n\n      grid.addEventListener('column-reorder', tryCatchWrapper(e => {\n        const columns = grid._columnTree.slice(0).pop()\n          .filter(c => c._flowId)\n          .sort((b, a) => (b._order - a._order))\n          .map(c => c._flowId);\n\n        grid.dispatchEvent(new CustomEvent('column-reorder-all-columns', {\n          detail: { columns }\n        }));\n      }));\n\n      function _fireClickEvent(event, eventName) {\n        if (grid.$connector.activeItem) {\n          event.itemKey = grid.$connector.activeItem.key;\n          const eventContext = grid.getEventContext(event);\n          // if you have a details-renderer, getEventContext().column is undefined\n          if (eventContext.column) {\n            event.internalColumnId = eventContext.column._flowId;\n          }\n          grid.dispatchEvent(new CustomEvent(eventName,\n            { detail: event }));\n        }\n      }\n\n      grid.cellClassNameGenerator = tryCatchWrapper(function(column, rowData) {\n          const style = rowData.item.style;\n          if (!style) {\n            return;\n          }\n          return (style.row || '') + ' ' + ((column && style[column._flowId]) || '');\n      })\n\n      grid.dropFilter = tryCatchWrapper(rowData => !rowData.item.dropDisabled);\n\n      grid.dragFilter = tryCatchWrapper(rowData => !rowData.item.dragDisabled);\n\n      grid.addEventListener('grid-dragstart', tryCatchWrapper(e => {\n\n        if (grid._isSelected(e.detail.draggedItems[0])) {\n          // Dragging selected (possibly multiple) items\n          if (grid.__selectionDragData) {\n            Object.keys(grid.__selectionDragData).forEach(type => {\n              e.detail.setDragData(type, grid.__selectionDragData[type]);\n            });\n          } else {\n            (grid.__dragDataTypes || []).forEach(type => {\n              e.detail.setDragData(type, e.detail.draggedItems.map(item => item.dragData[type]).join('\\n'));\n            });\n          }\n\n          if (grid.__selectionDraggedItemsCount > 1) {\n            e.detail.setDraggedItemsCount(grid.__selectionDraggedItemsCount);\n          }\n        } else {\n          // Dragging just one (non-selected) item\n          (grid.__dragDataTypes || []).forEach(type => {\n            e.detail.setDragData(type, e.detail.draggedItems[0].dragData[type]);\n          });\n        }\n      }));\n    })(grid)\n  }\n})();\n"
    },
    {
     "name": "../target/flow-frontend/vaadin-grid-flow-selection-column.js",
     "source": "import '@vaadin/vaadin-grid/vaadin-grid-column.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { GridColumnElement } from '@vaadin/vaadin-grid/src/vaadin-grid-column.js';\n{\n  class GridFlowSelectionColumnElement extends GridColumnElement {\n    static get template() {\n      return html`\n    <template class=\"header\" id=\"defaultHeaderTemplate\">\n      <vaadin-checkbox id=\"selectAllCheckbox\" aria-label=\"Select All\" hidden\\$=\"[[selectAllHidden]]\" on-click=\"_onSelectAllClick\" checked=\"[[selectAll]]\">\n      </vaadin-checkbox>\n    </template>\n    <template id=\"defaultBodyTemplate\">\n      <vaadin-checkbox aria-label=\"Select Row\" checked=\"[[selected]]\" on-click=\"_onSelectClick\">\n      </vaadin-checkbox>\n    </template>\n`;\n    }\n\n    static get is() {\n      return 'vaadin-grid-flow-selection-column';\n    }\n\n    static get properties() {\n      return {\n\n        /**\n         * Automatically sets the width of the column based on the column contents when this is set to `true`.\n         */\n        autoWidth: {\n          type: Boolean,\n          value: true\n        },\n\n        /**\n         * Width of the cells for this column.\n         */\n        width: {\n          type: String,\n          value: '56px'\n        },\n\n        /**\n         * Flex grow ratio for the cell widths. When set to 0, cell width is fixed.\n         */\n        flexGrow: {\n          type: Number,\n          value: 0\n        },\n\n        /**\n         * When true, all the items are selected.\n         */\n        selectAll: {\n          type: Boolean,\n          value: false,\n          notify: true\n        },\n\n        selectAllHidden: Boolean\n      };\n    }\n\n    constructor() {\n      super();\n      this._boundOnSelectEvent = this._onSelectEvent.bind(this);\n      this._boundOnDeselectEvent = this._onDeselectEvent.bind(this);\n    }\n\n    _prepareHeaderTemplate() {\n      return this._prepareTemplatizer(this.$.defaultHeaderTemplate);\n    }\n\n    _prepareBodyTemplate() {\n      return this._prepareTemplatizer(this.$.defaultBodyTemplate);\n    }\n\n    /** @private */\n    connectedCallback() {\n      super.connectedCallback();\n      if (this._grid) {\n        this._grid.addEventListener('select', this._boundOnSelectEvent);\n        this._grid.addEventListener('deselect', this._boundOnDeselectEvent);\n      }\n    }\n\n    /** @private */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n      if (this._grid) {\n        this._grid.removeEventListener('select', this._boundOnSelectEvent);\n        this._grid.removeEventListener('deselect', this._boundOnDeselectEvent);\n\n        const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n        if (isSafari && window.ShadyDOM && this.parentElement) {\n          // Detach might have been caused by order change.\n          // Shady on safari doesn't restore isAttached so we'll need to do it manually.\n          const parent = this.parentElement;\n          const nextSibling = this.nextElementSibling;\n          parent.removeChild(this);\n          if (nextSibling) {\n            parent.insertBefore(this, nextSibling);\n          } else {\n            parent.appendChild(this);\n          }\n        }\n      }\n    }\n\n    _onSelectClick(e) {\n      e.target.checked ? this._grid.$connector.doDeselection([e.model.item], true) : this._grid.$connector.doSelection([e.model.item], true);\n      e.target.checked = !e.target.checked;\n    }\n\n    _onSelectAllClick(e) {\n      e.preventDefault();\n      if (this._grid.hasAttribute('disabled')) {\n        e.target.checked = !e.target.checked;\n        return;\n      }\n      this.selectAll ? this.$server.deselectAll() : this.$server.selectAll();\n    }\n\n    _onSelectEvent(e) {\n    }\n\n    _onDeselectEvent(e) {\n      if (e.detail.userOriginated) {\n        this.selectAll = false;\n      }\n    }\n  }\n\n  customElements.define(GridFlowSelectionColumnElement.is, GridFlowSelectionColumnElement);\n\n  Vaadin.GridFlowSelectionColumnElement = GridFlowSelectionColumnElement;\n}\n"
    }
   ]
  },
  {
   "id": 186,
   "name": "../target/frontend/generated-flow-imports-fallback.js + 3 modules",
   "modules": [
    {
     "name": "../target/frontend/generated-flow-imports-fallback.js",
     "source": "export const addCssBlock = function(block, before = false) {\n const tpl = document.createElement('template');\n tpl.innerHTML = block;\n document.head[before ? 'insertBefore' : 'appendChild'](tpl.content, document.head.firstChild);\n};\nimport '@polymer/iron-icon/iron-icon.js';\nimport '@polymer/iron-list/iron-list.js';\nimport '@vaadin/flow-frontend/comboBoxConnector.js';\nimport '@vaadin/flow-frontend/datepickerConnector.js';\nimport '@vaadin/flow-frontend/ironListConnector.js';\nimport '@vaadin/flow-frontend/ironListStyles.js';\nimport '@vaadin/flow-frontend/menubarConnector.js';\nimport '@vaadin/flow-frontend/selectConnector.js';\nimport '@vaadin/flow-frontend/timepickerConnector.js';\nimport '@vaadin/flow-frontend/vaadin-big-decimal-field.js';\nimport '@vaadin/vaadin-accordion/theme/lumo/vaadin-accordion.js';\nimport '@vaadin/vaadin-app-layout/theme/lumo/vaadin-app-layout.js';\nimport '@vaadin/vaadin-app-layout/theme/lumo/vaadin-drawer-toggle.js';\nimport '@vaadin/vaadin-avatar/theme/lumo/vaadin-avatar-group.js';\nimport '@vaadin/vaadin-avatar/theme/lumo/vaadin-avatar.js';\nimport '@vaadin/vaadin-checkbox/theme/lumo/vaadin-checkbox-group.js';\nimport '@vaadin/vaadin-combo-box/theme/lumo/vaadin-combo-box.js';\nimport '@vaadin/vaadin-custom-field/theme/lumo/vaadin-custom-field.js';\nimport '@vaadin/vaadin-date-picker/theme/lumo/vaadin-date-picker.js';\nimport '@vaadin/vaadin-date-time-picker/theme/lumo/vaadin-date-time-picker.js';\nimport '@vaadin/vaadin-details/theme/lumo/vaadin-details.js';\nimport '@vaadin/vaadin-form-layout/theme/lumo/vaadin-form-item.js';\nimport '@vaadin/vaadin-form-layout/theme/lumo/vaadin-form-layout.js';\nimport '@vaadin/vaadin-grid/theme/lumo/vaadin-grid-tree-toggle.js';\nimport '@vaadin/vaadin-item/theme/lumo/vaadin-item.js';\nimport '@vaadin/vaadin-list-box/theme/lumo/vaadin-list-box.js';\nimport '@vaadin/vaadin-login/theme/lumo/vaadin-login-form.js';\nimport '@vaadin/vaadin-login/theme/lumo/vaadin-login-overlay.js';\nimport '@vaadin/vaadin-menu-bar/theme/lumo/vaadin-menu-bar.js';\nimport '@vaadin/vaadin-notification/theme/lumo/vaadin-notification.js';\nimport '@vaadin/vaadin-ordered-layout/vaadin-scroller.js';\nimport '@vaadin/vaadin-progress-bar/theme/lumo/vaadin-progress-bar.js';\nimport '@vaadin/vaadin-radio-button/theme/lumo/vaadin-radio-button.js';\nimport '@vaadin/vaadin-radio-button/theme/lumo/vaadin-radio-group.js';\nimport '@vaadin/vaadin-select/theme/lumo/vaadin-select.js';\nimport '@vaadin/vaadin-split-layout/theme/lumo/vaadin-split-layout.js';\nimport '@vaadin/vaadin-tabs/theme/lumo/vaadin-tab.js';\nimport '@vaadin/vaadin-tabs/theme/lumo/vaadin-tabs.js';\nimport '@vaadin/vaadin-text-field/theme/lumo/vaadin-email-field.js';\nimport '@vaadin/vaadin-text-field/theme/lumo/vaadin-integer-field.js';\nimport '@vaadin/vaadin-text-field/theme/lumo/vaadin-number-field.js';\nimport '@vaadin/vaadin-text-field/theme/lumo/vaadin-password-field.js';\nimport '@vaadin/vaadin-text-field/theme/lumo/vaadin-text-area.js';\nimport '@vaadin/vaadin-time-picker/theme/lumo/vaadin-time-picker.js';\nimport '@vaadin/vaadin-upload/src/vaadin-upload-file.js';\nimport '@vaadin/vaadin-upload/theme/lumo/vaadin-upload.js';"
    },
    {
     "name": "../target/flow-frontend/comboBoxConnector.js",
     "source": "import { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { timeOut } from '@polymer/polymer/lib/utils/async.js';\nimport { ComboBoxPlaceholder } from '@vaadin/vaadin-combo-box/src/vaadin-combo-box-placeholder.js';\n\n(function () {\n    const tryCatchWrapper = function (callback) {\n        return window.Vaadin.Flow.tryCatchWrapper(callback, 'Vaadin Combo Box', 'vaadin-combo-box');\n    };\n\n    window.Vaadin.Flow.comboBoxConnector = {\n        initLazy: comboBox => tryCatchWrapper(function (comboBox) {\n\n            // Check whether the connector was already initialized for the ComboBox\n            if (comboBox.$connector) {\n                return;\n            }\n\n            comboBox.$connector = {};\n\n            // holds pageIndex -> callback pairs of subsequent indexes (current active range)\n            const pageCallbacks = {};\n            let cache = {};\n            let lastFilter = '';\n            const placeHolder = new window.Vaadin.ComboBoxPlaceholder();\n            const MAX_RANGE_COUNT = Math.max(comboBox.pageSize * 2, 500); // Max item count in active range\n\n            const serverFacade = (() => {\n                // Private variables\n                let lastFilterSentToServer = '';\n                let dataCommunicatorResetNeeded = false;\n\n                // Public methods\n                const needsDataCommunicatorReset = () => dataCommunicatorResetNeeded = true;\n                const getLastFilterSentToServer = () => lastFilterSentToServer;\n                const requestData = (startIndex, endIndex, params) => {\n                    const count = endIndex - startIndex;\n                    const filter = params.filter;\n\n                    comboBox.$server.setRequestedRange(startIndex, count, filter);\n                    lastFilterSentToServer = filter;\n                    if(dataCommunicatorResetNeeded) {\n                        comboBox.$server.resetDataCommunicator();\n                        dataCommunicatorResetNeeded = false;\n                    }\n                };\n\n                return {needsDataCommunicatorReset, getLastFilterSentToServer, requestData};\n\n            })();\n\n            const clearPageCallbacks = (pages = Object.keys(pageCallbacks)) => {\n                // Flush and empty the existing requests\n                pages.forEach(page => {\n                    pageCallbacks[page]([], comboBox.size);\n                    delete pageCallbacks[page];\n\n                    // Empty the comboBox's internal cache without invoking observers by filling\n                    // the filteredItems array with placeholders (comboBox will request for data when it\n                    // encounters a placeholder)\n                    const pageStart = parseInt(page) * comboBox.pageSize;\n                    const pageEnd = pageStart + comboBox.pageSize;\n                    const end = Math.min(pageEnd, comboBox.filteredItems.length);\n                    for (let i = pageStart; i < end; i++) {\n                        comboBox.filteredItems[i] = placeHolder;\n                    }\n                });\n            }\n\n            comboBox.dataProvider = function (params, callback) {\n                if (params.pageSize != comboBox.pageSize) {\n                    throw 'Invalid pageSize';\n                }\n\n                if (comboBox._clientSideFilter) {\n                    // For clientside filter we first make sure we have all data which we also\n                    // filter based on comboBox.filter. While later we only filter clientside data.\n\n                    if (cache[0]) {\n                        performClientSideFilter(cache[0], callback)\n                        return;\n\n                    } else {\n                        // If client side filter is enabled then we need to first ask all data\n                        // and filter it on client side, otherwise next time when user will\n                        // input another filter, eg. continue to type, the local cache will be only\n                        // what was received for the first filter, which may not be the whole\n                        // data from server (keep in mind that client side filter is enabled only\n                        // when the items count does not exceed one page).\n                        params.filter = \"\";\n                    }\n                }\n\n                const filterChanged = params.filter !== lastFilter;\n                if (filterChanged) {\n                    cache = {};\n                    lastFilter = params.filter;\n                    this._debouncer = Debouncer.debounce(\n                        this._debouncer,\n                        timeOut.after(500),\n                        () => {\n                            if (serverFacade.getLastFilterSentToServer() === params.filter) {\n                                // Fixes the case when the filter changes\n                                // to something else and back to the original value\n                                // within debounce timeout, and the\n                                // DataCommunicator thinks it doesn't need to send data\n                                serverFacade.needsDataCommunicatorReset();\n                            }\n                            if(params.filter !== lastFilter) {\n                                throw new Error(\"Expected params.filter to be '\"\n                                    + lastFilter + \"' but was '\" + params.filter + \"'\");\n                            }\n                            // Call the method again after debounce.\n                            clearPageCallbacks();\n                            comboBox.dataProvider(params, callback)\n                        });\n                    return;\n                }\n\n                if (cache[params.page]) {\n                    // This may happen after skipping pages by scrolling fast\n                    commitPage(params.page, callback);\n                } else {\n                    pageCallbacks[params.page] = callback\n                    const activePages = Object.keys(pageCallbacks).map(page => parseInt(page));\n                    const rangeMin = Math.min(...activePages);\n                    const rangeMax = Math.max(...activePages);\n\n                    if (activePages.length * params.pageSize > MAX_RANGE_COUNT) {\n                        if (params.page === rangeMin) {\n                            clearPageCallbacks([String(rangeMax)]);\n                        } else {\n                            clearPageCallbacks([String(rangeMin)]);\n                        }\n                        comboBox.dataProvider(params, callback);\n                    } else if (rangeMax - rangeMin + 1 !== activePages.length) {\n                        // Wasn't a sequential page index, clear the cache so combo-box will request for new pages\n                        clearPageCallbacks();\n                    } else {\n                        // The requested page was sequential, extend the requested range\n                        const startIndex = params.pageSize * rangeMin;\n                        const endIndex = params.pageSize * (rangeMax + 1);\n\n                        if (!this._debouncer || !this._debouncer.isActive()) {\n                            serverFacade.requestData(startIndex, endIndex, params);\n                        } else {\n                            this._debouncer = Debouncer.debounce(\n                                this._debouncer,\n                                timeOut.after(200),\n                                () => serverFacade.requestData(startIndex, endIndex, params));\n                        }\n                    }\n                }\n            }\n\n            comboBox.$connector.filter = tryCatchWrapper(function (item, filter) {\n                filter = filter ? filter.toString().toLowerCase() : '';\n                return comboBox._getItemLabel(item).toString().toLowerCase().indexOf(filter) > -1;\n            });\n\n            comboBox.$connector.set = tryCatchWrapper(function (index, items, filter) {\n                if (filter != serverFacade.getLastFilterSentToServer()) {\n                    return;\n                }\n\n                if (index % comboBox.pageSize != 0) {\n                    throw 'Got new data to index ' + index + ' which is not aligned with the page size of ' + comboBox.pageSize;\n                }\n\n                if (index === 0 && items.length === 0 && pageCallbacks[0]) {\n                    // Makes sure that the dataProvider callback is called even when server\n                    // returns empty data set (no items match the filter).\n                    cache[0] = [];\n                    return;\n                }\n\n                const firstPageToSet = index / comboBox.pageSize;\n                const updatedPageCount = Math.ceil(items.length / comboBox.pageSize);\n\n                for (let i = 0; i < updatedPageCount; i++) {\n                    let page = firstPageToSet + i;\n                    let slice = items.slice(i * comboBox.pageSize, (i + 1) * comboBox.pageSize);\n\n                    cache[page] = slice;\n                }\n            });\n\n            comboBox.$connector.updateData = tryCatchWrapper(function (items) {\n                // IE11 doesn't work with the transpiled version of the forEach.\n                for (let i = 0; i < items.length; i++) {\n                    let item = items[i];\n\n                    for (let j = 0; j < comboBox.filteredItems.length; j++) {\n                        if (comboBox.filteredItems[j].key === item.key) {\n                            comboBox.set('filteredItems.' + j, item);\n                            break;\n                        }\n                    }\n                }\n            });\n\n            comboBox.$connector.updateSize = tryCatchWrapper(function (newSize) {\n                if (!comboBox._clientSideFilter) {\n                    // FIXME: It may be that this size set is unnecessary, since when\n                    // providing data to combobox via callback we may use data's size.\n                    // However, if this size reflect the whole data size, including\n                    // data not fetched yet into client side, and combobox expect it\n                    // to be set as such, the at least, we don't need it in case the\n                    // filter is clientSide only, since it'll increase the height of\n                    // the popup at only at first user filter to this size, while the\n                    // filtered items count are less.\n                    comboBox.size = newSize;\n                }\n            });\n\n            comboBox.$connector.reset = tryCatchWrapper(function () {\n                clearPageCallbacks();\n                cache = {};\n                comboBox.clearCache();\n            });\n\n            comboBox.$connector.confirm = tryCatchWrapper(function (id, filter) {\n\n                if (filter != serverFacade.getLastFilterSentToServer()) {\n                    return;\n                }\n\n                // We're done applying changes from this batch, resolve pending\n                // callbacks\n                let activePages = Object.getOwnPropertyNames(pageCallbacks);\n                for (let i = 0; i < activePages.length; i++) {\n                    let page = activePages[i];\n\n                    if (cache[page]) {\n                        commitPage(page, pageCallbacks[page]);\n                    }\n                }\n\n                // Let server know we're done\n                comboBox.$server.confirmUpdate(id);\n            });\n\n            customElements.whenDefined('vaadin-combo-box').then(tryCatchWrapper(() => {\n                const _isItemSelected = comboBox.$.overlay._isItemSelected;\n                // Override comboBox's _isItemSelected logic to handle remapped items\n                comboBox.$.overlay._isItemSelected = (item, selectedItem, itemIdPath) => {\n                    let selected = _isItemSelected.call(comboBox, item, selectedItem, itemIdPath);\n\n                    if (comboBox._selectedKey) {\n                        if (comboBox.filteredItems.indexOf(selectedItem) > -1) {\n                            delete comboBox._selectedKey;\n                        } else {\n                            selected = selected || item.key === comboBox._selectedKey;\n                        }\n                    }\n\n                    return selected;\n                }\n            }));\n\n\n            comboBox.$connector.enableClientValidation = tryCatchWrapper(function( enable ){\n                let input = null;\n                if ( comboBox.$ ){\n                    input = comboBox.$[\"input\"];\n                }\n                if (input){\n                    if ( enable){\n                        enableClientValidation(comboBox);\n                        enableTextFieldClientValidation(input);\n                    }\n                    else {\n                        disableClientValidation(comboBox);\n                        disableTextFieldClientValidation(input,comboBox );\n                    }\n\n                    comboBox.validate();\n                }\n                else {\n                    setTimeout( function(){\n                        comboBox.$connector.enableClientValidation(enable);\n                    }, 10);\n                }\n            });\n\n            const disableClientValidation =  tryCatchWrapper(function (combo){\n                if ( typeof combo.$checkValidity == 'undefined'){\n                    combo.$checkValidity = combo.checkValidity;\n                    combo.checkValidity = function() { return !comboBox.invalid; };\n                }\n                if ( typeof combo.$validate == 'undefined'){\n                    combo.$validate = combo.validate;\n                    combo.validate = function() {\n                        return !(comboBox.focusElement.invalid = comboBox.invalid);\n                    };\n                }\n            });\n\n            const disableTextFieldClientValidation =  tryCatchWrapper(function (field, comboBox){\n                if ( typeof field.$checkValidity == 'undefined'){\n                    field.$checkValidity = field.checkValidity;\n                    field.checkValidity = function() { return !comboBox.invalid; };\n                }\n            });\n\n            const enableTextFieldClientValidation = tryCatchWrapper(function (field){\n                if ( field.$checkValidity ){\n                    field.checkValidity = field.$checkValidity;\n                    delete field.$checkValidity;\n                }\n            });\n\n            const enableClientValidation = tryCatchWrapper(function (combo){\n                if ( combo.$checkValidity ){\n                    combo.checkValidity = combo.$checkValidity;\n                    delete combo.$checkValidity;\n                }\n                if ( combo.$validate ){\n                    combo.validate = combo.$validate;\n                    delete combo.$validate;\n                }\n            });\n\n            const commitPage = tryCatchWrapper(function (page, callback) {\n                let data = cache[page];\n\n                if (comboBox._clientSideFilter) {\n                    performClientSideFilter(data, callback)\n\n                } else {\n                    // Remove the data if server-side filtering, but keep it for client-side\n                    // filtering\n                    delete cache[page];\n\n                    // FIXME: It may be that we ought to provide data.length instead of\n                    // comboBox.size and remove updateSize function.\n                    callback(data, comboBox.size);\n                }\n            });\n\n            // Perform filter on client side (here) using the items from specified page\n            // and submitting the filtered items to specified callback.\n            // The filter used is the one from combobox, not the lastFilter stored since\n            // that may not reflect user's input.\n            const performClientSideFilter = tryCatchWrapper(function (page, callback) {\n\n                let filteredItems = page;\n\n                if (comboBox.filter) {\n                    filteredItems = page.filter(item =>\n                        comboBox.$connector.filter(item, comboBox.filter));\n                }\n\n                callback(filteredItems, filteredItems.length);\n            });\n\n            // https://github.com/vaadin/vaadin-combo-box-flow/issues/232\n            comboBox.addEventListener('opened-changed', tryCatchWrapper(e =>\n                {e.detail.value && (comboBox.$.overlay._selector._manageFocus = () => {})}));\n\n            // Prevent setting the custom value as the 'value'-prop automatically\n            comboBox.addEventListener('custom-value-set', tryCatchWrapper(e => e.preventDefault()));\n        })(comboBox)\n    }\n})();\n\nwindow.Vaadin.ComboBoxPlaceholder = ComboBoxPlaceholder;\n"
    },
    {
     "name": "../target/flow-frontend/ironListConnector.js",
     "source": "import { Debouncer } from \"@polymer/polymer/lib/utils/debounce.js\";\nimport { timeOut } from \"@polymer/polymer/lib/utils/async.js\";\n\nwindow.Vaadin.Flow.ironListConnector = {\n  initLazy: function(list) {\n    // Check whether the connector was already initialized for the Iron list\n    if (list.$connector) {\n      return;\n    }\n\n    const extraItemsBuffer = 20;\n\n    let lastRequestedRange = [0, 0];\n\n    list.$connector = {};\n    list.$connector.placeholderItem = { __placeholder: true };\n\n    const updateRequestedItem = function() {\n      /*\n       * TODO Iron list seems to do a small index adjustment after scrolling\n       * has stopped. This causes a redundant request to be sent to make a\n       * corresponding minimal change to the buffer. We should avoid these\n       * requests by making the logic skip doing a request if the available\n       * buffer is within some tolerance compared to the requested buffer.\n       */\n      let firstNeededItem = list._virtualStart;\n      let lastNeededItem = list._virtualEnd;\n\n      let first = Math.max(0, firstNeededItem - extraItemsBuffer);\n      let last = Math.min(lastNeededItem + extraItemsBuffer, list.items.length);\n\n      if (lastRequestedRange[0] != first || lastRequestedRange[1] != last) {\n        lastRequestedRange = [first, last];\n        const count = 1 + last - first;\n        list.$server.setRequestedRange(first, count);\n      }\n    };\n\n    let requestDebounce;\n    const scheduleUpdateRequest = function() {\n      requestDebounce = Debouncer.debounce(\n        requestDebounce,\n        timeOut.after(10),\n        updateRequestedItem\n      );\n    };\n\n    /*\n     * Ensure all items that iron list will be looking at are actually defined.\n     * If this is not done, the component will keep looking ahead through the\n     * array until finding enough present items to render. In our case, that's\n     * a really slow way of achieving nothing since the rest of the array is\n     * empty.\n     */\n    const originalAssign = list._assignModels;\n    list._assignModels = function() {\n      const tempItems = [];\n      const start = list._virtualStart;\n      const count = Math.min(list.items.length, list._physicalCount);\n      for (let i = 0; i < count; i++) {\n        if (list.items[start + i] === undefined) {\n          tempItems.push(i);\n          list.items[start + i] = list.$connector.placeholderItem;\n        }\n      }\n\n      originalAssign.apply(list, arguments);\n\n      /*\n       * TODO: Keep track of placeholder items in the \"active\" range and\n       * avoid deleting them so that the next pass will be faster. Instead,\n       * the end of each pass should only delete placeholders that are no\n       * longer needed.\n       */\n      for (let i = 0; i < tempItems.length; i++) {\n        delete list.items[start + tempItems[i]];\n      }\n\n      /*\n       * Check if we need to do anything once things have settled down.\n       * This method is called multiple times in sequence for the same user\n       * action, but we only want to do the check once.\n       */\n      scheduleUpdateRequest();\n    };\n\n    list.items = [];\n\n    list.$connector.set = function(index, items) {\n      for (let i = 0; i < items.length; i++) {\n        const itemsIndex = index + i;\n        list.items[itemsIndex] = items[i];\n      }\n      // Do a full render since dirty detection for splices is broken\n      list._render();\n    };\n\n    list.$connector.updateData = function(items) {\n      // Find the items by key inside the list update them\n      const oldItems = list.items;\n      const mapByKey = {};\n      let leftToUpdate = items.length;\n\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        mapByKey[item.key] = item;\n      }\n\n      for (let i = 0; i < oldItems.length; i++) {\n        const oldItem = oldItems[i];\n        const newItem = mapByKey[oldItem.key];\n        if (newItem) {\n          list.items[i] = newItem;\n          list.notifyPath(\"items.\" + i);\n          leftToUpdate--;\n          if (leftToUpdate == 0) {\n            break;\n          }\n        }\n      }\n    };\n\n    list.$connector.clear = function(index, length) {\n      for (let i = 0; i < length; i++) {\n        const itemsIndex = index + i;\n        delete list.items[itemsIndex];\n\n        // Most likely a no-op since the affected index isn't in view\n        list.notifyPath(\"items.\" + itemsIndex);\n      }\n    };\n\n    list.$connector.updateSize = function(newSize) {\n      const delta = newSize - list.items.length;\n      if (delta > 0) {\n        list.items.length = newSize;\n\n        list.notifySplices(\"items\", [\n          {\n            index: newSize - delta,\n            removed: [],\n            addedCount: delta,\n            object: list.items,\n            type: \"splice\"\n          }\n        ]);\n      } else if (delta < 0) {\n        const removed = list.items.slice(newSize, list.items.length);\n        list.items.splice(newSize);\n        list.notifySplices(\"items\", [\n          {\n            index: newSize,\n            removed: removed,\n            addedCount: 0,\n            object: list.items,\n            type: \"splice\"\n          }\n        ]);\n      }\n    };\n\n    list.$connector.setPlaceholderItem = function(placeholderItem) {\n      if (!placeholderItem) {\n        placeholderItem = {};\n      }\n      placeholderItem.__placeholder = true;\n      list.$connector.placeholderItem = placeholderItem;\n    };\n  }\n};\n"
    },
    {
     "name": "../target/flow-frontend/ironListStyles.js",
     "source": "import '@polymer/polymer/lib/elements/custom-style.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<style>\n/* Fixes zero width in flex layouts */\niron-list {\n  flex: auto;\n  align-self: stretch;\n}\n</style>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"
    }
   ]
  }
 ]
}